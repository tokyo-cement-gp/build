{"version":3,"sources":["assets/labtesting.jpg","assets/tokyosuper.png","assets/images1.jpg","assets/calculator/add.png","assets/calculator/subtract.png","assets/calculator/multiply.png","assets/calculator/divide.png","assets/background.jpg","assets/homescreen/materialedited.png","assets/concretemixer.jpg","assets/master.jpg","assets/master1.png","assets/cementbag.jpg","assets/finalproduct2.jpg","assets/settings.png","assets/reports.png","assets/excelimport.png","assets/accounts.png","assets/homescreen/configurationedited.png","assets/homescreen/testtrial.png","assets/homescreen/mixdesign.png","assets/sand.png","assets/rock.png","assets/cement.png","assets/lab.png","assets/new1.png","assets/calculator/equal.png","assets/calculator/square-root.png","assets/calculator/is-less-than.png","assets/calculator/is-greater-than.png","assets/calculator/zigma.png","assets/calculator/pie.png","assets/calculator/square.png","assets/testtrial/materialTest.png","assets/testtrial/concreteTest.png","assets/testtrial/concreteStrengthTest.png","Components/styledcomponents/Link/NavLink.js","redux/action/topbarnavigation/TopbarNavigation.js","Components/styledcomponents/topnavigation/TopnavMenu.js","redux/action/topbarnavigation/PrivilegeLevelNavigation.js","Components/Constant/Header.js","redux/action/topbarnavigation/MasterLevelNavigation.js","Components/styledcomponents/container/FlexGrid.js","Components/styledcomponents/card/ImageCard.js","Components/services/AxiosService.js","Components/Constant/Api.js","Components/styledcomponents/card/ColoredCard.js","Components/homescreen/HomeColoredCard.jsx","Components/homescreen/charts/StrengthTest.jsx","Components/styledcomponents/container/ChartResContainer.js","Components/homescreen/HomeScreen.jsx","theme.js","Components/styledcomponents/typography/typography.js","Components/styledcomponents/card/BasicCard.js","redux/action/master/plantlevel/PlantLevel.js","Components/styledcomponents/card/TileArea.js","Components/master/plantlevel/PlantsTileArea.jsx","Components/styledcomponents/button/button.js","Components/styledcomponents/form/MasterLevelForms.js","Components/Constant/Notification.js","Components/Constant/HandleError.js","Components/master/plantlevel/plant/PlantAddForm.jsx","Components/master/plantlevel/titles/PlantMasterTitle.jsx","Components/styledcomponents/table/AntTabl.js","Components/master/plantlevel/plant/ManagePlants.jsx","Components/master/plantlevel/employee/EmployeeAddForm.jsx","Components/master/plantlevel/titles/EmployeeMasterTitle.jsx","Components/master/plantlevel/employee/ManageQCStaff.jsx","Components/master/plantlevel/customer/CustomerAddForm.jsx","Components/master/plantlevel/titles/CustomerMasterTitle.jsx","Components/master/plantlevel/customer/ManageCustomer.jsx","Components/master/plantlevel/supplier/SupplierAddForm.jsx","Components/master/plantlevel/titles/SupplierMasterTitle.jsx","Components/master/plantlevel/supplier/ManageSupplier.jsx","Components/master/plantlevel/userrole/UserRoleAddForm.jsx","Components/master/plantlevel/titles/UserRoleMasterTitle.jsx","Components/master/plantlevel/userrole/ManageUserRoles.jsx","Components/master/plantlevel/suppliercategory/AddSupplierCategory.jsx","Components/master/plantlevel/titles/SupplierCategoryTitle.jsx","Components/master/plantlevel/suppliercategory/ManageSupplierCategory.jsx","Components/master/plantlevel/PlantMaster.jsx","Components/master/materiallevel/MaterialTileArea.jsx","Components/master/materiallevel/materialnature/MaterialNatureAddForm.jsx","Components/master/materiallevel/titles/MaterialNatureTitle.jsx","Components/master/materiallevel/materialnature/ManageNature.jsx","Components/master/materiallevel/materialMaster/MaterialMasterAddForm.jsx","Components/master/materiallevel/titles/MaterialMasterTitle.jsx","Components/master/materiallevel/materialMaster/ManageMaterial.jsx","Components/master/materiallevel/MaterialMaster.jsx","redux/action/master/categorylevel/CatergoryLevel.js","Components/master/categorylevel/CategoryTileArea.jsx","Components/master/categorylevel/maincategory/AddMainCategoryForm.jsx","Components/master/categorylevel/titles/ManageMainCategoryMasterTitle.jsx","Components/master/categorylevel/maincategory/ManageMainCategory.jsx","Components/master/categorylevel/materialtype/AddType.jsx","Components/master/categorylevel/titles/MangeMaterialTypeTitle.jsx","Components/master/categorylevel/materialtype/ManageType.jsx","Components/master/categorylevel/CategoryMaster.jsx","redux/action/master/sitelevel/SiteLevel.js","Components/master/sitelevel/SiteTitleArea.jsx","Components/master/sitelevel/project/AddProjectForm.jsx","Components/master/sitelevel/title/ManageProjectMasterTitle.jsx","Components/master/sitelevel/project/ManageProject.jsx","Components/master/sitelevel/pour/AddPourForm.jsx","Components/master/sitelevel/title/ManagePourMasterTitle.jsx","Components/master/sitelevel/pour/ManagePour.jsx","Components/master/sitelevel/SiteMaster.jsx","Components/Constant/TableGenerator.jsx","Components/test/testtrial/Report.js","Components/test/testtrial/TestMaster.jsx","Components/master/equipmentlevel/EquipmentTitleArea.jsx","Components/master/equipmentlevel/equipment/AddEquipment.jsx","Components/master/equipmentlevel/title/EquipmentTitle.jsx","Components/master/equipmentlevel/equipment/ManageEquipment.jsx","Components/master/equipmentlevel/calibration/AddCalibrationForm.jsx","Components/master/equipmentlevel/title/CalibrationTitle.jsx","Components/master/equipmentlevel/calibration/ManageCalibration.jsx","Components/master/equipmentlevel/equipmentplant/AddEquipmentPlant.jsx","Components/master/equipmentlevel/title/EquipmentPlantTitle.jsx","Components/master/equipmentlevel/equipmentplant/ManageEquipmentPlant.jsx","Components/master/equipmentlevel/EquipmentMaster.jsx","Components/master/testlevel/TestLevelTileArea.jsx","Components/master/testlevel/testtype/AddTestType.jsx","Components/master/testlevel/title/TestLevelTitle.jsx","Components/master/testlevel/testtype/ManageTestType.jsx","Components/master/testlevel/TestLevelMaster.jsx","Components/master/ParameterLevel/ParameterMaster/AddParameter.jsx","Components/master/ParameterLevel/titles/ParameterTitle.jsx","Components/master/ParameterLevel/ParameterMaster/ManageParameterMaster.jsx","redux/action/master/parameter/ParameterLevel.js","Components/master/ParameterLevel/ParameterTileArea.jsx","Components/master/ParameterLevel/ParameterMaster.jsx","Components/master/unitlevel/UnitTileArea.jsx","Components/master/unitlevel/UnitAddForm.jsx","Components/master/unitlevel/title/UnitTitle.jsx","Components/master/unitlevel/ManageUnit.jsx","Components/master/unitlevel/UnitMaster.jsx","Components/test/testconfiguration/graph/AddGraph.jsx","Components/test/testconfiguration/graph/element/LineChart.jsx","Components/test/testconfiguration/graph/ManageGraph.jsx","Components/test/testconfiguration/GraphConfiguration.jsx","Components/test/testconfiguration/ManageTestConfiguration.jsx","Components/test/testconfiguration/configure/AddTestAcceptedValue.jsx","Components/test/testconfiguration/configure/AddTestName.jsx","redux/action/testconfiguration/TestConfiguration.js","Components/styledcomponents/card/MiniCard.js","Components/test/testconfiguration/configure/AddTestEquation.jsx","Components/test/testconfiguration/configure/AddTestParameter.jsx","Components/test/testconfiguration/configuretest/Step01.jsx","Components/test/testconfiguration/tables/TestParameterTable.jsx","Components/test/testconfiguration/configuretest/Step02.jsx","Components/Constant/history.js","Components/test/testconfiguration/configure/ManageTables/TableTileArea.js","redux/action/table/Table.js","Components/test/testconfiguration/configure/ManageTables/titles/AcceptedValueTitle.js","Components/test/testconfiguration/configure/ManageTables/titles/AdmixtureValueTitle.jsx","Components/test/testconfiguration/configure/ManageTables/AcceptedValue.js","Components/test/testconfiguration/configure/ManageTables/titles/ManageEquation.js","Components/test/testconfiguration/configure/ManageTables/ManageEquation.js","Components/test/testconfiguration/configure/ManageTables/titles/MaangeTestParamterTitle.js","Components/test/testconfiguration/configure/ManageTables/ManageTestParameter.js","Components/test/testconfiguration/configure/ManageTables/TableMaster.js","Components/test/testconfiguration/TestConfigurationMaster.jsx","Components/Constant/FormGenerator.jsx","Components/master/mixdesign/mix/AddMixDesignForm.jsx","Components/master/mixdesign/titles/MixDesignTitle.jsx","Components/master/mixdesign/mix/ManageMixDesignForm.jsx","redux/action/master/mixdesign/MixDesign.js","Components/master/mixdesign/MixDesignTitleArea.jsx","Components/master/mixdesign/MixDesignMaster.jsx","redux/action/sample/Sample.js","Components/sample/SampleTileArea.jsx","Components/sample/process/AddProcessSample.jsx","Components/sample/titles/ManageProcessSampleTitle.jsx","Components/sample/process/ManageProcessSample.jsx","Components/sample/finshproduct/AddFinishProduct.jsx","Components/sample/titles/ManageFinishProductSampleTitle.jsx","Components/sample/finshproduct/ManageFinishProduct.jsx","Components/styledcomponents/list/FlexList.js","Components/sample/incoming/deliveryreport/DeliveryReport.jsx","Components/sample/incoming/AddIncoming.jsx","Components/sample/titles/ManageIncomingSampleTitle.jsx","Components/sample/incoming/ManageIncoming.jsx","Components/sample/materialload/AddMaterialLoad.jsx","Components/sample/titles/ManageMaterialLoadSample.jsx","Components/sample/materialload/ManagematerialLoad.jsx","Components/sample/SampleMaster.jsx","Components/test/testtrial/TestTrial.jsx","Components/test/testtrial/TestTrialMaster.jsx","Components/test/testtrial/TestType.jsx","Components/profile/Profile.jsx","Components/priviledges/Privileges.jsx","Components/sample/finshproduct/FPViewStatus/FPViewStatus.jsx","Components/test/testresults/TestResultsTileArea.jsx","redux/action/testresults/TestResults.js","Components/test/testresults/titles/RawMaterialTitle.jsx","Components/test/testresults/rawmaterial/ManageRawMaterial.jsx","Components/test/testresults/titles/FinishProductTitle.jsx","Components/test/testresults/finishproduct/ManageFinishProduct.jsx","Components/test/testresults/sievetest/ManageSieveTest.jsx","Components/test/testresults/TestResultsMaster.jsx","Components/homescreen/LineChart.jsx","Components/homescreen/LineBarChart.jsx","Components/homescreen/BarChart.jsx","Components/homescreen/Doughnut.jsx","Components/graphdashboard/GraphDashboard.jsx","Components/AuditLog/AuditLog.jsx","Components/sample/process/processviewstatus/ProcessViewStatus.jsx","Components/sample/incoming/IncomingViewStatus/IncomingViewStatus.jsx","Components/test/concrete/ConcreteTest.jsx","Components/test/titles/ConcreteTestTitle.jsx","Components/test/concrete/ManageConcreteTest.jsx","Components/test/concreteStrength/AddConcreteStrengthTest.jsx","Components/test/titles/ConcreteStrengthTestTitle.jsx","Components/test/concreteStrength/ManageStrength.jsx","Components/styledcomponents/card/TrialCard.js","Components/test/testtrial/card/TestTrialHome.jsx","Components/test/testtrial/trials/MaterialTestTrial.jsx","Components/test/testtrial/results/ParameterTestResults.jsx","Components/test/sievetest/AddSize.jsx","Components/test/sievetest/title/AddSizeTitle.jsx","Components/test/sievetest/SieveSize.jsx","Components/test/sievetest/AddAccepetdSize.jsx","Components/test/sievetest/title/AddSieveSize.jsx","Components/test/sievetest/SieveAcceptedValue.jsx","Components/test/sievetest/SieveMaster.jsx","Components/test/sievetest/AddFiness.jsx","Components/test/sievetest/title/FInenessTitle.jsx","Components/test/sievetest/FinesModulus.jsx","Components/test/sievetest/landing.jsx","Components/test/sievetest/ManageSieveTest.jsx","Components/test/sievetest/SieveTestTrail.jsx","Components/App/Contents/Index.js","Components/App/login/LoginFrom.jsx","Components/App/login/Login.jsx","Components/App/login/SignupForm.jsx","Components/App/login/Signup.jsx","Components/App/App.js","serviceWorker.js","redux/reducers/master/plantlevel/RoutingBetweenPlantLevels.js","redux/reducers/master/plantlevel/EditPlantReducer.js","redux/reducers/master/plantlevel/PlantLevelIndex.js","redux/reducers/master/categorylevel/RoutingBetweenCategoryLevels.js","redux/reducers/master/categorylevel/CatergoryLevelIndex.js","redux/reducers/master/parameterlevel/RoutingBetweenParameterLevel.js","redux/reducers/master/parameterlevel/ParameterLevelIndex.js","redux/reducers/master/sitelevel/RoutingBetweenSiteLevels.js","redux/reducers/master/sitelevel/SiteLevelIndex.js","redux/reducers/topbarnavigation/TopbarNavigationReducer.js","redux/reducers/master/mixdesign/RoutingBetweenMixDesign.js","redux/reducers/master/mixdesign/MixDesignIndex.js","redux/reducers/sample/RoutingBetweenSamples.js","redux/reducers/sample/SampleIndex.js","redux/reducers/testresults/RoutingBetweenTestResults.js","redux/reducers/testresults/ToggleFilterDrawers.js","redux/reducers/testresults/TestResultIndex.js","redux/reducers/topbarnavigation/MasterLevelNavigationReducer.js","redux/reducers/topbarnavigation/PriviledgeLevelNavigationReducer.js","redux/reducers/testconfiguration/EquationConfigurationReducer.js","redux/reducers/testconfiguration/ParameterConfigurationReducer.js","redux/reducers/testconfiguration/TriggerEquationAreaReducer.js","redux/reducers/testconfiguration/TestConfigurationIndex.js","redux/reducers/table/RoutingBetweenTables.js","redux/reducers/table/TableIndex.js","redux/reducers/index.js","redux/action/index.js","redux/store/store.js","index.js"],"names":["module","exports","NavigationLink","styled","NavLink","props","nav","css","TOGGLE_TO_MASTER_TYPE_NAVIGATION","TOGGLE_TO_SAMPLE_TYPE_NAVIGATION","TOGGLE_TO_HOME_SCREEN_NAVIGATION","TOGGLE_TO_TEST_TRIALS_NAVIGATION","TOGGLE_TO_TEST_CONFIGURATION_NAVIGATION","TOGGLE_TO_PRIVILEDGES_NAVIGATION","TOGGLE_TO_TEST_RESULTS_NAVIGATION","TOGGLE_TO_MIX_DESIGN_NAVIGATION","TOGGLE_TO_DASHBOARD_NAVIGATION","CHECK_WHETHER_REFRESH_NAVIGATION","TopNavMenu","Menu","home","TOGGLE_BETWEEN_PRIVILEDGE_LEVELS","CHECK_WHETHER_DEFAULT_PRIVILEDGE_LEVEL","Header","Layout","HeaderComponent","state","masterbgcolor","mastercolor","renderNavigation","navpath","theme","mode","position","defaultSelectedKeys","selectedKeys","masterkeys","onClick","toggleBetweenMasterLevels","to","style","cursor","className","marginLeft","Item","key","type","title","size","fontSize","textAlign","padding","margin","toggleSettingsNavigation","SettingOutlined","twoToneColor","toggleDashboard","priviledgeKeys","toggleBetweenPriviledgeLevels","paddingLeft","height","width","boxShadow","display","flexDirection","flexWrap","justifyContent","this","React","Component","connect","topbarNavigationReducers","masterLevelNavigationReducer","masterlevelkey","priviledgeLevelNavigationReducer","priviledgekeys","dispatch","toggleHomeScreenNavigation","console","log","navigationRefresh","e","FlexContainer","div","column","titles","steps","normal","leveltitles","leveltileareafixed","stepsarea","borderRadiused","homecard1","resCardArea","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","ImageCard","material","Material","samples","Mixer","testing","Lab","testTrial","TestTrial","master","MasterSupplier","MasterSupplier1","reports","Reports","settings","Settings","mixDesign","MixDesign","importexcel","ImportFromExcel","accounts","Accounts","rawmaterial","RawMaterial","finalproduct","FinalProduct","configuration","Configuration","addParamsToURL","url","params","temp","getService","service","getHeaders","token","headers","Accept","Authorization","api","method","endpoint","body","Promise","resolve","reject","SERVICE","URL","axios","get","then","response","catch","error","post","data","delete","put","ColoredCard","blue","green","purple","red","ColoredCardText","h3","ColoredCardDescription","h4","ColoredCardImageArea","ColoredCardImage","img","ColoredCardTextArea","alt","HomeColoredCard","colorprop","text","totalSamples","src","FineAggregate","Cement","Admixture","CoarseAggregate","name","uv","StrengthTest","top","right","left","bottom","strokeDasharray","dataKey","label","value","stroke","fill","PureComponent","ChartResContainer","HomeScreen","slider2","sampleCount","fineAggregate","coarseAggregate","cement","admixture","res","results","incomingSamples","k","length","status","rawMaterial","setState","toggleMasterNavigation","color","toggleSampleNavigation","toggleTestResults","marginTop","toggleTestConfigurationNavigation","toggleTestTrialsNavigation","toggleMixDesignNavigation","white","black","primary","roboto","calibri","Title","Typography","Heading","card","TileParagraph","p","Heading1","h1","BasicCard","margined","tileareacard","testtrial","imgUrl","testreport","ROUTE_TO_PLANT_MASTER","ROUTE_TO_USER_ROLE_MASTER","ROUTE_TO_EMPLOYEE_MASTER","ROUTE_TO_SUPPLIER_CATEGORY_MASTER","ROUTE_TO_CUSTOMER_MASTER","ROUTE_TO_SUPPLIER_MASTER","SWITCH_TO_EDIT_MODE","DISABLE_EDIT_MODE","TileArea","TileAreaText","category","unit","test","materialcategory","TileAreaAction","PlantsTileArea","hoverable","routeToPlantMaster","filled","routeToUserRoleMaster","routeToEmployeeMaster","routeToCustomerMaster","routeToSupplierCategoryMaster","routeToSupplierMaster","PrimaryButton","Button","MasterLevelForm","Form","unalignedform","testconfiguration","MasterLevelFormTitle","nomargin","AuditFormTitle","PrivlegesFormTitle","Notification","message","notification","code","PlantAddForm","validateForm","errors","valid","Object","values","forEach","val","countErrors","count","handleChange","event","field","target","errormgs","preventDefault","plant","replace","address","phoneNumber","isNaN","handleSubmit","plant_code","plant_name","plant_address","plant_contactno","formValid","errorCount","responeserror","Notificationfuc","reload","loading","setTimeout","visible","validationFailures","HandelError","showModal","handleCancel","setPlantVisiblity","nextProps","editPlantData","background","border","closable","onCancel","footer","for","id","placeholder","onChange","disabled","plantLevelReducers","EditPlantReducer","fontWeight","alignSelf","PlantMasterTitle","getallplant","AntTable","Table","lowLength2","medium","length2","maxlength","lowHeight","emptyTableTestTrial","ManagePlants","searchText","getallPlant","plants","handleOk","pagination","filters","sorter","filteredInfo","sortedInfo","clearFilters","clearAll","setAgeSort","order","columnKey","window","screen","pageNumber","columns","dataIndex","render","record","passEditPlantRecordtoModal","bind","icon","onConfirm","onConfirmdelete","href","dataSource","defaultPageSize","payload","Option","Select","onBlur","onFocus","onSearch","EmployeeAddForm","employee_code","first_name","last_name","desigination","phoneno","email","setEmployeeVisibility","firstName","lastName","username","plantEdit","desiginationEdit","errorvalmegss","handleSelect","getalldesignation","designations","SelectDesignation","map","index","split","filter","x","indexOf","plantCode","designationId","plantdata","plantName","designationName","SelectPlants","getAllplant","onOk","showSearch","optionFilterProp","EmployeeMasterTitle","getallEmployee","marginRight","ManageQCStaff","employees","passEditQCStaffRecordToModal","CustomerAddForm","contactno","errormsgs","customer_code","customer_name","customer_address","customer_contactno","customer_email","setCustomerVisibility","CustomerMasterTitle","ManageCustomer","getallCustomer","datalist","customers","passEditManageCustomerToModal","validEmailRegex","RegExp","SupplierAddForm","companyName","supplier_code","supplier_name","supplier_company_name","supplier_category","supplier_address","supplier_contactno","supplier_email","edit_supplier_category","setSupplierVisiblity","suppilerCategoryId","getallsupplireCategory","supplierCategory","categ","supplierCategoryId","filterOption","input","option","children","toLowerCase","Search","Input","SupplierMasterTitle","getallSupplier","ManageSupplier","Supplier","push","description","passSupplireEditRecordtoModal","borderRadius","UserRoleAddForm","designation","designation_code","designation_name","designation_description","setDesignationVisiblity","reloadrole","UserRoleMasterTitle","ManageUserRoles","listData","passEditDesignationRecordToModal","AddSupplierCategory","supplierCategory_description","setSupplierCategoryVisiblity","supllierCategory_code","SupplierCategoryTitle","ManageSupplierCategory","PlantMaster","controlstatus","renderComponents","routepath","RoutingBetweenPlantLevel","MaterialTileArea","statusChange1","statusChange2","MaterialNatureAddForm","errormsg","material_state","setMaterialStateVisiblity","materialState","MaterialNatureTitle","ManageNature","getallMaterialStates","passEditMaterialStateRecordtoModal","MaterialMasterAddForm","sub_category","material_name","material_nature","edit_material_nature","edit_sub_category","subCategoryList","categoryList","material_category","getallMaterialCategory","categoryselect","materialCategories","getallMaterialSubCategory","subCategorySelect","materialSubCategories","setMaterialMasterVisiblity","materialSubCategoryId","nature","materialCategory","subCategory_Id","subCategory","MaterialMasterTitle","ManageMaterial","getallMaterial","materialSubCategory","materialCategoryName","passEditMaterialRecordtoModal","MaterialMaster","typechange","ROUTE_TO_MAIN_CATEGORY_MASTER","ROUTE_TO_SUB_CATEGORY_MASTER","ROUTE_TO_SAMPLE_CATEGORY_MASTER","ROUTE_TO_MATERIAL_TYPE","CategoryTitleArea","routeToMaterialType","routeToMainCategoryMaster","routeToSubCategoryMaster","routeToSampleCategoryMaster","AddMainCategoryForm","subcategory_code","subcategory_name","getallCategory","setSubCategoryVisibility","material_category_edit","materialCategoryId","ManageMainCategoryMasterTitle","getallsubcategory","ManageMainCategory","passEditSubManageCategoryToModal","AddType","category_code","category_name","setCategoryVisibility","ManageMaterialTypeTitle","getallcategory","ManageType","passEditManageCategoryToModal","CategoryMaster","categoryLevelReducers","RoutingBetweenCategoryLevel","ROUTE_TO_POUR_MASTER","ROUTE_TO_PROJECT_MASTER","SiteTitleArea","routeToProjectMaster","routeToPourMaster","AddProjectForm","start_date","project_name","customer","customer_edit","contact_person","contact_person_edit","contact_no","plant_edit","setProjectVisibility","contactNumber","startDate","moment","format","customerId","contactPerson","getAllCustomers","SelectCustomers","dateString","convertedDate","start_date_edit","customerName","showToday","handleDates","ManageProjectMasterTitle","ManageProject","projectsList","getAllProject","projects","passEditProjectRecordToModal","AddPourForm","pour_name","project","projectEdit","project_code","setPourVisibility","projectCode","getAllProjects","projectName","ManagePourMasterTitle","ManagePour","poursList","getAllPour","pour","passEditPourRecordToModal","SiteMaster","siteLevelReducers","RoutingBetweenSiteLevel","TableGenerator","students","age","student","keys","toUpperCase","renderTableHeader","renderTableData","template","Handlebars","compile","TestMaster","hometown","parameter","paraname","Logo","sambodydata","dangerouslySetInnerHTML","__html","Report","EquipmentTitleArea","statusChange3","AddEquipment","equipment_code","equipment_name","equipment_description","setEquipmentVisibility","EquipmentTitle","getallequpiment","equipments","AddCalibrationForm","equipment_plant","calibrated_by","supplier","tester","calibrated_date","due_date","edit_equipment_plant","edit_supplier","employeeId","edit_employeeId","user","userId","handleRadio","setCalibrationVisibility","plantEquipmentSerialNo","calibratedDate","dueDate","calibrationType","supplierId","disabledDate","current","valueOf","Date","now","Selectequipmantplant","equipmantplantselect","plantEquipments","serialNo","Selectsupplier","supplierselect","SelectUser","userselect","userName","Selectemployee","employeeselect","plantEquipmentEquipmentName","supplierName","Group","checked","CalibrationTitle","ManageCalibration","getallplantCalibration","plantEquipmentCalibrations","AddEquipmentPlant","serial","equipment","brand","model","serial_no","brand_name","model_name","equipmentEdit","edit_equipment","equipmentId","brandName","modelName","setEquipmentPlantVisiblity","equipmentName","getAllEquipments","getAllPlants","SelectEquipments","EquipmentPlantTitle","ManageEquipmentPlant","getallEquipmentPlant","passEditEquipmentPlantRecordtoModal","EquipmentMaster","ManageEquipment","TestLevelTileArea","u","AddTestType","test_type","classification","setTestTypeVisibility","editmaterialSubCategoryId","subCategoryId","TestLevelTitle","ManageTestType","testTypeList","getAllTestType","testTypes","subCategoryName","passEditTestTypeRecordToModal","TestLevelMaster","AddParameter","abbrivation","parameter_name","parameter_abbrivation","abbreviation","parameter_code","alignItems","ParameterTitle","ManageParameterMaster","getallParameter","parameters","ROUTE_TO_PARAMETER_MASTER","ROUTE_TO_MATERIAL_PARAMETER_MASTER","ROUTE_TO_EQUIPMENT_PARAMETER_MASTER","ROUTE_TO_TEST_PARAMETER_MASTER","ROUTE_TO_ADDITIONAL_PARAMETER_MASTER","ParameterTileArea","routeToParameterMaster","routeToMaterialParameterMaster","routeToEquipmentParameterMaster","routeToTestParameterMaster","routeToAdditionalParameterMaster","ParameterMaster","globalHistory","location","hash","modString","substr","parameterLevelReducers","RoutingBetweenParameterLevel","UnitTileArea","UnitAddForm","unit_name","unit_code","setUnitVisiblity","ManageSampleCategoryMasterTitle","ManageUnit","getallunit","units","UnitMaster","AddGraph","LineChartConfig","ManageGraph","mask","maskClosable","y","fontFamily","GraphConfiguration","ManageTestConfiguration","testsList","testParameters","filteredParameters","getAllTests","getAllTestParameters","testparameters","showTestParams","i","handleModalCancel","bordered","minierror","AddTestAcceptedValue","optErrors","test_name","maximum","minimum","switchValMaximum","switchValMinimum","getAllMaterials","switchVal","eM","undefined","switchedData","testId","parameterId","unitId","rawMaterialId","minValue","maxValue","unSwitchedData","SelectParameter","SelectUnit","SelectMaterial","SelectSubCategories","SelectTest","getAllParameters","getAllUnits","getAllSubCategories","getAllTest","testconfig","paddingBottom","paddingRight","paddingTop","borderBottomRightRadius","borderBottomLeftRadius","error2","AddTestName","equation","equationId","testTypeId","showSecondColumn","getAllPlant","getAllEquations","SelectTestType","equations","SelectEquation","formula","togglerValue","toggleEquationArea","testConfigurationReducers","triggerEquationAreaReducer","togglable","MiniCard","topLeft","topRight","bottomLeft","bottomRight","letters","add","Add","subtract","Subtract","multiply","Multiply","divide","Division","equal","Equal","zigma","Zigma","lowerthan","IsLesserThan","greaterthan","IsGreaterThan","squareroot","SquareRoot","pie","Pie","square","Square","AddTestEquation","textBoxEquation","cards","textBody","onChangeTextBox","handleCalculate","selectParameters","equationConfigurationReducer","AddTestParameter","testParameterData","onChangeUnit","testParameterColumns","parameterName","selectCreateMiniCard","showHeader","scroll","Step01","lastEquationData","testParameter","saveEquations","parameterData","saveEquationParameterAfterAwait","saveEquation","a","result","handleCancelEquationArea","justifyStyle","lastIndexOfEquation","paramsData","borderTopLeftRadius","borderTopRightRadius","verticalAlign","TestParameterTable","parameterList","selectedTestParams","addToTestParams","unitData","handleCheck","splice","addunit","backgroundClip","cellSpacing","Step02","createHashHistory","TableTileArea","routeToAcceptedValue","routeToTestparameter","routeToEquation","AcceptableValueTitle","AdmixtureValueTitle","AcceptedValue","getallMaterialAcceptedValue","admixturedata","admixtureAcceptedValues","getallAcceptedValue","acceptedvaluedata","acceptedValues","accId","acceptedValue","SwitchedData","columns1","onConfirmdelete1","EquationTitle","ManageEquation","getallEquation","passEditEquationRecordtoModal","TestParameterTitle","TestParameter","getallTestParameter","TableMaster","ManageTestParameter","tableReducers","RoutingBetweenTables","Step","Steps","content","TestConfigurationMaster","done","success","history","labelPlacement","item","next","backgroundColor","prev","FormGenerator","renderSubmit","submitForm","form","defaultValues","inputs","canRender","validationErrors","randomisedFields","filterRules","numeric","decimal","transformerRules","uppercase","lowercase","validationRules","required","Array","isArray","propagateChange","prevProps","ppValues","pValues","JSON","stringify","constructor","Function","String","substring","transformer","rules","errorMessage","rule","ruleMessage","validationError","validation","onlyValid","validateInput","persist","clearTimeout","timer","applyFilter","applyTransformer","validationTimeout","applyValidation","invalid","stateForm","flatten","inputName","formErrors","propError","onSubmit","isValidElement","cloneElement","handleBlur","getInputValidationError","handleInput","renderInputs","classPrefix","defaultInputClass","invalidInputClass","validInputClass","renderCustomInput","inputStyle","inputClass","defaultValue","htmlProps","defaultChecked","defaultOptionText","hidden","selected","options","radioContainerClass","defaultLabelClass","htmlFor","defaultValidationErrorClass","submitButton","defaultSubmitClass","renderSubmitButtonContents","loadingElement","defaultContainerClass","formDriction","includes","lableStyle","containerClass","renderLabel","renderInput","renderValidationErrors","buttonStyle","formStyle","renderSubmitButton","entity","flatInputs","newRandomisedFields","newValues","newErrors","renderIf","autocomplete","Math","random","toString","defaultProps","isEmpty","obj","hasOwnProperty","AddMixDesignForm","visible1","grade","target_strength","actual_grade","date","water_cement_ratio","water_binder_ratio","rowreord","quantity","disableAddQuantity","mixProportionData","SubCategoriesselect","SubCategory","selectunit","selectPlants","cement_data","water_data","flyash_data","material_data","editmixProposionData","editform","editdataform","editunit","b","MixDesignProportionData","subId","getMixDesignProportion","objData","mixDesignProportions","rawMaterialName","editForm","showModal1","handleOk1","handleCancel1","toggle","setMixDesignVisibility","handleSubSelect","getallRawMaterials","targetGrade","targetSlump","actualGrade","waterCementRatio","waterBinderRatio","selectSubCategories","handleChangeMaterial","onSelectChange","selectedRows","para","getuniValuev","quantityChange","form1","setJson","mixDesignCode","entries","make","parseInt","sum","reduce","findWaterCementRatio","findWaterBinderRatio","w","f","w_b_r","Number","toFixed","c","w_c_r","from","clearSubCategory","rowSelection","onSelect","flexBasis","defaultActiveFirstOption","span","parse","instyle","btstyle","fostyle","editfostyle","scrollBehavior","MixDesignTitle","ManageMixDesignForm","mixCode","getallMixdesigns","mixDesigns","passEditMixDesignToModal","deleteProportionData","ROUTE_TO_MIX_DESIGN","MixDesignTileArea","routeToMixDesignMaster","MixDesignMaster","mixDesignLevelReducers","RoutingBetweenMixDesign","ROUTE_TO_INCOMING_SAMPLE","ROUTE_TO_PROCESS_SAMPLE","ROUTE_TO_FINISH_PRODUCT_SAMPLE","ROUTE_TO_MATERIAL_LOAD_SAMPLE","SampleTitleArea","routeToIncomingSample","routeToProcessSample","routeToFinishProductSample","routeToMaterialLoadSample","AddProcessSample","setProessVisiblity","processSample_code","incoming_sample_id","material_id","processSample_quantity","unit_id","incoming_sample","incomingSampleCode","incomingSampleEdit","unitEdit","SelectRaw","materialEdit","incomingSample_code","incomingSample","SelectIncomingSamples","getAllincomingSample","okType","ManageProcessSampleTitle","ManageProcessSample","getallProcessSample","dataSample","processSamples","passEditProcessSampleRecordToModal","AddFinishProduct","finish_product_date","finish_product_project_code","finsih_product_pour_id","finsih_product_mixdesign_code","pour_id","mixdesign_code","getallPour","SelectPour","getallmixdesign","SelectMixDesign","setfinishproductVisiblity","finish_product_id","pourId","finish_product_code","pourEdit","mixdesignEdit","SelectProject","getAllproject","ManageFinishProductSampleTitle","ManageFinishProduct","getallfinshProduct","finishProducts","passEditFinishProductToModal","FlexList","List","FlexListItem","DeliveryReport","Addincoming","vehicleNo","edit_plantName","edit_supplierName","edit_rawMaterialName","emptyMsg","setincomingVisibility","ManageIncomingSampleTitle","AddIncoming","ManageIncoming","deliveryreport","getallincoming","sortOrder","filteredValue","onFilter","role","passEditincomingRecordToModal","AddMaterialLoad","validateFields","err","ManageMaterialLoad","ManageMaterialLoadSample","SampleMaster","samplesReducers","RoutingBetweenSamples","ManageTest","sampleData","getTestById","testType","getAll","testConfig","materialSubCategoryName","onRow","rowIndex","onDoubleClick","TestPage","match","TestTrialMaster","testByTest","getTestByTestType","typeId","imgObj","styleObj","TestTypePage","TestType","typeData","getallTypes","links","Profile","CompanyPriviledge","handleSwitchChange","Fragment","minHeight","transition","pageSize","align","FPViewStatus","TestResultsTileArea","routeToRawMaterialTestResults","routeToSieveTestResults","routeToFinishProductTestResults","RawMaterialTitle","accuracy","outline","toggleFinishProductFilterDrawer","placement","onClose","onCloseFinishProductFilterDrawer","testResultsReducers","ToggleFilterDrawers","FPvisible","ManageRawMaterial","materialTests","filteredTestTrials","getAllMaterialTestTrials","showTestTrials","materialTest","j","trialNo","FinishProductTitle","ManageSieveTest","sieveTests","getalltestTrailByTestId","resultData","sieveTestCode","sieveSize","percentageRetained","cumulativeRetained","passing","totalWeight","sieveTest","TestResultsMaster","RoutingBetweenTestResults","LineChart","chart","xaxis","categories","series","pv","amt","LineBarChart","barSize","BarChart","Doughnut","labels","GraphDashboard","RangePicker","DatePicker","AuditLog","visibleEditModal","info","showTime","enterButton","sortDirections","filterMultiple","ProcessViewStatus","IncomingViewStatus","ConcreteTest","mix_design_code","slump","temperature","water_content","edit_mix_design_code","selectMix","concreteTestId","waterContent","edit_plant_code","setConcreteTestVisibility","ConcreteTestTitle","getallConcreteTest","ManageConcreteTest","concreteData","concreteTests","passEditconcreteTestToModal","AddConcreteStrengthTest","daycount","day","targetDate","today","enableStrength","concrete_age","strength","dit_mix_design_code","setConcreteStrengthTestVisibility","entreddate","concreteStrengthTestId","concreteAge","ConcreteStrengthTestTitle","ManageStrength","getallConcreteStrengthTest","concreteStrengthTests","fromNow","passEditconcreteStrengthTestToModal","TestTrialCardDetails","TestTrialCardText","h2","TrialCard","concreteTest","concreteStrengthTest","ConcreteStrengthTest","MaterialTest","TestTrialHome","MaterialTestTrial","getMatrialTestbycode","testCode","countTrails","test_level","testLevel","no_of_trial","noOfTrial","average","statusCode","disible","gettestById","gettestParameterById","getsampleById","sampleId","incomingSampleId","materialId","equationParameters","createEquationParameters","handleChangeNumber","materialStateId","ParameterformSubmit","trialCount","MaterialTestTrialCode","MaterialTestTrialData","materialTestCode","parameterResults","materialTestTrial","testParameterId","updateResult","updateAverage","trailColumns","trailParameter","viewTestResults","trialCountLimt","initNoOfTrail","formParameter","submitMeg","trailData","getAllMatrialState","SelectStates","row","ParameterTestResults","getAcceptedValueByTestId","acceptedMinValue","acceptedMaxValue","getMaterialTestByTestId","avg","testName","Status","getMaterialTestTrailByMaterialTestId","tcol","tdata","returnTable","material_testId","AddSize","onChangeCheck","checkedValues","material_sub_category_id","getSubCategoryByMain","optData","dataSub","material_sub_category_name","AddSieveSize","SieveSize","sieveSizes","AddAcceptedSize","getAllSizeBySubId","sieveSizeId","min","max","reloadPage","minvalue","maxvalue","addmin","addmax","Columns","AddAccepetdSize","sizeId","Aggsize","edit_Aggsize","sieveAcceptedValues","selectSize","selectCategory","SieveTestMaster","goSieveSize","goSieveAcceptedValues","goFinessModulus","AddFineness","max_size","min_size","FinenessTitle","AddFiness","FinenessModules","finenessModulus","Landing","SieveAcceptedValue","SieveTestTrial","handleChangeFine","handleChangePan","panWeight","getSampleById","getSizeBySubId","weight","handleSubmitTrail","Content","Footer","RouterContent","Image","path","exact","component","lineHeight","LoginForm","prefix","htmlType","Login","Img","SignupForm","password","handelSelect","Signup","App","Boolean","hostname","initialState","combineReducers","action","regex","acceptedIndexes","tmp","nextUnit","newRecord","switchRelevant","TestConfigurationReducers","newState","parameterConfigurationReducer","parameterAbbr","allReducers","CatergoryLevel","ParameterLevel","Plantlevel","Sitelevel","Sample","TopbarNavigation","PrivilegeLevelNavigation","sagaMiddleware","createSagaMiddleware","persistConfig","storage","blacklist","devtools","composeWithDevTools","actionCreators","trace","traceLimit","persistedReducer","persistReducer","store","createStore","applyMiddleware","persistor","persistStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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IAAK,KACL2I,KAAM,wBAER,CACE3I,IAAK,KACL2I,KAAM,uBAER,CACE3I,IAAK,KACL2I,KAAM,sBAER,CACE3I,IAAK,KACL2I,KAAM,oBAER,CACE3I,IAAK,KACL2I,KAAM,uBAER,CACE3I,IAAK,KACL2I,KAAM,qBAER,CACE3I,IAAK,KACL2I,KAAM,qBAER,CACE3I,IAAK,KACL2I,KAAM,uBAER,CACE3I,IAAK,KACL2I,KAAM,wBAER,CACE3I,IAAK,KACL2I,KAAM,2BAER,CACE3I,IAAK,KACL2I,KAAM,wBAER,CACE3I,IAAK,KACL2I,KAAM,mBAER,CACE3I,IAAK,KACL2I,KAAM,sBAER,CACE3I,IAAK,KACL2I,KAAM,oBAER,CACE3I,IAAK,KACL2I,KAAM,oBAER,CACE3I,IAAK,KACL2I,KAAM,uBAER,CACE3I,IAAK,KACL2I,KAAM,0BAER,CACE3I,IAAK,KACL2I,KAAM,yBAER,CACE3I,IAAK,KACL2I,KAAM,wBAER,CACE3I,IAAK,KACL2I,KAAM,wBAER,CACE3I,IAAK,KACL2I,KAAM,2BAER,CACE3I,IAAK,KACL2I,KAAM,wBAER,CACE3I,IAAK,KACL2I,KAAM,wBAER,CACE3I,IAAK,KACL2I,KAAM,yBAER,CACE3I,IAAK,KACL2I,KAAM,2BAER,CACE3I,IAAK,KACL2I,KAAM,yBAER,CACE3I,IAAK,KACL2I,KAAM,yBAER,CACE3I,IAAK,KACL2I,KAAM,8BAER,CACE3I,IAAK,KACL2I,KAAM,gCAER,CACE3I,IAAK,KACL2I,KAAM,8BAER,CACE3I,IAAK,KACL2I,KAAM,8BAER,CACE3I,IAAK,KACL2I,KAAM,yBAER,CACE3I,IAAK,KACL2I,KAAM,4BAER,CACE3I,IAAK,KACL2I,KAAM,0BAER,CACE3I,IAAK,KACL2I,KAAM,0BAER,CACE3I,IAAK,KACL2I,KAAM,wBAER,CACE3I,IAAK,KACL2I,KAAM,2BAER,CACE3I,IAAK,KACL2I,KAAM,yBAER,CACE3I,IAAK,KACL2I,KAAM,0BAIJsjC,G,6LAEFhqC,QAAQC,IAAI,sBACsB,gBAA9BZ,KAAK9D,MAAMsE,eACbG,QAAQC,IAAI,eAEZD,QAAQC,IAAI,aACZZ,KAAK9D,MAAM2E,uB,+BAGL,IACA+pC,EAAuB5qC,KAAK9D,MAA5B0uC,mBAeR,OACE,kBAAC,IAAMC,SAAP,KACE,yBACExsC,MAAO,CACLW,QAAS,mBACT6Q,WAAY,OACZi7B,UAAW,QACXnrC,UAAW,yDACXorC,WAAY,wCAGd,kBAACh+B,GAAD,mBACA,6BAEA,kBAAC,KAAD,CACEwF,QAASA,GACTU,WAAYtN,GACZ0K,SAAUu6B,EACVl5B,WAAY,CAAEs5B,SAAU,GACxBnsC,KAAK,UAEP,uBAAGosC,MAAM,SACP,kBAAC,KAAD,CAAQtsC,KAAK,WAAb,0B,GAhDoBuB,aAuEjBC,gBAfS,SAAA5C,GACtB,MAAO,CACLiD,eAAgBjD,EAAMgD,iCAAiCC,mBAIhC,SAAAC,GACzB,MAAO,CACLI,kBAAmB,WACjBJ,EAAS,CAAE9B,KAAMxB,IACjBwD,QAAQC,IAAI,yDAKHT,CAA6CwqC,ICrU7CO,I,wLAlCX,OACE,yBAAK3sC,UAAU,gBACb,kBAACwC,GAAD,CACE1C,MAAO,CAAE0B,eAAgB,eAAgBkvB,WAAY,SAErD,kBAAClzB,EAAD,CAAgBqC,GAAG,IACjB,kBAACgE,GAAD,CAAWY,SAAO,GAChB,yBAAK3E,MAAO,CAAEuB,QAAS,OAAQZ,QAAS,MAAOC,OAAQ,SACrD,kBAACqL,GAAD,yBAKN,kBAACvO,EAAD,CAAgBqC,GAAG,IACjB,kBAACgE,GAAD,CAAWY,SAAO,GAChB,yBAAK3E,MAAO,CAAEuB,QAAS,OAAQZ,QAAS,MAAOC,OAAQ,SACrD,kBAACqL,GAAD,sBAKN,kBAACvO,EAAD,CAAgBqC,GAAG,IACjB,kBAACgE,GAAD,CAAWY,SAAO,GAChB,yBAAK3E,MAAO,CAAEuB,QAAS,OAAQZ,QAAS,MAAOC,OAAQ,SACrD,kBAACqL,GAAD,+B,GA1BWpK,cCSrBirC,G,iLAEF,OACE,kBAAC7/B,GAAD,KACE,kBAAC,GAAD,CACE1H,cAAY,EACZ8G,cAAY,EACZ7L,KAAK,SACLiN,WAAW,EACX5N,QAAS8B,KAAK9D,MAAMkvC,+BAEpB,kBAAC7/B,GAAD,CAAcE,MAAI,EAACZ,YAAU,GAA7B,4BAGA,kBAACe,GAAD,KACE,kBAAC,IAAD,CACEI,QAAM,EACNrN,KAAK,OACLN,MAAO,CAAE+K,MAAO,MAAOtK,SAAU,YAIvC,kBAAC,GAAD,CACE8E,cAAY,EACZ8G,cAAY,EACZ7L,KAAK,SACLiN,WAAW,EACX5N,QAAS8B,KAAK9D,MAAMmvC,yBAEpB,kBAAC9/B,GAAD,CAAcE,MAAI,EAACZ,YAAU,GAA7B,qBAGA,kBAACe,GAAD,KACE,kBAAC,IAAD,CACEI,QAAM,EACNrN,KAAK,OACLN,MAAO,CAAE+K,MAAO,MAAOtK,SAAU,YAKvC,kBAAC,GAAD,CACE8E,cAAY,EACZ8G,cAAY,EACZ7L,KAAK,QACLiN,WAAW,EACX5N,QAAS8B,KAAK9D,MAAMovC,iCAEpB,kBAAC//B,GAAD,CAAcE,MAAI,EAACZ,YAAU,GAA7B,8BAGA,kBAACe,GAAD,KACE,kBAAC,IAAD,CACEI,QAAM,EACNrN,KAAK,OACLN,MAAO,CAAE+K,MAAO,MAAOtK,SAAU,iB,GAvDboB,aAmFnBC,gBAnBS,SAAA5C,GAAK,OAAI,QAEN,SAAAkD,GACzB,MAAO,CACL2qC,8BAA+B,WAC7B3qC,EAAS,CAAE9B,KCrFf,uCDsFIgC,QAAQC,IAAI,2CAEd0qC,gCAAiC,WAC/B7qC,EAAS,CAAE9B,KCvFf,yCDwFIgC,QAAQC,IAAI,6CAEdyqC,wBAAyB,WACvB5qC,EAAS,CAAE9B,KC1F0B,gCD2FrCgC,QAAQC,IAAI,uCAKHT,CAGbgrC,I,UE5FI/3B,GAASC,KAETk4B,G,2MACJhuC,MAAQ,CACNiuC,SAAU,Y,EAEZn7B,SAAW,SAAAtI,GACTpH,QAAQC,IAAImH,GACZ,EAAKmB,SAAS,CACZsiC,SAAUzjC,K,wEAKZ,OACE,kBAAChH,GAAD,KACE,yDACA,kBAACuL,GAAD,CACE3N,KAAK,UACLN,MAAO,CACLwR,WAAYjS,GAAaiM,QACzB4hC,QAAS,OACT37B,OAAQ,QAEV5R,QAAS8B,KAAK9D,MAAMwvC,iCAPtB,UAWA,kBAAC,KAAD,CACE9sC,MAAM,mBACN+sC,UAAU,QACV57B,UAAU,EACV67B,QAAS5rC,KAAK9D,MAAM2vC,iCACpBx8B,QAASrP,KAAK9D,MAAMmT,QACpB3P,MAAO,KAEP,kBAACqB,GAAD,CAAeE,QAAM,EAAC5C,MAAO,CAAEoB,OAAQ,UACrC,6BACE,yCACA,kBAAC,KAAD,CACE0Q,GAAG,YACH9I,KAAK,YACL+I,YAAY,gBACZ/R,MAAO,CAAEqB,MAAO,UAEhB,kBAAC,GAAD,CAAQqI,MAAM,YAAd,iBACA,kBAAC,GAAD,CAAQA,MAAM,UAAd,eACA,kBAAC,GAAD,CAAQA,MAAM,QAAd,aACA,kBAAC,GAAD,CAAQA,MAAM,UAAd,2BACA,kBAAC,GAAD,CAAQA,MAAM,SAAd,gBAGJ,kBAAChH,GAAD,CACE1C,MAAO,CAAEwR,WAAY,UAAWpQ,OAAQ,OAAQT,QAAS,SAEzD,kBAAC,KAAD,CACEmR,GAAG,WACH9I,KAAK,WACLhJ,MAAO,CAAEqB,MAAO,SAChB67B,aAAa,WACbxzB,MAAO/H,KAAKzC,MAAMiuC,SAClBn7B,SAAUrQ,KAAKqQ,UAEf,kBAAC,GAAD,CAAQtI,MAAM,WAAd,WACA,kBAAC,GAAD,CAAQA,MAAM,YAAd,aAEuB,aAAxB/H,KAAKzC,MAAMiuC,SACV,kBAAC,KAAD,CACEr7B,GAAG,QACH9I,KAAK,QACLhJ,MAAO,CAAEqB,MAAO,SAChB0Q,YAAY,UAGd,yBAAK/R,MAAO,CAAEG,WAAY,SACxB,kBAAC,KAAD,CACE2R,GAAG,MACH9I,KAAK,MACL+I,YAAY,UACZ/R,MAAO,CAAEqB,MAAO,WAElB,kBAAC4M,GAAD,CAAegE,UAAQ,GAAvB,KACA,kBAAC,KAAD,CACEH,GAAG,MACH9I,KAAK,MACL+I,YAAY,UACZ/R,MAAO,CAAEqB,MAAO,YAItB,kBAAC4M,GAAD,CACE3N,KAAK,UACLN,MAAO,CAAEwR,WAAYjS,GAAaiM,QAASiG,OAAQ,SAFrD,kB,GAxFiB5P,aAyHhBC,gBAnBS,SAAA5C,GACtB,MAAO,CACL8R,QAAS9R,EAAMuuC,oBAAoBC,oBAAoBC,cAIhC,SAAAvrC,GACzB,MAAO,CACLirC,gCAAiC,WAC/BjrC,EAAS,CAAE9B,KDrH2B,iCCsHtCgC,QAAQC,IAAI,wCAEdirC,iCAAkC,WAChCprC,EAAS,CAAE9B,KDvH0B,gCCwHrCgC,QAAQC,IAAI,0CAKHT,CAA6CorC,IC3HvCU,G,2MACnB1uC,MAAQ,CACNsU,aAAc,KACdC,WAAY,KACZR,WAAY,GACZjC,SAAS,EACTxQ,KAAM,QACNqtC,cAAe,GACfC,mBAAoB,I,EAItBC,yBAA2B,WACzBznC,GAAI,MAAO,WAAY,kBAAmB,GAAI,GAAI,IAAIW,MAAK,SAAAqD,GACzDhI,QAAQC,IAAI+H,EAAIhD,KAAKiD,SACrB,EAAKM,SAAS,CACZgjC,cAAevjC,EAAIhD,KAAKiD,QAAQsjC,oB,EAsBtCG,eAAiB,SAAAl/B,GAAS,IAChBg/B,EAAuB,EAAK5uC,MAA5B4uC,mBACRxrC,QAAQC,IAAIuM,GAEZxI,GACE,MACA,WACA,qCACA,GACA,GACAwI,GACA7H,MAAK,SAAAqD,GACLhI,QAAQC,IAAI+H,EAAIhD,KAAKiD,SAErBjI,QAAQC,IAAI+H,EAAIhD,KAAKiD,QAAQ0jC,aAAavjC,QAC1C,IAAK,IAAIwjC,EAAI,EAAGA,EAAI5jC,EAAIhD,KAAKiD,QAAQ0jC,aAAavjC,OAAQwjC,IACxD5rC,QAAQC,IAAI,OACZD,QAAQC,IAAI+H,EAAIhD,KAAKiD,QAAQ0jC,aAAaC,GAAGp/B,MAC7Cg/B,EAAmBtzB,KAAK,CACtB1L,KAAMxE,EAAIhD,KAAKiD,QAAQ0jC,aAAaC,GAAGp/B,KACvCq/B,QAAS7jC,EAAIhD,KAAKiD,QAAQ0jC,aAAaC,GAAGC,QAC1C/Y,OAAQ9qB,EAAIhD,KAAKiD,QAAQ0jC,aAAaC,GAAG9Y,SAE3C9yB,QAAQC,IAAIurC,GAEd,EAAKjjC,SAAS,CACZmG,SAAS,Q,EAKfG,UAAY,WACV,EAAKtG,SAAS,CACZmG,SAAS,K,EAIboC,SAAW,SAAA3Q,GACTH,QAAQC,IAAIE,GACZ,EAAKoI,SAAS,CACZmG,SAAS,IAEX,EAAK9R,MAAM4uC,mBAAmB5X,OAC5B,EACA,EAAKh3B,MAAM4uC,mBAAmBpjC,QAEhCpI,QAAQC,IAAI,EAAKrD,MAAM4uC,qB,EAGzB18B,aAAe,SAAA3O,GACbH,QAAQC,IAAIE,GACZ,EAAKoI,SAAS,CACZmG,SAAS,IAEX,EAAK9R,MAAM4uC,mBAAmB5X,OAC5B,EACA,EAAKh3B,MAAM4uC,mBAAmBpjC,QAEhCpI,QAAQC,IAAI,EAAKrD,MAAM4uC,qB,EAGzBr+B,aAAe,SAAC4D,EAAYC,EAASC,GACnCjR,QAAQC,IAAI,qBAAsB8Q,EAAYC,EAASC,GACvD,EAAK1I,SAAS,CACZ2I,aAAcF,EACdG,WAAYF,K,EAIhBG,aAAe,WACb,EAAK7I,SAAS,CAAE2I,aAAc,Q,EAGhCG,SAAW,WACT,EAAK9I,SAAS,CACZ2I,aAAc,KACdC,WAAY,Q,EAIhBG,WAAa,WACX,EAAK/I,SAAS,CACZ4I,WAAY,CACVI,MAAO,UACPC,UAAW,W,mFApGfnS,KAAKosC,6B,2CAIDh6B,OAAOC,OAAO3S,MAAQ,MACxBiB,QAAQC,IAAI,UACZZ,KAAKkJ,SAAS,CACZrK,KAAM,WAECuT,OAAOC,OAAO3S,MAAQ,MAC/BM,KAAKkJ,SAAS,CACZrK,KAAM,Y,+BA8FHyT,GACP3R,QAAQC,IAAI,SAAU0R,K,sCAERnC,GAAK,IAAD,OAClBxP,QAAQC,IAAIuP,GAEZxL,GAAI,SAAU,WAAY,iBAAkB,GAAI,GAAIwL,GAAI7K,MAAK,SAAAqD,GAC3DhI,QAAQC,IAAI+H,EAAIhD,MAChB,EAAKymC,2BACLp/B,GAAa,UAAWrE,EAAIhD,KAAKsH,c,+BAI3B,IAAD,OACDsF,EAAU,CACd,CACE3T,MAAO,OACP4T,UAAW,OACX9T,IAAK,QAEP,CACEE,MAAO,OACP4T,UAAW,OACX9T,IAAK,QAEP,CACEE,MAAO,cACP4T,UAAW,YACX9T,IAAK,aAEP,CACEE,MAAO,UACP4T,UAAW,UACX9T,IAAK,WAEP,CACEE,MAAO,SACP4T,UAAW,SACX9T,IAAK,UAGP,CACEE,MAAO,aACP4T,UAAW,YACX9T,IAAK,aAEP,CACEE,MAAO,kBACP4T,UAAW,qBACX9T,IAAK,sBAEP,CACEE,MAAO,YACP4T,UAAW,WACX9T,IAAK,YAEP,CACEE,MAAO,iBACP4T,UAAW,gBACX9T,IAAK,iBAEP,CACEE,MAAO,SACPF,IAAK,SACL+T,OAAQ,SAAC3L,GAAD,IAAO4L,EAAP,uDAAgB,EAAKnV,MAAM2uC,cAA3B,OACN,kBAAC,IAAD,CACEvtC,KAAK,YACLN,MAAO,CAAE+K,MAAO,SAChBlL,QAAS,EAAKmuC,eAAez5B,KAAK,EAAMF,EAAOvF,UAIrD,CACEvO,MAAO,OACPF,IAAK,OACL+T,OAAQ,SAAC3L,GAAD,IAAO4L,EAAP,uDAAgB,EAAKnV,MAAM2uC,cAA3B,OACN,kBAAC,IAAD,CACEvtC,KAAK,YACLN,MAAO,CAAE+K,MAAO,SAChBlL,QAAS,kBACP84B,GAAQne,KAAR,uBACkBnG,EAAOob,OADzB,YACmCpb,EAAOoyB,mBAD1C,YACgEpyB,EAAOvF,YAM/E,CACEvO,MAAO,gBACPF,IAAK,SACLgB,MAAO,KACP+S,OAAQ,SAAC3L,GAAD,IAAO4L,EAAP,uDAAgB,EAAKnV,MAAMsZ,SAA3B,OACN,8BACE,4BASA,kBAAC,KAAD,CAASlY,KAAK,aACd,2BACE,kBAAC,KAAD,CACEC,MAAM,wCACNiU,KACE,kBAAC,IAAD,CAAMlU,KAAK,oBAAoBN,MAAO,CAAE+K,MAAO,SAEjD0J,UAAW,EAAKC,gBAAgBH,KAAK,EAAMF,EAAOvF,OAElD,uBAAG6F,KAAK,KACN,kBAAC,IAAD,CAAMrU,KAAK,SAASN,MAAO,CAAE+K,MAAO,gBASlD,OACE,6BACE,kBAACyH,GAAD,CACEjS,MAAO,kBAAM,kBAAC,GAAD,OACbsS,WAAS,EACTrE,UAAQ,EACR0F,QAASA,EACTU,WAAYjT,KAAKzC,MAAM2uC,cACvB77B,SAAUrQ,KAAK8N,aACf4D,WAAY,CAAEwB,gBAAiB,IAC/BrU,KAAMmB,KAAKzC,MAAMsB,OAEnB,kBAAC,KAAD,CACED,MAAM,cACNyQ,QAASrP,KAAKzC,MAAM8R,QACpBmG,KAAMxV,KAAKyR,SACXzB,SAAUhQ,KAAKyP,cAEdzP,KAAKzC,MAAM4uC,mBAAmBx3B,KAAI,SAACjP,EAAMkP,GAAP,OACjC,kBAAC7T,GAAD,KACE,2BACE,uBAAG1C,MAAO,CAAEqB,MAAO,SAAnB,iBACCgG,EAAKyH,MAER,2BACE,0CACCzH,EAAK8mC,SAER,2BACE,uCACC9mC,EAAK+tB,kB,GAtRyBvzB,aCAzCkT,GAASC,KAETo5B,G,2MACJlvC,MAAQ,CACNiuC,SAAU,Y,EAEZn7B,SAAW,SAAAtI,GACTpH,QAAQC,IAAImH,GACZ,EAAKmB,SAAS,CACZsiC,SAAUzjC,K,wEAKZ,OACE,kBAAChH,GAAD,KACE,2DACA,kBAACuL,GAAD,CACE3N,KAAK,UACLN,MAAO,CACLwR,WAAYjS,GAAaiM,QACzB4hC,QAAS,OACT37B,OAAQ,QAEV5R,QAAS8B,KAAK9D,MAAMwvC,iCAPtB,UAWA,kBAAC,KAAD,CACE9sC,MAAM,mBACN+sC,UAAU,QACV57B,UAAU,EACV67B,QAAS5rC,KAAK9D,MAAM2vC,iCACpBx8B,QAASrP,KAAK9D,MAAMmT,QACpB3P,MAAO,KAEP,kBAACqB,GAAD,CAAeE,QAAM,EAAC5C,MAAO,CAAEoB,OAAQ,UACrC,6BACE,yCACA,kBAAC,KAAD,CACE0Q,GAAG,YACH9I,KAAK,YACL+I,YAAY,gBACZ/R,MAAO,CAAEqB,MAAO,UAEhB,kBAAC,GAAD,CAAQqI,MAAM,iBAAd,iBACA,kBAAC,GAAD,CAAQA,MAAM,aAAd,cACA,kBAAC,GAAD,CAAQA,MAAM,SAAd,SACA,kBAAC,GAAD,CAAQA,MAAM,aAAd,eACA,kBAAC,GAAD,CAAQA,MAAM,SAAd,SACA,kBAAC,GAAD,CAAQA,MAAM,UAAd,UACA,kBAAC,GAAD,CAAQA,MAAM,YAAd,cAGJ,kBAAChH,GAAD,CACE1C,MAAO,CAAEwR,WAAY,UAAWpQ,OAAQ,OAAQT,QAAS,SAEzD,kBAAC,KAAD,CACEmR,GAAG,WACH9I,KAAK,WACLhJ,MAAO,CAAEqB,MAAO,SAChB67B,aAAa,WACbxzB,MAAO/H,KAAKzC,MAAMiuC,SAClBn7B,SAAUrQ,KAAKqQ,UAEf,kBAAC,GAAD,CAAQtI,MAAM,WAAd,WACA,kBAAC,GAAD,CAAQA,MAAM,YAAd,aAEuB,aAAxB/H,KAAKzC,MAAMiuC,SACV,kBAAC,KAAD,CACEr7B,GAAG,QACH9I,KAAK,QACLhJ,MAAO,CAAEqB,MAAO,SAChB0Q,YAAY,UAGd,yBAAK/R,MAAO,CAAEG,WAAY,SACxB,kBAAC,KAAD,CACE2R,GAAG,MACH9I,KAAK,MACL+I,YAAY,UACZ/R,MAAO,CAAEqB,MAAO,WAElB,kBAAC4M,GAAD,CAAegE,UAAQ,GAAvB,KACA,kBAAC,KAAD,CACEH,GAAG,MACH9I,KAAK,MACL+I,YAAY,UACZ/R,MAAO,CAAEqB,MAAO,YAItB,kBAAC4M,GAAD,CACE3N,KAAK,UACLN,MAAO,CAAEwR,WAAYjS,GAAaiM,QAASiG,OAAQ,SAFrD,kB,GA1FmB5P,aA2HlBC,gBAnBS,SAAA5C,GACtB,MAAO,CACL8R,QAAS9R,EAAMuuC,oBAAoBC,oBAAoBC,cAIhC,SAAAvrC,GACzB,MAAO,CACLirC,gCAAiC,WAC/BjrC,EAAS,CAAE9B,KHvH2B,iCGwHtCgC,QAAQC,IAAI,wCAEdirC,iCAAkC,WAChCprC,EAAS,CAAE9B,KHzH0B,gCG0HrCgC,QAAQC,IAAI,0CAKHT,CAA6CssC,ICjItD9mC,GAAO,GAEQuhC,G,2MACnB3pC,MAAQ,CACNsU,aAAc,KACdC,WAAY,KACZR,WAAY,GACZjC,SAAS,EACTxQ,KAAM,S,EAgBR2Q,UAAY,WACV,EAAKtG,SAAS,CACZmG,SAAS,K,EAIboC,SAAW,SAAA3Q,GACTH,QAAQC,IAAIE,GACZ,EAAKoI,SAAS,CACZmG,SAAS,K,EAIbI,aAAe,SAAA3O,GACbH,QAAQC,IAAIE,GACZ,EAAKoI,SAAS,CACZmG,SAAS,K,EAIbvB,aAAe,SAAC4D,EAAYC,EAASC,GACnCjR,QAAQC,IAAI,qBAAsB8Q,EAAYC,EAASC,GACvD,EAAK1I,SAAS,CACZ2I,aAAcF,EACdG,WAAYF,K,EAIhBG,aAAe,WACb,EAAK7I,SAAS,CAAE2I,aAAc,Q,EAGhCG,SAAW,WACT,EAAK9I,SAAS,CACZ2I,aAAc,KACdC,WAAY,Q,EAIhBG,WAAa,WACX,EAAK/I,SAAS,CACZ4I,WAAY,CACVI,MAAO,UACPC,UAAW,W,oFAvDXC,OAAOC,OAAO3S,MAAQ,MACxBiB,QAAQC,IAAI,UACZZ,KAAKkJ,SAAS,CACZrK,KAAM,WAECuT,OAAOC,OAAO3S,MAAQ,MAC/BM,KAAKkJ,SAAS,CACZrK,KAAM,Y,+BAqDHyT,GACP3R,QAAQC,IAAI,SAAU0R,K,+BAGd,IAAD,EAC4BtS,KAAKzC,MAAlCuU,EADC,EACDA,WAAYD,EADX,EACWA,aAClBC,EAAaA,GAAc,GAE3B,IAAMS,EAAU,CACd,CACE3T,MAAO,OACP4T,UAAW,OACX9T,IAAK,OACLiT,QAAS,CACP,CAAE7K,KAAM,MAAOiB,MAAO,OACtB,CAAEjB,KAAM,MAAOiB,MAAO,QAExBwgC,eAVJ12B,EAAeA,GAAgB,IAUCxK,MAAQ,KACpCmhC,SAAU,SAACzgC,EAAO2K,GAAR,OAAmBA,EAAOrL,KAAKm1B,SAASz0B,IAClD6J,OAAQ,SAAC4hB,EAAG+L,GAAJ,OAAU/L,EAAErmB,KAAOoyB,EAAEpyB,MAC7Bm7B,UAAoC,SAAzBx2B,EAAWK,WAAwBL,EAAWI,OAE3D,CACEtT,MAAO,OACP4T,UAAW,OACX9T,IAAK,OAELiT,QAAS,CACP,CAAE7K,KAAM,MAAOiB,MAAO,OACtB,CAAEjB,KAAM,MAAOiB,MAAO,QAExBwgC,cAAe12B,EAAaxK,MAAQ,KACpCmhC,SAAU,SAACzgC,EAAO2K,GAAR,OAAmBA,EAAOrL,KAAKm1B,SAASz0B,IAClD6J,OAAQ,SAAC4hB,EAAG+L,GAAJ,OAAU/L,EAAE3O,KAAO0a,EAAE1a,MAC7ByjB,UAAoC,SAAzBx2B,EAAWK,WAAwBL,EAAWI,OAE3D,CACEtT,MAAO,OACP4T,UAAW,OACX9T,IAAK,OAELiT,QAAS,CACP,CAAE7K,KAAM,MAAOiB,MAAO,OACtB,CAAEjB,KAAM,MAAOiB,MAAO,QAExBwgC,cAAe12B,EAAaxK,MAAQ,KACpCmhC,SAAU,SAACzgC,EAAO2K,GAAR,OAAmBA,EAAOrL,KAAKm1B,SAASz0B,IAClD6J,OAAQ,SAAC4hB,EAAG+L,GAAJ,OAAU/L,EAAE3O,KAAO0a,EAAE1a,MAC7ByjB,UAAoC,SAAzBx2B,EAAWK,WAAwBL,EAAWI,OAE3D,CACEtT,MAAO,QACP4T,UAAW,QACX9T,IAAK,QAELiT,QAAS,CACP,CAAE7K,KAAM,MAAOiB,MAAO,OACtB,CAAEjB,KAAM,MAAOiB,MAAO,QAExBwgC,cAAe12B,EAAaxK,MAAQ,KACpCmhC,SAAU,SAACzgC,EAAO2K,GAAR,OAAmBA,EAAOrL,KAAKm1B,SAASz0B,IAClD6J,OAAQ,SAAC4hB,EAAG+L,GAAJ,OAAU/L,EAAE3O,KAAO0a,EAAE1a,MAC7ByjB,UAAoC,SAAzBx2B,EAAWK,WAAwBL,EAAWI,OAE3D,CACEtT,MAAO,aACP4T,UAAW,aACX9T,IAAK,aAELiT,QAAS,CACP,CAAE7K,KAAM,MAAOiB,MAAO,OACtB,CAAEjB,KAAM,MAAOiB,MAAO,QAExBwgC,cAAe12B,EAAaxK,MAAQ,KACpCmhC,SAAU,SAACzgC,EAAO2K,GAAR,OAAmBA,EAAOrL,KAAKm1B,SAASz0B,IAClD6J,OAAQ,SAAC4hB,EAAG+L,GAAJ,OAAU/L,EAAE3O,KAAO0a,EAAE1a,MAC7ByjB,UAAoC,SAAzBx2B,EAAWK,WAAwBL,EAAWI,OAG3D,CACEtT,MAAO,gBACP4T,UAAW,gBACX9T,IAAK,gBAELiT,QAAS,CACP,CAAE7K,KAAM,MAAOiB,MAAO,OACtB,CAAEjB,KAAM,MAAOiB,MAAO,QAExBwgC,cAAe12B,EAAaxK,MAAQ,KACpCmhC,SAAU,SAACzgC,EAAO2K,GAAR,OAAmBA,EAAOrL,KAAKm1B,SAASz0B,IAClD6J,OAAQ,SAAC4hB,EAAG+L,GAAJ,OAAU/L,EAAE3O,KAAO0a,EAAE1a,MAC7ByjB,UAAoC,SAAzBx2B,EAAWK,WAAwBL,EAAWI,OAE3D,CACEtT,MAAO,QACP4T,UAAW,QACX9T,IAAK,QAELiT,QAAS,CACP,CAAE7K,KAAM,MAAOiB,MAAO,OACtB,CAAEjB,KAAM,MAAOiB,MAAO,QAExBwgC,cAAe12B,EAAaxK,MAAQ,KACpCmhC,SAAU,SAACzgC,EAAO2K,GAAR,OAAmBA,EAAOrL,KAAKm1B,SAASz0B,IAClD6J,OAAQ,SAAC4hB,EAAG+L,GAAJ,OAAU/L,EAAE3O,KAAO0a,EAAE1a,MAC7ByjB,UAAoC,SAAzBx2B,EAAWK,WAAwBL,EAAWI,OAE3D,CACEtT,MAAO,gBACPF,IAAK,SACLgB,MAAO,MACP+S,OAAQ,SAAC3L,EAAM4L,GAAP,OACN,8BACE,2BACE,kBAAC,IAAD,CAAM/T,KAAK,UAEb,kBAAC,KAAD,CAASA,KAAK,aACd,2BACE,kBAAC,KAAD,CACEC,MAAM,wCACNiU,KACE,kBAAC,IAAD,CAAMlU,KAAK,oBAAoBN,MAAO,CAAE+K,MAAO,UAGjD,uBAAG4J,KAAK,KACN,kBAAC,IAAD,CAAMrU,KAAK,kBASzB,OACE,6BACE,kBAACkS,GAAD,CACEjS,MAAO,kBAAM,kBAAC,GAAD,OACbsS,WAAS,EACTrE,UAAQ,EACR0F,QAASA,EACTU,WAAYtN,GACZ0K,SAAUrQ,KAAK8N,aACf4D,WAAY,CAAEwB,gBAAiB,GAC/BrU,KAAMmB,KAAKzC,MAAMsB,Y,GAtNsBqB,aCA5BwsC,G,2MACnBnvC,MAAQ,CACNsU,aAAc,KACdC,WAAY,KACZR,WAAY,GACZjC,SAAS,EACTxQ,KAAM,QACNqtC,cAAe,GACfC,mBAAoB,I,EAGtBC,yBAA2B,WACzBznC,GAAI,MAAO,WAAY,eAAgB,GAAI,GAAI,IAAIW,MAAK,SAAAqD,GACtDhI,QAAQC,IAAI+H,EAAIhD,KAAKiD,QAAQ+jC,YAC7B,EAAKzjC,SAAS,CACZgjC,cAAevjC,EAAIhD,KAAKiD,QAAQ+jC,iB,EAsBtCC,wBAA0B,SAAAz/B,GACxB,EAAKjE,SAAS,CACZmG,SAAS,IAEX,IAAIw9B,EAAa,GACjBloC,GAAI,MAAO,WAAY,+BAAgC,GAAI,GAAIwI,GAAM7H,MACnE,SAAAqD,GACE,IAAIoM,EAAIpM,EAAIhD,KAAKiD,QAAQkkC,cACzBnsC,QAAQC,IAAI+H,EAAIhD,KAAKiD,QAAQkkC,eAC7B,IAAK,IAAIhgB,EAAI,EAAGA,EAAI/X,EAAEhM,OAAQ+jB,IAC5B+f,EAAWh0B,KAAK,CACdha,KAAMkW,EAAE+X,GAAGigB,UAAUluC,KACrBmuC,mBAAoBj4B,EAAE+X,GAAGkgB,mBACzBC,mBAAoBl4B,EAAE+X,GAAGmgB,mBACzBC,QAASn4B,EAAE+X,GAAGogB,QACdC,YAAap4B,EAAE+X,GAAGsgB,UAAUD,YAC5BnkC,OAAQ+L,EAAE+X,GAAGsgB,UAAUpkC,SAGvB6jC,EAAW9jC,OAAS,GACtB,EAAKG,SAAS,CACZikC,YAAaN,EAAW,GAAGM,YAC3BnkC,OAAQ6jC,EAAW,GAAG7jC,SAI1B,EAAKE,SAAS,CACZ2jC,mB,EAMRr9B,UAAY,WACV,EAAKtG,SAAS,CACZmG,SAAS,K,EAIboC,SAAW,SAAA3Q,GACTH,QAAQC,IAAIE,GACZ,EAAKoI,SAAS,CACZmG,SAAS,IAEX,EAAK9R,MAAM4uC,mBAAmB5X,OAC5B,EACA,EAAKh3B,MAAM4uC,mBAAmBpjC,QAEhCpI,QAAQC,IAAI,EAAKrD,MAAM4uC,qB,EAGzB18B,aAAe,SAAA3O,GACbH,QAAQC,IAAIE,GACZ,EAAKoI,SAAS,CACZmG,SAAS,IAEX,EAAK9R,MAAM4uC,mBAAmB5X,OAC5B,EACA,EAAKh3B,MAAM4uC,mBAAmBpjC,QAEhCpI,QAAQC,IAAI,EAAKrD,MAAM4uC,qB,EAGzBr+B,aAAe,SAAC4D,EAAYC,EAASC,GACnCjR,QAAQC,IAAI,qBAAsB8Q,EAAYC,EAASC,GACvD,EAAK1I,SAAS,CACZ2I,aAAcF,EACdG,WAAYF,K,EAIhBG,aAAe,WACb,EAAK7I,SAAS,CAAE2I,aAAc,Q,EAGhCG,SAAW,WACT,EAAK9I,SAAS,CACZ2I,aAAc,KACdC,WAAY,Q,EAIhBG,WAAa,WACX,EAAK/I,SAAS,CACZ4I,WAAY,CACVI,MAAO,UACPC,UAAW,W,mFAtGfnS,KAAKosC,6B,2CAIDh6B,OAAOC,OAAO3S,MAAQ,MACxBiB,QAAQC,IAAI,UACZZ,KAAKkJ,SAAS,CACZrK,KAAM,WAECuT,OAAOC,OAAO3S,MAAQ,MAC/BM,KAAKkJ,SAAS,CACZrK,KAAM,Y,+BAgGHyT,GACP3R,QAAQC,IAAI,SAAU0R,K,sCAERnC,GAAK,IAAD,OAClBxP,QAAQC,IAAIuP,GAEZxL,GAAI,SAAU,WAAY,cAAe,GAAI,GAAIwL,GAAI7K,MAAK,SAAAqD,GACxDhI,QAAQC,IAAI+H,EAAIhD,MAChB,EAAKymC,2BACLp/B,GAAa,UAAWrE,EAAIhD,KAAKsH,c,+BAI3B,IAAD,SACDsF,EAAU,CACd,CACE3T,MAAO,OACP4T,UAAW,OACX9T,IAAK,QAEP,CACEE,MAAO,OACP4T,UAAW,OACX9T,IAAK,QAEP,CACEE,MAAO,kBACP4T,UAAW,kBACX9T,IAAK,mBAEP,CACEE,MAAO,aACP4T,UAAW,YACX9T,IAAK,aAEP,CACEE,MAAO,eACP4T,UAAW,cACX9T,IAAK,eAEP,CACEE,MAAO,SACP4T,UAAW,SACX9T,IAAK,UAGP,CACEE,MAAO,SACPF,IAAK,SACL+T,OAAQ,SAAC3L,GAAD,IAAO4L,EAAP,uDAAgB,EAAKnV,MAAM2uC,cAA3B,OACN,kBAAC,IAAD,CACEvtC,KAAK,YACLN,MAAO,CAAE+K,MAAO,SAChBlL,QAAS,EAAK0uC,wBAAwBh6B,KAAK,EAAMF,EAAOvF,UAI9D,CACEvO,MAAO,gBACPF,IAAK,SACLgB,MAAO,KACP+S,OAAQ,SAAC3L,GAAD,IAAO4L,EAAP,uDAAgB,EAAKnV,MAAMsZ,SAA3B,OACN,8BACE,4BASA,kBAAC,KAAD,CAASlY,KAAK,aACd,2BACE,kBAAC,KAAD,CACEC,MAAM,wCACNiU,KACE,kBAAC,IAAD,CAAMlU,KAAK,oBAAoBN,MAAO,CAAE+K,MAAO,SAEjD0J,UAAW,EAAKC,gBAAgBH,KAAK,EAAMF,EAAOvF,OAElD,uBAAG6F,KAAK,KACN,kBAAC,IAAD,CAAMrU,KAAK,SAASN,MAAO,CAAE+K,MAAO,gBAkClD,OACE,6BACE,kBAACyH,GAAD,CACEjS,MAAO,kBAAM,mDACbsS,WAAS,EACTrE,UAAQ,EACR0F,QAASA,EACTU,WAAYjT,KAAKzC,MAAM2uC,cACvB77B,SAAUrQ,KAAK8N,aACf4D,WAAY,CAAEwB,gBAAiB,IAC/BrU,KAAMmB,KAAKzC,MAAMsB,OAEnB,kBAAC,KAAD,CACED,MAAM,cACNyQ,QAASrP,KAAKzC,MAAM8R,QACpBmG,KAAMxV,KAAKyR,SACXzB,SAAUhQ,KAAKyP,aACf/P,MAAM,SAEN,kBAAC,MAAD,GACE6S,QA7CS,CACf,CACE3T,MAAO,kBACP4T,UAAW,OACX9T,IAAK,OACLgB,MAAO,OAET,CACEd,MAAO,kCACP4T,UAAW,qBACX9T,IAAK,sBAGP,CACEE,MAAO,8BACP4T,UAAW,qBACX9T,IAAK,sBAEP,CACEE,MAAO,4BACP4T,UAAW,UACX9T,IAAK,YAyBDuU,WAAYjT,KAAKzC,MAAMsvC,WACvBxuC,MAAO,CACLwR,WAAY,QACZnQ,MAAO,SACP6J,UAAW,SAEbypB,OAAQ,CAAE7G,EAAG,KACbttB,KAAK,SATP,uBAUS,CACLa,MAAO,UAXX,6BAec,GAfd,U,GAvQmCQ,aCCvCmtC,G,2MACJjzB,iBAAmB,WACjB,MAA6B,iBAAzB,EAAKle,MAAMme,UACN,kBAAC,GAAD,MAC2B,mBAAzB,EAAKne,MAAMme,UACb,kBAAC,GAAD,MAC2B,iBAAzB,EAAKne,MAAMme,UACb,kBAAC,GAAD,WADF,G,wEAKP,OACE,kBAACtZ,GAAD,CAAeO,oBAAkB,GAC/B,kBAAC,GAAD,MACCtB,KAAKoa,wB,GAdkBla,aA4BjBC,gBARS,SAAA5C,GACtB,MAAO,CACL8c,UAAW9c,EAAMuuC,oBAAoBwB,0BAA0BjzB,cAIxC,SAAA5Z,GAAQ,OAAI,OAExBN,CAA6CktC,I,qBC2B7CE,G,YA7Db,WAAYrxC,GAAQ,IAAD,8BACjB,4CAAMA,KAEDqB,MAAQ,CACXmC,MAAO,MACPD,OAAQ,MACRo8B,QAAS,CACP2R,MAAO,CACLr9B,GAAI,aAENs9B,MAAO,CACLC,WAAY,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,QAG3DC,OAAQ,CACN,CACEtmC,KAAM,WACN1B,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,OAjBxB,E,kFAwBbyM,OAAOC,OAAO3S,MAAQ,MACxBiB,QAAQC,IAAI,4BACZZ,KAAKkJ,SAAS,CACZzJ,OAAQ,MACRC,MAAO,SAEA0S,OAAOC,OAAO3S,MAAQ,OAC/BiB,QAAQC,IAAI,6BACZZ,KAAKkJ,SAAS,CACZzJ,OAAQ,MACRC,MAAO,W,+BAMX,OACE,yBACEnB,UAAU,MACVF,MAAO,CAAEwR,WAAY,UAAWmJ,aAAc,SAE9C,yBAAKza,UAAU,OACb,yBAAKA,UAAU,eACb,kBAAC,KAAD,CACEs9B,QAAS77B,KAAKzC,MAAMs+B,QACpB8R,OAAQ3tC,KAAKzC,MAAMowC,OACnBhvC,KAAK,OACLe,MAAOM,KAAKzC,MAAMmC,MAClBD,OAAQO,KAAKzC,MAAMkC,gB,GArDTS,aCYlByF,I,OAAO,CACX,CACE0B,KAAM,SACNC,GAAI,IACJsmC,GAAI,IACJC,IAAK,MAEP,CACExmC,KAAM,SACNC,GAAI,IACJsmC,GAAI,IACJC,IAAK,MAEP,CACExmC,KAAM,SACNC,GAAI,KACJsmC,GAAI,KACJC,IAAK,KAEP,CACExmC,KAAM,SACNC,GAAI,KACJsmC,GAAI,KACJC,IAAK,MAEP,CACExmC,KAAM,SACNC,GAAI,KACJsmC,GAAI,KACJC,IAAK,MAEP,CACExmC,KAAM,SACNC,GAAI,KACJsmC,GAAI,IACJC,IAAK,QAIYC,G,iLAEjB,OACE,yBAAKvvC,UAAU,gBACb,kBAAC,KAAD,KACE,kBAAC,KAAD,CACEmB,MAAO,IACPD,OAAQ,IACRkG,KAAMA,GACN1G,OAAQ,CACNuI,IAAK,GACLC,MAAO,GACPE,OAAQ,EACRD,MAAO,KAGT,kBAAC,KAAD,CAAeM,OAAO,YACtB,kBAAC,KAAD,CAAOH,QAAQ,SACf,kBAAC,KAAD,MACA,kBAAC,KAAD,MACA,kBAAC,KAAD,MACA,kBAAC,KAAD,CACElJ,KAAK,WACLkJ,QAAQ,MACRI,KAAK,UACLD,OAAO,YAET,kBAAC,KAAD,CAAKH,QAAQ,KAAKkmC,QAAS,GAAI9lC,KAAK,YACpC,kBAAC,KAAD,CAAMtJ,KAAK,WAAWkJ,QAAQ,KAAKG,OAAO,mB,GA5BZE,iBCW3B8lC,G,YA5Db,WAAY9xC,GAAQ,IAAD,8BACjB,4CAAMA,KAEDqB,MAAQ,CACXkC,OAAQ,IACRC,MAAO,IACPm8B,QAAS,CACP2R,MAAO,CACLr9B,GAAI,aAENs9B,MAAO,CACLC,WAAY,CACV,aACA,SACA,cACA,YACA,eAINC,OAAQ,CACN,CACEtmC,KAAM,WACN1B,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,OAvBZ,E,kFA8BbyM,OAAOC,OAAO3S,MAAQ,MACxBiB,QAAQC,IAAI,4BACZZ,KAAKkJ,SAAS,CACZzJ,OAAQ,IACRC,MAAO,OAEA0S,OAAOC,OAAO3S,MAAQ,OAC/BiB,QAAQC,IAAI,6BACZZ,KAAKkJ,SAAS,CACZzJ,OAAQ,IACRC,MAAO,S,+BAMX,OACE,kBAAC,KAAD,CACEm8B,QAAS77B,KAAKzC,MAAMs+B,QACpB8R,OAAQ3tC,KAAKzC,MAAMowC,OACnBhvC,KAAK,MACLJ,UAAU,WACVkB,OAAQO,KAAKzC,MAAMkC,OACnBC,MAAOM,KAAKzC,MAAMmC,MAClBrB,MAAO,CAAEwR,WAAY,UAAWpQ,OAAQ,e,GAvDzBS,aCkDR+tC,G,YAlDb,WAAY/xC,GAAQ,IAAD,8BACjB,4CAAMA,KAEDqB,MAAQ,CACXmC,MAAO,MACPD,OAAQ,MACRo8B,QAAS,GACT8R,OAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,IACzBO,OAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,MARd,E,kFAab97B,OAAOC,OAAO3S,MAAQ,MACxBiB,QAAQC,IAAI,4BACZZ,KAAKkJ,SAAS,CACZzJ,OAAQ,MACRC,MAAO,SAEA0S,OAAOC,OAAO3S,MAAQ,OAC/BiB,QAAQC,IAAI,6BACZZ,KAAKkJ,SAAS,CACZzJ,OAAQ,MACRC,MAAO,W,+BAMX,OACE,yBACErB,MAAO,CACLoB,OAAQ,QACRoQ,WAAY,QACZmJ,aAAc,OACdzP,UAAW,SAGb,kBAAC,KAAD,CACEsyB,QAAS77B,KAAKzC,MAAMs+B,QACpB8R,OAAQ3tC,KAAKzC,MAAMowC,OACnBhvC,KAAK,QACLe,MAAOM,KAAKzC,MAAMmC,MAClBD,OAAQO,KAAKzC,MAAMkC,c,GA5CNS,aCIFiuC,G,iLAEjB,OACE,kBAACptC,GAAD,CAAeK,QAAM,GACnB,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,W,GAPoClB,aCDpCkuC,I,OAAgBC,KAAhBD,aACF71B,GAASC,KAAMD,OAoJN+1B,G,2MAjJb/wC,MAAQ,CACN8R,SAAS,EACTk/B,kBAAkB,G,EAGpB/+B,UAAY,WACV,EAAKtG,SAAS,CACZmG,SAAS,K,EAIboC,SAAW,SAAA3Q,GACTH,QAAQC,IAAIE,GACZ,EAAKoI,SAAS,CACZmG,SAAS,K,EAIbI,aAAe,SAAA3O,GACbH,QAAQC,IAAIE,GACZ,EAAKoI,SAAS,CACZmG,SAAS,K,+EAGGvO,GACdmM,KAAQuhC,KAAK,uBACb7tC,QAAQC,IAAI,QAASE,K,wCAELA,GAChBmM,KAAQuhC,KAAK,yBACb7tC,QAAQC,IAAI,oBAAqBE,K,+BAG1BiH,EAAOuY,GACd3f,QAAQC,IAAI,kBAAmBmH,GAC/BpH,QAAQC,IAAI,4BAA6B0f,K,2BAGtCvY,GACHpH,QAAQC,IAAI,SAAUmH,K,+BA0EtB,OACE,yBAAKxJ,UAAU,YACb,kBAACuO,GAAD,kBACA,kBAAC/L,GAAD,CAAe1C,MAAO,CAAEW,QAAS,SAC/B,kBAAC,KAAD,CAAQL,KAAK,WACV,IACD,kBAAC,IAAD,CAAMA,KAAK,WAFb,UAMA,kBAACyvC,GAAD,CACE7vC,UAAU,cACVkwC,SAAU,CAAExuB,OAAQ,SACpBA,OAAO,mBACP7P,YAAa,CAAC,aAAc,YAC5BC,SAAUrQ,KAAKqQ,SACfmF,KAAMxV,KAAKwV,OAEb,kBAAC,GAAD,CACEpF,YAAY,iBACZoD,SAAU,SAAAzL,GAAK,OAAIpH,QAAQC,IAAImH,IAC/B1J,MAAO,CAAEqB,MAAO,QAChBgvC,aAAW,KAIf,kBAAC79B,GAAD,CAAU0B,QAxFE,CACd,CACE3T,MAAO,YACP4T,UAAW,OACXb,QAAS,CACP,CACE7K,KAAM,MACNiB,MAAO,OAET,CACEjB,KAAM,MACNiB,MAAO,OAET,CACEjB,KAAM,UACNiB,MAAO,UACPsQ,SAAU,CACR,CACEvR,KAAM,QACNiB,MAAO,SAET,CACEjB,KAAM,QACNiB,MAAO,YAOfygC,SAAU,SAACzgC,EAAO2K,GAAR,OAAkD,IAA/BA,EAAOrL,KAAK2N,QAAQjN,IACjD6J,OAAQ,SAAC4hB,EAAG+L,GAAJ,OAAU/L,EAAEnsB,KAAK0B,OAASw2B,EAAEl4B,KAAK0B,QACzC4lC,eAAgB,CAAC,YAEnB,CACE/vC,MAAO,SACP4T,UAAW,UAEb,CACE5T,MAAO,gBACP4T,UAAW,WACXb,QAAS,CACP,CACE7K,KAAM,SACNiB,MAAO,UAET,CACEjB,KAAM,WACNiB,MAAO,aAGX6mC,gBAAgB,EAChBpG,SAAU,SAACzgC,EAAO2K,GAAR,OAAqD,IAAlCA,EAAOpE,QAAQ0G,QAAQjN,IACpD6J,OAAQ,SAAC4hB,EAAG+L,GAAJ,OAAU/L,EAAEllB,QAAQvF,OAASw2B,EAAEjxB,QAAQvF,QAC/C4lC,eAAgB,CAAC,UAAW,WAE9B,CACE/vC,MAAO,UACP4T,UAAW,YA8BiBnU,MAAO,CAAEqB,MAAO,OAAQT,OAAQ,c,GA5I7CgB,IAAMC,WCkDd2uC,I,wLAlDX,OACE,yBAAKtwC,UAAU,qBACb,kBAACwC,GAAD,CACE1C,MAAO,CAAE0B,eAAgB,eAAgBkvB,WAAY,SAErD,kBAAClzB,EAAD,CAAgBqC,GAAG,IACjB,kBAACgE,GAAD,CAAWY,SAAO,GAChB,yBAAK3E,MAAO,CAAEuB,QAAS,OAAQZ,QAAS,MAAOC,OAAQ,SACrD,kBAACqL,GAAD,0BAKN,kBAACvO,EAAD,CAAgBqC,GAAG,IACjB,kBAACgE,GAAD,CAAWY,SAAO,GAChB,yBAAK3E,MAAO,CAAEuB,QAAS,OAAQZ,QAAS,MAAOC,OAAQ,SACrD,kBAACqL,GAAD,6BAKN,kBAACvO,EAAD,CAAgBqC,GAAG,IACjB,kBAACgE,GAAD,CAAWY,SAAO,GAChB,yBAAK3E,MAAO,CAAEuB,QAAS,OAAQZ,QAAS,MAAOC,OAAQ,SACrD,kBAACqL,GAAD,yBAKN,kBAACvO,EAAD,CAAgBqC,GAAG,IACjB,kBAACgE,GAAD,CAAWY,SAAO,GAChB,yBAAK3E,MAAO,CAAEuB,QAAS,OAAQZ,QAAS,MAAOC,OAAQ,SACrD,kBAACqL,GAAD,2BAKN,kBAACvO,EAAD,CAAgBqC,GAAG,IACjB,kBAACgE,GAAD,CAAWY,SAAO,GAChB,yBAAK3E,MAAO,CAAEuB,QAAS,OAAQZ,QAAS,MAAOC,OAAQ,SACrD,kBAACqL,GAAD,0B,GA1CgBpK,cCqDjB4uC,I,wLAlDX,OACE,yBAAKvwC,UAAU,sBACb,kBAACwC,GAAD,CACE1C,MAAO,CAAE0B,eAAgB,eAAgBkvB,WAAY,SAErD,kBAAClzB,EAAD,CAAgBqC,GAAG,IACjB,kBAACgE,GAAD,CAAWY,SAAO,GAChB,yBAAK3E,MAAO,CAAEuB,QAAS,OAAQZ,QAAS,MAAOC,OAAQ,SACrD,kBAACqL,GAAD,0BAKN,kBAACvO,EAAD,CAAgBqC,GAAG,IACjB,kBAACgE,GAAD,CAAWY,SAAO,GAChB,yBAAK3E,MAAO,CAAEuB,QAAS,OAAQZ,QAAS,MAAOC,OAAQ,SACrD,kBAACqL,GAAD,6BAKN,kBAACvO,EAAD,CAAgBqC,GAAG,IACjB,kBAACgE,GAAD,CAAWY,SAAO,GAChB,yBAAK3E,MAAO,CAAEuB,QAAS,OAAQZ,QAAS,MAAOC,OAAQ,SACrD,kBAACqL,GAAD,yBAKN,kBAACvO,EAAD,CAAgBqC,GAAG,IACjB,kBAACgE,GAAD,CAAWY,SAAO,GAChB,yBAAK3E,MAAO,CAAEuB,QAAS,OAAQZ,QAAS,MAAOC,OAAQ,SACrD,kBAACqL,GAAD,2BAKN,kBAACvO,EAAD,CAAgBqC,GAAG,IACjB,kBAACgE,GAAD,CAAWY,SAAO,GAChB,yBAAK3E,MAAO,CAAEuB,QAAS,OAAQZ,QAAS,MAAOC,OAAQ,SACrD,kBAACqL,GAAD,0B,GA1CiBpK,cCIzBkT,GAAWC,KAAXD,OACF3N,GAAQ,CACZ2D,MAAO,MACPtK,SAAU,OACVY,MAAO,QACPD,OAAQ,OAEJsvC,G,YACJ,WAAY7yC,GAAQ,IAAD,8BACjB,4CAAMA,KAwCRsT,UAAY,WACV,EAAKtG,SAAS,CACZmG,SAAS,EACT/B,OAAQ,CACN0hC,gBAAiB,GACjBC,MAAO,GACPC,YAAa,GACbC,cAAe,GACfnmC,OAAQ,IAEVgmC,gBAAiB,GACjBI,qBAAsB,GACtBH,MAAO,GACPC,YAAa,GACbC,cAAe,GACfnmC,OAAQ,GACRkF,SAAU,GACVvP,KAAM,SA1DS,EA8DnB8S,SAAW,WACT,EAAKvI,SAAS,CAAEiG,SAAS,IACzBC,YAAW,WACT,EAAKlG,SAAS,CAAEiG,SAAS,EAAOE,SAAS,MACxC,MAlEc,EAqEnBI,aAAe,WACb,EAAKvG,SAAS,CACZmG,SAAS,EACT/B,OAAQ,CACN0hC,gBAAiB,GAEjBC,MAAO,GACPC,YAAa,GACbC,cAAe,GACfnmC,OAAQ,IAEVgmC,gBAAiB,GACjBI,qBAAsB,GACtBH,MAAO,GACPC,YAAa,GACbC,cAAe,GACfnmC,OAAQ,GACRkF,SAAU,GACVvP,KAAM,SAvFS,EA2FnB4V,aAAe,SAAClN,EAAMU,GACpBpH,QAAQC,IAAIyG,GACZ1G,QAAQC,IAAImH,GAGC,cAATV,IACF,EAAK6B,SAAS,CACZ8lC,gBAAiBjnC,EACjBqnC,qBAAsBrnC,IAGH,IAAjBA,EAAMgB,QACR,EAAKG,SAAS,CACZoE,OAAQ,CACN0hC,gBAAiB,GAEjBC,MAAO,EAAK1xC,MAAM+P,OAAO2hC,MACzBC,YAAa,EAAK3xC,MAAM+P,OAAO4hC,YAC/BC,cAAe,EAAK5xC,MAAM+P,OAAO6hC,cACjCnmC,OAAQ,EAAKzL,MAAM+P,OAAOtE,WAMrB,WAAT3B,IACF,EAAK6B,SAAS,CACZF,OAAQjB,IAIW,IAAjBA,EAAMgB,QACR,EAAKG,SAAS,CACZoE,OAAQ,CACN0hC,gBAAiB,EAAKzxC,MAAM+P,OAAO0hC,gBAEnCC,MAAO,EAAK1xC,MAAM+P,OAAO2hC,MACzBC,YAAa,EAAK3xC,MAAM+P,OAAO4hC,YAC/BC,cAAe,EAAK5xC,MAAM+P,OAAO6hC,cACjCnmC,OAAQ,QAlIC,EAyInB8E,aAAe,SAACC,EAAOC,GACrB,EAAK9E,SAAL,gBAAiB8E,EAAQD,EAAME,OAAOlG,QACtCgG,EAAMI,iBAFyB,MAGPJ,EAAME,OAAtB5G,EAHuB,EAGvBA,KAAMU,EAHiB,EAGjBA,MACVuF,EAAS,EAAK/P,MAAM+P,OAExB,OADA3M,QAAQC,IAAIyG,EAAO,SAAWU,GACtBV,GACN,IAAK,kBACHiG,EAAO0hC,gBACY,IAAjBjnC,EAAMgB,OACF,gCACAhB,EAAMgB,OAAS,EACf,8CACA,GACN,MAEF,IAAK,QACHuE,EAAO2hC,MACY,IAAjBlnC,EAAMgB,OACF,uBACAhB,EAAMgB,OAAS,EACf,mCACAhB,EAAMgB,OAAS,GACf,mDACA,GACN,MACF,IAAK,cACHuE,EAAO4hC,YAA+B,IAAjBnnC,EAAMgB,OAAe,uBAAyB,GACnE,MACF,IAAK,gBACHuE,EAAO6hC,cACY,IAAjBpnC,EAAMgB,OAAe,6BAA+B,GACtD,MACF,IAAK,SACHuE,EAAOtE,OACY,IAAjBjB,EAAMgB,OACF,wBACAhB,EAAMgB,OAAS,EACf,oCACA,GAOV,EAAKG,SAAL,cAAgBoE,UAASjG,EAAOU,KAvLf,EA6MnBo7B,iBAAmB,WACjBx+B,GAAI,MAAO,WAAY,eAAgB,GAAI,GAAI,IAAIW,MAAK,SAAAqD,GACtDhI,QAAQC,IAAI+H,EAAIhD,MAChB,IAAI0pC,EAAY1mC,EAAIhD,KAAKiD,QAAQw6B,WAAWzuB,KAAI,SAACjP,EAAMkP,GACrD,OACE,kBAAC,GAAD,CAAQ7M,MAAOrC,EAAKyH,KAAMzO,IAAKkW,GAC5BlP,EAAKyH,SAIZ,EAAKjE,SAAS,CACZmmC,kBAxNa,EAgOnB5gC,aAAe,SAAAV,GAEb,GADAA,EAAMI,iBAGkC,IAAtC,EAAK5Q,MAAMyxC,gBAAgBjmC,QACC,IAA5B,EAAKxL,MAAM0xC,MAAMlmC,QACiB,IAAlC,EAAKxL,MAAM2xC,YAAYnmC,QACa,IAApC,EAAKxL,MAAM4xC,cAAcpmC,QACI,IAA7B,EAAKxL,MAAMyL,OAAOD,OAElB,EAAKG,SAAS,CACZoE,OAAQ,CACN0hC,gBAAiB,iCAEjBC,MAAO,uBACPC,YAAa,6BACbC,cAAe,+BACfnmC,OAAQ,mCAGP,GACiC,IAAtC,EAAKzL,MAAMyxC,gBAAgBjmC,QACkB,IAA7C,EAAKxL,MAAM+P,OAAO0hC,gBAAgBjmC,OAElC,EAAKG,SAAS,CACZoE,OAAQ,CACN0hC,gBACE,EAAKzxC,MAAM+P,OAAO0hC,iBAClB,iCAEFC,MAAO,EAAK1xC,MAAM+P,OAAO2hC,MACzBC,YAAa,EAAK3xC,MAAM+P,OAAO4hC,YAC/BC,cAAe,EAAK5xC,MAAM+P,OAAO6hC,cACjCnmC,OAAQ,EAAKzL,MAAM+P,OAAOtE,eAGzB,GACuB,IAA5B,EAAKzL,MAAM0xC,MAAMlmC,QACkB,IAAnC,EAAKxL,MAAM+P,OAAO2hC,MAAMlmC,OAExB,EAAKG,SAAS,CACZoE,OAAQ,CACN0hC,gBAAiB,EAAKzxC,MAAM+P,OAAO0hC,gBAEnCC,MAAO,EAAK1xC,MAAM+P,OAAO2hC,OAAS,wBAClCC,YAAa,EAAK3xC,MAAM+P,OAAO4hC,YAC/BC,cAAe,EAAK5xC,MAAM+P,OAAO6hC,cACjCnmC,OAAQ,EAAKzL,MAAM+P,OAAOtE,eAGzB,GAC6B,IAAlC,EAAKzL,MAAM2xC,YAAYnmC,QACkB,IAAzC,EAAKxL,MAAM+P,OAAO4hC,YAAYnmC,OAE9B,EAAKG,SAAS,CACZoE,OAAQ,CACN0hC,gBAAiB,EAAKzxC,MAAM+P,OAAO0hC,gBAEnCC,MAAO,EAAK1xC,MAAM+P,OAAO2hC,MACzBC,YACE,EAAK3xC,MAAM+P,OAAO4hC,aAAe,6BACnCC,cAAe,EAAK5xC,MAAM+P,OAAO6hC,cACjCnmC,OAAQ,EAAKzL,MAAM+P,OAAOtE,eAGzB,GAC+B,IAApC,EAAKzL,MAAM4xC,cAAcpmC,QACkB,IAA3C,EAAKxL,MAAM+P,OAAO6hC,cAAcpmC,OAEhC,EAAKG,SAAS,CACZoE,OAAQ,CACN0hC,gBAAiB,EAAKzxC,MAAM+P,OAAO0hC,gBAEnCC,MAAO,EAAK1xC,MAAM+P,OAAO2hC,MACzBC,YAAa,EAAK3xC,MAAM+P,OAAO4hC,YAC/BC,cACE,EAAK5xC,MAAM+P,OAAO6hC,eAAiB,gCACrCnmC,OAAQ,EAAKzL,MAAM+P,OAAOtE,eAGzB,GAEwC,IAA7C,EAAKzL,MAAM+P,OAAO0hC,gBAAgBjmC,QACC,IAAnC,EAAKxL,MAAM+P,OAAO2hC,MAAMlmC,QACiB,IAAzC,EAAKxL,MAAM+P,OAAO4hC,YAAYnmC,QACa,IAA3C,EAAKxL,MAAM+P,OAAO6hC,cAAcpmC,QACI,IAApC,EAAKxL,MAAM+P,OAAOtE,OAAOD,OACzB,CAGA,GAFApI,QAAQC,IAAI,EAAKrD,MAAM+P,QAEC,SAApB,EAAK/P,MAAMoB,KAAiB,CAC9B,IAAMgH,EAAO,CACXwK,GAAI,EAAK5S,MAAM+xC,eACflO,cAAe,EAAK7jC,MAAMyxC,gBAE1BC,MAAO,EAAK1xC,MAAM0xC,MAClBC,YAAa,EAAK3xC,MAAM2xC,YACxBK,aAAc,EAAKhyC,MAAM4xC,cACzBnmC,OAAQ,EAAKzL,MAAMyL,QAErBrI,QAAQC,IAAI+E,GACZhB,GAAI,MAAO,WAAY,iBAAkB,GAAIgB,EAAM,IAChDL,MACC,SAAAqD,GACEhI,QAAQC,IAAI+H,EAAIhD,MACQ,uBAApBgD,EAAIhD,KAAKqD,QACXrI,QAAQC,IAAI,UACZ,EAAKoO,cAAcrG,EAAIhD,KAAKiD,QAAQvB,KAAK4F,WAEzCD,GAAa,UAAWrE,EAAIhD,KAAKsH,SACjC,EAAK/Q,MAAMgT,SACX,EAAKhG,SAAS,CAAEiG,SAAS,IACzB,EAAKjG,SAAS,CACZoE,OAAQ,CACN0hC,gBAAiB,GAEjBC,MAAO,GACPC,YAAa,GACbC,cAAe,GACfnmC,OAAQ,IAEVgmC,gBAAiB,GACjBI,qBAAsB,GACtBH,MAAO,GACPC,YAAa,GACbC,cAAe,GACfnmC,OAAQ,GACRkF,SAAU,KAEZkB,YAAW,WACT,EAAKlG,SAAS,CAAEiG,SAAS,EAAOE,SAAS,MACxC,SAGP,SAAA5J,GAIE9E,QAAQC,IAAI,YAAa6E,MAI5BD,OAAM,SAAAC,GAIL9E,QAAQC,IAAI6E,UAEX,CACL,IAAME,EAAO,CACXy7B,cAAe,EAAK7jC,MAAMyxC,gBAE1BC,MAAO,EAAK1xC,MAAM0xC,MAClBC,YAAa,EAAK3xC,MAAM2xC,YACxBK,aAAc,EAAKhyC,MAAM4xC,cACzBnmC,OAAQ,OAEVrI,QAAQC,IAAI+E,GACZhB,GAAI,OAAQ,WAAY,iBAAkB,GAAIgB,EAAM,IAAIL,MACtD,SAAAqD,GACEhI,QAAQC,IAAI+H,EAAIhD,MACQ,uBAApBgD,EAAIhD,KAAKqD,OACXrI,QAAQC,IAAI,QAEZoM,GAAa,UAAWrE,EAAIhD,KAAKsH,SACjC,EAAK/Q,MAAMgT,SACX,EAAKhG,SAAS,CAAEiG,SAAS,IACzB,EAAKjG,SAAS,CACZoE,OAAQ,CACN0hC,gBAAiB,GAEjBC,MAAO,GACPC,YAAa,GACbC,cAAe,GACfnmC,OAAQ,IAEVgmC,gBAAiB,GAEjBC,MAAO,GACPC,YAAa,GACbC,cAAe,GACfnmC,OAAQ,GACRomC,qBAAsB,GACtBlhC,SAAU,KAEZkB,YAAW,WACT,EAAKlG,SAAS,CAAEiG,SAAS,EAAOE,SAAS,MACxC,SAGP,SAAA5J,GAIE9E,QAAQC,IAAI,YAAa6E,MAO/B9E,QAAQC,IAAI,mBAvad,EAAKrD,MAAQ,CACX8R,SAAS,EACT/B,OAAQ,CACN0hC,gBAAiB,GACjBC,MAAO,GACPC,YAAa,GACbC,cAAe,GACfnmC,OAAQ,IAEVgmC,gBAAiB,GACjBC,MAAO,GACPC,YAAa,GACbC,cAAe,GACfnmC,OAAQ,MACRrK,KAAM,MACN2W,aAAc,GACd+5B,UAAW,GACXC,eAAgB,GAChBF,qBAAsB,GACtBI,gBAAiB,IArBF,E,uFAwBO7/B,GACxBhP,QAAQC,IAAI+O,GACZ3P,KAAKkJ,SAAS,CACZmG,QAASM,EAAUN,QACnBigC,eAAgB3/B,EAAUC,cAAcO,GACxC6+B,gBAAiBr/B,EAAUC,cAAcwxB,cAEzC6N,MAAOt/B,EAAUC,cAAcq/B,MAC/BC,YAAav/B,EAAUC,cAAcs/B,YACrCC,cAAex/B,EAAUC,cAAc2/B,aACvCvmC,OAAQ2G,EAAUC,cAAc5G,OAChComC,qBAAsBz/B,EAAUC,cAAcwxB,cAC9CoO,gBAAiB7/B,EAAUC,cAAcwF,UACzCzW,KAAMgR,EAAUhR,S,oCAqJL,IAAD,OACZgG,GAAI,MAAO,WAAY,UAAW,GAAI,GAAI,IAAIW,MAAK,SAAAqD,GAEjD,GADAhI,QAAQC,IAAI+H,EAAIhD,KAAKiD,QAAQ4I,OAAOzI,QAChCJ,EAAIhD,KAAKiD,QAAQ4I,OAAOzI,OAAS,EAAG,CACtCpI,QAAQC,IAAI,OACZ,IAAI0U,EAAe3M,EAAIhD,KAAKiD,QAAQ4I,OAAOmD,KAAI,SAACjP,EAAMkP,GACpD,OACE,kBAAC,GAAD,CAAQ7M,MAAOrC,EAAKyH,KAAMzO,IAAKkW,GAC5BlP,EAAK2B,SAIZ,EAAK6B,SAAS,CACZoM,uB,0CAuBNtV,KAAKmjC,qB,+BA+MG,IAAD,SACsBnjC,KAAKzC,MAA1B8R,EADD,EACCA,QAASF,EADV,EACUA,QACT7B,EAAWtN,KAAKzC,MAAhB+P,OAER,OACE,6BACE,kBAAChB,GAAD,CACEpO,QAAS8B,KAAKwP,UACdnR,MAAO,CACLwR,WAAY,UACZzG,MAAO,QACP0G,OAAQ,OACRpQ,MAAO,QACPlB,WAAY,UAPhB,oBAYA,kBAAC,KAAD,CACEkB,MAAM,QACN2P,QAASA,EACTU,UAAU,EACVyF,KAAMxV,KAAKyR,SACXzB,SAAUhQ,KAAKyP,aACf7Q,MACE,kBAACgO,GAAD,KACE,uBACEvO,MAAO,CACL+K,MAAO,UAGY,SAApBpJ,KAAKzC,MAAMoB,KAAkB,QAAU,oBAE1C,kBAAC,IAAD,CACEA,KAAK,eACLT,QAAS8B,KAAKyP,aACdpR,MAAO,CACL+K,MAAO,YAKf6G,OAAQ,CACN,kBAAC,KAAD,CAAQvR,IAAI,OAAOR,QAAS8B,KAAKyP,cAAjC,UAGA,kBAACnD,GAAD,CACE5N,IAAI,SACJyQ,QAASA,EACTjR,QAAS,SAAA4C,GAAC,OAAI,EAAK2N,aAAa3N,IAChCzC,MAAO,CAAEwR,WAAY,UAAWzG,MAAO,QAAS0G,OAAQ,SAEnC,SAApB9P,KAAKzC,MAAMoB,KAAkB,OAAS,UAI3C,kBAAC6N,GAAD,KACE,yBAAKjO,UAAU,iBACb,2BAAO2R,IAAI,QAAQ3R,UAAU,SAA7B,mBAIA,kBAAC,KAAD,CACEkX,YAAU,EACVpX,MAAO,CAAEqB,MAAO,KAChByQ,GAAG,kBACH9I,KAAK,kBACL+I,YAAY,gBACZC,SAAU,SAAAtI,GAAK,OAAI,EAAKwM,aAAa,YAAaxM,IAClDA,MAAO/H,KAAKzC,MAAM6xC,sBAEjBpvC,KAAKzC,MAAM8xC,WAEb/hC,EAAO0hC,gBAAgBjmC,OAAS,GAC/B,yBAAK1K,MAAOoH,IAAQ6H,EAAO0hC,iBAG7B,yBAAK3wC,MAAO,CAAEoB,OAAQ,WAGxB,yBAAKlB,UAAU,iBACb,2BAAO2R,IAAI,QAAQ3R,UAAU,SAA7B,UAIA,kBAAC,KAAD,CACE4R,GAAG,QACH9I,KAAK,QACL+I,YAAY,mBACZC,SAAUrQ,KAAK8N,aACf/F,MAAO/H,KAAKzC,MAAM0xC,QAEnB3hC,EAAO2hC,MAAMlmC,OAAS,GACrB,yBAAK1K,MAAOoH,IAAQ6H,EAAO2hC,OAE7B,yBAAK5wC,MAAO,CAAEoB,OAAQ,WAIxB,yBAAKlB,UAAU,iBACb,2BAAO2R,IAAI,cAAc3R,UAAU,SAAnC,gBAIA,kBAAC,KAAD,CACE4R,GAAG,cACH9I,KAAK,cACL+I,YAAY,wBACZC,SAAUrQ,KAAK8N,aACf/F,MAAO/H,KAAKzC,MAAM2xC,cAEnB5hC,EAAO4hC,YAAYnmC,OAAS,GAC3B,yBAAK1K,MAAOoH,IAAQ6H,EAAO4hC,aAE7B,yBAAK7wC,MAAO,CAAEoB,OAAQ,WAIxB,yBAAKlB,UAAU,iBACb,2BAAO2R,IAAI,YAAY3R,UAAU,SAAjC,kBAIA,kBAAC,KAAD,CACE4R,GAAG,gBACH9I,KAAK,gBACL+I,YAAY,0BACZC,SAAUrQ,KAAK8N,aACf/F,MAAO/H,KAAKzC,MAAM4xC,gBAEnB7hC,EAAO6hC,cAAcpmC,OAAS,GAC7B,yBAAK1K,MAAOoH,IAAQ6H,EAAO6hC,eAE7B,yBAAK9wC,MAAO,CAAEoB,OAAQ,WAGxB,yBAAKlB,UAAU,gBAAgBo9B,QAAM,GACnC,2BAAOzrB,IAAI,SAAS3R,UAAU,SAA9B,WAGA,kBAAC,KAAD,CACE4R,GAAG,SACH9I,KAAK,SACL+I,YAAY,mBACZ/R,MAAO,CAAEqB,MAAO,KAChB67B,aAAa,MACbxzB,MAAM,MACNsI,SAAU,SAAAtI,GAAK,OAAI,EAAKwM,aAAa,SAAUxM,IAC/CuI,UAAQ,GAER,kBAAC,GAAD,CAAQvI,MAAM,QAAd,QACA,kBAAC,GAAD,CAAQA,MAAM,QAAd,QACA,kBAAC,GAAD,CAAQA,MAAM,WAAd,YAEDuF,EAAOtE,OAAOD,OAAS,GACtB,yBAAK1K,MAAOoH,IAAQ6H,EAAOtE,QAE7B,yBAAK3K,MAAO,CAAEoB,OAAQ,kB,GA3kBTS,aAqmBZC,gBAlBS,SAAA5C,GAEtB,MAAO,CACL8R,QAAS9R,EAAMgT,mBAAmBC,iBAAiBnB,QACnD1Q,KAAMpB,EAAMgT,mBAAmBC,iBAAiB7R,KAChDiR,cAAerS,EAAMgT,mBAAmBC,iBAAiBZ,kBAIlC,SAAAnP,GACzB,MAAO,CACLgvC,0BAA2B,WACzBhvC,EAAS,CAAE9B,KAAM0M,KACjB1K,QAAQC,IAAI,yBAKHT,CAA6C4uC,ICnnBtD1wC,GAAQ,CACZS,SAAU,SACV2R,WAAY,MACZC,UAAW,OACX1R,QAAS,QAGU0wC,G,2MACnBC,mBAAqB,WACnB,EAAKzzC,MAAMgT,U,wEAGX,OACE,kBAACnO,GAAD,CAAeG,QAAM,EAACG,aAAW,GAC/B,kBAAC,IAAD,CAAWhD,MAAOA,IAAlB,iBACA,yBAAKA,MAAO,CAAEuB,QAAS,SAMrB,kBAAC,GAAD,CAAiBsP,OAAQlP,KAAK2vC,2B,GAdOzvC,aCHzC0vC,G,2MACJryC,MAAQ,CACNsyC,aAAc,GACdhxC,KAAM,S,EAGR8wC,mBAAqB,WACnBhrC,GAAI,MAAO,WAAY,kBAAmB,GAAI,GAAI,IAAIW,MAAK,SAAAqD,GACzDhI,QAAQC,IAAI+H,EAAIhD,MAChB,EAAKuD,SAAS,CACZ2mC,aAAclnC,EAAIhD,KAAKiD,QAAQknC,oB,+EAIrB3/B,GAAK,IAAD,OAClBxP,QAAQC,IAAIuP,GAEZxL,GAAI,SAAU,WAAY,iBAAkB,GAAI,GAAIwL,GAAI7K,MAAK,SAAAqD,GAC3DhI,QAAQC,IAAI+H,EAAIhD,MAChB,EAAKgqC,qBACL3iC,GAAa,UAAWrE,EAAIhD,KAAKsH,YAEnCtM,QAAQC,IAAIZ,KAAKzC,MAAM4S,M,0CAIvBnQ,KAAK2vC,uB,+BAEG,IAAD,OACDp9B,EAAU,CACd,CACE3T,MAAO,kBACP4T,UAAW,gBACX9T,IAAK,kBACLgB,MAAO,MAET,CACEd,MAAO,QACP4T,UAAW,QACX9T,IAAK,QACLgB,MAAO,MAET,CACEd,MAAO,cACP4T,UAAW,cACX9T,IAAK,cACLgB,MAAO,MAGT,CACEd,MAAO,gBACP4T,UAAW,eACX9T,IAAK,gBACLgB,MAAO,MAET,CACEd,MAAO,oBACP4T,UAAW,kBACX9T,IAAK,oBACLgB,MAAO,MAET,CACEd,MAAO,qBACP4T,UAAW,mBACX9T,IAAK,qBACLgB,MAAO,MAGT,CACEd,MAAO,qBACP4T,UAAW,mBACX9T,IAAK,qBACLgB,MAAO,MAET,CACEd,MAAO,SACP4T,UAAW,SACX9T,IAAK,SACLgB,MAAO,KACP+S,OAAQ,SAAAzJ,GAAM,OACZ,8BAEI,kBAAC,KAAD,CACEI,MACY,QAAVJ,EACI,QACU,WAAVA,EACA,SACU,OAAVA,EACA,SACA,OAGLA,MAOX,CACEpK,MAAO,gBACPF,IAAK,SACLgB,MAAO,KACP+S,OAAQ,SAAC3L,GAAD,IAAO4L,EAAP,uDAAgB,EAAKnV,MAAMsyC,aAA3B,OACN,8BACE,2BACE,kBAAC,IAAD,CACElxC,KAAK,OACLN,MAAO,CAAES,SAAU,SACnBZ,QAAS,EAAKhC,MAAM6zC,4BAA4Bn9B,KAC9C,EACAF,MAIN,kBAAC,KAAD,CAAS/T,KAAK,aACd,2BACE,kBAAC,KAAD,CACEC,MAAM,wCACNiU,KACE,kBAAC,IAAD,CAAMlU,KAAK,oBAAoBN,MAAO,CAAE+K,MAAO,SAEjD0J,UAAW,EAAKC,gBAAgBH,KAAK,EAAMF,EAAOvC,KAElD,uBAAG6C,KAAK,KACN,kBAAC,IAAD,CACErU,KAAK,SACLN,MAAO,CAAE+K,MAAO,MAAOtK,SAAU,kBAUjD,OACE,kBAAC+R,GAAD,CACEK,WAAS,EACT7S,MAAO,CAAEqB,MAAO,UAChBd,MAAO,kBAAM,kBAAC,GAAD,CAAmBsQ,OAAQ,EAAKygC,sBAC7CpxC,UAAU,mBACVgU,QAASA,EACTU,WAAYjT,KAAKzC,MAAMsyC,aAEvBn+B,WAAY,CAAEwB,gBAAiB,GAC/BrU,KAAMmB,KAAKzC,MAAMsB,W,GApJQqB,aAoKlBC,eAAQ,MAXI,SAAAM,GACzB,MAAO,CAELsvC,4BAA6B,SAAAr9B,GAE3BjS,EAAS,CAAE9B,KAAMyM,GAAqB+H,QAAST,IAC/C/R,QAAQC,IAAI8R,OAKHvS,CAAkCyvC,IChKzCx8B,GAAWC,KAAXD,OACF3N,GAAQ,CACZ2D,MAAO,MACPtK,SAAU,OACVY,MAAO,QACPD,OAAQ,OAGJuwC,G,YACJ,WAAY9zC,GAAQ,IAAD,8BACjB,4CAAMA,KA8CR+zC,SAAW,SAACC,EAAK5tB,GACf,IAAI6tB,EAAanwB,KAAOkwB,GACrBvf,IAAIrO,EAAK,QACTrC,OAAO,cACNmwB,EAAQpwB,OAASC,OAAO,cAC5Btf,QAAQC,IAAIuvC,GACZxvC,QAAQC,IAAIwvC,GACRD,IAAeC,IACjBzvC,QAAQC,IAAI,QACZ,EAAKsI,SAAS,CACZmnC,gBAAgB,MAzDH,EA8DnB7gC,UAAY,WACV,EAAKtG,SAAS,CACZmG,SAAS,EACT/B,OAAQ,CACN0hC,gBAAiB,GAEjBsB,aAAc,GACdC,SAAU,GACVvnC,OAAQ,IAEVgmC,gBAAiB,GACjBI,qBAAsB,GACtBkB,aAAc,GACdC,SAAU,EACVvnC,OAAQ,aA5EO,EA+EnByI,SAAW,WACT,EAAKvI,SAAS,CACZmG,SAAS,EACT/B,OAAQ,CACN0hC,gBAAiB,GAEjBsB,aAAc,GACdC,SAAU,GACVvnC,OAAQ,IAEVgmC,gBAAiB,GACjBwB,oBAAqB,GACrBF,aAAc,GACdC,SAAU,GACVvnC,OAAQ,aA7FO,EAiGnByG,aAAe,WACW,SAApB,EAAKlS,MAAMoB,MACb,EAAKzC,MAAMu0C,oCAEb,EAAKvnC,SAAS,CACZmG,SAAS,EACT/B,OAAQ,CACN0hC,gBAAiB,GAEjBsB,aAAc,GACdC,SAAU,GACVvnC,OAAQ,IAEVgmC,gBAAiB,GACjBwB,oBAAqB,GACrBF,aAAc,GACdC,SAAU,GACVvnC,OAAQ,UACRkF,SAAU,MAnHK,EAsHnBqG,aAAe,SAAClN,EAAMU,GACpBpH,QAAQC,IAAIyG,GACZ1G,QAAQC,IAAImH,GAIC,cAATV,IACF,EAAK6B,SAAS,CACZ8lC,gBAAiBjnC,EACjBqnC,qBAAsBrnC,IAGH,IAAjBA,EAAMgB,QACR,EAAKG,SAAS,CACZoE,OAAQ,CACN0hC,gBAAiB,GAEjBsB,aAAc,EAAK/yC,MAAM+P,OAAOgjC,aAChCC,SAAU,EAAKhzC,MAAM+P,OAAOijC,SAC5BvnC,OAAQ,EAAKzL,MAAM+P,OAAOtE,WAMrB,WAAT3B,IACF,EAAK6B,SAAS,CACZF,OAAQjB,IAIW,IAAjBA,EAAMgB,QACR,EAAKG,SAAS,CACZoE,OAAQ,CACN0hC,gBAAiB,EAAKzxC,MAAM+P,OAAO0hC,gBAEnCsB,aAAc,EAAK/yC,MAAM+P,OAAOgjC,aAChCC,SAAU,EAAKhzC,MAAM+P,OAAOijC,SAC5BvnC,OAAQ,QA5JC,EAmKnB8E,aAAe,SAACC,EAAOC,GACrB,EAAK9E,SAAL,gBAAiB8E,EAAQD,EAAME,OAAOlG,QACtCgG,EAAMI,iBAFyB,MAGPJ,EAAME,OAAtB5G,EAHuB,EAGvBA,KAAMU,EAHiB,EAGjBA,MACVuF,EAAS,EAAK/P,MAAM+P,OAExB,OADA3M,QAAQC,IAAIyG,EAAO,SAAWU,GACtBV,GACN,IAAK,kBACHiG,EAAO0hC,gBACY,IAAjBjnC,EAAMgB,OACF,gCACAhB,EAAMgB,OAAS,EACf,8CACA,GACN,MAEF,IAAK,eACHuE,EAAOgjC,aACY,IAAjBvoC,EAAMgB,OACF,8BACAhB,EAAMgB,OAAS,EACf,0CACAhB,EAAMgB,OAAS,GACf,0DACA,GACN,MAIF,IAAK,SACHuE,EAAOtE,OACY,IAAjBjB,EAAMgB,OACF,wBACAhB,EAAMgB,OAAS,EACf,oCACA,GAOV,EAAKG,SAAL,cAAgBoE,UAASjG,EAAOU,KA7Mf,EAkOnBo7B,iBAAmB,WACjBx+B,GAAI,MAAO,WAAY,eAAgB,GAAI,GAAI,IAAIW,MAAK,SAAAqD,GACtDhI,QAAQC,IAAI+H,EAAIhD,MAChB,IAAI0pC,EAAY1mC,EAAIhD,KAAKiD,QAAQw6B,WAAWzuB,KAAI,SAACjP,EAAMkP,GACrD,OACE,kBAAC,GAAD,CAAQ7M,MAAOrC,EAAKyH,KAAMzO,IAAKkW,GAC5BlP,EAAKyH,SAIZ,EAAKjE,SAAS,CACZmmC,kBA7Oa,EAsPnB5gC,aAAe,SAAAV,GAEb,GADAA,EAAMI,iBAGkC,IAAtC,EAAK5Q,MAAMyxC,gBAAgBjmC,QACQ,IAAnC,EAAKxL,MAAM+yC,aAAavnC,QACO,IAA/B,EAAKxL,MAAMgzC,SAASxnC,QACS,IAA7B,EAAKxL,MAAMyL,OAAOD,OAElB,EAAKG,SAAS,CACZoE,OAAQ,CACN0hC,gBAAiB,iCACjBsB,aAAc,8BACdC,SAAU,0BACVvnC,OAAQ,mCAGP,GACiC,IAAtC,EAAKzL,MAAMyxC,gBAAgBjmC,QACkB,IAA7C,EAAKxL,MAAM+P,OAAO0hC,gBAAgBjmC,OAElC,EAAKG,SAAS,CACZoE,OAAQ,CACN0hC,gBACE,EAAKzxC,MAAM+P,OAAO0hC,iBAClB,iCAEFsB,aAAc,EAAK/yC,MAAM+P,OAAOgjC,aAChCC,SAAU,EAAKhzC,MAAM+P,OAAOijC,SAC5BvnC,OAAQ,EAAKzL,MAAM+P,OAAOtE,eAGzB,GAC8B,IAAnC,EAAKzL,MAAM+yC,aAAavnC,QACkB,IAA1C,EAAKxL,MAAM+P,OAAOgjC,aAAavnC,OAE/B,EAAKG,SAAS,CACZoE,OAAQ,CACN0hC,gBAAiB,EAAKzxC,MAAM+P,OAAO0hC,gBAEnCsB,aACE,EAAK/yC,MAAM+P,OAAOgjC,cAAgB,+BACpCC,SAAU,EAAKhzC,MAAM+P,OAAOijC,SAC5BvnC,OAAQ,EAAKzL,MAAM+P,OAAOtE,eAGzB,GAC0B,IAA/B,EAAKzL,MAAMgzC,SAASxnC,QACkB,IAAtC,EAAKxL,MAAM+P,OAAOijC,SAASxnC,OAE3B,EAAKG,SAAS,CACZoE,OAAQ,CACN0hC,gBAAiB,EAAKzxC,MAAM+P,OAAO0hC,gBAEnCsB,aAAc,EAAK/yC,MAAM+P,OAAOgjC,aAChCC,SAAU,EAAKhzC,MAAM+P,OAAOijC,UAAY,0BACxCvnC,OAAQ,EAAKzL,MAAM+P,OAAOtE,eAGzB,GACwB,IAA7B,EAAKzL,MAAMyL,OAAOD,QACkB,IAApC,EAAKxL,MAAM+P,OAAOtE,OAAOD,OAEzB,EAAKG,SAAS,CACZoE,OAAQ,CACN0hC,gBAAiB,EAAKzxC,MAAM+P,OAAO0hC,gBAEnCsB,aAAc,EAAK/yC,MAAM+P,OAAOgjC,aAChCC,SAAU,EAAKhzC,MAAM+P,OAAOijC,SAC5BpB,cAAe,EAAK5xC,MAAM+P,OAAO6hC,cACjCnmC,OAAQ,EAAKzL,MAAM+P,OAAOtE,QAAU,kCAGnC,GAEwC,IAA7C,EAAKzL,MAAM+P,OAAO0hC,gBAAgBjmC,QACQ,IAA1C,EAAKxL,MAAM+P,OAAOgjC,aAAavnC,QACO,IAAtC,EAAKxL,MAAM+P,OAAOijC,SAASxnC,QACS,IAApC,EAAKxL,MAAM+P,OAAOtE,OAAOD,OACzB,CAGA,GAFApI,QAAQC,IAAI,EAAKrD,MAAM+P,QAEC,SAApB,EAAK/P,MAAMoB,KAAiB,CAC9BgC,QAAQC,IAAIof,KAAO,EAAKziB,MAAMmzC,YAAYzwB,OAAO,eACjDtf,QAAQC,IAAI,EAAKrD,MAAMmzC,YACvB,IAAM/qC,EAAO,CACXwK,GAAI,EAAK5S,MAAMozC,uBACfvP,cAAe,EAAK7jC,MAAMyxC,gBAC1B5Q,KAAM,EAAK7gC,MAAMmzC,WACjBH,SAAU,EAAKhzC,MAAMgzC,SACrBK,YAAa,EAAKrzC,MAAM+yC,aACxBtnC,OAAQ,EAAKzL,MAAMyL,QAErBrI,QAAQC,IAAI+E,GACZhB,GAAI,MAAO,WAAY,0BAA2B,GAAIgB,EAAM,IACzDL,MACC,SAAAqD,GACEhI,QAAQC,IAAI+H,EAAIhD,MACQ,uBAApBgD,EAAIhD,KAAKqD,QACXrI,QAAQC,IAAI,UACZ,EAAKoO,cAAcrG,EAAIhD,KAAKiD,QAAQvB,KAAK4F,WAEzCD,GAAa,UAAWrE,EAAIhD,KAAKsH,SACjC,EAAK/Q,MAAMgT,SACX,EAAKhG,SAAS,CAAEiG,SAAS,IACzB,EAAKjG,SAAS,CACZoE,OAAQ,CACN0hC,gBAAiB,GAEjBsB,aAAc,GACdC,SAAU,GACVvnC,OAAQ,IAEVgmC,gBAAiB,GACjBI,qBAAsB,GACtBzwC,KAAM,MACN2xC,aAAc,GACdC,SAAU,GACVvnC,OAAQ,UACRkF,SAAU,KAEZkB,YAAW,WACT,EAAKlG,SAAS,CAAEiG,SAAS,EAAOE,SAAS,MACxC,SAGP,SAAA5J,GAIE9E,QAAQC,IAAI,YAAa6E,MAI5BD,OAAM,SAAAC,GAIL9E,QAAQC,IAAI6E,UAEX,CACL,IAAME,EAAO,CACXy7B,cAAe,EAAK7jC,MAAMyxC,gBAC1B5Q,KAAMpe,OAASC,OAAO,cACtBswB,SAAU,EAAKhzC,MAAMgzC,SACrBK,YAAa,EAAKrzC,MAAM+yC,aACxBtnC,OAAQ,EAAKzL,MAAMyL,QAErBrI,QAAQC,IAAI+E,GACZhB,GAAI,OAAQ,WAAY,0BAA2B,GAAIgB,EAAM,IAAIL,MAC/D,SAAAqD,GACEhI,QAAQC,IAAI+H,EAAIhD,MACQ,uBAApBgD,EAAIhD,KAAKqD,OACXrI,QAAQC,IAAI,QAEZoM,GAAa,UAAWrE,EAAIhD,KAAKsH,SACjC,EAAK/Q,MAAMgT,SACX,EAAKhG,SAAS,CAAEiG,SAAS,IACzB,EAAKjG,SAAS,CACZoE,OAAQ,CACN0hC,gBAAiB,GACjBsB,aAAc,GACdC,SAAU,GACVvnC,OAAQ,IAEVgmC,gBAAiB,GACjBwB,oBAAqB,GACrBF,aAAc,GACdC,SAAU,GACVvnC,OAAQ,UACRkF,SAAU,GACVvP,KAAM,QAERyQ,YAAW,WACT,EAAKlG,SAAS,CAAEiG,SAAS,EAAOE,SAAS,MACxC,SAGP,SAAA5J,GAIE9E,QAAQC,IAAI,YAAa6E,MAO/B9E,QAAQC,IAAI,mBAhbd,EAAKrD,MAAQ,CACX8R,SAAS,EACT/B,OAAQ,CACN0hC,gBAAiB,GAEjBsB,aAAc,GACdC,SAAU,GACVvnC,OAAQ,IAEVgmC,gBAAiB,GACjBsB,aAAc,GACdC,SAAU,EACVvnC,OAAQ,UACRrK,KAAM,MACN2W,aAAc,GACd+5B,UAAW,GACXsB,uBAAwB,GACxBvB,qBAAsB,GACtBI,gBAAiB,GACjBkB,WAAY,GACZL,gBAAgB,GAvBD,E,uFA0BO1gC,GACxBhP,QAAQC,IAAI+O,GAEZ3P,KAAKkJ,SAAS,CACZmG,QAASM,EAAUN,QACnBshC,uBAAwBhhC,EAAUC,cAAcO,GAChD6+B,gBAAiBr/B,EAAUC,cAAcwxB,cACzCkP,aAAc3gC,EAAUC,cAAcghC,YACtCL,SAAU5gC,EAAUC,cAAc2gC,SAClCvnC,OAAQ2G,EAAUC,cAAc5G,OAChComC,qBAAsBz/B,EAAUC,cAAcwxB,cAC9CoO,gBAAiB7/B,EAAUC,cAAcwF,UACzCs7B,WAAY/gC,EAAUC,cAAcwuB,KACpCz/B,KAAMgR,EAAUhR,OAElBgC,QAAQC,IAAI+O,EAAUC,cAAcwuB,MACpCp+B,KAAKiwC,SACHtgC,EAAUC,cAAcwuB,KACxBzuB,EAAUC,cAAcghC,e,oCAmKb,IAAD,OACZjsC,GAAI,MAAO,WAAY,UAAW,GAAI,GAAI,IAAIW,MAAK,SAAAqD,GAEjD,GADAhI,QAAQC,IAAI+H,EAAIhD,KAAKiD,QAAQ4I,OAAOzI,QAChCJ,EAAIhD,KAAKiD,QAAQ4I,OAAOzI,OAAS,EAAG,CACtCpI,QAAQC,IAAI,OACZ,IAAI0U,EAAe3M,EAAIhD,KAAKiD,QAAQ4I,OAAOmD,KAAI,SAACjP,EAAMkP,GACpD,OACE,kBAAC,GAAD,CAAQ7M,MAAOrC,EAAKyH,KAAMzO,IAAKkW,GAC5BlP,EAAK2B,SAIZ,EAAK6B,SAAS,CACZoM,uB,0CAuBN3U,QAAQC,IAAIof,OAASC,OAAO,eAC5BjgB,KAAKmjC,qB,+BAmMG,IAAD,SACsBnjC,KAAKzC,MAA1B8R,EADD,EACCA,QAASF,EADV,EACUA,QADV,EAEsBnP,KAAKzC,MAA1B+P,EAFD,EAECA,OAAQijC,EAFT,EAESA,SAEhB,OACE,6BACE,kBAACjkC,GAAD,CACEpO,QAAS8B,KAAKwP,UACdnR,MAAO,CACLwR,WAAY,UACZzG,MAAO,QACP0G,OAAQ,OACRpQ,MAAO,QACPlB,WAAY,UAPhB,oBAYA,kBAAC,KAAD,CACEkB,MAAM,QACN2P,QAASA,EACTU,UAAU,EACVyF,KAAMxV,KAAKyR,SACXzB,SAAUhQ,KAAKyP,aACf7Q,MACE,kBAACgO,GAAD,KACE,uBACEvO,MAAO,CACL+K,MAAO,UAGY,SAApBpJ,KAAKzC,MAAMoB,KAAkB,QAAU,oBAE1C,kBAAC,IAAD,CACEA,KAAK,eACLT,QAAS8B,KAAKyP,aACdpR,MAAO,CACL+K,MAAO,YAKf6G,OAAQ,CACN,kBAAC,KAAD,CAAQvR,IAAI,OAAOR,QAAS8B,KAAKyP,cAAjC,UAGA,kBAACnD,GAAD,CACE5N,IAAI,SACJyQ,QAASA,EACTjR,QAAS,SAAA4C,GAAC,OAAI,EAAK2N,aAAa3N,IAChCzC,MAAO,CAAEwR,WAAY,UAAWzG,MAAO,QAAS0G,OAAQ,SAEnC,SAApB9P,KAAKzC,MAAMoB,KAAkB,OAAS,UAI3C,kBAAC6N,GAAD,KACE,yBAAKjO,UAAU,iBACb,2BAAO2R,IAAI,QAAQ3R,UAAU,SAA7B,mBAIA,kBAAC,KAAD,CACEkX,YAAU,EACVpX,MAAO,CAAEqB,MAAO,KAChByQ,GAAG,kBACH9I,KAAK,kBACL+I,YAAY,gBACZC,SAAU,SAAAtI,GAAK,OAAI,EAAKwM,aAAa,YAAaxM,IAClDA,MAAO/H,KAAKzC,MAAM6xC,sBAEjBpvC,KAAKzC,MAAM8xC,WAEb/hC,EAAO0hC,gBAAgBjmC,OAAS,GAC/B,yBAAK1K,MAAOoH,IAAQ6H,EAAO0hC,iBAG7B,yBAAK3wC,MAAO,CAAEoB,OAAQ,WAwBxB,yBAAKlB,UAAU,iBACb,2BAAO2R,IAAI,eAAe3R,UAAU,SAApC,iBAIA,kBAAC,KAAD,CACE4R,GAAG,eACH9I,KAAK,eACL+I,YAAY,iBACZC,SAAUrQ,KAAK8N,aACf/F,MAAO/H,KAAKzC,MAAM+yC,eAEnBhjC,EAAOgjC,aAAavnC,OAAS,GAC5B,yBAAK1K,MAAOoH,IAAQ6H,EAAOgjC,cAE7B,yBAAKjyC,MAAO,CAAEoB,OAAQ,WAIxB,yBAAKlB,UAAU,iBACb,2BAAO2R,IAAI,WAAW3R,UAAU,SAAhC,aAIA,kBAAC,KAAD,CACE4R,GAAG,WACH9I,KAAK,WACL+I,YAAY,qBACZrI,MAAOwoC,EACPlgC,SAAUrQ,KAAK8N,eAGhBR,EAAOijC,SAASxnC,OAAS,GACxB,yBAAK1K,MAAOoH,IAAQ6H,EAAOijC,UAE7B,yBAAKlyC,MAAO,CAAEoB,OAAQ,kB,GAhkBES,aAknBvBC,gBAlBS,SAAA5C,GAEtB,MAAO,CACL8R,QAAS9R,EAAMgT,mBAAmBC,iBAAiBnB,QACnD1Q,KAAMpB,EAAMgT,mBAAmBC,iBAAiB7R,KAChDiR,cAAerS,EAAMgT,mBAAmBC,iBAAiBZ,kBAIlC,SAAAnP,GACzB,MAAO,CACLgwC,kCAAmC,WACjChwC,EAAS,CAAE9B,KAAM0M,KACjB1K,QAAQC,IAAI,yBAKHT,CAGb6vC,ICroBI3xC,GAAQ,CACZS,SAAU,SACV2R,WAAY,MACZC,UAAW,OACX1R,QAAS,QAGU6xC,G,2MACnBlB,mBAAqB,WACnB,EAAKzzC,MAAMgT,U,wEAGX,OACE,kBAACnO,GAAD,CAAeG,QAAM,EAACG,aAAW,GAC/B,kBAAC,IAAD,CAAWhD,MAAOA,IAAlB,0BACA,yBAAKA,MAAO,CAAEuB,QAAS,SAMrB,kBAAC,GAAD,CAAyBsP,OAAQlP,KAAK2vC,2B,GAdOzvC,aCCjD4wC,G,2MACJvzC,MAAQ,CACNsyC,aAAc,GACdhxC,KAAM,S,EAGRkyC,2BAA6B,WAC3BpsC,GAAI,MAAO,WAAY,2BAA4B,GAAI,GAAI,IAAIW,MAAK,SAAAqD,GAClEhI,QAAQC,IAAI+H,EAAIhD,KAAKiD,QAAQooC,uBAC7B,EAAK9nC,SAAS,CACZ2mC,aAAclnC,EAAIhD,KAAKiD,QAAQooC,4B,EAqBrCf,SAAW,SAACC,EAAK5tB,GACf,IAAI6tB,EAAanwB,KAAOkwB,GACrBvf,IAAIrO,EAAK,QACTrC,OAAO,cAEV,OADmBD,KAAOmwB,EAAY,cAAcc,W,+EArBtC9gC,GAAK,IAAD,OAClBxP,QAAQC,IAAIuP,GAEZxL,GAAI,SAAU,WAAY,0BAA2B,GAAI,GAAIwL,GAAI7K,MAC/D,SAAAqD,GACEhI,QAAQC,IAAI+H,EAAIhD,MAChB,EAAKorC,6BACL/jC,GAAa,UAAWrE,EAAIhD,KAAKsH,YAGrCtM,QAAQC,IAAIZ,KAAKzC,MAAM4S,M,0CAIvBnQ,KAAK+wC,+B,+BAWG,IAAD,OACDx+B,EAAU,CACd,CACE3T,MAAO,kBACP4T,UAAW,gBACX9T,IAAK,kBACLgB,MAAO,MAET,CACEd,MAAO,eACP4T,UAAW,cACX9T,IAAK,cACLgB,MAAO,MAET,CACEd,MAAO,WACP4T,UAAW,WACX9T,IAAK,WACLgB,MAAO,KACP+S,OAAQ,SAAA89B,GAAQ,OACd,8BACgB,IAAbA,EAAiB,kBAAC,KAAD,CAAKnnC,MAAM,UAAX,WAAoCmnC,KAK5D,CACE3xC,MAAO,yBACP4T,UAAW,uBACX9T,IAAK,uBACLgB,MAAO,MAET,CACEd,MAAO,sBACP4T,UAAW,qBACX9T,IAAK,qBACLgB,MAAO,MAET,CACEd,MAAO,gBACPF,IAAK,OACLgB,MAAO,KACP+S,OAAQ,eAAC9M,EAAD,uDAAQ,EAAKpI,MAAMsyC,aAAnB,OACN,8BACG,EAAKI,SAAStqC,EAAKy4B,KAAMz4B,EAAKirC,gBAUrC,CACEhyC,MAAO,SACP4T,UAAW,SACX9T,IAAK,SACLgB,MAAO,KACP+S,OAAQ,SAAAzJ,GAAM,OACZ,8BAEI,kBAAC,KAAD,CACEI,MACY,QAAVJ,EACI,QACU,WAAVA,EACA,SACA,OAGLA,MAOX,CACEpK,MAAO,gBACPF,IAAK,SACLgB,MAAO,KACP+S,OAAQ,SAAC3L,GAAD,IAAO4L,EAAP,uDAAgB,EAAKnV,MAAMsyC,aAA3B,OACN,8BACE,2BACE,kBAAC,IAAD,CACElxC,KAAK,OACLN,MAAO,CAAES,SAAU,SACnBZ,QAAS,EAAKhC,MAAMg1C,oCAAoCt+B,KACtD,EACAF,MAIN,kBAAC,KAAD,CAAS/T,KAAK,aACd,2BACE,kBAAC,KAAD,CACEC,MAAM,wCACNiU,KACE,kBAAC,IAAD,CAAMlU,KAAK,oBAAoBN,MAAO,CAAE+K,MAAO,SAEjD0J,UAAW,EAAKC,gBAAgBH,KAAK,EAAMF,EAAOvC,KAElD,uBAAG6C,KAAK,KACN,kBAAC,IAAD,CACErU,KAAK,SACLN,MAAO,CAAE+K,MAAO,MAAOtK,SAAU,kBAUjD,OACE,kBAAC+R,GAAD,CACEK,WAAS,EACT7S,MAAO,CAAEqB,MAAO,UAChBd,MAAO,kBACL,kBAAC,GAAD,CAA2BsQ,OAAQ,EAAK6hC,8BAE1CxyC,UAAU,mBACVgU,QAASA,EACTU,WAAYjT,KAAKzC,MAAMsyC,aAEvBn+B,WAAY,CAAEwB,gBAAiB,GAC/BrU,KAAMmB,KAAKzC,MAAMsB,W,GAvKIqB,aAuLdC,eAAQ,MAXI,SAAAM,GACzB,MAAO,CAELywC,oCAAqC,SAAAx+B,GAEnCjS,EAAS,CAAE9B,KAAMyM,GAAqB+H,QAAST,IAC/C/R,QAAQC,IAAI8R,OAKHvS,CAAkC2wC,I,muEC9LjD,IAAMjyC,GAEK,QAFLA,GAGK,QAHLA,GAII,QAJJA,GAKI,SALJA,GAMK,SANLA,GAOK,SAIE8C,GAAS,CACpBC,QAAQ,eAAD,OAXE,QAWF,KACPC,QAAQ,eAAD,OAAiBhD,GAAjB,KACPiD,QAAQ,eAAD,OAAiBjD,GAAjB,KACPkD,OAAO,eAAD,OAAiBlD,GAAjB,KACNmD,OAAO,eAAD,OAAiBnD,GAAjB,KACNoD,QAAQ,eAAD,OAAiBpD,GAAjB,KACPqD,QAAQ,eAAD,OAAiBrD,GAAjB,KACPsD,SAAS,eAAD,OAAiBtD,GAAjB,MAGGsyC,GAAuBn1C,IAAOqO,EAAV,MAMpB+mC,GAAoBp1C,IAAOq1C,GAAV,MAKjBC,GAAYt1C,IAAOgF,IAAV,MAalB,SAAA9E,GAAK,OACLA,EAAMq1C,cACNn1C,YADA,KAEoB2yC,SAIpB,SAAA7yC,GAAK,OACLA,EAAMs1C,sBACNp1C,YADA,KAEoBq1C,SAIlB,SAAAv1C,GAAK,OACLA,EAAMowC,cACNlwC,YADA,KAEoBs1C,QAmCf/vC,GAAOO,QAKPP,GAAOI,OAOPJ,GAAOM,SC3GG0vC,G,iLAEjB,OACE,kBAAC5wC,GAAD,CAAe1C,MAAO,CAAE0B,eAAgB,iBACtC,kBAAChE,EAAD,CAAgBqC,GAAG,iBACjB,kBAACkzC,GAAD,CAAWC,cAAY,GACrB,kBAACH,GAAD,sBACA,kBAACD,GAAD,0BAGJ,kBAACp1C,EAAD,CAAgBqC,GAAG,iBACjB,kBAACkzC,GAAD,CAAWE,sBAAoB,GAC7B,kBAACJ,GAAD,+BACA,kBAACD,GAAD,yBAGJ,kBAACp1C,EAAD,CAAgBqC,GAAG,aACjB,kBAACkzC,GAAD,CAAWhF,cAAY,GACrB,kBAAC8E,GAAD,sBACA,kBAACD,GAAD,0BAGJ,kBAACp1C,EAAD,CAAgBqC,GAAG,oBACjB,kBAACkzC,GAAD,CAAWC,cAAY,GACrB,kBAACH,GAAD,mBACA,kBAACD,GAAD,+B,GAzB+BjxC,a,UCGnCkT,GAAWC,KAAXD,OACF3N,GAAQ,CACZ2D,MAAO,MACPtK,SAAU,OACVY,MAAO,QACPD,OAAQ,SAEJ2vB,GAAS,CACbhmB,MAAO,MACPtK,SAAU,OACVY,MAAO,QACPD,OAAQ,SAGWmyC,G,YACnB,WAAY11C,GAAQ,IAAD,8BACjB,4CAAMA,KA0DR21C,qBAAuB,SAAAC,GACrB,EAAKC,YAAYD,GACjBnxC,QAAQC,IAAIkxC,GACZntC,GAAI,MAAO,WAAY,iBAAkB,GAAI,GAAImtC,GAAUxsC,MAAK,SAAAqD,GAC9DhI,QAAQC,IAAI+H,EAAIhD,KAAKiD,SACrB,IAAImM,EAAIpM,EAAIhD,KAAKiD,QAAQ0jC,aACzB,EAAKpjC,SAAS,CACZiE,KAAM4H,EAAE5H,KACRixB,KAAMpe,KAAOjL,EAAEqpB,KAAM,cACrBxjB,eAAgB7F,EAAE+F,cAClBk3B,WAAYj9B,EAAEk9B,UACdC,YAAan9B,EAAEo9B,UACfC,QAASr9B,EAAEq9B,QACXppC,OAAQ+L,EAAE/L,OACVqpC,WAAY,KACZC,SAAS,QA1EI,EA+EnBC,YAAc,WACZ5tC,GAAI,MAAO,WAAY,QAAS,GAAI,GAAI,EAAKpH,MAAMuwB,QAAQxoB,MAAK,SAAAqD,GAC9DhI,QAAQC,IAAI+H,EAAIhD,MAEhB,EAAKuD,SAAS,CACZkkB,UAAWzkB,EAAIhD,KAAKiD,QAAQ8C,KAAKrE,OAGnC,EAAKmrC,qBAAqB7pC,EAAIhD,KAAKiD,QAAQ8C,KAAKyE,QAvFjC,EA0FnBsiC,cAAgB,WACd9tC,GACE,MACA,WACA,mBACA,GACA,GACA,EAAKpH,MAAMm1C,UACXptC,MAAK,SAAAqD,GACLhI,QAAQC,IAAI+H,EAAIhD,MAEhB,EAAKuD,SAAS,CACZ0T,qBACEjU,EAAIhD,KAAKiD,QAAQw8B,eAAen8B,YAAY0T,oBACzCC,qBACL+1B,iBAAkBhqC,EAAIhD,KAAKiD,QAAQw8B,eAAej4B,KAClDylC,WAAYjqC,EAAIhD,KAAKiD,QAAQw8B,eAAen8B,YAAYkH,SA1G3C,EA8GnBqiC,qBAAuB,SAAAriC,GACrBxP,QAAQC,IAAIuP,GACZxL,GAAI,MAAO,WAAY,uBAAwB,GAAI,GAAIwL,GAAI7K,MAAK,SAAAqD,GAC9DhI,QAAQC,IAAI+H,EAAIhD,MAEhB,EAAKuD,SAAS,CACZ2pC,mBAAoBlqC,EAAIhD,KAAKiD,QAAQgkB,qBApHxB,EAwHnBkmB,yBAA2B,SAAAD,GACzBlyC,QAAQC,IAAIiyC,GAGZ,IAFA,IAAI9R,EAAO,GAEFjU,EAAI,EAAGA,EAAI+lB,EAAmB9pC,OAAQ+jB,IAC7CiU,EAAKloB,KAAK,CACRxR,KAAK,GAAD,OAAKwrC,EAAmB/lB,GAAG7J,UAAUyG,cACzC5hB,MAAM,GAAD,OAAK+qC,EAAmB/lB,GAAG7J,UAAU5b,KAArC,cAA+CwrC,EAAmB/lB,GAAG7J,UAAUyG,aAA/E,KACL/qB,KAAM,SACNyR,YAAayiC,EAAmB/lB,GAAGrhB,KAAKA,OAI5C,OADA9K,QAAQC,IAAImgC,GACLlI,KAAKC,UAAUiI,IArIL,EAuInBxsB,aAAe,SAACvG,EAAOjG,GAAW,IACxBuF,EAAW,EAAK/P,MAAhB+P,OACR3M,QAAQC,IAAImH,EAAQ,OAASiG,GACf,mBAAVA,GACF,EAAK9E,SAAS,CACZ0R,eAAgB7S,EAChBuF,OAAQ,CACN8wB,KAAM9wB,EAAO8wB,KACbxjB,eAAgB,GAChBs3B,YAAa5kC,EAAO4kC,YACpBlpC,OAAQsE,EAAOtE,OACfmE,KAAMG,EAAOH,QAIL,eAAVa,GACF,EAAK9E,SAAS,CACZ8oC,WAAYjqC,KAxJC,EAkLnBgrC,mBAAqB,SAAAhrC,GAAU,IACrBuF,EAAW,EAAK/P,MAAhB+P,OACR3M,QAAQC,IAAImH,GACZ,EAAKmB,SAAS,CACZgpC,YAAanqC,EACbuF,OAAQ,CACN8wB,KAAM9wB,EAAO8wB,KACbxjB,eAAgBtN,EAAOsN,eACvBs3B,YAAa,GACblpC,OAAQsE,EAAOtE,OACfmE,KAAMG,EAAOH,SA5LA,EAiMnBW,aAAe,SAACC,EAAOC,GACrB,EAAK9E,SAAL,gBAAiB8E,EAAQD,EAAME,OAAOlG,QACtC,EAAKmB,SAAS,CAAEgF,SAAU,KAC1BH,EAAMI,iBAHyB,MAIPJ,EAAME,OAAtB5G,EAJuB,EAIvBA,KAAMU,EAJiB,EAIjBA,MACVuF,EAAS,EAAK/P,MAAM+P,OAExB,OADA3M,QAAQC,IAAIyG,EAAO,SAAWU,GACtBV,GACN,IAAK,OACHiG,EAAOH,KAAwB,IAAjBpF,EAAMgB,OAAe,sBAAwB,GAC3D,MACF,IAAK,SACHuE,EAAOtE,OACY,IAAjBjB,EAAMgB,OACF,wBACAhB,EAAMgB,OAAS,EACf,uCACCyF,MAAMzG,GAEP,GADA,kCAQV,EAAKmB,SAAL,cAAgBoE,UAASjG,EAAOU,KA3Nf,EA8NnB0G,aAAe,SAAA3N,GACb,IAAI6sB,EAAK,iBACT7sB,EAAEqN,iBAFgB,MAUd,EAAK5Q,MANP+P,EAJgB,EAIhBA,OACA8wB,EALgB,EAKhBA,KACAxjB,EANgB,EAMhBA,eACAs3B,EAPgB,EAOhBA,YACAlpC,EARgB,EAQhBA,OACAmE,EATgB,EAShBA,KAEF,QACWygB,IAATwQ,QACmBxQ,IAAnBhT,QACgBgT,IAAhBskB,GACkB,IAAlBlpC,EAAOD,QACS,IAAhBoE,EAAKpE,OAEL,EAAKG,SAAS,CACZoE,OAAQ,CACN8wB,KAAK,QAAD,OAAUzQ,GACd/S,eAAe,kBAAD,OAAoB+S,GAClCukB,YAAY,eAAD,OAAiBvkB,GAC5B3kB,OAAO,UAAD,OAAY2kB,GAClBxgB,KAAK,QAAD,OAAUwgB,WAGb,QAAaC,IAATwQ,GAA6C,IAAvB9wB,EAAO8wB,KAAKr1B,OAC3C,EAAKG,SAAS,CACZoE,OAAQ,CACN8wB,KAAM9wB,EAAO8wB,MAAP,eAAuBzQ,GAC7B/S,eAAgBtN,EAAOsN,eACvBs3B,YAAa5kC,EAAO4kC,YACpBlpC,OAAQsE,EAAOtE,OACfmE,KAAMG,EAAOH,aAGZ,QACcygB,IAAnBhT,GACiC,IAAjCtN,EAAOsN,eAAe7R,OAEtB,EAAKG,SAAS,CACZoE,OAAQ,CACN8wB,KAAM9wB,EAAO8wB,KACbxjB,eAAgBtN,EAAOsN,gBAAP,yBAA2C+S,GAC3DukB,YAAa5kC,EAAO4kC,YACpBlpC,OAAQsE,EAAOtE,OACfmE,KAAMG,EAAOH,aAGZ,QAAoBygB,IAAhBskB,GAA2D,IAA9B5kC,EAAO4kC,YAAYnpC,OACzD,EAAKG,SAAS,CACZoE,OAAQ,CACN8wB,KAAM9wB,EAAO8wB,KACbxjB,eAAgBtN,EAAOsN,eACvBs3B,YAAa5kC,EAAO4kC,aAAP,sBAAqCvkB,GAClD3kB,OAAQsE,EAAOtE,OACfmE,KAAMG,EAAOH,aAGZ,GAAsB,IAAlBnE,EAAOD,QAAyC,IAAzBuE,EAAOtE,OAAOD,OAC9C,EAAKG,SAAS,CACZoE,OAAQ,CACN8wB,KAAM9wB,EAAO8wB,KACbxjB,eAAgBtN,EAAOsN,eACvBs3B,YAAa5kC,EAAO4kC,YACpBlpC,OAAQsE,EAAOtE,QAAP,iBAA2B2kB,GACnCxgB,KAAMG,EAAOH,aAGZ,GAAoB,IAAhBA,EAAKpE,QAAuC,IAAvBuE,EAAOH,KAAKpE,OAC1C,EAAKG,SAAS,CACZoE,OAAQ,CACN8wB,KAAM9wB,EAAO8wB,KACbxjB,eAAgBtN,EAAOsN,eACvBs3B,YAAa5kC,EAAO4kC,YACpBlpC,OAAQsE,EAAOtE,OACfmE,KAAMG,EAAOH,MAAP,eAAuBwgB,WAG5B,GACkB,IAAvBrgB,EAAO8wB,KAAKr1B,QACqB,IAAjCuE,EAAOsN,eAAe7R,QACQ,IAA9BuE,EAAO4kC,YAAYnpC,QACM,IAAzBuE,EAAOtE,OAAOD,QACS,IAAvBuE,EAAOH,KAAKpE,OACZ,CACApI,QAAQC,IAAI,iBAIZ,IAAM+E,EAAO,CACXwH,KAAMA,EACN2gB,OAAQ,EAAKvwB,MAAMuwB,OACnBsQ,KAAMpe,KAAOoe,GAAMne,OAAO,cAC1B+yB,gBAAiB,EAAKz1C,MAAMqd,eAC5BkqB,mBAAoB,EAAKvnC,MAAMo1C,iBAC/BR,UAAWD,EACXD,UAAW,EAAK10C,MAAMy0C,WACtBI,QAAS,EACTppC,OAAQA,GAEVrE,GAAI,OAAQ,WAAY,iBAAkB,GAAIgB,EAAM,IAAIL,MACtD,SAAAqD,GACEhI,QAAQC,IAAI+H,EAAIhD,MAChBqH,GAAa,UAAWrE,EAAIhD,KAAKsH,SACjC,EAAK/D,SAAS,CACZmpC,WAAY1pC,EAAIhD,KAAKqD,YAGzB,SAAAvD,GAIE9E,QAAQC,IAAI,YAAa6E,MAK7B9E,QAAQC,IAAI+E,GAEZ,EAAKuD,SAAS,CAAEopC,SAAS,MAvVV,EA6WnBW,oBAAsB,SAAAttC,GAUpB,GATAhF,QAAQC,IAAI4M,OAAOgV,KAAK7c,GAAM,IAC9BhF,QAAQC,MAEJ,EAAKrD,MAAM21C,YAAc,EAAK31C,MAAM20C,cACtCvxC,QAAQC,IAAI,OACZ,EAAKsI,SAAS,CACZgqC,WAAY,EAAK31C,MAAM21C,WAAa,KAGpC,EAAK31C,MAAM21C,YAAc,EAAK31C,MAAM20C,YAAa,CACnD,EAAKhpC,SAAS,CACZiqC,sBAAsB,GAAD,OAAK,EAAK51C,MAAM4P,KAAhB,YAAwB,EAAK5P,MAAM21C,cAE1D,IAAME,EAAwB,CAC5BjmC,KAAK,GAAD,OAAK,EAAK5P,MAAM4P,KAAhB,YAAwB,EAAK5P,MAAM21C,YACvCG,iBAAkB,EAAK91C,MAAM4P,KAC7Bq/B,QAAS,EAAKjvC,MAAM21C,WACpBzf,OAAQ,GAEV9yB,QAAQC,IAAIwyC,GAGZ,IADA,IAAIE,EAAmB,GACdxmB,EAAI,EAAGA,EAAI,EAAKvvB,MAAMs1C,mBAAmB9pC,OAAQ+jB,IACxDwmB,EAAiBz6B,KAAK,CACpB06B,kBAAmB,CACjBpmC,KAAMimC,EAAsBjmC,MAE9BpF,MAAOpC,EAAK,EAAKpI,MAAMs1C,mBAAmB/lB,GAAG7J,UAAUyG,cACvD8pB,gBAAiB,EAAKj2C,MAAMs1C,mBAAmB/lB,GAAG3c,KAItDxP,QAAQC,IAAI0yC,GAEZ3uC,GACE,OACA,WACA,uBACA,GACAyuC,EACA,IACA9tC,MACA,SAAAqD,GACEhI,QAAQC,IAAI+H,EAAIhD,MAChBhF,QAAQC,IAAI,EAAKrD,MAAM41C,uBACvBxuC,GACE,OACA,WACA,oBACA,GACA2uC,EACA,IACAhuC,MAAK,SAAAqD,GACLhI,QAAQC,IAAI+H,EAAIhD,MAChB,EAAK8tC,aAAaL,EAAsBjmC,MAExCH,GAAa,UAAWrE,EAAIhD,KAAKsH,eAOrC,SAAAxH,GAIE9E,QAAQC,IAAI,YAAa6E,WAK7B,EAAKiuC,gBAQP,GALA,EAAKn2C,MAAMo2C,aAAa96B,KAAK,CAC3Bja,MAAM,QAAD,OAAU,EAAKrB,MAAM21C,YAC1B1gC,UAAU,IAAD,OAAM,EAAKjV,MAAM21C,YAC1Bx0C,IAAI,IAAD,OAAM,EAAKnB,MAAM21C,cAEQ,IAA1B,EAAK31C,MAAM21C,WACb,IAAK,IAAIpmB,EAAI,EAAGA,EAAItf,OAAOgV,KAAK7c,GAAMoD,OAAQ+jB,IAC5C,EAAKvvB,MAAMq2C,eAAe/6B,KAA1B,cACEoK,UAAWzV,OAAOgV,KAAK7c,GAAMmnB,IAD/B,WAEO,EAAKvvB,MAAM21C,YAAe1lC,OAAOC,OAAO9H,GAAMmnB,UAIvD,IAAK,IAAIyf,EAAI,EAAGA,EAAI/+B,OAAOgV,KAAK7c,GAAMoD,OAAQwjC,IAC5C,EAAKhvC,MAAMq2C,eAAerH,GAA1B,gBACK,EAAKhvC,MAAMq2C,eAAerH,GAD/B,8BAEY,EAAKhvC,MAAM21C,YAAe1lC,OAAOC,OAAO9H,GAAM4mC,MAzc7C,EA8cnBmH,cAAgB,WACd/yC,QAAQC,IAAI,eACZ+D,GACE,MACA,WACA,6CACA,GACA,GACA,EAAKpH,MAAM4P,MACX7H,MAAK,SAAAqD,GACL,EAAKkrC,kBACLlzC,QAAQC,IAAI+H,EAAIhD,UAzdD,EA6dnB8tC,aAAe,SAAAtjC,GACbxL,GAAI,MAAO,WAAY,gCAAiC,GAAI,GAAIwL,GAAI7K,MAClE,SAAAqD,GACEhI,QAAQC,IAAI+H,EAAIhD,UAheH,EAuenBosC,YAAc,SAAA5kC,GACZxI,GACE,MACA,WACA,qCACA,GACA,GACAwI,GACA7H,MACA,SAAAqD,GACEhI,QAAQC,IAAI+H,EAAIhD,KAAKiD,QAAQ0jC,aAAavjC,QAC1C,EAAKG,SAAS,CACZgqC,WAAYvqC,EAAIhD,KAAKiD,QAAQ0jC,aAAavjC,OAAS,OAGvD,SAAAtD,GACE,EAAKyD,SAAS,CACZgqC,WAAY,IAEdvyC,QAAQC,IAAI6E,OA1fC,EA+fnBquC,eAAiB,WAQf,OANQ,EAAKv2C,MAAM21C,WAAa,EAAK31C,MAAMw2C,eAClC,EAAKx2C,MAAM20C,YACf,gBAAY,EAAK30C,MAAM21C,WAAvB,cAAuC,EAAK31C,MAAM20C,aAE/C,gBAlgBR,EAAK30C,MAAQ,CACXuwB,OAAQ,EAAK5xB,MAAM4tC,MAAM5lC,OAAO4pB,OAChC4kB,SAAU,EAAKx2C,MAAM4tC,MAAM5lC,OAAOwuC,SAClCZ,SAAU,EAAK51C,MAAM4tC,MAAM5lC,OAAO4tC,SAClC1kB,UAAW,GACXxQ,qBAAsB,GACtBioB,gBAAiB,aACjB8N,iBAAkB,GAClBvU,UAAMxQ,EACNhT,oBAAgBgT,EAChBskB,YAAa,EACbF,WAAY,YACZhpC,OAAQ,MACRsE,OAAQ,CACN8wB,KAAM,GACNxjB,eAAgB,GAChBs3B,YAAa,GACblpC,OAAQ,GACRmE,KAAM,IAERgJ,UAAW,GACXoZ,WAAY,GACZsjB,mBAAoB,GACpBmB,cAAe,GACf7mC,KAAM,GACN+lC,WAAY,EACZe,UAAW,GACXrB,WAAY,GACZN,SAAS,EACT//B,QAAS,CACP,CACE3T,MAAO,YACP4T,UAAW,YACX9T,IAAK,cAGTk1C,eAAgB,GAChBM,UAAW,GACXP,aAAc,GACdtB,WAAY,GACZc,sBAAuB,GACvBY,cAAe,GA5CA,E,iFAiDb/zC,KAAKzC,MAAMu0C,WACb9xC,KAAK6xC,qBAAqB7xC,KAAKzC,MAAMu0C,UACrCnxC,QAAQC,IAAIZ,KAAKzC,MAAMu0C,WAEzBnxC,QAAQC,IAAIZ,KAAKzC,MAAMu0C,UACvB9xC,KAAKuyC,cACLvyC,KAAKyyC,gBACLzyC,KAAKm0C,uB,kCAqGK9sC,EAAMiZ,EAAYtS,GAAQ,IAC5BV,EAAWtN,KAAKzC,MAAhB+P,OACR3M,QAAQC,IAAIyG,GACZ1G,QAAQC,IAAI0f,GACZ3f,QAAQC,IAAIoN,GACZ,IAAIuS,EAAgBP,KAAOM,GAAYL,OAAO,cAC9Ctf,QAAQC,IAAI2f,GACC,SAATlZ,GACFrH,KAAKkJ,SAAS,CACZk1B,KAAM9d,EACNhT,OAAQ,CACN8wB,KAAM,GACNxjB,eAAgBtN,EAAOsN,eACvBs3B,YAAa5kC,EAAO4kC,YACpBlpC,OAAQsE,EAAOtE,OACfmE,KAAMG,EAAOH,U,2CA+KC,IAAD,OACnBxI,GAAI,MAAO,WAAY,mBAAoB,GAAI,GAAI,IAAIW,MAAK,SAAAqD,GAC1DhI,QAAQC,IAAI+H,EAAIhD,KAAKiD,QAAQkS,eAE7Bna,QAAQC,IAAI,OACZ,IAAIwzC,EAAezrC,EAAIhD,KAAKiD,QAAQkS,cAAcnG,KAAI,SAACjP,EAAMkP,GAC3D,OACE,kBAAC,GAAD,CAAQ7M,MAAOrC,EAAKyK,GAAIzR,IAAKkW,GAC1BlP,EAAKoV,kBAIZ,EAAK5R,SAAS,CACZkrC,sB,wCA6HJpd,GAAQne,KAAR,uBAA6B7Y,KAAKzC,MAAM4P,S,+BAqChC,IAAD,OACPxM,QAAQC,IAAIZ,KAAKzC,MAAMq2C,gBACvBjzC,QAAQC,IAAIZ,KAAKzC,MAAMs1C,oBAFhB,MAYH7yC,KAAKzC,MARP6vB,EAJK,EAILA,UACAjgB,EALK,EAKLA,KACAyN,EANK,EAMLA,eACAwjB,EAPK,EAOLA,KACA8T,EARK,EAQLA,YACAlpC,EATK,EASLA,OACAsE,EAVK,EAULA,OACAsP,EAXK,EAWLA,qBAEF,OACE,kBAAC7b,GAAD,CAAe1C,MAAO,CAAE0B,eAAgB,WACtC,kBAACgB,GAAD,CAAeE,QAAM,GACnB,kBAACF,GAAD,CACEE,QAAM,EACN5C,MAAO,CACLwR,WAAY,QACZ7Q,QAAS,OACTga,aAAc,OACdtZ,MAAO,SACPD,OAAQ,SAGV,kBAACsB,GAAD,CAAe9D,MAAI,GACjB,yBAAKsB,UAAU,iBACb,4BAAK6uB,IAEP,yBAAK7uB,UAAU,iBACb,4BAAKqe,KAIT,kBAAC7b,GAAD,KACE,yBAAKxC,UAAU,iBACb,2BAAOy9B,QAAQ,SAASz9B,UAAU,SAAlC,QAGA,kBAAC,KAAD,CACE4R,GAAG,OACH9I,KAAK,OACLhJ,MAAO,CAAEqB,MAAO,SAChBqI,MAAOoF,EACPiD,YAAY,aACZC,SAAUrQ,KAAK8N,aACfwC,SAAUtQ,KAAKzC,MAAM+0C,UAEtBhlC,EAAOH,KAAKpE,OAAS,GACpB,yBAAK1K,MAAO+wB,IAAS9hB,EAAOH,MAE9B,yBAAK9O,MAAO,CAAEoB,OAAQ,WAExB,yBAAKlB,UAAU,iBACb,2BAAOy9B,QAAQ,OAAOz9B,UAAU,SAAhC,QAGA,kBAAC,KAAD,CACE4R,GAAG,OACH9I,KAAK,OACLU,MAAOq2B,EACP/tB,SAAU,SAACiQ,EAAYtS,GAAb,OACR,EAAK2S,YAAY,OAAQL,EAAYtS,IAEvCsC,SAAUtQ,KAAKzC,MAAM+0C,UAEtBhlC,EAAO8wB,KAAKr1B,OAAS,GACpB,yBAAK1K,MAAO+wB,IAAS9hB,EAAO8wB,MAE9B,yBAAK//B,MAAO,CAAEoB,OAAQ,WAExB,yBAAKlB,UAAU,iBACb,2BAAOy9B,QAAQ,iBAAiBz9B,UAAU,SAA1C,kBAGA,kBAAC,KAAD,CACE4R,GAAG,iBACH9I,KAAK,iBACL+I,YAAY,wBACZ/R,MAAO,CAAEqB,MAAO,KAChBqI,MAAO6S,EACPvK,SAAU,SAAAtI,GAAK,OAAI,EAAKwM,aAAa,iBAAkBxM,IACvDuI,SAAUtQ,KAAKzC,MAAM+0C,SAEpBtyC,KAAKzC,MAAM62C,cAEb9mC,EAAOsN,eAAe7R,OAAS,GAC9B,yBAAK1K,MAAO+wB,IAAS9hB,EAAOsN,gBAE9B,yBAAKvc,MAAO,CAAEoB,OAAQ,WAExB,yBAAKlB,UAAU,iBACb,2BAAOy9B,QAAQ,iBAAiBz9B,UAAU,SAA1C,cAGA,kBAAC,KAAD,CACE4R,GAAG,aACH9I,KAAK,aACL+I,YAAY,oBACZ/R,MAAO,CAAEqB,MAAO,KAChBqI,MAAO/H,KAAKzC,MAAMy0C,WAClB3hC,SAAU,SAAAtI,GAAK,OAAI,EAAKwM,aAAa,aAAcxM,IACnDuI,SAAUtQ,KAAKzC,MAAM+0C,SAErB,kBAAC,GAAD,CAAQvqC,MAAM,aAAd,OACA,kBAAC,GAAD,CAAQA,MAAM,eAAd,SACA,kBAAC,GAAD,CAAQA,MAAM,eAAd,SACA,kBAAC,GAAD,CAAQA,MAAM,cAAd,SAKF,yBAAK1J,MAAO,CAAEoB,OAAQ,WAExB,yBAAKlB,UAAU,iBACb,2BAAOy9B,QAAQ,cAAcz9B,UAAU,SAAvC,eAGA,kBAAC,KAAD,CACE4R,GAAG,cACH9I,KAAK,cACLhJ,MAAO,CAAEqB,MAAO,KAChB0Q,YAAY,eACZrI,MAAOmqC,EACP7hC,SAAUrQ,KAAK+yC,mBACfziC,SAAUtQ,KAAKzC,MAAM+0C,UAEtBhlC,EAAO4kC,YAAYnpC,OAAS,GAC3B,yBAAK1K,MAAOoH,IAAQ6H,EAAO4kC,aAE7B,yBAAK7zC,MAAO,CAAEoB,OAAQ,WAExB,yBAAKlB,UAAU,iBACb,2BAAOy9B,QAAQ,SAASz9B,UAAU,SAAlC,UAGA,kBAAC,KAAD,CACE4R,GAAG,SACH9I,KAAK,SACLU,MAAOiB,EACPoH,YAAY,eACZC,SAAUrQ,KAAK8N,aACfwC,SAAUtQ,KAAKzC,MAAM+0C,UAEtBhlC,EAAOtE,OAAOD,OAAS,GACtB,yBAAK1K,MAAO+wB,IAAS9hB,EAAOtE,QAE9B,yBAAK3K,MAAO,CAAEoB,OAAQ,WAEvBO,KAAKzC,MAAM+0C,QACV,GAEA,yBAAK/zC,UAAU,iBACb,kBAAC+N,GAAD,CACE3N,KAAM,UACNkL,SAAO,EACPxL,MAAO,CACLwR,WAAYjS,GAAaiM,QACzBT,MAAOxL,GAAa+L,MACpBmG,OAAQ,QAEV5R,QAAS8B,KAAKyO,cARhB,aAgBR,6BACCzO,KAAKzC,MAAM+0C,SAAqC,OAA1BtyC,KAAKzC,MAAM80C,WAChC,kBAACtxC,GAAD,KACE,kBAACA,GAAD,KACE,kBAACA,GAAD,CACE1C,MAAO,CACLwR,WAAY,WACZ7Q,QAAS,OACTga,aAAc,OACdtZ,MAAO,QACPD,OAAQ,UAGV,kBAACsB,GAAD,CACEE,QAAM,EACN5C,MAAO,CACLwR,WAAYjS,GAAaiM,QACzBpK,OAAQ,OACRC,MAAO,QACPT,OAAQ,QACR60B,oBAAqB,OACrBC,qBAAsB,SAGxB,wBACE11B,MAAO,CACLkL,UAAW,MACX/K,WAAY,MACZ4K,MAAO,UAJX,eAWF,kBAAC,GAAD,CACEquB,KAAMoB,KAAK6J,MACT1iC,KAAK8yC,yBACH9yC,KAAKzC,MAAMs1C,qBAGf3W,aAAc,CACZp1B,KAAM9G,KAAK8zC,iBACXv1C,UAAW,UAKbk8B,SAAU,SAAAhD,GACR,EAAKwb,oBAAoBxb,EAAK9xB,KAAK8xB,MACnC92B,QAAQC,IAAI62B,IAEd4D,WAAYsH,GACZ7F,YAAa8F,GACb7F,UAAW8F,GACXpG,WAAYA,GACZF,aAAa,YArDnB,YAyDE,kBAACx7B,GAAD,CACEszC,KAAG,EACHh2C,MAAO,CACLwR,WAAY,QACZ7Q,QAAS,OACTga,aAAc,OACdtZ,MAAO,QACPD,OAAQ,SAGV,kBAACoR,GAAD,CACEzP,QAAM,EACNgQ,qBAAmB,EACnBmB,QAAO,uBACFvS,KAAKzC,MAAMgV,SADT,aAEFvS,KAAKzC,MAAMo2C,eAEhB1gC,WAAU,uBACLjT,KAAKzC,MAAMq2C,gBADN,CAER5zC,KAAKzC,MAAM22C,YAEb7jC,SAAUrQ,KAAK8N,aACf4D,YAAY,EACZ7S,KAAK,aAOb,S,GA/wBmCqB,aAsxBzCyiC,GAAU,CACdjjC,MAAO,QACPC,UAAW,oCAGP88B,GAAa,CACjB/8B,MAAO,QACPD,OAAQ,OACR2J,MAAO,QACPqH,WAAY,KAGRmyB,GAAU,CACdpkC,WAAY,QACZiB,OAAQ,QAEJojC,GAAU,CACdt5B,UAAW,QACX3J,QAAS,OAETC,cAAe,MACfH,MAAO,QACPD,OAAQ,OACRK,SAAU,OACVC,eAAgB,eAChBjC,SAAU,WAEVilC,eAAgB,UCn0BGuR,G,YACnB,WAAYp4C,GAAQ,IAAD,8BACjB,4CAAMA,KAmCRq4C,yBAA2B,SAAAzmB,GACzBnpB,GAAI,MAAO,WAAY,uBAAwB,GAAI,GAAImpB,GAAQxoB,MAAK,SAAAqD,GAClEhI,QAAQC,IAAI+H,EAAIhD,KAAKiD,SACrB,EAAKM,SAAS,CACZsrC,iBAAkB7rC,EAAIhD,KAAKiD,QAAQ8C,KAAK,GAAGwiB,SAC3CumB,iBAAkB9rC,EAAIhD,KAAKiD,QAAQ8C,KAAK,GAAGyiB,eAzC9B,EA8CnBumB,wBAA0B,WACxB/vC,GAAI,MAAO,WAAY,iBAAkB,GAAI,GAAI,EAAKpH,MAAMuwB,QAAQxoB,MAClE,SAAAqD,GACEhI,QAAQC,IAAI+H,EAAIhD,MAChB,IAAIgvC,EAAMhsC,EAAIhD,KAAKiD,QAAQ0jC,aAAa8F,QACxC,EAAKlpC,SAAS,CACZipC,UAAWxpC,EAAIhD,KAAKiD,QAAQ0jC,aAAa6F,UACzCyC,SAAUjsC,EAAIhD,KAAKiD,QAAQ0jC,aAAasI,SACxCxW,KAAMz1B,EAAIhD,KAAKiD,QAAQ0jC,aAAalO,KACpCyW,OAAQlsC,EAAIhD,KAAKiD,QAAQ0jC,aAAatjC,OACtCopC,QAASrQ,OAAO4S,EAAI3S,QAAQ,MAE9B,EAAK8S,qCACHnsC,EAAIhD,KAAKiD,QAAQ0jC,aAAan/B,MAEhC,EAAKonC,yBAAyB5rC,EAAIhD,KAAKiD,QAAQ0jC,aAAaxe,YA7D/C,EAkEnBgnB,qCAAuC,SAAA3nC,GACrCxI,GACE,MACA,WACA,qCACA,GACA,GACAwI,GACA7H,MAAK,SAAAqD,GACLhI,QAAQC,IAAI+H,EAAIhD,KAAKiD,QAAQ0jC,aAAa,IAC1C,EAAKpjC,SAAS,CACZ7G,SACEsG,EAAIhD,KAAKiD,QAAQ0jC,aAAa,GAAGA,aAAalH,eAC3Cn8B,YAAY5B,OAInB,IAFA,IAAM0tC,EAAO,GACPC,EAAQ,GACLloB,EAAI,EAAGA,EAAInkB,EAAIhD,KAAKiD,QAAQ0jC,aAAavjC,OAAQ+jB,IACxDioB,EAAKl8B,KAAK,CACRja,MAAM,QAAD,OAAUkuB,EAAI,GACnBta,UAAU,IAAD,OAAMsa,EAAI,GACnBpuB,IAAI,IAAD,OAAMouB,EAAI,KAIjB,IAAK,IAAIyf,EAAI,EAAGA,EAAI5jC,EAAIhD,KAAKiD,QAAQ0jC,aAAavjC,OAAQwjC,IAC9C,IAANzf,EACFkoB,EAAMn8B,KAAN,2BACO0zB,EAAI,GAAM5jC,EAAIhD,KAAKiD,QAAQ0jC,aAAaC,GAAG9Y,SAGlDuhB,EAAM,GAAN,gBACKA,EAAM,GADX,8BAEYzI,EAAI,GAAM5jC,EAAIhD,KAAKiD,QAAQ0jC,aAAaC,GAAG9Y,SAI3D9yB,QAAQC,IAAIo0C,GACZ,EAAK9rC,SAAS,CAAEgrC,UAAWc,IAC3B,EAAK9rC,SAAS,CAAEyqC,aAAa,GAAD,oBAAM,EAAKp2C,MAAMo2C,cAAiBoB,SAzG/C,EA4GnBE,YAAc,WACZ,OACE,kBAACpkC,GAAD,CACExS,MAAO,CACLqB,MAAO,MACPC,UAAW,mCAEbqtB,UAAQ,EACRza,QAAS,EAAKhV,MAAMo2C,aACpB1gC,WAAY,EAAK1V,MAAM22C,UACvBnhB,YAAY,EACZrhB,YAAY,EACZzB,OAAQ,kBACN,wBAAI5R,MAAO,CAAE+K,MAAO,YAApB,4BACwB,EAAK7L,MAAMi3C,iBADnC,kBAC6D,EAAKj3C,MAAMk3C,iBADxE,aAtHN,EAAKl3C,MAAQ,CACXuwB,OAAQ,EAAK5xB,MAAM4tC,MAAM5lC,OAAOgxC,gBAChC3iC,QAAS,CACP,CACE3T,MAAO,UACP4T,UAAW,UACX9T,IAAK,YAGTk1C,eAAgB,GAChBM,UAAW,GACXP,aAAc,CACZ,CACE/0C,MAAO,UACP4T,UAAW,UACX9T,IAAK,YAGTyzC,UAAW,GACXyC,SAAU,GACVxW,KAAM,GACN/7B,SAAU,GACViiB,OAAQ,GACRuwB,OAAQ,GACRL,iBAAkB,GAClBC,iBAAkB,GAClBrC,QAAS,IA7BM,E,iFAkCjBpyC,KAAK00C,4B,+BA+FL,OACE,kBAAC3zC,GAAD,CAAeK,QAAM,GACnB,yBACEH,QAAM,EACNG,QAAM,EACN/C,MAAO,CACLwR,WAAY,QACZnQ,MAAO,MACPD,OAAQ,QACRT,QAAS,OACTga,aAAc,QAGhB,2BACE3a,MAAO,CACLyR,OAAQ,+BACRpQ,MAAO,MACPgR,UAAW,SACXsI,aAAc,SAGhB,+BACE,4BACE,yCACA,oCACA,2CACA,0CAGJ,+BACE,4BACE,4BAAKhZ,KAAKzC,MAAMq3C,UAChB,4BAAK50C,KAAKzC,MAAM6gC,MAChB,4BAAKp+B,KAAKzC,MAAM40C,WAChB,4BAAKnyC,KAAKzC,MAAM8E,aAKrBrC,KAAKi1C,eAER,yBAAK52C,MAAO,CAAEqB,MAAO,MAAOD,OAAQ,UAClC,yBACEwB,QAAM,EACN5C,MAAO,CACLwR,WAAY,QACZnQ,MAAO,OACPV,QAAS,OACTga,aAAc,QAGhB,+CACA,wBAAI3a,MAAO,CAAES,SAAU,SAAWkB,KAAKzC,MAAM60C,UAE/C,6BACA,yBACEnxC,QAAM,EACN5C,MAAO,CACLwR,WAAY,QACZnQ,MAAO,OACPV,QAAS,OACTga,aAAc,QAGhB,yBAAKza,UAAU,iBACb,2BAAOA,UAAU,QAAQy9B,QAAQ,YAAjC,YAGA,kBAAC,KAAD,CAAU7rB,GAAG,WAAW9I,KAAK,cAE/B,yBAAK9I,UAAU,iBACb,2BAAOA,UAAU,QAAQy9B,QAAQ,UAAjC,UAGA,kBAAC,KAAD,CACE5yB,MAA6B,SAAtBpJ,KAAKzC,MAAMs3C,OAAoB,QAAU,MAChDx2C,MAAO,CACLoB,OAAQ,OACRX,SAAU,OACVc,QAAS,OACTC,cAAe,SACfE,eAAgB,WAGjBC,KAAKzC,MAAMs3C,gB,GAtNsB30C,aCK5CuF,GAAQ,CACZ2D,MAAO,MACPtK,SAAU,OACVY,MAAO,QACPD,OAAQ,OAGJ01C,G,YACJ,WAAYj5C,GAAQ,IAAD,8BACjB,4CAAMA,KAiBRk5C,cAAgB,SAAAC,GACd10C,QAAQC,IAAI,aAAcy0C,GAC1B,EAAKnsC,SAAS,CACZosC,yBAA0BD,KArBX,EA2BnBE,qBAAuB,WACrB,IAAIC,EAAU,GACd7wC,GACE,MACA,WACA,8CACA,GACA,G9KjDsC,c8KmDtCW,MAAK,SAAAqD,GACL,IAAI8sC,EAAU9sC,EAAIhD,KAAKiD,QAAQqT,sBAC/Btb,QAAQC,IAAI60C,GACZ,IAAK,IAAI3oB,EAAI,EAAGA,EAAI2oB,EAAQ1sC,OAAQ+jB,IAClC0oB,EAAQ38B,KAAK,CACX/Q,MAAO2tC,EAAQ3oB,GAAGzlB,KAClBU,MAAO0tC,EAAQ3oB,GAAG3c,KAGtBxP,QAAQC,IAAI40C,GACZ,EAAKtsC,SAAS,CACZssC,gBA/Ca,EAoDnB1nC,aAAe,SAACC,EAAOC,GACrB,EAAK9E,SAAL,gBAAiB8E,EAAQD,EAAME,OAAOlG,QACtC,EAAKmB,SAAS,CAAEgF,SAAU,KAC1BH,EAAMI,iBAHyB,MAIPJ,EAAME,OAAtB5G,EAJuB,EAIvBA,KAAMU,EAJiB,EAIjBA,MACVuF,EAAS,EAAK/P,MAAM+P,OAExB,OADA3M,QAAQC,IAAIyG,EAAO,SAAWU,GACtBV,GACN,IAAK,OACHiG,EAAOzO,KAAwB,IAAjBkJ,EAAMgB,OAAe,sBAAwB,GAM/D,EAAKG,SAAL,cAAgBoE,UAASjG,EAAOU,KAnEf,EAsEnB0G,aAAe,SAAAV,GAEb,GADAA,EAAMI,iBAEuB,IAA3B,EAAK5Q,MAAMsB,KAAKkK,QACiC,IAAjD,EAAKxL,MAAMm4C,2BAA2B3sC,OAEtC,EAAKG,SAAS,CACZoE,OAAQ,CACNzO,KAAM,sBACN62C,2BAA4B,uCAG3B,GACsB,IAA3B,EAAKn4C,MAAMsB,KAAKkK,QACkB,IAAlC,EAAKxL,MAAM+P,OAAOzO,KAAKkK,OAEvB,EAAKG,SAAS,CACZoE,OAAQ,CACNzO,KAAM,EAAKtB,MAAMsB,MAAQ,sBACzB62C,2BAA4B,EAAKn4C,MAAM+3C,iCAGtC,GAC0C,IAA/C,EAAK/3C,MAAM+3C,yBAAyBvsC,QACkB,IAAtD,EAAKxL,MAAM+P,OAAOgoC,yBAAyBvsC,OAE3C,EAAKG,SAAS,CACZoE,OAAQ,CACNzO,KAAM,EAAKtB,MAAMsB,KACjB62C,2BACE,EAAKn4C,MAAM+3C,0BACX,uCAGD,GAC6B,IAAlC,EAAK/3C,MAAM+P,OAAOzO,KAAKkK,QAC+B,IAAtD,EAAKxL,MAAM+P,OAAOgoC,yBAAyBvsC,OAC3C,CACApI,QAAQC,IAAI,EAAKrD,MAAM+P,QAGvB,IADA,IAAI3H,EAAO,GACFmnB,EAAI,EAAGA,EAAI,EAAKvvB,MAAM+3C,yBAAyBvsC,OAAQ+jB,IAC9DnnB,EAAKkT,KAAK,CACRha,KAAM,EAAKtB,MAAMsB,KACjBsd,sBAAuB,EAAK5e,MAAM+3C,yBAAyBxoB,KAOvC,QAApB,EAAKvvB,MAAMoB,MACbgG,GAAI,OAAQ,WAAY,cAAe,GAAIgB,EAAM,IAC9CL,MACC,SAAAqD,GACEhI,QAAQC,IAAI+H,EAAIhD,MAEhBsJ,GAAgB,UAAWtG,EAAIhD,KAAKsH,SACpC,EAAK/Q,MAAMgT,SAEX,EAAKhG,SAAS,CAGZgF,SAAU,QAGd,SAAAzI,GAIE9E,QAAQC,IAAI,YAAa6E,MAI5BD,OAAM,SAAAC,GACL,EAAKyD,SAAS,IAGdvI,QAAQC,IAAI6E,MAiDlB9E,QAAQC,IAAI+E,GACZhF,QAAQC,IAAI,mBAtMG,EA0MnB4O,UAAY,WACV,EAAKtG,SAAS,CACZmG,SAAS,EACTxQ,KAAM,GACNy2C,yBAA0B,GAC1BhoC,OAAQ,CACNzO,KAAM,GACNy2C,yBAA0B,OAjNb,EAsNnB7lC,aAAe,WACW,SAApB,EAAKlS,MAAMoB,MAEb,EAAKzC,MAAMwT,oBAGb,EAAKxG,SAAS,CACZmG,SAAS,EACTP,WAAW,EACXxB,OAAQ,CACNzO,KAAM,GACNy2C,yBAA0B,IAE5Bz2C,KAAM,GACNy2C,yBAA0B,GAC1BpnC,SAAU,MAlOZ,EAAK3Q,MAAQ,CACX4R,SAAS,EACTE,SAAS,EACT/B,OAAQ,CACNgoC,yBAA0B,GAC1Bz2C,KAAM,IAER62C,2BAA4B,GAC5BJ,yBAA0B,GAC1Bz2C,KAAM,GACNqP,SAAU,GACVvP,KAAM,OAdS,E,iFAyBjBqB,KAAKu1C,yB,gDAgNmB5lC,M,+BAWhB,IAAD,EACsB3P,KAAKzC,MAA1B8R,EADD,EACCA,QAASF,EADV,EACUA,QACT7B,EAAWtN,KAAKzC,MAAhB+P,OACR,OACE,6BACE,kBAAChB,GAAD,CACEpO,QAAS8B,KAAKwP,UACdnR,MAAO,CACLwR,WAAY,UACZzG,MAAO,QACP0G,OAAQ,OACRpQ,MAAO,QACPlB,WAAY,UAPhB,YAYA,kBAAC,KAAD,CACE6Q,QAASA,EACTU,UAAU,EACVZ,QAASA,EACTa,SAAUhQ,KAAKyP,aACf7Q,MACE,kBAACgO,GAAD,KACE,uBACEvO,MAAO,CACL+K,MAAO,UAGY,SAApBpJ,KAAKzC,MAAMoB,KAAkB,YAAc,YAE9C,kBAAC,IAAD,CACEA,KAAK,eACLT,QAAS8B,KAAKyP,aACdpR,MAAO,CACL+K,MAAO,YAKf6G,OAAQ,CACN,kBAAC,KAAD,CAAQvR,IAAI,OAAOR,QAAS8B,KAAKyP,cAAjC,UAGA,kBAACnD,GAAD,CACE5N,IAAI,SACJyQ,QAASA,EACTjR,QAAS8B,KAAKyO,aACdpQ,MAAO,CAAEwR,WAAY,UAAWzG,MAAO,QAAS0G,OAAQ,SAEnC,SAApB9P,KAAKzC,MAAMoB,KAAkB,OAAS,aAG3Ce,MAAM,SAEN,kBAAC8M,GAAD,CAAiBnO,MAAO,CAAE0B,eAAgB,iBACxC,yBAAKxB,UAAU,iBACb,2BAAO2R,IAAI,eAAe3R,UAAU,SAApC,0BAGA,kBAAC,KAASioB,MAAV,CACEqV,QAAS77B,KAAKzC,MAAMi4C,QACpBnlC,SAAUrQ,KAAKo1C,cACfrtC,MAAO/H,KAAKzC,MAAM+3C,2BAEpB,yBAAKj3C,MAAO,CAAEoB,OAAQ,WAExB,yBAAKlB,UAAU,iBACb,2BAAO2R,IAAI,aAAa3R,UAAU,SAAlC,SAGA,kBAAC,KAAD,CACE4R,GAAG,OACH9I,KAAK,OACL+I,YAAY,kBACZrI,MAAO/H,KAAKzC,MAAMsB,KAClBwR,SAAUrQ,KAAK8N,eAGhBR,EAAOzO,KAAKkK,OAAS,GAAK,yBAAK1K,MAAOoH,IAAQ6H,EAAOzO,MAEtD,yBAAKR,MAAO,CAAEoB,OAAQ,kB,GAtUdS,aAkWPC,gBAnBS,SAAA5C,GAEtB,MAAO,CACL8R,QAAS9R,EAAMgT,mBAAmBC,iBAAiBnB,QACnD1Q,KAAMpB,EAAMgT,mBAAmBC,iBAAiB7R,KAChDiR,cAAerS,EAAMgT,mBAAmBC,iBAAiBZ,kBAIlC,SAAAnP,GACzB,MAAO,CAELiP,kBAAmB,WACjBjP,EAAS,CAAE9B,KAAM0M,KACjB1K,QAAQC,IAAI,yBAKHT,CAA6Cg1C,ICjXtD92C,GAAQ,CACZS,SAAU,SACV2R,WAAY,MACZC,UAAW,OACX1R,QAAS,QAGU22C,G,2MACnB/kC,YAAc,WACZ,EAAK1U,MAAMgT,U,wEAGX,OACE,kBAACnO,GAAD,CAAeG,QAAM,EAACG,aAAW,GAC/B,kBAAC,IAAD,CAAWhD,MAAOA,IAAlB,UACA,kBAAC,GAAD,CAAS6Q,OAAQlP,KAAK4Q,mB,GARY1Q,aCFpC01C,G,2MACJr4C,MAAQ,CACN+T,WAAY,GACZjC,SAAS,EACTxQ,KAAM,QACN8G,KAAM,GACNwK,GAAI,I,EAoBNoB,YAAc,WACZ5M,GAAI,MAAO,WAAY,eAAgB,GAAI,GAAI,IAAIW,MAAK,SAAAqD,GACtDhI,QAAQC,IAAI+H,EAAIhD,MAChB,EAAKuD,SAAS,CACZvD,KAAMgD,EAAIhD,KAAKiD,QAAQitC,iB,EAK7BrmC,UAAY,WACV,EAAKtG,SAAS,CACZmG,SAAS,K,EAIboC,SAAW,SAAA3Q,GACTH,QAAQC,IAAIE,GACZ,EAAKoI,SAAS,CACZmG,SAAS,K,EAIbI,aAAe,SAAA3O,GACbH,QAAQC,IAAIE,GACZ,EAAKoI,SAAS,CACZmG,SAAS,K,EAIbvB,aAAe,SAAC4D,EAAYC,EAASC,GACnCjR,QAAQC,IAAI,qBAAsB8Q,EAAYC,EAASC,GACvD,EAAK1I,SAAS,CACZ2I,aAAcF,EACdG,WAAYF,K,EAIhBG,aAAe,WACb,EAAK7I,SAAS,CAAE2I,aAAc,Q,EAGhCG,SAAW,WACT,EAAK9I,SAAS,CACZ2I,aAAc,KACdC,WAAY,Q,EAIhBG,WAAa,WACX,EAAK/I,SAAS,CACZ4I,WAAY,CACVI,MAAO,UACPC,UAAW,U,oFApEXC,OAAOC,OAAO3S,MAAQ,MACxBiB,QAAQC,IAAI,UACZZ,KAAKkJ,SAAS,CACZrK,KAAM,WAECuT,OAAOC,OAAO3S,MAAQ,MAC/BM,KAAKkJ,SAAS,CACZrK,KAAM,Y,0CAKVmB,KAAKuR,gB,+BA6DEe,GACP3R,QAAQC,IAAI,SAAU0R,K,sCAKRnF,GAAO,IAAD,OACpBxM,QAAQC,IAAIuM,GACZxI,GAAI,SAAU,WAAY,cAAe,GAAI,GAAIwI,GAAM7H,MAAK,SAAAqD,GAC1DhI,QAAQC,IAAI+H,EAAIhD,MAChB,EAAK4L,cACLvE,GAAa,UAAWrE,EAAIhD,KAAKsH,YAEnCtM,QAAQC,IAAIZ,KAAKzC,MAAM4S,M,+BAGf,IAAD,OACDoC,EAAU,CACd,CACE3T,MAAO,OACP4T,UAAW,OACX9T,IAAK,KACLgB,MAAO,MAET,CACEd,MAAO,cACP4T,UAAW,0BACX9T,IAAK,0BACLgB,MAAO,MAET,CACEd,MAAO,gBACPF,IAAK,SACLgB,MAAO,KACP+S,OAAQ,SAAC3L,GAAD,IAAO4L,EAAP,uDAAgB,EAAKnV,MAAMoI,KAA3B,OACN,8BACE,2BACE,kBAAC,IAAD,CACEhH,KAAK,OACLN,MAAO,CAAES,SAAU,YAOvB,kBAAC,KAAD,CAASH,KAAK,aACd,2BACE,kBAAC,KAAD,CACEC,MAAM,wCACNiU,KACE,kBAAC,IAAD,CAAMlU,KAAK,oBAAoBN,MAAO,CAAE+K,MAAO,SAEjD0J,UAAW,EAAKC,gBAAgBH,KAAK,EAAMF,EAAOvC,KAElD,uBAAG6C,KAAK,KACN,kBAAC,IAAD,CACErU,KAAK,SACLN,MAAO,CAAE+K,MAAO,MAAOtK,SAAU,kBAUjD,OACE,kBAAC+R,GAAD,CACE9H,QAAM,EACNnK,MAAO,kBAAM,kBAAC,GAAD,CAASsQ,OAAQ,EAAKqC,eACnChT,UAAU,mBACVgU,QAASA,EACTU,WAAYjT,KAAKzC,MAAMoI,KACvB0K,SAAUrQ,KAAK8N,aACf4D,WAAY,CAAEwB,gBAAiB,GAC/BrU,KAAMmB,KAAKzC,MAAMsB,W,GAhKDqB,aAmLTC,gBAbS,SAAA5C,GAAK,OAAI,QAEN,SAAAkD,GACzB,MAAO,CAELkS,2BAA4B,SAAAD,GAE1BjS,EAAS,CAAE9B,KAAMyM,GAAqB+H,QAAST,IAC/C/R,QAAQC,IAAI8R,OAKHvS,CAA6Cy1C,IC3KtDE,G,YACJ,WAAY55C,GAAQ,IAAD,8BACjB,4CAAMA,KAsBRk5C,cAAgB,SAAAC,GACd10C,QAAQC,IAAI,aAAcy0C,GAC1B,EAAKnsC,SAAS,CACZosC,yBAA0BD,EAAc,KAE1C,EAAKU,kBAAkBV,EAAc,KA5BpB,EA8BnBU,kBAAoB,SAAA5lC,GAClBxL,GACE,MACA,WACA,oCACA,GACA,GACAwL,GACA7K,MAAK,SAAAqD,GACLhI,QAAQC,IAAI+H,EAAIhD,KAAKiD,QAAQuT,uBAC7B,EAAKjT,SAAS,CACZ2N,SAAUlO,EAAIhD,KAAKiD,QAAQuT,4BAzCd,EAoDnBo5B,qBAAuB,WACrB,IAAIC,EAAU,GACd7wC,GACE,MACA,WACA,8CACA,GACA,GjLxEsC,ciL0EtCW,MAAK,SAAAqD,GACL,IAAI8sC,EAAU9sC,EAAIhD,KAAKiD,QAAQqT,sBAC/Btb,QAAQC,IAAI60C,GACZ,IAAK,IAAI3oB,EAAI,EAAGA,EAAI2oB,EAAQ1sC,OAAQ+jB,IAClC0oB,EAAQ38B,KAAK,CACX/Q,MAAO2tC,EAAQ3oB,GAAGzlB,KAClBU,MAAO0tC,EAAQ3oB,GAAG3c,KAGtBxP,QAAQC,IAAI40C,GACZ,EAAKtsC,SAAS,CACZssC,gBAxEa,EA6EnB1nC,aAAe,SAACC,EAAOC,GACrB,EAAK9E,SAAL,gBAAiB8E,EAAQD,EAAME,OAAOlG,QACtC,EAAKmB,SAAS,CAAEgF,SAAU,KAC1BH,EAAMI,iBAHyB,MAIPJ,EAAME,OAAtB5G,EAJuB,EAIvBA,KAAMU,EAJiB,EAIjBA,MACVuF,EAAS,EAAK/P,MAAM+P,OAExB,OADA3M,QAAQC,IAAIyG,EAAO,SAAWU,GACtBV,GACN,IAAK,OACHiG,EAAOzO,KAAwB,IAAjBkJ,EAAMgB,OAAe,sBAAwB,GAM/D,EAAKG,SAAL,cAAgBoE,UAASjG,EAAOU,KA5Ff,EA+FnB0G,aAAe,SAAAV,GAEb,GADAA,EAAMI,iBAC6C,IAA/C,EAAK5Q,MAAM+3C,yBAAyBvsC,OACtC,EAAKG,SAAS,CACZoE,OAAQ,CACNgoC,yBAA0B,uCAGzB,GAC0C,IAA/C,EAAK/3C,MAAM+3C,yBAAyBvsC,QACkB,IAAtD,EAAKxL,MAAM+P,OAAOgoC,yBAAyBvsC,OAE3C,EAAKG,SAAS,CACZoE,OAAQ,CACNooC,2BACE,EAAKn4C,MAAM+3C,0BACX,uCAGD,GAA0D,IAAtD,EAAK/3C,MAAM+P,OAAOgoC,yBAAyBvsC,OAAc,CAClEpI,QAAQC,IAAI,EAAKrD,MAAM+P,QAGvB,IADA,IAAI3H,EAAO,GACFmnB,EAAI,EAAGA,EAAI,EAAKvvB,MAAMsZ,SAAS9N,OAAQ+jB,IAC9CnnB,EAAKkT,KAAK,CACRm9B,YAAa,EAAKz4C,MAAMsZ,SAASiW,GAAG3c,GACpCgM,sBAAuB,EAAK5e,MAAM+3C,yBAClCW,IAAK,EAAK14C,MAAM04C,IAAI,EAAK14C,MAAMsZ,SAASiW,GAAG3c,IAC3C+lC,IAAK,EAAK34C,MAAM24C,IAAI,EAAK34C,MAAMsZ,SAASiW,GAAG3c,MAIvB,QAApB,EAAK5S,MAAMoB,MACbgG,GAAI,OAAQ,WAAY,wBAAyB,GAAIgB,EAAM,IACxDL,MACC,SAAAqD,GACEhI,QAAQC,IAAI+H,EAAIhD,MAEhBsJ,GAAgB,UAAWtG,EAAIhD,KAAKsH,SACpC,EAAK/Q,MAAMgT,SACX,EAAKinC,aAEL,EAAKjtC,SAAS,CACZosC,yBAA0B,GAC1Bz2C,KAAM,GACNo3C,IAAK,GACLC,IAAK,GACLE,SAAU,GACVC,SAAU,GACVnoC,SAAU,GACVmB,SAAS,OAGb,SAAA5J,GAIE9E,QAAQC,IAAI,YAAa6E,MAI5BD,OAAM,SAAAC,GACL,EAAKyD,SAAS,IAGdvI,QAAQC,IAAI6E,MAMlB9E,QAAQC,IAAI+E,GACZhF,QAAQC,IAAI,mBAvKG,EA2KnB4O,UAAY,WACV,EAAKtG,SAAS,CACZmG,SAAS,EACTxQ,KAAM,GACNy2C,yBAA0B,MA/KX,EAmLnB7lC,aAAe,WACW,SAApB,EAAKlS,MAAMoB,MAEb,EAAKzC,MAAMwT,oBAGb,EAAKxG,SAAS,CACZmG,SAAS,EACTP,WAAW,EACXxB,OAAQ,CACNgoC,yBAA0B,IAE5BA,yBAA0B,GAC1Bz2C,KAAM,GACNo3C,IAAK,GACLC,IAAK,GACLE,SAAU,GACVC,SAAU,KAEZ,EAAKF,cAtMY,EAoNnBG,OAAS,SAAC5jC,EAAQ3K,GAChBpH,QAAQC,IAAI8R,GACZ/R,QAAQC,IAAImH,EAAMkG,OAAOlG,OACzB,EAAKxK,MAAM04C,IAAIvjC,EAAOvC,IAAMpI,EAAMkG,OAAOlG,OAvNxB,EAyNnBwuC,OAAS,SAAC7jC,EAAQ3K,GAChB,EAAKxK,MAAM24C,IAAIxjC,EAAOvC,IAAMpI,EAAMkG,OAAOlG,OAtNzC,EAAKxK,MAAQ,CACX4R,SAAS,EACTE,SAAS,EACT/B,OAAQ,CACNgoC,yBAA0B,IAE5BA,yBAA0B,GAC1BI,2BAA4B,GAC5B72C,KAAM,GACNqP,SAAU,GACVvP,KAAM,MACNkY,SAAU,GACVo/B,IAAK,GACLC,IAAK,GACLE,SAAU,GACVC,SAAU,IAnBK,E,iFA8CjBr2C,KAAKu1C,yB,mCAILnjC,OAAO0Y,SAAS5b,W,gDAuJQS,M,+BAmBhB,IAAD,OACPhP,QAAQC,IAAIZ,KAAKzC,MAAM04C,KACvBt1C,QAAQC,IAAIZ,KAAKzC,MAAM04C,IAAI,KAFpB,MAGsBj2C,KAAKzC,MAA1B8R,EAHD,EAGCA,QAASF,EAHV,EAGUA,QACXqnC,EAAU,CACd,CACE53C,MAAO,OACP4T,UAAW,OACX9T,IAAK,QAEP,CACEE,MAAO,YACP4T,UAAW,YACX9T,IAAK,YACL+T,OAAQ,SAAC3L,GAAD,IAAO4L,EAAP,uDAAgB,EAAKnV,MAAMsZ,SAA3B,OACN,kBAAC,KAAD,CACE1G,GAAG,OACH9I,KAAK,OAELgJ,SAAU,SAAAtI,GAAK,OAAI,EAAKwuC,OAAO7jC,EAAQ3K,IACvC1J,MAAO,CAAEqB,MAAO,SAItB,CACEd,MAAO,YACP4T,UAAW,YACX9T,IAAK,YACL+T,OAAQ,SAAC3L,GAAD,IAAO4L,EAAP,uDAAgB,EAAKnV,MAAMsZ,SAA3B,OACN,kBAAC,KAAD,CACE1G,GAAG,OACH9I,KAAK,OAELgJ,SAAU,SAAAtI,GAAK,OAAI,EAAKuuC,OAAO5jC,EAAQ3K,IACvC1J,MAAO,CAAEqB,MAAO,UAKxB,OACE,6BACE,kBAAC4M,GAAD,CACEpO,QAAS8B,KAAKwP,UACdnR,MAAO,CACLwR,WAAY,UACZzG,MAAO,QACP0G,OAAQ,OACRpQ,MAAO,QACPlB,WAAY,UAPhB,4BAYA,kBAAC,KAAD,CACE6Q,QAASA,EACTU,UAAU,EACVZ,QAASA,EACTa,SAAUhQ,KAAKyP,aACf7Q,MACE,kBAACgO,GAAD,KACE,uBACEvO,MAAO,CACL+K,MAAO,UAGY,SAApBpJ,KAAKzC,MAAMoB,KACR,6BACA,6BAEN,kBAAC,IAAD,CACEA,KAAK,eACLT,QAAS8B,KAAKyP,aACdpR,MAAO,CACL+K,MAAO,YAKf6G,OAAQ,CACN,kBAAC,KAAD,CAAQvR,IAAI,OAAOR,QAAS8B,KAAKyP,cAAjC,UAGA,kBAACnD,GAAD,CACE5N,IAAI,SACJyQ,QAASA,EACTjR,QAAS8B,KAAKyO,aACdpQ,MAAO,CAAEwR,WAAY,UAAWzG,MAAO,QAAS0G,OAAQ,SAEnC,SAApB9P,KAAKzC,MAAMoB,KAAkB,OAAS,SAG3Ce,MAAM,SAEN,kBAAC8M,GAAD,CAAiBnO,MAAO,CAAE0B,eAAgB,iBACxC,yBAAKxB,UAAU,iBACb,2BAAO2R,IAAI,eAAe3R,UAAU,SAApC,0BAGA,kBAAC,KAASioB,MAAV,CACEqV,QAAS77B,KAAKzC,MAAMi4C,QACpBnlC,SAAUrQ,KAAKo1C,gBAEjB,yBAAK/2C,MAAO,CAAEoB,OAAQ,WAExB,yBAAKlB,UAAU,iBACb,kBAACsS,GAAD,CACEoC,WAAYjT,KAAKzC,MAAMsZ,SAEvBmW,UAAU,EACVza,QAASikC,EACTzjB,YAAY,EACZrhB,YAAY,EACZshB,OAAQ,CAAE7G,EAAG,KACb9tB,MAAO,CACLoB,OAAQ,OACRC,MAAO,QACP+0B,eAAgB,cAChBC,YAAa,e,GAlVDx0B,aAgXfC,gBAnBS,SAAA5C,GAEtB,MAAO,CACL8R,QAAS9R,EAAMgT,mBAAmBC,iBAAiBnB,QACnD1Q,KAAMpB,EAAMgT,mBAAmBC,iBAAiB7R,KAChDiR,cAAerS,EAAMgT,mBAAmBC,iBAAiBZ,kBAIlC,SAAAnP,GACzB,MAAO,CAELiP,kBAAmB,WACjBjP,EAAS,CAAE9B,KAAM0M,KACjB1K,QAAQC,IAAI,yBAKHT,CAA6C21C,IC5XtDz3C,GAAQ,CACZS,SAAU,SACV2R,WAAY,MACZC,UAAW,OACX1R,QAAS,QAGU22C,G,2MACnB/kC,YAAc,WACZ,EAAK1U,MAAMgT,U,wEAGX,OACE,kBAACnO,GAAD,CAAeG,QAAM,EAACG,aAAW,GAC/B,kBAAC,IAAD,CAAWhD,MAAOA,IAAlB,wBACA,kBAACo4C,GAAD,CAAiBvnC,OAAQlP,KAAK4Q,mB,GARI1Q,aCClCkT,GAAWC,KAAXD,OAEFwiC,G,2MACJr4C,MAAQ,CACN+T,WAAY,GACZjC,SAAS,EACTxQ,KAAM,QACNsQ,SAAS,EACT6uB,UAAU,EACVr4B,KAAM,GACNwK,GAAI,GACJumC,OAAQ,GACRt7B,aAAc,GACdu7B,QAAS,GACTzoB,SAAU,GACVC,SAAU,GACVyoB,aAAc,GACdp7B,kBAAmB,I,EAqBrBjK,YAAc,WACZ,IAAIsF,EAAW,GACflS,GAAI,MAAO,WAAY,yBAA0B,GAAI,GAAI,IAAIW,MAAK,SAAAqD,GAChEhI,QAAQC,IAAI+H,EAAIhD,MAEhB,IADA,IAAIoP,EAAIpM,EAAIhD,KAAKiD,QAAQiuC,oBAChB/pB,EAAI,EAAGA,EAAI/X,EAAEhM,OAAQ+jB,IAC5BjW,EAASgC,KAAK,CACZ1I,GAAI4E,EAAE+X,GAAG3c,GACTtR,KAAMkW,EAAE+X,GAAGigB,UAAUluC,KACrBo3C,IAAKlhC,EAAE+X,GAAGmpB,IACVC,IAAKnhC,EAAE+X,GAAGopB,IACVzM,wBAAyB10B,EAAE+X,GAAGigB,UAAUtD,wBACxCttB,sBAAuBpH,EAAE+X,GAAGigB,UAAU5wB,sBACtCu6B,OAAQ3hC,EAAE+X,GAAGigB,UAAU58B,KAG3B,EAAKjH,SAAS,CACZ2N,iB,EAKNrH,UAAY,WACV,EAAKtG,SAAS,CACZmG,SAAS,K,EAIboC,SAAW,SAAA3Q,GACTH,QAAQC,IAAIE,GACZ,EAAKoI,SAAS,CACZmG,SAAS,K,EAIbI,aAAe,SAAA3O,GACbH,QAAQC,IAAIE,GACZ,EAAKoI,SAAS,CACZmG,SAAS,K,EAIbvB,aAAe,SAACC,EAAOC,GACrB,EAAK9E,SAAL,gBAAiB8E,EAAQD,EAAME,OAAOlG,QAEtCgG,EAAMI,iBAHyB,MAIPJ,EAAME,OAAtB5G,EAJuB,EAIvBA,KAAMU,EAJiB,EAIjBA,MACdpH,QAAQC,IAAIyG,EAAO,SAAWU,GAC9B,EAAKmB,SAAL,gBAAiB7B,EAAOU,K,EAG1BgK,aAAe,WACb,EAAK7I,SAAS,CAAE2I,aAAc,Q,EAGhCG,SAAW,WACT,EAAK9I,SAAS,CACZ2I,aAAc,KACdC,WAAY,Q,EAIhBG,WAAa,WACX,EAAK/I,SAAS,CACZ4I,WAAY,CACVI,MAAO,UACPC,UAAW,U,EAsBjB4tB,WAAa,SAAArtB,GACX/R,QAAQC,IAAI8R,GACZ,EAAKxJ,SAAS,CACZ80B,UAAU,EACV0Y,OAAQhkC,EAAOvC,GACfwmC,QAASjkC,EAAOgkC,OAChBE,aAAclkC,EAAO7T,KACrBuc,aAAc1I,EAAOyJ,sBACrBX,kBAAmB9I,EAAO+2B,wBAC1Bvb,SAAUxb,EAAOujC,IACjB9nB,SAAUzb,EAAOwjC,O,EAGrBjW,cAAgB,WACd,EAAK/2B,SAAS,CACZ80B,UAAU,EACV0Y,OAAQ,GACRt7B,aAAc,GACdu7B,QAAS,GACTzoB,SAAU,GACVC,SAAU,GACVyoB,aAAc,GACdp7B,kBAAmB,M,EAIvBjH,aAAe,SAAClN,EAAMU,GACpBpH,QAAQC,IAAIyG,GACZ1G,QAAQC,IAAImH,GAEC,iBAATV,IACF,EAAK6B,SAAS,CACZkS,aAAcrT,EACdyT,kBAAmBzT,IAErB,EAAKguC,kBAAkBhuC,IAEZ,YAATV,GACF,EAAK6B,SAAS,CACZytC,QAAS5uC,EACT6uC,aAAc7uC,K,EAKpBguC,kBAAoB,SAAA5lC,GAClBxL,GACE,MACA,WACA,qCACA,GACA,GACAwL,GACA7K,MAAK,SAAAqD,GACLhI,QAAQC,IAAI+H,EAAIhD,KAAKiD,QAAQuT,uBAC7B,IACI26B,EADInuC,EAAIhD,KAAKiD,QAAQuT,sBACNxH,KAAI,SAACjP,EAAMkP,GAC5B,OACE,kBAAC,GAAD,CAAQ7M,MAAOrC,EAAKyK,GAAIzR,IAAKkW,GAC1BlP,EAAK7G,SAIZ,EAAKqK,SAAS,CACZ4tC,mB,EAINvB,qBAAuB,WAErB5wC,GACE,MACA,WACA,8CACA,GACA,GnLjNsC,cmLmNtCW,MAAK,SAAAqD,GACL,IAAI8sC,EAAU9sC,EAAIhD,KAAKiD,QAAQqT,sBAC/Btb,QAAQC,IAAI60C,GACZ,IAAIsB,EAAiBtB,EAAQ9gC,KAAI,SAACjP,EAAMkP,GACtC,OACE,kBAAC,GAAD,CAAQ7M,MAAOrC,EAAKyK,GAAIzR,IAAKkW,GAC1BlP,EAAK2B,SAKZ,EAAK6B,SAAS,CACZ6tC,uB,EAINtoC,aAAe,SAAA3N,GAEbA,EAAEqN,iBAEF,IAAMxI,EAAO,CACXwK,GAAI,EAAK5S,MAAMm5C,OACfV,YAAa,EAAKz4C,MAAMo5C,QACxBx6B,sBAAuB,EAAK5e,MAAM6d,aAClC66B,IAAK,EAAK14C,MAAM2wB,SAChBgoB,IAAK,EAAK34C,MAAM4wB,UAElBxtB,QAAQC,IAAI+E,GAEZhB,GAAI,MAAO,WAAY,wBAAyB,GAAIgB,EAAM,IAAIL,MAC5D,SAAAqD,GACEhI,QAAQC,IAAI+H,EAAIhD,MAEhBsJ,GAAgB,UAAWtG,EAAIhD,KAAKsH,SACpC,EAAKsE,cACL,EAAKrI,SAAS,CACZ80B,UAAU,EACV0Y,OAAQ,GACRt7B,aAAc,GACdu7B,QAAS,GACTzoB,SAAU,GACVC,SAAU,GACVyoB,aAAc,GACdp7B,kBAAmB,KAErBpM,YAAW,cAAU,QAEvB,SAAA3J,GACE,EAAKyD,SAAS,IAGdvI,QAAQC,IAAI,YAAa6E,O,oFAzOzB2M,OAAOC,OAAO3S,MAAQ,MACxBiB,QAAQC,IAAI,UACZZ,KAAKkJ,SAAS,CACZrK,KAAM,WAECuT,OAAOC,OAAO3S,MAAQ,MAC/BM,KAAKkJ,SAAS,CACZrK,KAAM,Y,0CAKVmB,KAAKuR,cACLvR,KAAKu1C,yB,+BA2EEjjC,GACP3R,QAAQC,IAAI,SAAU0R,K,sCAKRnF,GAAO,IAAD,OACpBxM,QAAQC,IAAIuM,GACZxI,GAAI,SAAU,WAAY,wBAAyB,GAAI,GAAIwI,GAAM7H,MAC/D,SAAAqD,GACEhI,QAAQC,IAAI+H,EAAIhD,MAChB,EAAK4L,cACLvE,GAAa,UAAWrE,EAAIhD,KAAKsH,YAGrCtM,QAAQC,IAAIZ,KAAKzC,MAAM4S,M,+BAuIf,IAAD,SACuBnQ,KAAKzC,MAA3BygC,EADD,EACCA,SAAU7uB,EADX,EACWA,QACZoD,EAAU,CACd,CACE3T,MAAO,YACP4T,UAAW,OACX9T,IAAK,KACLgB,MAAO,MAET,CACEd,MAAO,gBACP4T,UAAW,MACX9T,IAAK,OACLgB,MAAO,MAET,CACEd,MAAO,gBACP4T,UAAW,MACX9T,IAAK,SACLgB,MAAO,MAET,CACEd,MAAO,cACP4T,UAAW,0BACX9T,IAAK,SACLgB,MAAO,MAET,CACEd,MAAO,gBACPF,IAAK,SACLgB,MAAO,KACP+S,OAAQ,SAAC3L,GAAD,IAAO4L,EAAP,uDAAgB,EAAKnV,MAAMsZ,SAA3B,OACN,8BACE,2BACE,kBAAC,IAAD,CACElY,KAAK,OACLN,MAAO,CAAES,SAAU,SACnBZ,QAAS,EAAK6hC,WAAWntB,KAAK,EAAMF,MAGxC,kBAAC,KAAD,CAAS/T,KAAK,aACd,2BACE,kBAAC,KAAD,CACEC,MAAM,wCACNiU,KACE,kBAAC,IAAD,CAAMlU,KAAK,oBAAoBN,MAAO,CAAE+K,MAAO,SAEjD0J,UAAW,EAAKC,gBAAgBH,KAAK,EAAMF,EAAOvC,KAElD,uBAAG6C,KAAK,KACN,kBAAC,IAAD,CACErU,KAAK,SACLN,MAAO,CAAE+K,MAAO,MAAOtK,SAAU,kBAUjD,OACE,6BACE,kBAAC+R,GAAD,CACE9H,QAAM,EACNnK,MAAO,kBAAM,kBAAC,GAAD,CAAcsQ,OAAQ,EAAKqC,eACxChT,UAAU,mBACVgU,QAASA,EACTU,WAAYjT,KAAKzC,MAAMsZ,SACvBxG,SAAUrQ,KAAK8N,aACf4D,WAAY,CAAEwB,gBAAiB,GAC/BrU,KAAMmB,KAAKzC,MAAMsB,OAEnB,6BACE,kBAAC,KAAD,CACEwQ,QAAS2uB,EACTp/B,MAAM,2BACNmR,UAAU,EACVZ,QAASA,EACTa,SAAUhQ,KAAKigC,cACfhwB,OAAQ,CACN,kBAAC,KAAD,CAAQvR,IAAI,OAAOR,QAAS8B,KAAKigC,eAAjC,UAGA,kBAAC3zB,GAAD,CACE5N,IAAI,SACJyQ,QAASA,EACTjR,QAAS8B,KAAKyO,aACdpQ,MAAO,CACLwR,WAAY,UACZzG,MAAO,QACP0G,OAAQ,SAPZ,SAaFpQ,MAAM,SAEN,kBAAC8M,GAAD,CAAiBnO,MAAO,CAAE0B,eAAgB,iBACxC,yBAAKxB,UAAU,iBACb,2BAAO2R,IAAI,eAAe3R,UAAU,SAApC,0BAGA,kBAAC,KAAD,CACE4R,GAAG,eACH9I,KAAK,eACL+I,YAAY,kBACZ/R,MAAO,CAAEqB,MAAO,KAChBqI,MAAO/H,KAAKzC,MAAMie,kBAClBnL,SAAU,SAAAtI,GAAK,OAAI,EAAKwM,aAAa,eAAgBxM,KAEpD/H,KAAKzC,MAAMw5C,gBAEd,yBAAK14C,MAAO,CAAEoB,OAAQ,WAExB,yBAAKlB,UAAU,iBACb,2BAAO2R,IAAI,aAAa3R,UAAU,SAAlC,SAGA,kBAAC,KAAD,CACE4R,GAAG,UACH9I,KAAK,UACL+I,YAAY,cACZ/R,MAAO,CAAEqB,MAAO,KAChBqI,MAAO/H,KAAKzC,MAAMq5C,aAClBvmC,SAAU,SAAAtI,GAAK,OAAI,EAAKwM,aAAa,UAAWxM,KAE/C/H,KAAKzC,MAAMu5C,YAGd,yBAAKz4C,MAAO,CAAEoB,OAAQ,WAExB,yBAAKlB,UAAU,iBACb,2BAAO2R,IAAI,aAAa3R,UAAU,SAAlC,kBAGA,kBAAC,KAAD,CACE4R,GAAG,WACH9I,KAAK,WACL+I,YAAY,sBACZrI,MAAO/H,KAAKzC,MAAM2wB,SAClB7d,SAAUrQ,KAAK8N,eAEjB,yBAAKzP,MAAO,CAAEoB,OAAQ,WAExB,yBAAKlB,UAAU,iBACb,2BAAO2R,IAAI,aAAa3R,UAAU,SAAlC,kBAGA,kBAAC,KAAD,CACE4R,GAAG,WACH9I,KAAK,WACL+I,YAAY,sBACZrI,MAAO/H,KAAKzC,MAAM4wB,SAClB9d,SAAUrQ,KAAK8N,eAEjB,yBAAKzP,MAAO,CAAEoB,OAAQ,mB,GA/ZdS,aAsbTC,gBAbS,SAAA5C,GAAK,OAAI,QAEN,SAAAkD,GACzB,MAAO,CAELkS,2BAA4B,SAAAD,GAE1BjS,EAAS,CAAE9B,KAAMyM,GAAqB+H,QAAST,IAC/C/R,QAAQC,IAAI8R,OAKHvS,CAA6Cy1C,IC5W7CoB,G,YAhFb,WAAY96C,GAAQ,IAAD,8BACjB,4CAAMA,KAKR+6C,YAAc,WACZ,EAAK/6C,MAAMyC,KAAK,cAPC,EAUnBu4C,sBAAwB,WACtB,EAAKh7C,MAAMyC,KAAK,sBAXC,EAcnBw4C,gBAAkB,WAChB,EAAKj7C,MAAMyC,KAAK,kBAbhB,EAAKpB,MAAQ,CACXyL,QAAQ,GAHO,E,sEAmBjB,OACE,kBAACsC,GAAD,KACE,kBAAC,GAAD,CACE1H,cAAY,EACZ8G,cAAY,EACZ7L,KAAK,QACLiN,WAAW,EACX5N,QAAS8B,KAAKi3C,aAEd,kBAAC1rC,GAAD,mBACA,kBAACK,GAAD,KACE,kBAAC,IAAD,CACEI,QAAM,EACNrN,KAAK,OACLN,MAAO,CAAE+K,MAAO,MAAOtK,SAAU,YAIvC,kBAAC,GAAD,CACE8E,cAAY,EACZ8G,cAAY,EAEZoB,WAAW,EACX5N,QAAS8B,KAAKk3C,uBAEd,kBAAC3rC,GAAD,CAAcV,YAAU,EAACY,MAAI,GAA7B,wBAGA,kBAACG,GAAD,KACE,kBAAC,IAAD,CACEI,QAAM,EACNrN,KAAK,OACLN,MAAO,CAAE+K,MAAO,MAAOtK,SAAU,YAIvC,kBAAC,GAAD,CACE8E,cAAY,EACZ8G,cAAY,EACZ7L,KAAK,QACLiN,WAAW,EACX5N,QAAS8B,KAAKm3C,iBAEd,kBAAC5rC,GAAD,CAAcI,kBAAgB,EAACF,MAAI,GAAnC,oBAGA,kBAACG,GAAD,KACE,kBAAC,IAAD,CACEI,QAAM,EACNrN,KAAK,OACLN,MAAO,CAAE+K,MAAO,MAAOtK,SAAU,iB,GAtEjBoB,aCQxBuF,GAAQ,CACZ2D,MAAO,MACPtK,SAAU,OACVY,MAAO,QACPD,OAAQ,OAGJ23C,G,YACJ,WAAYl7C,GAAQ,IAAD,8BACjB,4CAAMA,KAmBRk5C,cAAgB,SAAAC,GACd10C,QAAQC,IAAI,aAAcy0C,GAC1B,EAAKnsC,SAAS,CACZosC,yBAA0BD,KAvBX,EA6BnBE,qBAAuB,WACrB,IAAIC,EAAU,GACd7wC,GACE,MACA,WACA,8CACA,GACA,GrLvDsC,cqLyDtCW,MAAK,SAAAqD,GACL,IAAI8sC,EAAU9sC,EAAIhD,KAAKiD,QAAQqT,sBAC/Btb,QAAQC,IAAI60C,GACZ,IAAK,IAAI3oB,EAAI,EAAGA,EAAI2oB,EAAQ1sC,OAAQ+jB,IAClC0oB,EAAQ38B,KAAK,CACX/Q,MAAO2tC,EAAQ3oB,GAAGzlB,KAClBU,MAAO0tC,EAAQ3oB,GAAG3c,KAGtBxP,QAAQC,IAAI40C,GACZ,EAAKtsC,SAAS,CACZssC,gBAjDa,EAsDnB1nC,aAAe,SAACC,EAAOC,GACrB,EAAK9E,SAAL,gBAAiB8E,EAAQD,EAAME,OAAOlG,QACtC,EAAKmB,SAAS,CAAEgF,SAAU,KAC1BH,EAAMI,iBAHyB,MAIPJ,EAAME,OAAtB5G,EAJuB,EAIvBA,KAAMU,EAJiB,EAIjBA,MACVuF,EAAS,EAAK/P,MAAM+P,OAExB,OADA3M,QAAQC,IAAIyG,EAAO,SAAWU,GACtBV,GACN,IAAK,WACHiG,EAAO+pC,SAA4B,IAAjBtvC,EAAMgB,OAAe,2BAA6B,GACpE,MACF,IAAK,WACHuE,EAAOgqC,SAA4B,IAAjBvvC,EAAMgB,OAAe,2BAA6B,GAMxE,EAAKG,SAAL,cAAgBoE,UAASjG,EAAOU,KAxEf,EA2EnB0G,aAAe,SAAAV,GAEb,GADAA,EAAMI,iBAE2B,IAA/B,EAAK5Q,MAAM+5C,SAASvuC,QACW,IAA/B,EAAKxL,MAAM85C,SAAStuC,QAC2B,IAA/C,EAAKxL,MAAM+3C,yBAAyBvsC,OAEpC,EAAKG,SAAS,CACZoE,OAAQ,CACNgqC,SAAU,sBACVD,SAAU,sBACV/B,yBAA0B,uCAGzB,GAC0B,IAA/B,EAAK/3C,MAAM+5C,SAASvuC,QACkB,IAAtC,EAAKxL,MAAM+P,OAAOgqC,SAASvuC,OAE3B,EAAKG,SAAS,CACZoE,OAAQ,CACNgqC,SAAU,EAAK/5C,MAAM+5C,UAAY,sBACjCD,SAAU,EAAK95C,MAAM85C,SACrB/B,yBAA0B,EAAK/3C,MAAM+3C,iCAGpC,GAC0B,IAA/B,EAAK/3C,MAAM85C,SAAStuC,QACkB,IAAtC,EAAKxL,MAAM+P,OAAO+pC,SAAStuC,OAE3B,EAAKG,SAAS,CACZoE,OAAQ,CACN+pC,SAAU,EAAK95C,MAAM85C,UAAY,sBACjCC,SAAU,EAAK/5C,MAAM+5C,SACrBhC,yBAA0B,EAAK/3C,MAAM+3C,iCAGpC,GAC0C,IAA/C,EAAK/3C,MAAM+3C,yBAAyBvsC,QACkB,IAAtD,EAAKxL,MAAM+P,OAAOgoC,yBAAyBvsC,OAE3C,EAAKG,SAAS,CACZoE,OAAQ,CACN+pC,SAAU,EAAK95C,MAAM85C,SACrBC,SAAU,EAAK/5C,MAAM+5C,SACrB5B,2BACE,EAAKn4C,MAAM+3C,0BACX,uCAGD,GACiC,IAAtC,EAAK/3C,MAAM+P,OAAOgqC,SAASvuC,QACW,IAAtC,EAAKxL,MAAM+P,OAAO+pC,SAAStuC,QAC2B,IAAtD,EAAKxL,MAAM+P,OAAOgoC,yBAAyBvsC,OAC3C,CACApI,QAAQC,IAAI,EAAKrD,MAAM+P,QAEvB,IAAM3H,EAAO,CACXswC,IAAK,EAAK14C,MAAM+5C,SAChBpB,IAAK,EAAK34C,MAAM85C,SAChBl7B,sBAAuB,EAAK5e,MAAM+3C,yBAAyB,IAErC,QAApB,EAAK/3C,MAAMoB,MACbgG,GAAI,OAAQ,WAAY,oBAAqB,GAAIgB,EAAM,IACpDL,MACC,SAAAqD,GACEhI,QAAQC,IAAI+H,EAAIhD,MAEhBsJ,GAAgB,UAAWtG,EAAIhD,KAAKsH,SACpC,EAAK/Q,MAAMgT,SAEX,EAAKhG,SAAS,CACZwsC,2BAA4B,GAC5BJ,yBAA0B,GAC1B+B,SAAU,GACVC,SAAU,GACV34C,KAAM,MACN0Q,SAAS,EACTnB,SAAU,QAGd,SAAAzI,GAIE9E,QAAQC,IAAI,YAAa6E,MAI5BD,OAAM,SAAAC,GACL,EAAKyD,SAAS,IAGdvI,QAAQC,IAAI6E,MAiDlB9E,QAAQC,IAAI+E,GACZhF,QAAQC,IAAI,mBAzNG,EA6NnB4O,UAAY,WACV,EAAKtG,SAAS,CACZmG,SAAS,EACTqmC,2BAA4B,GAC5BJ,yBAA0B,GAC1B+B,SAAU,GACVC,SAAU,GACV34C,KAAM,SApOS,EAwOnB8Q,aAAe,WACW,SAApB,EAAKlS,MAAMoB,MAEb,EAAKzC,MAAMwT,oBAGb,EAAKxG,SAAS,CACZmG,SAAS,EACTP,WAAW,EACXxB,OAAQ,CACNgoC,yBAA0B,GAC1B+B,SAAU,GACVC,SAAU,IAEZ5B,2BAA4B,GAC5BJ,yBAA0B,GAC1B+B,SAAU,GACVC,SAAU,GACV34C,KAAM,SAvPR,EAAKpB,MAAQ,CACX4R,SAAS,EACTE,SAAS,EACT/B,OAAQ,CACNgoC,yBAA0B,GAC1B+B,SAAU,GACVC,SAAU,IAEZ5B,2BAA4B,GAC5BJ,yBAA0B,GAC1B+B,SAAU,GACVC,SAAU,GACVppC,SAAU,GACVvP,KAAM,OAhBS,E,iFA2BjBqB,KAAKu1C,yB,gDAmOmB5lC,M,+BAWhB,IAAD,EACsB3P,KAAKzC,MAA1B8R,EADD,EACCA,QAASF,EADV,EACUA,QACT7B,EAAWtN,KAAKzC,MAAhB+P,OACR,OACE,6BACE,kBAAChB,GAAD,CACEpO,QAAS8B,KAAKwP,UACdnR,MAAO,CACLwR,WAAY,UACZzG,MAAO,QACP0G,OAAQ,OACRpQ,MAAO,QACPlB,WAAY,UAPhB,wBAYA,kBAAC,KAAD,CACE6Q,QAASA,EACTU,UAAU,EACVZ,QAASA,EACTa,SAAUhQ,KAAKyP,aACf7Q,MACE,kBAACgO,GAAD,KACE,uBACEvO,MAAO,CACL+K,MAAO,UAGY,SAApBpJ,KAAKzC,MAAMoB,KACR,wBACA,wBAEN,kBAAC,IAAD,CACEA,KAAK,eACLT,QAAS8B,KAAKyP,aACdpR,MAAO,CACL+K,MAAO,YAKf6G,OAAQ,CACN,kBAAC,KAAD,CAAQvR,IAAI,OAAOR,QAAS8B,KAAKyP,cAAjC,UAGA,kBAACnD,GAAD,CACE5N,IAAI,SACJyQ,QAASA,EACTjR,QAAS8B,KAAKyO,aACdpQ,MAAO,CAAEwR,WAAY,UAAWzG,MAAO,QAAS0G,OAAQ,SAEnC,SAApB9P,KAAKzC,MAAMoB,KAAkB,OAAS,SAG3Ce,MAAM,SAEN,kBAAC8M,GAAD,CAAiBnO,MAAO,CAAE0B,eAAgB,iBACxC,6BACE,yBAAKxB,UAAU,iBACb,2BAAO2R,IAAI,eAAe3R,UAAU,SAApC,0BAGA,kBAAC,KAASioB,MAAV,CACEqV,QAAS77B,KAAKzC,MAAMi4C,QACpBnlC,SAAUrQ,KAAKo1C,cACfrtC,MAAO/H,KAAKzC,MAAM+3C,2BAEpB,yBAAKj3C,MAAO,CAAEoB,OAAQ,WAExB,yBAAKpB,MAAO,CAAEuB,QAAS,OAAQC,cAAe,QAC5C,yBAAKtB,UAAU,iBACb,2BAAO2R,IAAI,aAAa3R,UAAU,SAAlC,iBAGA,kBAAC,KAAD,CACE4R,GAAG,WACH9I,KAAK,WACL+I,YAAY,kBACZrI,MAAO/H,KAAKzC,MAAM+5C,SAClBjnC,SAAUrQ,KAAK8N,eAGhBR,EAAOgqC,SAASvuC,OAAS,GACxB,yBAAK1K,MAAOoH,IAAQ6H,EAAOgqC,UAG7B,yBAAKj5C,MAAO,CAAEoB,OAAQ,WAExB,yBAAKlB,UAAU,iBACb,2BAAO2R,IAAI,aAAa3R,UAAU,SAAlC,iBAGA,kBAAC,KAAD,CACE4R,GAAG,WACH9I,KAAK,WACL+I,YAAY,kBACZrI,MAAO/H,KAAKzC,MAAM85C,SAClBhnC,SAAUrQ,KAAK8N,eAGhBR,EAAO+pC,SAAStuC,OAAS,GACxB,yBAAK1K,MAAOoH,IAAQ6H,EAAO+pC,UAG7B,yBAAKh5C,MAAO,CAAEoB,OAAQ,oB,GAnXdS,aAiZXC,gBAnBS,SAAA5C,GAEtB,MAAO,CACL8R,QAAS9R,EAAMgT,mBAAmBC,iBAAiBnB,QACnD1Q,KAAMpB,EAAMgT,mBAAmBC,iBAAiB7R,KAChDiR,cAAerS,EAAMgT,mBAAmBC,iBAAiBZ,kBAIlC,SAAAnP,GACzB,MAAO,CAELiP,kBAAmB,WACjBjP,EAAS,CAAE9B,KAAM0M,KACjB1K,QAAQC,IAAI,yBAKHT,CAA6Ci3C,ICpatD/4C,GAAQ,CACZS,SAAU,SACV2R,WAAY,MACZC,UAAW,OACX1R,QAAS,QAGUu4C,G,2MACnB3mC,YAAc,WACZ,EAAK1U,MAAMgT,U,wEAGX,OACE,kBAACnO,GAAD,CAAeG,QAAM,EAACG,aAAW,GAC/B,kBAAC,IAAD,CAAWhD,MAAOA,IAAlB,oBACA,kBAACm5C,GAAD,CAAWtoC,OAAQlP,KAAK4Q,mB,GARW1Q,aCHrCu3C,G,2MACJl6C,MAAQ,CACN+T,WAAY,GACZjC,SAAS,EACTxQ,KAAM,QACN8G,KAAM,GACNwK,GAAI,I,EAoBNoB,YAAc,WACZ,IAAIsF,EAAW,GACflS,GAAI,MAAO,WAAY,oBAAqB,GAAI,GAAI,IAAIW,MAAK,SAAAqD,GAC3DhI,QAAQC,IAAI+H,EAAIhD,MAEhB,IADA,IAAIoP,EAAIpM,EAAIhD,KAAKiD,QAAQ8uC,gBAChB5qB,EAAI,EAAGA,EAAI/X,EAAEhM,OAAQ+jB,IAC5BjW,EAASgC,KAAK,CACZ1I,GAAI4E,EAAE+X,GAAG3c,GACT8lC,IAAKlhC,EAAE+X,GAAGmpB,IACVC,IAAKnhC,EAAE+X,GAAGopB,IACVzM,wBAAyB10B,EAAE+X,GAAGnQ,oBAAoBtV,OAGtD,EAAK6B,SAAS,CACZ2N,iB,EAKNrH,UAAY,WACV,EAAKtG,SAAS,CACZmG,SAAS,K,EAIboC,SAAW,SAAA3Q,GACTH,QAAQC,IAAIE,GACZ,EAAKoI,SAAS,CACZmG,SAAS,K,EAIbI,aAAe,SAAA3O,GACbH,QAAQC,IAAIE,GACZ,EAAKoI,SAAS,CACZmG,SAAS,K,EAIbvB,aAAe,SAAC4D,EAAYC,EAASC,GACnCjR,QAAQC,IAAI,qBAAsB8Q,EAAYC,EAASC,GACvD,EAAK1I,SAAS,CACZ2I,aAAcF,EACdG,WAAYF,K,EAIhBG,aAAe,WACb,EAAK7I,SAAS,CAAE2I,aAAc,Q,EAGhCG,SAAW,WACT,EAAK9I,SAAS,CACZ2I,aAAc,KACdC,WAAY,Q,EAIhBG,WAAa,WACX,EAAK/I,SAAS,CACZ4I,WAAY,CACVI,MAAO,UACPC,UAAW,U,oFA9EXC,OAAOC,OAAO3S,MAAQ,MACxBiB,QAAQC,IAAI,UACZZ,KAAKkJ,SAAS,CACZrK,KAAM,WAECuT,OAAOC,OAAO3S,MAAQ,MAC/BM,KAAKkJ,SAAS,CACZrK,KAAM,Y,0CAKVmB,KAAKuR,gB,+BAuEEe,GACP3R,QAAQC,IAAI,SAAU0R,K,sCAKRnF,GAAO,IAAD,OACpBxM,QAAQC,IAAIuM,GACZxI,GAAI,SAAU,WAAY,oBAAqB,GAAI,GAAIwI,GAAM7H,MAAK,SAAAqD,GAChEhI,QAAQC,IAAI+H,EAAIhD,MAChB,EAAK4L,cACLvE,GAAa,UAAWrE,EAAIhD,KAAKsH,YAEnCtM,QAAQC,IAAIZ,KAAKzC,MAAM4S,M,+BAGf,IAAD,OACDoC,EAAU,CACd,CACE3T,MAAO,cACP4T,UAAW,0BACX9T,IAAK,SACLgB,MAAO,MAET,CACEd,MAAO,gBACP4T,UAAW,MACX9T,IAAK,OACLgB,MAAO,MAET,CACEd,MAAO,gBACP4T,UAAW,MACX9T,IAAK,SACLgB,MAAO,MAGT,CACEd,MAAO,gBACPF,IAAK,SACLgB,MAAO,KACP+S,OAAQ,SAAC3L,GAAD,IAAO4L,EAAP,uDAAgB,EAAKnV,MAAMsZ,SAA3B,OACN,8BACE,2BACE,kBAAC,IAAD,CACElY,KAAK,OACLN,MAAO,CAAES,SAAU,YAOvB,kBAAC,KAAD,CAASH,KAAK,aACd,2BACE,kBAAC,KAAD,CACEC,MAAM,wCACNiU,KACE,kBAAC,IAAD,CAAMlU,KAAK,oBAAoBN,MAAO,CAAE+K,MAAO,SAEjD0J,UAAW,EAAKC,gBAAgBH,KAAK,EAAMF,EAAOvC,KAElD,uBAAG6C,KAAK,KACN,kBAAC,IAAD,CACErU,KAAK,SACLN,MAAO,CAAE+K,MAAO,MAAOtK,SAAU,kBAUjD,OACE,kBAAC+R,GAAD,CACE9H,QAAM,EACNnK,MAAO,kBAAM,kBAAC,GAAD,CAAesQ,OAAQ,EAAKqC,eACzChT,UAAU,mBACVgU,QAASA,EACTU,WAAYjT,KAAKzC,MAAMsZ,SACvBxG,SAAUrQ,KAAK8N,aACf4D,WAAY,CAAEwB,gBAAiB,GAC/BrU,KAAMmB,KAAKzC,MAAMsB,W,GAjLKqB,aAoMfC,gBAbS,SAAA5C,GAAK,OAAI,QAEN,SAAAkD,GACzB,MAAO,CAELkS,2BAA4B,SAAAD,GAE1BjS,EAAS,CAAE9B,KAAMyM,GAAqB+H,QAAST,IAC/C/R,QAAQC,IAAI8R,OAKHvS,CAA6Cs3C,ICtMvCE,G,2MACnBp6C,MAAQ,CACNoB,KAAM,I,EAGRoe,WAAa,SAAApe,GACXgC,QAAQC,IAAIjC,GACZ,EAAKuK,SAAS,CAAEvK,KAAMA,K,wEAItB,OACE,kBAACoC,GAAD,CAAeO,oBAAkB,GAC/B,kBAAC,GAAD,CAAiB3C,KAAMqB,KAAK+c,aAEP,cAApB/c,KAAKzC,MAAMoB,KACV,kBAAC,GAAD,MACsB,kBAApBqB,KAAKzC,MAAMoB,KACb,kBAAC,GAAD,MAEA,kBAACi5C,GAAD,W,GApB2B13C,aCAhBwsC,G,2MACnBnvC,MAAQ,CACN6rC,WAAY,I,EAMdI,WAAa,SAAA92B,GACXskB,GAAQne,KAAR,sBAA4BnG,EAAOvF,OAEnCxM,QAAQC,IAAI8R,I,EAGd62B,OAAS,WACP,IAAM1yB,EAAW,GACjBlS,GAAI,MAAO,WAAY,oBAAqB,GAAI,GAAI,IAAIW,MAAK,SAAAqD,GAC3DhI,QAAQC,IAAI+H,EAAIhD,MAChBgD,EAAIhD,KAAKiD,QAAQC,gBAAgB8L,KAAI,SAACjP,EAAMkP,GAC1CiC,EAASgC,KAAK,CACZ1L,KAAMzH,EAAKyH,KACXw6B,UAAWjiC,EAAKiiC,UAChBvJ,KAAM14B,EAAK04B,KACXp1B,OAAQtD,EAAKsD,OACb62B,gBAAiBn6B,EAAKuD,YAAY5B,KAClC+U,OAAQ1W,EAAKuD,YAAYmT,OACzBqtB,wBAAyB/jC,EAAKuD,YAAY0T,oBAAoBtV,KAC9D+N,UAAW1P,EAAK0I,MAAM/G,KACtBkf,aAAc7gB,EAAK2e,SAAShd,UAGhC,EAAK6B,SAAS,CACZkgC,WAAYvyB,Q,mFA3BhBlW,QAAQC,IAAIZ,KAAK9D,MAAM4xB,QACvB9tB,KAAKupC,W,+BA8BG,IAAD,OACDh3B,EAAU,CACd,CACE3T,MAAO,cACP4T,UAAW,OACX9T,IAAK,OACLgB,MAAO,OAET,CACEd,MAAO,OACP4T,UAAW,kBACX9T,IAAK,kBACLgB,MAAO,OAET,CACEd,MAAO,iBACP4T,UAAW,YACX9T,IAAK,YACLgB,MAAO,OAET,CACEd,MAAO,OACP4T,UAAW,OACX9T,IAAK,OACLgB,MAAO,OAET,CACEd,MAAO,QACP4T,UAAW,YACX9T,IAAK,YACLgB,MAAO,OAET,CACEd,MAAO,WACP4T,UAAW,eACX9T,IAAK,cACLgB,MAAO,OAET,CACEd,MAAO,SACP4T,UAAW,SACX9T,IAAK,SACLgB,MAAO,MACP+S,OAAQ,SAAAzJ,GAAM,OACZ,8BAEI,kBAAC,KAAD,CACEI,MACa,SAAXJ,EACI,QACW,YAAXA,EACA,SACW,QAAXA,EACA,SACA,OAGLA,MAMX,CACEpK,MAAO,OACPF,IAAK,OACLgB,MAAO,MACP+S,OAAQ,eAACC,EAAD,uDAAU,EAAKnV,MAAM6rC,WAArB,OACN,kBAAC,KAAD,CAAQlrC,QAAS,EAAKsrC,WAAW52B,KAAK,EAAMF,IAA5C,WAIN,OACE,kBAAC7B,GAAD,CACEjS,MAAO,kBACL,yBAAKP,MAAO,CAAEoB,OAAQ,WAIxB8S,QAASA,EACTU,WAAYjT,KAAKzC,MAAM6rC,WACvB/qC,MAAO,CAAEwR,WAAY,QAASnQ,MAAO,SAAU6J,UAAW,SAC1D1K,KAAK,QACL6qC,MAAO,SAACh3B,EAAQi3B,GACd,MAAO,CAELC,cAAe,SAAA77B,GACb,EAAKy7B,WAAW92B,Y,GA3HexS,aCKrCkT,GAAWC,KAAXD,OAcaykC,G,YACnB,WAAY37C,GAAQ,IAAD,8BACjB,4CAAMA,KAkCR4R,aAAe,SAACC,EAAOC,GACrB,EAAK9E,SAAL,gBAAiB8E,EAAQD,EAAME,OAAOlG,QAEtCgG,EAAMI,iBAHyB,MAIPJ,EAAME,OAAtB5G,EAJuB,EAIvBA,KAAMU,EAJiB,EAIjBA,MACVuF,EAAS,EAAK/P,MAAM+P,OACxB3M,QAAQC,IAAIyG,EAAO,SAAWU,GAoB9B,EAAKmB,SAAL,cAAgBoE,UAASjG,EAAOU,KA7Df,EA+DnB+vC,iBAAmB,SAAA/vC,GACE,EAAKxK,MAAhB+P,OACR3M,QAAQC,IAAImH,GACZ,EAAKmB,SAAS,CACZwuC,gBAAiB3vC,KAnEF,EAsEnBgwC,gBAAkB,SAAAhwC,GACG,EAAKxK,MAAhB+P,OACR3M,QAAQC,IAAImH,GACZ,EAAKmB,SAAS,CACZ8uC,UAAWjwC,KA1EI,EA6EnBgrC,mBAAqB,SAAAhrC,GACA,EAAKxK,MAAhB+P,OACR3M,QAAQC,IAAImH,GACZ,EAAKmB,SAAS,CACZikC,YAAaplC,KAjFE,EAqFnBwM,aAAe,SAAClN,EAAMU,GACpBpH,QAAQC,IAAIyG,GACZ1G,QAAQC,IAAImH,GAEC,UAATV,GACF,EAAK6B,SAAS,CACZ+L,UAAWlN,IAIF,SAATV,GACF,EAAK6B,SAAS,CACZ4b,OAAQ/c,KAjGK,EA8HnBke,WAAa,WACXthB,GAAI,MAAO,WAAY,SAAU,GAAI,GAAI,IAAIW,MAAK,SAAAqD,GAGhD,GAFAhI,QAAQC,IAAI+H,EAAIhD,MAEZgD,EAAIhD,KAAKiD,QAAQic,KAAK9b,OAAS,EAAG,CACpC,IAAImd,EAAavd,EAAIhD,KAAKiD,QAAQic,KAAKlQ,KAAI,SAACjP,EAAMkP,GAEhD,OADAjU,QAAQC,IAAI,cAEV,kBAAC,GAAD,CAAQmH,MAAOrC,EAAKyK,GAAIzR,IAAKkW,GAC1BlP,EAAKygB,aAIZ,EAAKjd,SAAS,CACZgd,oBA5IW,EAkJnB+xB,cAAgB,WACdtzC,GACE,MACA,WACA,mBACA,GACA,GACA,EAAKpH,MAAMunC,oBACXx/B,MAAK,SAAAqD,GACLhI,QAAQC,IAAI+H,EAAIhD,KAAKiD,QAAQw8B,gBAC7B,IAAIj1B,EACFxH,EAAIhD,KAAKiD,QAAQw8B,eAAen8B,YAAY0T,oBAAoBxM,GAClExP,QAAQC,IACN+H,EAAIhD,KAAKiD,QAAQw8B,eAAen8B,YAAY0T,oBAAoBxM,IAElE,EAAK+nC,eAAe/nC,OAjKL,EAwKnB+nC,eAAiB,SAAA/nC,GACfxL,GACE,MACA,WACA,oCACA,GACA,GACAwL,GACA7K,MAAK,SAAAqD,GACLhI,QAAQC,IAAI+H,EAAIhD,MAEhB,EAAKuD,SAAS,CACZ2N,SAAUlO,EAAIhD,KAAKiD,QAAQuT,4BApLd,EAwLnB1N,aAAe,SAAA3N,GAEbA,EAAEqN,iBAFgB,MAad,EAAK5Q,MATP4P,EAJgB,EAIhBA,KACAixB,EALgB,EAKhBA,KACAsZ,EANgB,EAMhBA,gBACA1uC,EAPgB,EAOhBA,OACA8b,EARgB,EAQhBA,OACA7P,EATgB,EAShBA,UACA6vB,EAVgB,EAUhBA,mBACAkT,EAXgB,EAWhBA,UACA7K,EAZgB,EAYhBA,YAGIxnC,EAAO,CACXwH,KAAMA,EACNixB,KAAMpe,KAAOoe,GAAMne,OAAO,cAC1By3B,gBAAiBA,EACjB1uC,OAAQA,EACR8b,OAAQA,EACR7P,UAAWA,EACX6vB,mBAAoBA,EACpBkT,UAAWA,EACX7K,YAAaA,GAEfxoC,GAAI,OAAQ,WAAY,cAAe,GAAIgB,EAAM,IAAIL,MAAK,SAAAqD,GACxDhI,QAAQC,IAAI+H,EAAIhD,MAChBqH,GAAa,UAAWrE,EAAIhD,KAAKsH,SACjC,EAAK/D,SAAS,CACZmpC,WAAY1pC,EAAIhD,KAAKqD,OACrBspC,SAAS,OAIb3xC,QAAQC,IAAI+E,IA3NK,EA8NnB2wC,OAAS,SAAC5jC,EAAQ3K,GAChBpH,QAAQC,IAAI8R,GACZ/R,QAAQC,IAAImH,EAAMkG,OAAOlG,OACzB,EAAKxK,MAAM46C,OAAOzlC,EAAOvC,IAAMpI,EAAMkG,OAAOlG,MAC5C,EAAKmB,SAAS,CACZgF,SAAU,MAnOK,EAuOnBkqC,kBAAoB,WAElB,IADA,IAAIzyC,EAAO,GACFmnB,EAAI,EAAGA,EAAI,EAAKvvB,MAAMsZ,SAAS9N,OAAQ+jB,IAC9CnnB,EAAKkT,KAAK,CACRo0B,mBAAoB,EAAK1vC,MAAM46C,OAAO,EAAK56C,MAAMsZ,SAASiW,GAAG3c,IAC7D28B,cAAe,EAAKvvC,MAAM4P,KAC1B6oC,YAAa,EAAKz4C,MAAMsZ,SAASiW,GAAG3c,KAGxCxP,QAAQC,IAAI+E,GACR,EAAKpI,MAAM46C,OAAOpvC,OAAS,EAC7BpE,GAAI,OAAQ,WAAY,oBAAqB,GAAIgB,EAAM,IAAIL,MAAK,SAAAqD,GAC9DhI,QAAQC,IAAI+H,EAAIhD,MAChBqH,GAAa,UAAWrE,EAAIhD,KAAKsH,SACjC,EAAK/D,SAAS,CACZivC,OAAQ,KAEV,EAAKvL,6BAGP,EAAK1jC,SAAS,CACZgF,SAAU,uCA5PG,EAiQnB0+B,wBAA0B,WACxB,IAAIC,EAAa,GACjBloC,GACE,MACA,WACA,+BACA,GACA,GACA,EAAKpH,MAAM4P,MACX7H,MAAK,SAAAqD,GACL,IAAIoM,EAAIpM,EAAIhD,KAAKiD,QAAQkkC,cACzBnsC,QAAQC,IAAI+H,EAAIhD,KAAKiD,QAAQkkC,eAC7B,IAAK,IAAIhgB,EAAI,EAAGA,EAAI/X,EAAEhM,OAAQ+jB,IAC5B+f,EAAWh0B,KAAK,CACdha,KAAMkW,EAAE+X,GAAGigB,UAAUluC,KACrBmuC,mBAAoBj4B,EAAE+X,GAAGkgB,mBACzBC,mBAAoBl4B,EAAE+X,GAAGmgB,mBACzBC,QAASn4B,EAAE+X,GAAGogB,QACdC,YAAap4B,EAAE+X,GAAGsgB,UAAUD,YAC5BnkC,OAAQ+L,EAAE+X,GAAGsgB,UAAUpkC,SAGvB6jC,EAAW9jC,OAAS,GACtB,EAAKG,SAAS,CACZikC,YAAaN,EAAW,GAAGM,YAC3BnkC,OAAQ6jC,EAAW,GAAG7jC,SAI1B,EAAKE,SAAS,CACZ2jC,mBA5RJ,EAAKtvC,MAAQ,CACX4P,KAAM,GACNixB,KAAM,GACNsZ,gBAAiB,GACjB1uC,OAAQ,MACR8b,OAAQ,GACR7P,UAAW,GACX6vB,mBAAoB,EAAK5oC,MAAM4tC,MAAM5lC,OAAOwuC,SAC5CsF,UAAW,GACX7K,YAAa,EACbgL,OAAQ,GACR7F,SAAS,EACTD,WAAY,GACZnkC,SAAU,GACVkoC,SAAU,IAjBK,E,yEAqBP/uC,EAAMiZ,EAAYtS,GACThO,KAAKzC,MAAhB+P,OACR3M,QAAQC,IAAIyG,GACZ1G,QAAQC,IAAI0f,GACZ3f,QAAQC,IAAIoN,GACZ,IAAIuS,EAAgBP,KAAOM,GAAYL,OAAO,cAC9Ctf,QAAQC,IAAI2f,GACC,SAATlZ,GACFrH,KAAKkJ,SAAS,CACZk1B,KAAM9d,M,0CAyEVtgB,KAAKuV,cACLvV,KAAKimB,aACLjmB,KAAKi4C,kB,oCAGQ,IAAD,OACZtzC,GAAI,MAAO,WAAY,UAAW,GAAI,GAAI,IAAIW,MAAK,SAAAqD,GAEjD,GADAhI,QAAQC,IAAI+H,EAAIhD,KAAKiD,QAAQ4I,OAAOzI,QAChCJ,EAAIhD,KAAKiD,QAAQ4I,OAAOzI,OAAS,EAAG,CACtCpI,QAAQC,IAAI,OACZ,IAAI0U,EAAe3M,EAAIhD,KAAKiD,QAAQ4I,OAAOmD,KAAI,SAACjP,EAAMkP,GACpD,OACE,kBAAC,GAAD,CAAQ7M,MAAOrC,EAAKyH,KAAMzO,IAAKkW,GAC5BlP,EAAK2B,SAIZ,EAAK6B,SAAS,CACZoM,uB,+BA2KE,IAAD,aAWHtV,KAAKzC,MATP4P,EAFK,EAELA,KACAixB,EAHK,EAGLA,KACAsZ,EAJK,EAILA,gBACA1uC,EALK,EAKLA,OACA8b,EANK,EAMLA,OACA7P,EAPK,EAOLA,UAEA+iC,GATK,EAQLlT,mBARK,EASLkT,WACA7K,EAVK,EAULA,YAEIqJ,EAAU,CACd,CACE53C,MAAO,OACP4T,UAAW,OACX9T,IAAK,OACLgB,MAAO,OAGT,CACEd,MAAO,kBACP4T,UAAW,qBACX9T,IAAK,QACL+T,OAAQ,SAAC3L,GAAD,IAAO4L,EAAP,uDAAgB,EAAKnV,MAAMsZ,SAA3B,OACN,kBAAC,KAAD,CACE1G,GAAG,OACH9I,KAAK,OAELgJ,SAAU,SAAAtI,GAAK,OAAI,EAAKuuC,OAAO5jC,EAAQ3K,IACvC1J,MAAO,CAAEqB,MAAO,SA8BxB,OACE,kBAACqB,GAAD,CAAeE,QAAM,GAInB,kBAACF,GAAD,CACE1C,MAAO,CAAEwR,WAAY,QAASmJ,aAAc,OAAQvZ,OAAQ,UAE5D,yBAAKlB,UAAU,iBACb,2BAAOy9B,QAAQ,SAASz9B,UAAU,SAAlC,QAGA,kBAAC,KAAD,CACE4R,GAAG,OACH9I,KAAK,OACLhJ,MAAO,CAAEqB,MAAO,SAChBqI,MAAOoF,EACPiD,YAAY,aACZC,SAAUrQ,KAAK8N,aACfwC,SAAUtQ,KAAKzC,MAAM+0C,UAGvB,yBAAKj0C,MAAO,CAAEoB,OAAQ,WAExB,yBAAKlB,UAAU,iBACb,2BAAOy9B,QAAQ,OAAOz9B,UAAU,SAAhC,QAGA,kBAAC,KAAD,CACE4R,GAAG,OACH9I,KAAK,OACLU,MAAOq2B,EACP/tB,SAAU,SAACiQ,EAAYtS,GAAb,OACR,EAAK2S,YAAY,OAAQL,EAAYtS,IAEvCsC,SAAUtQ,KAAKzC,MAAM+0C,UAGvB,yBAAKj0C,MAAO,CAAEoB,OAAQ,WAExB,yBAAKlB,UAAU,iBACb,2BAAOy9B,QAAQ,iBAAiBz9B,UAAU,SAA1C,SAGA,kBAAC,KAAD,CACE4R,GAAG,QACH9I,KAAK,QACL+I,YAAY,eACZ/R,MAAO,CAAEqB,MAAO,KAChBqI,MAAOkN,EACP5E,SAAU,SAAAtI,GAAK,OAAI,EAAKwM,aAAa,QAASxM,IAC9CuI,SAAUtQ,KAAKzC,MAAM+0C,SAEpBtyC,KAAKzC,MAAM+X,cAKd,yBAAKjX,MAAO,CAAEoB,OAAQ,WAExB,yBAAKlB,UAAU,iBACb,2BAAOy9B,QAAQ,iBAAiBz9B,UAAU,SAA1C,QAGA,kBAAC,KAAD,CACE4R,GAAG,OACH9I,KAAK,OACL+I,YAAY,cACZ/R,MAAO,CAAEqB,MAAO,KAChBqI,MAAO+c,EACPzU,SAAU,SAAAtI,GAAK,OAAI,EAAKwM,aAAa,OAAQxM,IAC7CuI,SAAUtQ,KAAKzC,MAAM+0C,SAEpBtyC,KAAKzC,MAAM2oB,YAKd,yBAAK7nB,MAAO,CAAEoB,OAAQ,WAGxB,yBAAKlB,UAAU,iBACb,2BAAOy9B,QAAQ,cAAcz9B,UAAU,SAAvC,iBAGA,kBAAC,KAAD,CACE4R,GAAG,YACH9I,KAAK,YACLhJ,MAAO,CAAEqB,MAAO,KAChB0Q,YAAY,kBACZrI,MAAOiwC,EACP3nC,SAAUrQ,KAAK+3C,gBACfznC,SAAUtQ,KAAKzC,MAAM+0C,UAKvB,yBAAKj0C,MAAO,CAAEoB,OAAQ,WAExB,yBAAKlB,UAAU,iBACb,2BAAOy9B,QAAQ,cAAcz9B,UAAU,SAAvC,oBAGA,kBAAC,KAAD,CACE4R,GAAG,kBACH9I,KAAK,kBACLhJ,MAAO,CAAEqB,MAAO,IAAK+Q,WAAY,QACjCL,YAAY,wBACZrI,MAAO2vC,EACPrnC,SAAUrQ,KAAK83C,iBACfxnC,UAAU,IAKZ,yBAAKjS,MAAO,CAAEoB,OAAQ,WAExB,yBAAKlB,UAAU,iBACb,2BAAOy9B,QAAQ,cAAcz9B,UAAU,SAAvC,gBAGA,kBAAC,KAAD,CACE4R,GAAG,cACH9I,KAAK,cACLhJ,MAAO,CAAEqB,MAAO,IAAK+Q,WAAY,QACjCL,YAAY,oBACZrI,MAAOolC,EACP98B,SAAUrQ,KAAK+yC,mBACfziC,UAAU,IAKZ,yBAAKjS,MAAO,CAAEoB,OAAQ,WAExB,yBAAKlB,UAAU,iBACb,2BAAOy9B,QAAQ,SAASz9B,UAAU,SAAlC,UAGA,kBAAC,KAAD,CACE4R,GAAG,SACH9I,KAAK,SACLU,MAAOiB,EACPoH,YAAY,eACZ/R,MAAO,CAAEqB,MAAO,IAAK+Q,WAAY,QACjCJ,SAAUrQ,KAAK8N,aACfwC,UAAU,IAKZ,yBAAKjS,MAAO,CAAEoB,OAAQ,WAEvBO,KAAKzC,MAAM+0C,QACV,GAEA,yBAAK/zC,UAAU,iBACb,kBAAC+N,GAAD,CACE3N,KAAM,UACNkL,SAAO,EACPxL,MAAO,CACLwR,WAAYjS,GAAaiM,QACzBT,MAAOxL,GAAa+L,MACpBmG,OAAQ,OACR+F,YAAa,QAEf3X,QAAS8B,KAAKyO,cAThB,YAgBN,6BACCzO,KAAKzC,MAAM+0C,SAAqC,OAA1BtyC,KAAKzC,MAAM80C,WAChC,kBAACtxC,GAAD,KACE,kBAACA,GAAD,KACE,kBAACA,GAAD,CACE1C,MAAO,CACLwR,WAAY,WACZ7Q,QAAS,OACTga,aAAc,OACdtZ,MAAO,QACPD,OAAQ,UAGV,kBAACsB,GAAD,CACEE,QAAM,EACN5C,MAAO,CACLwR,WAAYjS,GAAaiM,QACzBpK,OAAQ,OACRC,MAAO,QACPT,OAAQ,QACR60B,oBAAqB,OACrBC,qBAAsB,SAGxB,wBACE11B,MAAO,CACLkL,UAAW,MACX/K,WAAY,MACZ4K,MAAO,UAJX,eAWF,kBAAC,MAAD,GACEmJ,QAASikC,EAETvjC,WAAYjT,KAAKzC,MAAMsZ,SACvBxY,MAAO,CACLwR,WAAY,QACZnQ,MAAO,SACP6J,UAAW,SAEbypB,OAAQ,CAAE7G,EAAG,KACbttB,KAAK,SAVP,uBAWS,CACLa,MAAO,QACP6J,UAAW,QACX/K,WAAY,SAdhB,6BAgBc,GAhBd,yBAiBU,kBACN,yBAAKH,MAAO,CAAEoB,OAAQ,SACpB,kBAAC6M,GAAD,CACE3N,KAAM,UACNkL,SAAO,EACPxL,MAAO,CACLwR,WAAYjS,GAAaiM,QACzBT,MAAOxL,GAAa+L,MACpBmG,OAAQ,OACR+F,YAAa,QAEf3X,QAAS,EAAKk6C,mBAThB,cAnBN,KAhCJ,YAqEE,kBAACr3C,GAAD,CACEszC,KAAG,EACHh2C,MAAO,CACLwR,WAAY,QACZ7Q,QAAS,OACTga,aAAc,OACdtZ,MAAO,QACPD,OAAQ,SAGV,kBAAC,MAAD,GACE8S,QAxRG,CACf,CACE3T,MAAO,kBACP4T,UAAW,OACX9T,IAAK,OACLgB,MAAO,OAET,CACEd,MAAO,kCACP4T,UAAW,qBACX9T,IAAK,sBAGP,CACEE,MAAO,8BACP4T,UAAW,qBACX9T,IAAK,sBAEP,CACEE,MAAO,4BACP4T,UAAW,UACX9T,IAAK,YAoQKuU,WAAYjT,KAAKzC,MAAMsvC,WACvBxuC,MAAO,CACLwR,WAAY,QACZnQ,MAAO,SACP6J,UAAW,SAEbypB,OAAQ,CAAE7G,EAAG,KACbttB,KAAK,SATP,uBAUS,CACLa,MAAO,UAXX,6BAec,GAfd,yBAgBU,kBACN,yBACErB,MAAO,CACLoB,OAAQ,OACRG,QAAS,OACTC,cAAe,QAGjB,8CACgB,2BAAI,EAAKtC,MAAM4vC,cAE/B,yBAAK9uC,MAAO,CAAEG,WAAY,UACxB,kBAAC8N,GAAD,CACE3N,KAAM,UACNkL,SAAO,EACPxL,MAAO,CACLwR,WAAYjS,GAAaiM,QACzBT,MAAOxL,GAAa+L,MACpBmG,OAAQ,OACR+F,YAAa,QAEf3X,QAAS,kBAAM84B,GAAQne,KAAR,iBATjB,qBA5BR,OAiDN,Q,GAjpBkC3Y,aCepCm4C,GAAoBh7C,IAApBg7C,QAASC,GAAWj7C,IAAXi7C,OA6NFC,G,iLAzNX,OACE,kBAAC,IAAD,CACEl6C,MAAO,CACLysC,UAAW,UAGb,kBAAC,IAAD,CACEzsC,MAAO,CACLwR,WAAW,OAAD,OAAS2oC,IAAT,OAGZ,kBAAC,IAAD,CAAOC,KAAK,KACV,kBAAC,GAAD,OAGF,kBAACJ,GAAD,CACEh6C,MAAO,CACLY,OAAQ,gBAGV,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOy5C,OAAK,EAACD,KAAK,KAChB,kBAAC,GAAD,OAGF,kBAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,cAChB,kBAAC,GAAD,OAIF,kBAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,sBAChB,kBAAC,GAAD,OAIF,kBAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,yBAChB,kBAAC,GAAD,OASF,kBAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,yBAChB,kBAAC,GAAD,OAMF,kBAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,qBAChB,kBAAC,GAAD,OAGF,kBAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,0BAChB,kBAAC,GAAD,OAGF,kBAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,qBAChB,kBAAC,GAAD,OAGF,kBAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,qBAChB,kBAAC,GAAD,OAGF,kBAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,0BAChB,kBAAC,GAAD,OAGF,kBAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,sBAChB,kBAAC,GAAD,OAQF,kBAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,sBAChB,kBAAC,GAAD,OAIF,kBAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,YAChB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,qBAChB,kBAAC,GAAD,OAGF,kBAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,+BAChB,kBAAC,GAAD,OAGF,kBAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,8BAChB,kBAAC,GAAD,OAGF,kBAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,yBAChB,kBAAC,GAAD,OAGF,kBAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,cAChB,kBAAC,GAAD,OAIF,kBAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,mBAChB,kBAAC,GAAD,OAIF,kBAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,eAChB,kBAAC,GAAD,OAGF,kBAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,gBAAgBE,UAAW9O,KAC7C,kBAAC,IAAD,CACE6O,OAAK,EACLD,KAAK,wBACLE,UAAWd,KAEb,kBAAC,IAAD,CACEa,OAAK,EACLD,KAAK,wBACLE,UAAWtO,KAGb,kBAAC,IAAD,CACEqO,OAAK,EACLD,KAAK,iCACLE,UAAW/G,KAGb,kBAAC,IAAD,CACE8G,OAAK,EACLD,KAAK,2CACLE,UAAW/G,KAIb,kBAAC,IAAD,CACE8G,OAAK,EACLD,KAAK,gCACLE,UAAWrE,KAIb,kBAAC,IAAD,CAAOoE,OAAK,EAACD,KAAK,eAChB,kBAAC,GAAD,OAGF,kBAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,aAChB,kBAAC,GAAD,OAIF,kBAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,YAChB,kBAAC,GAAD,OAGF,kBAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,iBAChB,kBAAC,GAAD,OAGF,kBAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,oBAChB,kBAAC,GAAD,OAGF,kBAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,iBAChB,kBAAC,GAAD,OAIF,kBAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,yBAChB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,cAChB,kBAAC,GAAD,OAGF,kBAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,sBAChB,kBAAC,GAAD,SAIN,6BAEA,kBAACH,GAAD,CACEj6C,MAAO,CACLU,UAAW,SACXq4B,gBAAiB,UACjBwhB,WAAY,OACZn5C,OAAQ,MACR8J,UAAW,UAGb,kBAAC,IAAD,CACElL,MAAO,CACL+K,MAAO,QACPgjB,WAAY,aACZ3b,WAAY,QAJhB,8E,GA1MgBxQ,IAAMC,W,qBCnC1BkT,GAAWC,KAAXD,OACFq3B,GAAQ,CACZ,gCACA,uGACA,oCACA,uCAGmBoO,G,2MACnBpqC,aAAe,SAAA3N,GACbA,EAAEqN,iBACF,EAAKjS,MAAMu7B,KAAKmR,gBAAe,SAACC,EAAKp7B,GAC9Bo7B,GACHloC,QAAQC,IAAI,4BAA6B6M,O,wEAM7C,OACE,yBAAKlP,UAAU,mBACb,yBACEyI,IAAKmc,KACL5kB,UAAU,aACVoI,IAAI,OACJtI,MAAO,CAAEoB,OAAQ,OAAQC,MAAO,WAElC,yBAAKnB,UAAU,mBACb,kBAAC,KAAD,CAAMk8B,SAAUz6B,KAAKyO,aAAclQ,UAAU,cAC3C,wBAAIA,UAAU,YAAd,yBACA,yBAAKA,UAAU,cACb,kBAAC,KAAKE,KAAN,KACE,kBAAC,KAAD,CACEq6C,OACE,kBAAC,IAAD,CAAMn6C,KAAK,OAAON,MAAO,CAAE+K,MAAO,qBAEpCgH,YAAY,cAGhB,kBAAC,KAAK3R,KAAN,KACE,kBAAC,KAAD,CACEq6C,OACE,kBAAC,IAAD,CAAMn6C,KAAK,OAAON,MAAO,CAAE+K,MAAO,qBAEpCzK,KAAK,WACLyR,YAAY,cAGhB,kBAAC,KAAK3R,KAAN,KACE,kBAAC,KAAD,CACEq6C,OACE,kBAAC,IAAD,CAAMn6C,KAAK,OAAON,MAAO,CAAE+K,MAAO,qBAEpCzK,KAAK,QACLyR,YAAY,oBAEZ,kBAAC,GAAD,CAAQrI,MAAM,UAAd,cACA,kBAAC,GAAD,CAAQA,MAAM,aAAd,eACA,kBAAC,GAAD,CAAQA,MAAM,cAAd,UACA,kBAAC,GAAD,CAAQA,MAAM,cAAd,eAGJ,kBAAC,KAAKtJ,KAAN,KACE,kBAAC,KAAD,oBAEA,uBAAGuU,KAAK,GAAGzU,UAAU,qBAArB,oBAGA,kBAAC,IAAD,CAAMH,GAAG,KACN,IACD,kBAAC,KAAD,CACEC,MAAO,CAAEwR,WAAY,UAAWzG,MAAO,SACvC2vC,SAAS,SACTx6C,UAAU,qBAHZ,UAQF,oDACwB,IACtB,kBAAC,IAAD,CAAMH,GAAG,WACP,2CAOZ,yBAAKG,UAAU,UACb,kBAAC,KAAD,CAAUksC,MAAOA,MAEnB,yBAAKlsC,UAAU,UACb,wBAAIA,UAAU,MAAd,6E,GApF6B2B,a,qBCTlB84C,I,wLAEjB,OACE,kBAACj4C,GAAD,CAAexC,UAAU,SACvB,yBAAKA,UAAU,cACb,yBAAKyI,IAAKiyC,KAAKtyC,IAAI,OAAOpI,UAAU,WAGtC,kBAAC,GAAD,W,GAR2B2B,cCI3BkT,GAAWC,KAAXD,OACFq3B,GAAQ,CACZ,gCACA,uGACA,oCACA,uCAGmByO,G,2MACnB37C,MAAQ,CACN4oB,SAAU,GACVgzB,SAAU,GACVx0B,WAAY,I,EAOd7W,aAAe,SAAAC,GACbA,EAAMI,iBADgB,MAEEJ,EAAME,OAAtB5G,EAFc,EAEdA,KAAMU,EAFQ,EAERA,MACd,EAAKmB,SAAL,gBAAiB7B,EAAOU,K,EAG1BqxC,aAAe,SAAArxC,GACbpH,QAAQC,IAAImH,GACZ,EAAKmB,SAAS,CACZyb,WAAY5c,K,EAGhB0G,aAAe,SAAA3N,GACbA,EAAEqN,iBACF,IAAMxI,EAAO,CACXwgB,SAAU,EAAK5oB,MAAM4oB,SACrBgzB,SAAU,EAAK57C,MAAM47C,SACrBx0B,WAAY,EAAKpnB,MAAMonB,YAEzBhkB,QAAQC,IAAI+E,GACZhB,GAAI,OAAQ,WAAY,QAAS,GAAIgB,EAAM,IAAIL,MAAK,SAAAqD,GAClDhI,QAAQC,IAAI+H,EAAIhD,MAChBqH,GAAa,UAAWrE,EAAIhD,KAAKsH,SACjC,EAAK/D,SAAS,CACZid,SAAU,GACVgzB,SAAU,GACVx0B,WAAY,S,EAIlByB,eAAiB,WACfzhB,GAAI,MAAO,WAAY,aAAc,GAAI,GAAI,IAAIW,MAAK,SAAAqD,GAGpD,GAFAhI,QAAQC,IAAI+H,EAAIhD,MAEZgD,EAAIhD,KAAKiD,QAAQmN,UAAUhN,OAAS,EAAG,CACzC,IAAIsd,EAAiB1d,EAAIhD,KAAKiD,QAAQmN,UAAUpB,KAAI,SAACjP,EAAMkP,GAGzD,OAFAjU,QAAQC,IAAI8E,EAAKuO,WACjBtT,QAAQC,IAAI,cAEV,kBAAC,GAAD,CAAQmH,MAAOrC,EAAKyK,GAAIzR,IAAKkW,GAC1BlP,EAAKuO,cAIZ,EAAK/K,SAAS,CACZmd,wB,mFAhDNrmB,KAAKomB,mB,+BAsDG,IAAD,OACP,OACE,yBAAK7nB,UAAU,mBACb,yBACEyI,IAAKmc,KACL5kB,UAAU,aACVoI,IAAI,OACJtI,MAAO,CAAEoB,OAAQ,OAAQC,MAAO,WAElC,yBAAKnB,UAAU,oBACb,kBAACiO,GAAD,CACEiuB,SAAUz6B,KAAKyO,aACfpQ,MAAO,CAAEwB,cAAe,SAAUJ,OAAQ,QAASC,MAAO,UAE1D,wBAAInB,UAAU,YAAd,wBAEA,kBAAC,KAAD,CACEu6C,OAAQ,kBAAC,IAAD,CAAMn6C,KAAK,OAAON,MAAO,CAAE+K,MAAO,qBAC1CgH,YAAY,WACZD,GAAG,WACH9I,KAAK,WACLU,MAAO/H,KAAKzC,MAAM4oB,SAClB9V,SAAUrQ,KAAK8N,eAGjB,kBAAC,KAAD,CACEgrC,OAAQ,kBAAC,IAAD,CAAMn6C,KAAK,OAAON,MAAO,CAAE+K,MAAO,qBAC1CzK,KAAK,WACLyR,YAAY,WACZD,GAAG,WACH9I,KAAK,WACLU,MAAO/H,KAAKzC,MAAM47C,SAClB9oC,SAAUrQ,KAAK8N,eAejB,kBAAC,KAAD,CACEgrC,OAAQ,kBAAC,IAAD,CAAMn6C,KAAK,OAAON,MAAO,CAAE+K,MAAO,qBAC1CgH,YAAY,kBACZrI,MAAO/H,KAAKzC,MAAMonB,WAClBtU,SAAU,SAAAtI,GAAK,OAAI,EAAKqxC,aAAarxC,KAEpC/H,KAAKzC,MAAM8oB,gBAcd,kBAAC,IAAD,CAAMjoB,GAAG,UACP,kBAAC,KAAD,CACEC,MAAO,CAAEwR,WAAY,UAAWzG,MAAO,SACvC2vC,SAAS,SACTx6C,UAAU,oBACVL,QAAS8B,KAAKyO,cAJhB,YASF,wDAC4B,IAC1B,kBAAC,IAAD,CAAMrQ,GAAG,UACP,wCAKR,yBAAKG,UAAU,iBACb,kBAAC,KAAD,CAAUksC,MAAOA,MAEnB,yBAAKlsC,UAAU,iBACb,wBAAIA,UAAU,MAAd,6E,GAvJ8B2B,aCZnBm5C,G,iLAEjB,OACE,kBAACt4C,GAAD,CAAexC,UAAU,SACvB,yBAAKA,UAAU,cACb,yBAAKyI,IAAKiyC,KAAKtyC,IAAI,OAAOpI,UAAU,WAGtC,kBAAC,GAAD,W,GAR4B2B,aCoBrBo5C,OApBf,WACE,OACE,yBAAK/6C,UAAU,OACb,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAOm6C,OAAK,EAACD,KAAK,UAChB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,WAChB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,WAChB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,IAAIE,UAAWN,QCTfkB,QACW,cAA7BnnC,OAAO0Y,SAAS0uB,UAEe,UAA7BpnC,OAAO0Y,SAAS0uB,UAEhBpnC,OAAO0Y,SAAS0uB,SAAS1P,MACvB,2D,4CCTA2P,GAAe,CACnBp/B,UAAW,gBCLPo/B,GAAe,CACnBpqC,SAAS,EACTO,cAAe,GACfjR,KAAM,OCHK4R,GAAqBmpC,2BAAgB,CAChDp/B,yBFOsC,WAAmC,IAAlC/c,EAAiC,uDAAzBk8C,GAAcE,EAAW,uCACxE,OAAQA,EAAOh7C,MACb,KAAKmM,GACH,OAAO,gBACFvN,EADL,CAEE8c,UAAY9c,EAAM8c,UAAY,iBAGlC,KAAKtP,GACH,OAAO,gBACFxN,EADL,CAEE8c,UAAY9c,EAAM8c,UAAY,oBAGlC,KAAKrP,GACH,OAAO,gBACFzN,EADL,CAEE8c,UAAY9c,EAAM8c,UAAY,oBAGlC,KAAKnP,GACH,OAAO,gBACF3N,EADL,CAEE8c,UAAY9c,EAAM8c,UAAY,oBAGlC,KAAKlP,GACH,OAAO,gBACF5N,EADL,CAEE8c,UAAY9c,EAAM8c,UAAY,oBAElC,KAAKpP,GACH,OAAO,gBACF1N,EADL,CAEE8c,UAAY9c,EAAM8c,UAAY,4BAGlC,QACE,OAAO9c,IE5CXiT,iBDI8B,WAAmC,IAAlCjT,EAAiC,uDAAzBk8C,GAAcE,EAAW,uCAChE,OAAQA,EAAOh7C,MACb,KAAKyM,GAEH,OADAzK,QAAQC,IAAI+4C,EAAOxmC,SACZ,gBACF5V,EADL,CAEE8R,QAAU9R,EAAM8R,SAAU,EAE1BO,cAAgBrS,EAAMqS,cAAgB+pC,EAAOxmC,QAC7CxU,KAAOpB,EAAMoB,KAAO,SAExB,KAAK0M,GACH,OAAO,gBACF9N,EADL,CAGE8R,QAAU9R,EAAM8R,SAAU,EAC1BO,cAAgBrS,EAAMqS,cAAgB,GACtCjR,KAAOpB,EAAMoB,KAAO,QAGxB,QACE,OAAOpB,MEzBPk8C,GAAe,CACnBp/B,UAAW,uBCLAwE,GAAwB66B,2BAAgB,CACnD56B,4BDOyC,WAAmC,IAAlCvhB,EAAiC,uDAAzBk8C,GAAcE,EAAW,uCAC3E,OAAQA,EAAOh7C,MACb,KAAKqe,GACH,OAAO,gBACFzf,EADL,CAEE8c,UAAY9c,EAAM8c,UAAY,yBAGlC,KAAK4C,GACH,OAAO,gBACF1f,EADL,CAEE8c,UAAY9c,EAAM8c,UAAY,wBAGlC,KAAK6C,GACH,OAAO,gBACF3f,EADL,CAEE8c,UAAY9c,EAAM8c,UAAY,2BAElC,KAAK8C,GACH,OAAO,gBACF5f,EADL,CAEE8c,UAAY9c,EAAM8c,UAAY,wBAGlC,QACE,OAAO9c,ME7BPk8C,GAAe,CACnBp/B,UAAW,oBCNA6Q,GAAyBwuB,2BAAgB,CAClDvuB,6BDQwC,WAAmC,IAAlC5tB,EAAiC,uDAAzBk8C,GAAcE,EAAW,uCAC5E,OAAQA,EAAOh7C,MACb,KAAKsrB,GACH,OAAO,gBACF1sB,EADL,CAEE8c,UAAY9c,EAAM8c,UAAY,qBAGlC,KAAK6P,GACH,OAAO,gBACF3sB,EADL,CAEE8c,UAAY9c,EAAM8c,UAAY,uBAGlC,KAAK8P,GACH,OAAO,gBACF5sB,EADL,CAEE8c,UAAY9c,EAAM8c,UAAY,wBAGlC,KAAK+P,GACH,OAAO,gBACF7sB,EADL,CAEE8c,UAAY9c,EAAM8c,UAAY,mBAGlC,KAAKgQ,GACH,OAAO,gBACF9sB,EADL,CAEE8c,UAAY9c,EAAM8c,UAAY,yBAGlC,QACE,OAAO9c,MExCPk8C,GAAe,CACnBp/B,UAAW,kBCHA6H,GAAoBw3B,2BAAgB,CAC7Cv3B,wBDKmC,WAAmC,IAAlC5kB,EAAiC,uDAAzBk8C,GAAcE,EAAW,uCACvE,OAAQA,EAAOh7C,MACb,KAAKogB,GACH,OAAO,gBACFxhB,EADL,CAEE8c,UAAY9c,EAAM8c,UAAY,gBAGlC,KAAK2E,GACH,OAAO,gBACFzhB,EADL,CAEE8c,UAAY9c,EAAM8c,UAAY,mBAGlC,QACE,OAAO9c,MEZPk8C,GAAe,CACnB97C,QAAS,eCXL87C,GAAe,CACnBp/B,UAAW,oBCAAspB,GAAyB+V,2BAAgB,CACpD9V,wBDEqC,WAAmC,IAAlCrmC,EAAiC,uDAAzBk8C,GAAcE,EAAW,uCACvE,OAAQA,EAAOh7C,MACb,KAAK4kC,GACH,OAAO,gBACFhmC,EADL,CAEE8c,UAAY9c,EAAM8c,UAAY,qBAGlC,QACE,OAAO9c,MERPk8C,GAAe,CACnBp/B,UAAW,mBCLA4uB,GAAkByQ,2BAAgB,CAC7CxQ,sBDOmC,WAAmC,IAAlC3rC,EAAiC,uDAAzBk8C,GAAcE,EAAW,uCACrE,OAAQA,EAAOh7C,MACb,KAAKklC,GACH,OAAO,gBACFtmC,EADL,CAEE8c,UAAY9c,EAAM8c,UAAY,oBAGlC,KAAKypB,GACH,OAAO,gBACFvmC,EADL,CAEE8c,UAAY9c,EAAM8c,UAAY,mBAGlC,KAAK0pB,GACH,OAAO,gBACFxmC,EADL,CAEE8c,UAAY9c,EAAM8c,UAAY,yBAGlC,KAAK2pB,GACH,OAAO,gBACFzmC,EADL,CAEE8c,UAAY9c,EAAM8c,UAAY,kBAGlC,QACE,OAAO9c,MEhCPk8C,GAAe,CACnBp/B,UAAW,gBCFPo/B,GAAe,CACnBzN,WAAW,GCFAF,GAAsB4N,2BAAgB,CACjDpM,0BFKuC,WAAmC,IAAlC/vC,EAAiC,uDAAzBk8C,GAAcE,EAAW,uCACzE,OAAQA,EAAOh7C,MACb,I3DXF,qC2DYI,OAAO,gBACFpB,EADL,CAEE8c,UAAY9c,EAAM8c,UAAY,iBAGlC,I3DfF,uC2DgBI,OAAO,gBACF9c,EADL,CAEE8c,UAAY9c,EAAM8c,UAAY,mBAElC,I3DnBuC,8B2DoBrC,OAAO,gBACF9c,EADL,CAEE8c,UAAY9c,EAAM8c,UAAY,iBAGlC,QACE,OAAO9c,IExBXwuC,oBDGiC,WAAmC,IAAlCxuC,EAAiC,uDAAzBk8C,GAAcE,EAAW,uCACnE,OAAQA,EAAOh7C,MACb,I5DJwC,+B4DKtC,OAAO,gBACFpB,EADL,CAEEyuC,UAAYzuC,EAAMyuC,WAAY,IAGlC,I5DRuC,8B4DSrC,OAAO,gBACFzuC,EADL,CAEEyuC,UAAYzuC,EAAMyuC,WAAY,IAGlC,QACE,OAAOzuC,MEnBPk8C,GAAe,CACnBn5C,eAAgB,cCDZm5C,GAAe,CACnBj5C,eAAgB,eCIZi5C,GAAe,CACnBrnB,SAAU,GACVwnB,MAAO,oCACPC,gBAAiB,GAEjB1nB,MAAO,GACP2nB,IAAK,GAELjmB,WAAY,ICbR4lB,GAAe,CACnBhuC,KAAM,GACNiH,OAAQ,GACRqnC,SAAU,GACVC,UAAW,GACXC,eAAgB,GAChB3pC,UAAU,GCNNmpC,GAAe,CACnBpqC,SAAS,EACTwD,KAAM,IACNud,UAAW,OCHA8pB,GAA4BR,2BAAgB,CACvDlnB,6BHe0C,WAAmC,IAAlCj1B,EAAiC,uDAAzBk8C,GAAcE,EAAW,uCAC5E,OAAQA,EAAOh7C,MACb,IlHvBgC,uBkHwB9B,OAAO,gBACFpB,EADL,CAEE60B,SAAU70B,EAAM60B,SAAWunB,EAAOxmC,UAEtC,IlH3BuC,8BkH4BrC,OAAO,gBACF5V,EADL,CAEE60B,SAAUunB,EAAOxmC,QAAQ9E,QAAQ9Q,EAAMq8C,MAAO,MAGlD,IlHhC0B,iBkHmCxB,OAFAr8C,EAAMs8C,gBAAgBhhC,KAAK8gC,EAAOxmC,SAClCxS,QAAQC,IAAIrD,EAAMs8C,gBAAgB,IAC3B,gBACFt8C,EADL,CAEEq8C,MAAQr8C,EAAMq8C,MAAQ,IAAI3iC,OACxB,KAAO1Z,EAAMs8C,gBAAkB,oCAC/B,KAEFznB,SAAU70B,EAAM60B,SAAWunB,EAAOxmC,UAGtC,IlH3C0B,iBkH4CxB,IAAK,IAAI2Z,EAAI,EAAGA,EAAIvvB,EAAMs8C,gBAAgB9wC,OAAQ+jB,IAC5CvvB,EAAMs8C,gBAAgB/sB,KAAO6sB,EAAOxmC,UACtCxS,QAAQC,IAAIrD,EAAMs8C,gBAAgB/sB,IAClCvvB,EAAMs8C,gBAAgBtlB,OAAOzH,EAAG,GAChCnsB,QAAQC,IAAIrD,EAAMs8C,kBAItB,OAAO,gBACFt8C,EADL,CAEEq8C,MAAQr8C,EAAMq8C,MAAQ,IAAI3iC,OACxB,KAAO1Z,EAAMs8C,gBAAkB,oCAC/B,OAIN,IlHpD4B,mBkH2D1B,OANAt8C,EAAMs8C,gBAAgBhhC,KAAK8gC,EAAOxmC,QAAQuW,cAC1C/oB,QAAQC,IAAIrD,EAAMs8C,gBAAgB,IAClCt8C,EAAMs2B,WAAWhb,KAAK8gC,EAAOxmC,QAAQhD,IACrCxP,QAAQC,IACN,oBAAsBrD,EAAMs2B,WAAWlf,KAAI,SAACjP,EAAMkP,GAAP,OAAiBlP,MAEvD,gBACFnI,EADL,CAEE40B,MAAM,GAAD,oBAAM50B,EAAM40B,OAAZ,CAAmBwnB,EAAOxmC,QAAQuW,eACvCkwB,MAAQr8C,EAAMq8C,MAAQ,IAAI3iC,OACxB,KAAO1Z,EAAMs8C,gBAAkB,oCAC/B,OAIN,IlHnE4B,mBkHoE1B,IAAMM,EAAW58C,EAAM40B,MAAMrd,QAC3B,SAAAnH,GAAG,OAAIA,IAAQgsC,EAAOxmC,QAAQuW,gBAQhC,OANA/oB,QAAQC,IAAI,cAAeu5C,GAC3Bx5C,QAAQC,IACN,sBACErD,EAAM60B,SAAS/jB,QAAQsrC,EAAOxmC,QAAQuW,aAAc,KAGjD,gBACFnsB,EADL,CAEE40B,MAAOgoB,EACPP,MAAQr8C,EAAMq8C,MAAQ,IAAI3iC,OACxB,KAAOkjC,EAAW,oCAClB,KAEF/nB,SAAU70B,EAAM60B,SAAS/jB,QAAQsrC,EAAOxmC,QAAQuW,aAAc,MAGlE,IlHlFqC,4BkHmFnC,OAAO,gBACFnsB,EADL,CAEE40B,MAAO,GACPynB,MAAO,oCACPC,gBAAiB,GACjBznB,SAAU,KAGd,QACE,OAAO70B,IGtGX68C,8BFO2C,WAAmC,IAAlC78C,EAAiC,uDAAzBk8C,GAAcE,EAAW,uCAC7E,OAAQA,EAAOh7C,MACb,InHVuB,cmHWrBgC,QAAQC,IAAI+4C,EAAOxmC,SACnB5V,EAAMkO,KAAOkuC,EAAOxmC,QAAQpL,MAC5BpH,QAAQC,IAAIrD,EAAMkO,MAClBlO,EAAMy8C,UAAUnhC,KAAK8gC,EAAOxmC,QAAQT,QACpC/R,QAAQC,IAAIrD,EAAMy8C,UAAUjxC,QAC5B,IAAK,IAAI+jB,EAAI,EAAGA,EAAIvvB,EAAMy8C,UAAUjxC,OAAQ+jB,IAAK,CAC/C,GACEvvB,EAAMy8C,UAAUltB,GAAG+F,gBACnB8mB,EAAOxmC,QAAQT,OAAOmgB,cACtB,CACAlyB,QAAQC,IAAIrD,EAAMy8C,UAAUltB,GAAG+F,eAC/BlyB,QAAQC,IAAI,SACZD,QAAQC,IAAIksB,GACZnsB,QAAQC,IAAIrD,EAAMy8C,WAClBz8C,EAAMmV,OAAO6hB,OAAO,EAAG,EAAG,CACxB1B,cAAe8mB,EAAOxmC,QAAQT,OAAOmgB,cACrCwnB,cAAeV,EAAOxmC,QAAQT,OAAO2nC,cACrC5uC,KAAMlO,EAAMkO,OAEd,MAEF,GACElO,EAAMmV,OAAOoa,GAAG+F,gBAAkB8mB,EAAOxmC,QAAQT,OAAOmgB,cACxD,CACAlyB,QAAQC,IAAI,gBACZrD,EAAMmV,OAAO6hB,OAAO,EAAG,EAAG,CACxB1B,cAAe8mB,EAAOxmC,QAAQT,OAAOmgB,cACrCwnB,cAAeV,EAAOxmC,QAAQT,OAAO2nC,cACrC5uC,KAAMlO,EAAMkO,OAEdlO,EAAMy8C,UAAUzlB,OAAO,EAAG,EAAG,CAC3B1B,cAAe8mB,EAAOxmC,QAAQT,OAAOmgB,cACrCwnB,cAAeV,EAAOxmC,QAAQT,OAAO2nC,cACrC5uC,KAAMlO,EAAMkO,OAEd,OAYJ,OARA9K,QAAQC,IAAIrD,EAAMmV,QAQX,gBACFnV,EADL,CAEEy8C,UAAWz8C,EAAMy8C,UACjB1pC,SAAW/S,EAAM+S,UAAW,IAGhC,InH/DyB,gBmHgEvB3P,QAAQC,IAAI+4C,EAAOxmC,SACnB,IAAK,IAAI2Z,EAAI,EAAGA,EAAIvvB,EAAMmV,OAAO3J,OAAQ+jB,IACnCvvB,EAAMmV,OAAOoa,GAAG+F,gBAAkB8mB,EAAOxmC,QAAQ0f,gBACnDt1B,EAAM08C,eAAephC,KAAKtb,EAAMmV,OAAOoa,IACvCnsB,QAAQC,IAAIrD,EAAM08C,iBAItB,OAAO,gBACF18C,EADL,CAEE08C,eAAgB18C,EAAM08C,iBAG1B,QACE,OAAO18C,IE7EX4yB,2BDGwC,WAAmC,IAAlC5yB,EAAiC,uDAAzBk8C,GAAcE,EAAW,uCAC1E,OAAQA,EAAOh7C,MACb,IpHEkC,yBoHDhC,OAAO,gBACFpB,EADL,CAEE8R,QAAU9R,EAAM8R,SAAU,EAC1BwD,KAAOtV,EAAMsV,KAAO,IACpBud,UAAY7yB,EAAMyyB,aAAe,OAErC,IpHJuC,8BoHMrC,OADA5d,OAAO0Y,SAAS5b,SACT,gBACF3R,EADL,CAEE8R,QAAU9R,EAAM8R,SAAU,EAC1BwD,KAAOtV,EAAMsV,KAAO,IACpBud,UAAY7yB,EAAMyyB,aAAe,QAGrC,QACE,OAAOzyB,MExBPk8C,GAAe,CACnBp/B,UAAW,kBCJAmc,GAAgBkjB,2BAAgB,CAC3CjjB,qBDMkC,WAAmC,IAAlCl5B,EAAiC,uDAAzBk8C,GAAcE,EAAW,uCACpE,OAAQA,EAAOh7C,MACb,I7GZmC,0B6GajC,OAAO,gBACFpB,EADL,CAEE8c,UAAY9c,EAAM8c,UAAY,mBAElC,I7GhBmC,0B6GiBjC,OAAO,gBACF9c,EADL,CAEE8c,UAAY9c,EAAM8c,UAAY,mBAElC,I7GpB6B,oB6GqB3B,OAAO,gBACF9c,EADL,CAEE8c,UAAY9c,EAAM8c,UAAY,cAGlC,QACE,OAAO9c,MEDE+8C,GAfKZ,2BAAgB,CAClCnpC,mBAAoBA,GACpBsO,sBAAuBA,GACvBqM,uBAAwBA,GACxByY,uBAAwBA,GACxBzhB,kBAAmBA,GACnB+mB,gBAAiBA,GACjB7oC,yBhBJqC,WAAmC,IAAlC7C,EAAiC,uDAAzBk8C,GAAcE,EAAW,uCACvE,OAAQA,EAAOh7C,MAIb,KAAKtC,EACH,OAAO,gBACFkB,EADL,CAEEI,QAAUJ,EAAMI,QAAU,YAE9B,KAAKpB,EACH,OAAO,gBACFgB,EADL,CAEEI,QAAUJ,EAAMI,QAAU,gBAE9B,KAAKrB,EACH,OAAO,gBACFiB,EADL,CAEEI,QAAUJ,EAAMI,QAAU,aAG9B,KAAKnB,EACH,OAAO,gBACFe,EADL,CAEEI,QAAUJ,EAAMI,QAAU,gBAG9B,KAAKlB,EACH,OAAO,gBACFc,EADL,CAEEI,QAAUJ,EAAMI,QAAU,uBAG9B,KAAKjB,EACH,OAAO,gBACFa,EADL,CAEEI,QAAUJ,EAAMI,QAAU,iBAE9B,KAAKhB,EACH,OAAO,gBACFY,EADL,CAEEI,QAAUJ,EAAMI,QAAU,iBAE9B,KAAKf,EACH,OAAO,gBACFW,EADL,CAEEI,QAAUJ,EAAMI,QAAU,eAE9B,KAAKd,EACH,OAAO,gBACFU,EADL,CAEEI,QAAUJ,EAAMI,QAAU,eAE9B,QACE,OAAOJ,IgBjDXuuC,oBAAqBA,GACrBzrC,6BRb0C,WAAmC,IAAlC9C,EAAiC,uDAAzBk8C,GAAcE,EAAW,uCAC5E,OAAQA,EAAOh7C,MACb,IvNXwC,+BuNYtC,OAAO,gBACFpB,EADL,CAEE+C,eAAiB/C,EAAM+C,eAAiBq5C,EAAOj7C,MAGnD,IvNfF,qCuNgBI,MAAO,CACL4B,eAAiB/C,EAAM+C,eAAiB,cAG5C,QACE,OAAO/C,IQAXgD,iCPd8C,WAG1C,IAFJhD,EAEG,uDAFKk8C,GACRE,EACG,uCACH,OAAQA,EAAOh7C,MACb,KAAKzB,EACH,OAAO,gBACFK,EADL,CAEEiD,eAAiBjD,EAAMiD,eAAiBm5C,EAAOj7C,MAEnD,KAAKvB,EACH,MAAO,CACLqD,eAAiBjD,EAAMiD,eAAiB,eAE5C,QACE,OAAOjD,IOAX2yB,0BAA2BgqB,GAC3B1jB,cAAeA,K,oBChBF,IACb+jB,iBACAl3C,YACAm3C,iBACAC,aACAC,YACAC,SACAC,mBACAC,4BCRIC,GAAiBC,eAEjBC,GAAgB,CACpBt8C,IAAK,OACLu8C,aACAC,UAAW,CAAC,8BAEVC,GAAWC,+BAAoB,CACjCC,iBACAC,OAAO,EACPC,WAAY,KAGRC,GAAmBC,aAAeT,GAAeV,IAEnDoB,GAAQC,uBACVH,GACAL,GAASS,2BAAgBd,MAEvBe,GAAYC,aAAaJ,I,UCjB7BK,IAAStpC,OACP,kBAAC,IAAD,CAAUipC,MAAOA,IACf,kBAAC,KAAD,CAAaG,UAAWA,IACtB,kBAAC,IAAD,KACE,kBAAC,GAAD,SAING,SAASC,eAAe,S7BkHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM92C,MAAK,SAAA+2C,GACjCA,EAAaC,kB","file":"static/js/main.6f2f0fd4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/labtesting.ce0bb88c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tokyosuper.b7abbcae.png\";","module.exports = __webpack_public_path__ + \"static/media/images1.454b91a3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/add.2763f87a.png\";","module.exports = __webpack_public_path__ + \"static/media/subtract.6568e293.png\";","module.exports = __webpack_public_path__ + \"static/media/multiply.ae821315.png\";","module.exports = __webpack_public_path__ + \"static/media/divide.5bab6a8f.png\";","module.exports = __webpack_public_path__ + \"static/media/background.6d283536.jpg\";","module.exports = __webpack_public_path__ + \"static/media/materialedited.163eec29.png\";","module.exports = __webpack_public_path__ + \"static/media/concretemixer.b8029dff.jpg\";","module.exports = __webpack_public_path__ + \"static/media/master.3918f0b7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/master1.b3b6db52.png\";","module.exports = __webpack_public_path__ + \"static/media/cementbag.7523e624.jpg\";","module.exports = __webpack_public_path__ + \"static/media/finalproduct2.0f9dada1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/settings.46111343.png\";","module.exports = __webpack_public_path__ + \"static/media/reports.7095f08e.png\";","module.exports = __webpack_public_path__ + \"static/media/excelimport.79c00e3f.png\";","module.exports = __webpack_public_path__ + \"static/media/accounts.74ade62b.png\";","module.exports = __webpack_public_path__ + \"static/media/configurationedited.a563a35f.png\";","module.exports = __webpack_public_path__ + \"static/media/testtrial.98ddfaa2.png\";","module.exports = __webpack_public_path__ + \"static/media/mixdesign.ee00aeb7.png\";","module.exports = __webpack_public_path__ + \"static/media/sand.1caf1b71.png\";","module.exports = __webpack_public_path__ + \"static/media/rock.83fb61a4.png\";","module.exports = __webpack_public_path__ + \"static/media/cement.26ecc757.png\";","module.exports = __webpack_public_path__ + \"static/media/lab.e5d11b66.png\";","module.exports = __webpack_public_path__ + \"static/media/new1.4e25be1d.png\";","module.exports = __webpack_public_path__ + \"static/media/equal.7fb0df6e.png\";","module.exports = __webpack_public_path__ + \"static/media/square-root.c1a5f58b.png\";","module.exports = __webpack_public_path__ + \"static/media/is-less-than.71b10a35.png\";","module.exports = __webpack_public_path__ + \"static/media/is-greater-than.d8e64872.png\";","module.exports = __webpack_public_path__ + \"static/media/zigma.ef640527.png\";","module.exports = __webpack_public_path__ + \"static/media/pie.33596a17.png\";","module.exports = __webpack_public_path__ + \"static/media/square.692512ca.png\";","module.exports = __webpack_public_path__ + \"static/media/materialTest.026ce4a0.png\";","module.exports = __webpack_public_path__ + \"static/media/concreteTest.45224b19.png\";","module.exports = __webpack_public_path__ + \"static/media/concreteStrengthTest.bc631893.png\";","import styled, { css } from \"styled-components\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport const NavigationLink = styled(NavLink)`\r\n  text-decoration: none;\r\n  height: auto;\r\n  width: auto;\r\n  color: gainsboro;\r\n\r\n  ${props =>\r\n    props.nav &&\r\n    css`\r\n      color: #188ad4;\r\n    `};\r\n`;\r\n","export const TOGGLE_TO_MASTER_TYPE_NAVIGATION =\r\n  \"TOGGLE_TO_MASTER_TYPE_NAVIGATION\";\r\nexport const TOGGLE_TO_SAMPLE_TYPE_NAVIGATION =\r\n  \"TOGGLE_TO_SAMPLE_TYPE_NAVIGATION\";\r\nexport const TOGGLE_TO_HOME_SCREEN_NAVIGATION =\r\n  \"TOGGLE_TO_HOME_SCREEN_NAVIGATION\";\r\nexport const TOGGLE_TO_TEST_TRIALS_NAVIGATION =\r\n  \"TOGGLE_TO_TEST_TRIALS_NAVIGATION\";\r\nexport const TOGGLE_TO_TEST_CONFIGURATION_NAVIGATION =\r\n  \"TOGGLE_TO_TEST_CONFIGURATION_NAVIGATION\";\r\nexport const TOGGLE_TO_PRIVILEDGES_NAVIGATION =\r\n  \"TOGGLE_TO_PRIVILEDGES_NAVIGATION\";\r\nexport const TOGGLE_TO_TEST_RESULTS_NAVIGATION =\r\n  \"TOGGLE_TO_TEST_RESULTS_NAVIGATION\";\r\nexport const TOGGLE_TO_MIX_DESIGN_NAVIGATION =\r\n  \"TOGGLE_TO_MIX_DESIGN_NAVIGATION\";\r\nexport const TOGGLE_TO_DASHBOARD_NAVIGATION = \"TOGGLE_TO_DASHBOARD_NAVIGATION\";\r\nexport const CHECK_WHETHER_REFRESH_NAVIGATION =\r\n  \"CHECK_WHETHER_REFRESH_NAVIGATION\";\r\n","import styled from \"styled-components\";\r\nimport { Menu } from \"antd\";\r\n\r\nexport const TopNavMenu = styled(Menu)`\r\n  line-height: 55px;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: ${props => (props.home ? \"flex-start\" : \"flex-start\")};\r\n`;\r\n","export const TOGGLE_BETWEEN_PRIVILEDGE_LEVELS =\r\n  \"TOGGLE_BETWEEN_PRIVILEDGE_LEVELS\";\r\nexport const CHECK_WHETHER_DEFAULT_PRIVILEDGE_LEVEL =\r\n  \"CHECK_WHETHER_DEFAULT_PRIVILEDGE_LEVEL\";\r\n","import React from \"react\";\r\nimport { Layout, Icon, Menu, Avatar } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SubMenu from \"antd/lib/menu/SubMenu\";\r\nimport { NavigationLink } from \"../styledcomponents/Link/NavLink\";\r\nimport \"./style.css\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  TOGGLE_TO_HOME_SCREEN_NAVIGATION,\r\n  TOGGLE_TO_DASHBOARD_NAVIGATION,\r\n  TOGGLE_TO_PRIVILEDGES_NAVIGATION,\r\n} from \"../../redux/action/topbarnavigation/TopbarNavigation\";\r\nimport { TopNavMenu } from \"../styledcomponents/topnavigation/TopnavMenu\";\r\nimport {\r\n  TOGGLE_BETWEEN_MASTER_LEVELS,\r\n  CHECK_WHETHER_DEFAULT_MASTER_LEVEL,\r\n} from \"../../redux/action/topbarnavigation/MasterLevelNavigation\";\r\nimport { TOGGLE_BETWEEN_PRIVILEDGE_LEVELS } from \"../../redux/action/topbarnavigation/PrivilegeLevelNavigation\";\r\nimport { SettingOutlined } from \"@ant-design/icons\";\r\n\r\nconst { Header } = Layout;\r\n\r\nclass HeaderComponent extends React.Component {\r\n  state = {\r\n    masterbgcolor: \"blue\",\r\n    mastercolor: \"white\",\r\n  };\r\n\r\n  //conditional navigation renderer using redux\r\n  renderNavigation = () => {\r\n    if (this.props.navpath === \"/master\") {\r\n      return (\r\n        <TopNavMenu\r\n          theme='dark'\r\n          mode='horizontal'\r\n          position='right'\r\n          defaultSelectedKeys={[\"100\"]}\r\n          selectedKeys={this.props.masterkeys}\r\n          onClick={this.props.toggleBetweenMasterLevels}\r\n        >\r\n          <NavigationLink to='#' style={{ cursor: \"default\" }}>\r\n            <div className='logo' />\r\n          </NavigationLink>\r\n\r\n          <NavigationLink to='/' style={{ marginLeft: \"10px\" }}>\r\n            <div className='homebtn' />\r\n          </NavigationLink>\r\n\r\n          <Menu.Item\r\n            key='plantlevel'\r\n            style={{\r\n              marginLeft: \"8px\",\r\n            }}\r\n          >\r\n            <NavigationLink to='/master/plantlevel'>\r\n              <Icon type='dropbox' />\r\n              <span>Plant</span>\r\n            </NavigationLink>\r\n          </Menu.Item>\r\n\r\n          <Menu.Item key='categorylevel' style={{}}>\r\n            <NavigationLink to='/master/categorylevel'>\r\n              <Icon type='dropbox' /> <span>Category</span>\r\n            </NavigationLink>\r\n          </Menu.Item>\r\n\r\n          <Menu.Item key='unitlevel' style={{}}>\r\n            <NavigationLink to='/master/unitlevel'>\r\n              <Icon type='dropbox' /> <span>Unit</span>\r\n            </NavigationLink>\r\n          </Menu.Item>\r\n\r\n          <Menu.Item key='materiallevel' style={{}}>\r\n            <NavigationLink to='/master/materiallevel'>\r\n              <Icon type='dropbox' /> <span>Material</span>\r\n            </NavigationLink>\r\n          </Menu.Item>\r\n\r\n          <Menu.Item key='equipmentlevel' style={{}}>\r\n            <NavigationLink to='/master/equipmentlevel'>\r\n              <Icon type='dropbox' /> <span>Equipment</span>\r\n            </NavigationLink>\r\n          </Menu.Item>\r\n\r\n          <Menu.Item key='testlevel' style={{}}>\r\n            <NavigationLink to='/master/testlevel'>\r\n              <Icon type='dropbox' /> <span>Test</span>\r\n            </NavigationLink>\r\n          </Menu.Item>\r\n\r\n          <Menu.Item key='parameterlevel' style={{}}>\r\n            <NavigationLink to='/master/parameterlevel'>\r\n              <Icon type='dropbox' /> <span>Parameter</span>\r\n            </NavigationLink>\r\n          </Menu.Item>\r\n\r\n          <Menu.Item key='sitelevel' style={{}}>\r\n            <NavigationLink to='/master/sitelevel'>\r\n              <Icon type='dropbox' /> <span>Site</span>\r\n            </NavigationLink>\r\n          </Menu.Item>\r\n\r\n          {/* <Menu.Item key=\"sievelevel\" style={{}}>\r\n            <NavigationLink to=\"/master/sievelevel\">\r\n              <Icon type=\"dropbox\" /> <span>Sieve</span>\r\n            </NavigationLink>\r\n          </Menu.Item> */}\r\n\r\n          <div className='master_logo_gap' />\r\n          <SubMenu\r\n            key='masterprofilemenu'\r\n            title={\r\n              <span className='submenu-title-wrapper'>\r\n                <Avatar size='large'>\r\n                  <Icon\r\n                    type='user'\r\n                    style={{\r\n                      fontSize: \"24px\",\r\n                      textAlign: \"center\",\r\n                      padding: \"2px\",\r\n                      margin: \"4px\",\r\n                    }}\r\n                  ></Icon>\r\n                </Avatar>\r\n              </span>\r\n            }\r\n          >\r\n            <Menu.Item key='15'>\r\n              <Link to='/profile'>\r\n                <Icon type='user' />\r\n                Profile\r\n              </Link>\r\n            </Menu.Item>\r\n            <Menu.Item key='16'>\r\n              <Link\r\n                to='/settings/priviledges'\r\n                onClick={this.props.toggleSettingsNavigation}\r\n              >\r\n                <SettingOutlined />\r\n                Settings\r\n              </Link>\r\n            </Menu.Item>\r\n            <Menu.Item key='17'>\r\n              <Link to='/logout'>\r\n                <Icon type='logout' theme='outlined' twoToneColor />\r\n                Log Out\r\n              </Link>\r\n            </Menu.Item>\r\n          </SubMenu>\r\n        </TopNavMenu>\r\n      );\r\n    } else if (this.props.navpath === \"/samples\") {\r\n      return (\r\n        <TopNavMenu\r\n          theme='dark'\r\n          mode='horizontal'\r\n          position='right'\r\n          defaultSelectedKeys={[\"1\"]}\r\n        >\r\n          <NavigationLink to='#' style={{ cursor: \"default\" }}>\r\n            <div className='logo' />\r\n          </NavigationLink>\r\n\r\n          <NavigationLink to='/' style={{ marginLeft: \"10px\" }}>\r\n            <div className='homebtn' />\r\n          </NavigationLink>\r\n\r\n          <div className='samples_logo_gap' />\r\n          <SubMenu\r\n            key='sprof'\r\n            title={\r\n              <span className='submenu-title-wrapper'>\r\n                <Avatar size='large'>\r\n                  <Icon\r\n                    type='user'\r\n                    style={{\r\n                      fontSize: \"24px\",\r\n                      textAlign: \"center\",\r\n                      padding: \"2px\",\r\n                      margin: \"4px\",\r\n                    }}\r\n                  ></Icon>\r\n                </Avatar>\r\n              </span>\r\n            }\r\n          >\r\n            <Menu.Item key='15'>\r\n              <Link to='/profile'>\r\n                <Icon type='user' />\r\n                Profile\r\n              </Link>\r\n            </Menu.Item>\r\n            <Menu.Item key='16'>\r\n              <Link\r\n                to='/settings/priviledges'\r\n                onClick={this.props.toggleSettingsNavigation}\r\n              >\r\n                <SettingOutlined />\r\n                Settings\r\n              </Link>\r\n            </Menu.Item>\r\n            <Menu.Item key='17'>\r\n              <Link to='/logout'>\r\n                <Icon type='logout' theme='outlined' twoToneColor />\r\n                Log Out\r\n              </Link>\r\n            </Menu.Item>\r\n          </SubMenu>\r\n        </TopNavMenu>\r\n      );\r\n    } else if (this.props.navpath === \"/homescreen\") {\r\n      return (\r\n        <TopNavMenu\r\n          theme='dark'\r\n          mode='horizontal'\r\n          position='right'\r\n          defaultSelectedKeys={[\"0\"]}\r\n        >\r\n          <NavigationLink to='/'>\r\n            <div className='logo' />\r\n          </NavigationLink>\r\n          <SubMenu\r\n            key={\"1\"}\r\n            title={\r\n              <span className='submenu-title-wrapper'>\r\n                <NavigationLink\r\n                  to='/dashboard'\r\n                  onClick={this.props.toggleDashboard}\r\n                >\r\n                  <Icon type='pie-chart' /> Dashboard\r\n                </NavigationLink>\r\n              </span>\r\n            }\r\n          />\r\n          <div className='homescreen_logo_gap' />\r\n          <SubMenu\r\n            title={\r\n              <span className='submenu-title-wrapper'>\r\n                <Avatar size='large'>\r\n                  <Icon\r\n                    type='user'\r\n                    style={{\r\n                      fontSize: \"24px\",\r\n                      textAlign: \"center\",\r\n                      padding: \"2px\",\r\n                      margin: \"4px\",\r\n                    }}\r\n                  ></Icon>\r\n                </Avatar>\r\n              </span>\r\n            }\r\n          >\r\n            <Menu.Item key='15'>\r\n              <Link to='/profile'>\r\n                <Icon type='user' />\r\n                Profile\r\n              </Link>\r\n            </Menu.Item>\r\n            <Menu.Item key='16'>\r\n              <Link\r\n                to='/settings/priviledges'\r\n                onClick={this.props.toggleSettingsNavigation}\r\n              >\r\n                <SettingOutlined />\r\n                Settings\r\n              </Link>\r\n            </Menu.Item>\r\n            <Menu.Item key='17'>\r\n              <Link to='/logout'>\r\n                <Icon type='logout' theme='outlined' twoToneColor />\r\n                Log Out\r\n              </Link>\r\n            </Menu.Item>\r\n          </SubMenu>\r\n        </TopNavMenu>\r\n      );\r\n    } else if (\r\n      this.props.navpath === \"/testtrials\" ||\r\n      this.props.navpath === \"/dashboard\"\r\n    ) {\r\n      return (\r\n        <TopNavMenu\r\n          theme='dark'\r\n          mode='horizontal'\r\n          position='right'\r\n          defaultSelectedKeys={[\"1\"]}\r\n        >\r\n          <NavigationLink to='#' style={{ cursor: \"default\" }}>\r\n            <div className='logo' />\r\n          </NavigationLink>\r\n\r\n          <NavigationLink to='/' style={{ marginLeft: \"10px\" }}>\r\n            <div className='homebtn' />\r\n          </NavigationLink>\r\n\r\n          <div className='testrials_logo_gap' />\r\n          <SubMenu\r\n            title={\r\n              <span className='submenu-title-wrapper'>\r\n                <Avatar size='large'>\r\n                  <Icon\r\n                    type='user'\r\n                    style={{\r\n                      fontSize: \"24px\",\r\n                      textAlign: \"center\",\r\n                      padding: \"2px\",\r\n                      margin: \"4px\",\r\n                    }}\r\n                  ></Icon>\r\n                </Avatar>\r\n              </span>\r\n            }\r\n          >\r\n            <Menu.Item key='15'>\r\n              <Link to='/profile'>\r\n                <Icon type='user' />\r\n                Profile\r\n              </Link>\r\n            </Menu.Item>\r\n            <Menu.Item key='16'>\r\n              <Link\r\n                to='/settings/priviledges'\r\n                onClick={this.props.toggleSettingsNavigation}\r\n              >\r\n                <SettingOutlined />\r\n                Settings\r\n              </Link>\r\n            </Menu.Item>\r\n            <Menu.Item key='17'>\r\n              <Link to='/logout'>\r\n                <Icon type='logout' theme='outlined' twoToneColor />\r\n                Log Out\r\n              </Link>\r\n            </Menu.Item>\r\n          </SubMenu>\r\n        </TopNavMenu>\r\n      );\r\n    } else if (this.props.navpath === \"/testconfiguration\") {\r\n      return (\r\n        <TopNavMenu\r\n          theme='dark'\r\n          mode='horizontal'\r\n          position='right'\r\n          defaultSelectedKeys={[\"1\"]}\r\n        >\r\n          <NavigationLink to='#' style={{ cursor: \"default\" }}>\r\n            <div className='logo' />\r\n          </NavigationLink>\r\n\r\n          <NavigationLink to='/' style={{ marginLeft: \"10px\" }}>\r\n            <div className='homebtn' />\r\n          </NavigationLink>\r\n\r\n          <div className='testrials_logo_gap' />\r\n          <SubMenu\r\n            title={\r\n              <span className='submenu-title-wrapper'>\r\n                <Avatar size='large'>\r\n                  <Icon\r\n                    type='user'\r\n                    style={{\r\n                      fontSize: \"24px\",\r\n                      textAlign: \"center\",\r\n                      padding: \"2px\",\r\n                      margin: \"4px\",\r\n                    }}\r\n                  ></Icon>\r\n                </Avatar>\r\n              </span>\r\n            }\r\n          >\r\n            <Menu.Item key='15'>\r\n              <Link to='/profile'>\r\n                <Icon type='user' />\r\n                Profile\r\n              </Link>\r\n            </Menu.Item>\r\n            <Menu.Item key='16'>\r\n              <Link\r\n                to='/settings/priviledges'\r\n                onClick={this.props.toggleSettingsNavigation}\r\n              >\r\n                <SettingOutlined />\r\n                Settings\r\n              </Link>\r\n            </Menu.Item>\r\n            <Menu.Item key='17'>\r\n              <Link to='/logout'>\r\n                <Icon type='logout' theme='outlined' twoToneColor />\r\n                Log Out\r\n              </Link>\r\n            </Menu.Item>\r\n          </SubMenu>\r\n        </TopNavMenu>\r\n      );\r\n    } else if (this.props.navpath === \"/priviledges\") {\r\n      return (\r\n        <TopNavMenu\r\n          theme='dark'\r\n          mode='horizontal'\r\n          position='right'\r\n          selectedKeys={this.props.priviledgeKeys}\r\n          onClick={this.props.toggleBetweenPriviledgeLevels}\r\n        >\r\n          <NavigationLink to='#' style={{ cursor: \"default\" }}>\r\n            <div className='logo' />\r\n          </NavigationLink>\r\n\r\n          <NavigationLink to='/' style={{ marginLeft: \"10px\" }}>\r\n            <div className='homebtn' />\r\n          </NavigationLink>\r\n\r\n          <Menu.Item key='priviledges' style={{ marginLeft: \"10px\" }}>\r\n            <NavigationLink to='/settings/priviledges'>\r\n              <Icon type='dropbox' /> <span>Priviledges</span>\r\n            </NavigationLink>\r\n          </Menu.Item>\r\n\r\n          <Menu.Item key='auditlog'>\r\n            <NavigationLink to='/settings/auditlog'>\r\n              <Icon type='dropbox' /> <span>Audit Log</span>\r\n            </NavigationLink>\r\n          </Menu.Item>\r\n\r\n          <div className='configuration_logo_gap' />\r\n          <SubMenu\r\n            title={\r\n              <span className='submenu-title-wrapper'>\r\n                <Avatar size='large'>\r\n                  <Icon\r\n                    type='user'\r\n                    style={{\r\n                      fontSize: \"24px\",\r\n                      textAlign: \"center\",\r\n                      padding: \"2px\",\r\n                      margin: \"4px\",\r\n                    }}\r\n                  ></Icon>\r\n                </Avatar>\r\n              </span>\r\n            }\r\n          >\r\n            <Menu.Item key='15'>\r\n              <Link to='/profile'>\r\n                <Icon type='user' />\r\n                Profile\r\n              </Link>\r\n            </Menu.Item>\r\n            <Menu.Item key='16'>\r\n              <Link\r\n                to='/settings/priviledges'\r\n                onClick={this.props.toggleSettingsNavigation}\r\n              >\r\n                <SettingOutlined />\r\n                Settings\r\n              </Link>\r\n            </Menu.Item>\r\n            <Menu.Item key='17'>\r\n              <Link to='/logout'>\r\n                <Icon type='logout' theme='outlined' twoToneColor />\r\n                Log Out\r\n              </Link>\r\n            </Menu.Item>\r\n          </SubMenu>\r\n        </TopNavMenu>\r\n      );\r\n    } else if (this.props.navpath === \"/mixdesign\") {\r\n      return (\r\n        <TopNavMenu\r\n          theme='dark'\r\n          mode='horizontal'\r\n          position='right'\r\n          defaultSelectedKeys={[\"1\"]}\r\n          onClick={this.props.toggleBetweenPriviledgeLevels}\r\n        >\r\n          <NavigationLink to='#' style={{ cursor: \"default\" }}>\r\n            <div className='logo' />\r\n          </NavigationLink>\r\n\r\n          <NavigationLink to='/' style={{ marginLeft: \"10px\" }}>\r\n            <div className='homebtn' />\r\n          </NavigationLink>\r\n\r\n          <div className='testrials_logo_gap' />\r\n          <SubMenu\r\n            title={\r\n              <span className='submenu-title-wrapper'>\r\n                <Avatar size='large'>\r\n                  <Icon\r\n                    type='user'\r\n                    style={{\r\n                      fontSize: \"24px\",\r\n                      textAlign: \"center\",\r\n                      padding: \"2px\",\r\n                      margin: \"4px\",\r\n                    }}\r\n                  ></Icon>\r\n                </Avatar>\r\n              </span>\r\n            }\r\n          >\r\n            <Menu.Item key='15'>\r\n              <Link to='/profile'>\r\n                <Icon type='user' />\r\n                Profile\r\n              </Link>\r\n            </Menu.Item>\r\n            <Menu.Item key='16'>\r\n              <Link\r\n                to='/settings/priviledges'\r\n                onClick={this.props.toggleSettingsNavigation}\r\n              >\r\n                <SettingOutlined />\r\n                Settings\r\n              </Link>\r\n            </Menu.Item>\r\n            <Menu.Item key='17'>\r\n              <Link to='/logout'>\r\n                <Icon type='logout' theme='outlined' twoToneColor />\r\n                Log Out\r\n              </Link>\r\n            </Menu.Item>\r\n          </SubMenu>\r\n        </TopNavMenu>\r\n      );\r\n    } else if (this.props.navpath === \"/testresults\") {\r\n      return (\r\n        <TopNavMenu\r\n          theme='dark'\r\n          mode='horizontal'\r\n          position='right'\r\n          defaultSelectedKeys={[\"1\"]}\r\n        >\r\n          <NavigationLink to='#' style={{ cursor: \"default\" }}>\r\n            <div className='logo' />\r\n          </NavigationLink>\r\n\r\n          <NavigationLink to='/' style={{ marginLeft: \"10px\" }}>\r\n            <div className='homebtn' />\r\n          </NavigationLink>\r\n\r\n          <div className='testrials_logo_gap' />\r\n          <SubMenu\r\n            title={\r\n              <span className='submenu-title-wrapper'>\r\n                <Avatar size='large'>\r\n                  <Icon\r\n                    type='user'\r\n                    style={{\r\n                      fontSize: \"24px\",\r\n                      textAlign: \"center\",\r\n                      padding: \"2px\",\r\n                      margin: \"4px\",\r\n                    }}\r\n                  ></Icon>\r\n                </Avatar>\r\n              </span>\r\n            }\r\n          >\r\n            <Menu.Item key='15'>\r\n              <Link to='/profile'>\r\n                <Icon type='user' />\r\n                Profile\r\n              </Link>\r\n            </Menu.Item>\r\n            <Menu.Item key='16'>\r\n              <Link\r\n                to='/settings/priviledges'\r\n                onClick={this.props.toggleSettingsNavigation}\r\n              >\r\n                <SettingOutlined />\r\n                Settings\r\n              </Link>\r\n            </Menu.Item>\r\n            <Menu.Item key='17'>\r\n              <Link to='/logout'>\r\n                <Icon type='logout' theme='outlined' twoToneColor />\r\n                Log Out\r\n              </Link>\r\n            </Menu.Item>\r\n          </SubMenu>\r\n        </TopNavMenu>\r\n      );\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <Header\r\n        theme='dark'\r\n        style={{\r\n          paddingLeft: \"14px\",\r\n          height: \"55px\",\r\n          width: \"100%\",\r\n          padding: 0,\r\n          boxShadow: \"0 1px 4px rgba(0,21,41,.08)\",\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          flexWrap: \"wrap\",\r\n          justifyContent: \"flex-start\",\r\n        }}\r\n      >\r\n        {this.renderNavigation()}\r\n      </Header>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    navpath: state.topbarNavigationReducers.navpath,\r\n    masterkeys: state.masterLevelNavigationReducer.masterlevelkey,\r\n    priviledgeKeys: state.priviledgeLevelNavigationReducer.priviledgekeys,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    toggleHomeScreenNavigation: () => {\r\n      dispatch({ type: TOGGLE_TO_HOME_SCREEN_NAVIGATION });\r\n      console.log(\"toggle to home screen navigation click dispatched\");\r\n    },\r\n    navigationRefresh: () => {\r\n      dispatch({ type: CHECK_WHETHER_DEFAULT_MASTER_LEVEL });\r\n      console.log(\"check default master key while master clicked\");\r\n    },\r\n    toggleDashboard: () => {\r\n      dispatch({ type: TOGGLE_TO_DASHBOARD_NAVIGATION });\r\n      console.log(\"toggle to dashboard screen click dispatches\");\r\n    },\r\n    toggleBetweenMasterLevels: (e) => {\r\n      dispatch({ type: TOGGLE_BETWEEN_MASTER_LEVELS, key: e.key });\r\n      console.log(\"master level navigation toggleed key is \" + e.key);\r\n    },\r\n    toggleSettingsNavigation: () => {\r\n      dispatch({ type: TOGGLE_TO_PRIVILEDGES_NAVIGATION });\r\n      console.log(\"toggled to priviledges navigation click dispatched\");\r\n    },\r\n    toggleBetweenPriviledgeLevels: (e) => {\r\n      dispatch({ type: TOGGLE_BETWEEN_PRIVILEDGE_LEVELS, key: e.key });\r\n      console.log(\"priviledge level navigation toggleed key is \" + e.key);\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderComponent);\r\n","export const TOGGLE_BETWEEN_MASTER_LEVELS = \"TOGGLE_BETWEEN_MASTER_LEVELS\";\r\nexport const CHECK_WHETHER_DEFAULT_MASTER_LEVEL =\r\n  \"CHECK_WHETHER_DEFAULT_MASTER_LEVEL\";\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const FlexContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  flex-direction: ${props => (props.column ? \"column\" : \"row\")};\r\n  height: ${props => (props.titles ? \"40px\" : props.steps ? \"150px\" : \"\")};\r\n  justify-content: ${props =>\r\n    props.home\r\n      ? \"flex-start\"\r\n      : props.normal\r\n      ? \"space-evenly\"\r\n      : \"space-between\"};\r\n\r\n  ${props =>\r\n    props.leveltitles &&\r\n    css`\r\n      @media (min-width: 1900px) {\r\n        justify-content: space-between;\r\n        width: calc(100% - 10px);\r\n      }\r\n    `}\r\n  ${props =>\r\n    props.leveltileareafixed &&\r\n    css`\r\n      margin-top: -15px;\r\n      justify-content: flex-start;\r\n    `}\r\n  ${props =>\r\n    props.stepsarea &&\r\n    css`\r\n      justify-content: space-evenly;\r\n      margin-top: 15px;\r\n    `}\r\n\r\n  ${props =>\r\n    props.borderRadiused &&\r\n    css`\r\n      border-bottom-right-radius: 15px;\r\n      border-bottom-left-radius: 15px;\r\n      background: white;\r\n      padding: 10px;\r\n    `}\r\n\r\n  ${props =>\r\n    props.homecard1 &&\r\n    css`\r\n            display: flex;\r\n            flex-direction: column\r\n            justify-content: space-evenly;\r\n            height: auto;\r\n            width: 300px;\r\n            background: rgba(252, 252, 252, 0.85);\r\n\r\n            padding: 20px;\r\n            border-radius: 15px;\r\n            box-shadow: 2px 4px 3px 2px rgba(0,0,0,0.4);\r\n            -ms-border-radius: 15px;\r\n            -o-border-radius: 15px;\r\n            -moz-border-radius: 15px;\r\n            -webkit-border-radius: 15px;\r\n            border-radius: 15px;\r\n            -ms-box-shadow: 0px 3px 5px 1px rgba(0, 0, 0, 0.41);\r\n            -o-box-shadow: 0px 3px 5px 1px rgba(0, 0, 0, 0.41);\r\n            -webkit-box-shadow: 0px 3px 5px 1px rgba(0, 0, 0, 0.41);\r\n            -moz-box-shadow: 0px 3px 5px 1px rgba(0, 0, 0, 0.41);\r\n            box-shadow: 0px 3px 5px 1px rgba(0, 0, 0, 0.41); */\r\n            \r\n  `}\r\n\r\n  ${props =>\r\n    props.resCardArea &&\r\n    css`\r\n      width: 790px;\r\n      background: white;\r\n      padding: 10px;\r\n      border-radius: 15px;\r\n\r\n      @media (min-width: 1920px) {\r\n        width: 1000px;\r\n        height: 400px;\r\n      }\r\n    `}\r\n    \r\n`;\r\n","import styled, { css } from \"styled-components\";\r\n\r\n//images\r\n// import Material from \"../../../assets/material2.jpg\";\r\n// import Mixer from \"../../../assets/concretemixer.jpg\";\r\n// import Lab from \"../../../assets/labtesting.jpg\";\r\n// import MasterSupplier from \"../../../assets/master.jpg\";\r\n// import RawMaterial from \"../../../assets/cementbag.jpg\";\r\n// import FinalProduct from \"../../../assets/finalproduct2.jpg\";\r\n// import Settings from \"../../../assets/settings.png\";\r\n// import Reports from \"../../../assets/reports.png\";\r\n// import ImportFromExcel from \"../../../assets/excelimport.png\";\r\n// import Accounts from \"../../../assets/accounts.png\";\r\n\r\n// images alt\r\nimport Material from \"../../../assets/homescreen/materialedited.png\";\r\nimport Mixer from \"../../../assets/concretemixer.jpg\";\r\nimport Lab from \"../../../assets/labtesting.jpg\";\r\nimport MasterSupplier from \"../../../assets/master.jpg\";\r\nimport MasterSupplier1 from \"../../../assets/master1.png\";\r\nimport RawMaterial from \"../../../assets/cementbag.jpg\";\r\nimport FinalProduct from \"../../../assets/finalproduct2.jpg\";\r\nimport Settings from \"../../../assets/settings.png\";\r\nimport Reports from \"../../../assets/reports.png\";\r\nimport ImportFromExcel from \"../../../assets/excelimport.png\";\r\nimport Accounts from \"../../../assets/accounts.png\";\r\nimport Configuration from \"../../../assets/homescreen/configurationedited.png\";\r\nimport TestTrial from \"../../../assets/homescreen/testtrial.png\";\r\nimport MixDesign from \"../../../assets/homescreen/mixdesign.png\";\r\n\r\nconst size = {\r\n  mobileS: \"320px\",\r\n  mobileM: \"375px\",\r\n  mobileL: \"425px\",\r\n  tablet: \"768px\",\r\n  laptop: \"1024px\",\r\n  laptopL: \"1440px\",\r\n  desktop: \"1920px\",\r\n  desktopL: \"2560px\"\r\n};\r\n\r\nexport const device = {\r\n  mobileS: `(max-width: ${size.mobileS})`,\r\n  mobileM: `(max-width: ${size.mobileM})`,\r\n  mobileL: `(max-width: ${size.mobileL})`,\r\n  tablet: `(max-width: ${size.tablet})`,\r\n  laptop: `(max-width: ${size.laptop})`,\r\n  laptopL: `(max-width: ${size.laptopL})`,\r\n  desktop: `(max-width: ${size.desktop})`,\r\n  desktopL: `(max-width: ${size.desktop})`\r\n};\r\n\r\nexport const ImageCard = styled.div`\r\n    height: 120px;\r\n    width: 200px;\r\n    text-shadow: 1px 6px 7px none;\r\n    border: none;\r\n    position: static;\r\n    z-index: 20;\r\n    border-radius: 0.35em;\r\n    transform: translate3d(2px);\r\n    background-size: cover; \r\n    box-shadow: 4px 4px 6px 3px rgba(0,0,0,0.5);\r\n    cursor: pointer;\r\n\r\n    ${props =>\r\n      props.material &&\r\n      css`\r\n        background: url(${Material});\r\n        background-size: cover;\r\n      `}\r\n\r\n    ${props =>\r\n      props.samples &&\r\n      css`\r\n        background: url(${Mixer});\r\n        background-size: cover;\r\n      `}\r\n\r\n    ${props =>\r\n      props.testing &&\r\n      css`\r\n        background: url(${Lab});\r\n        background-size: cover;\r\n      `}\r\n    \r\n    ${props =>\r\n      props.testTrial &&\r\n      css`\r\n        background: url(${TestTrial});\r\n        background-size: cover;\r\n      `}\r\n\r\n    \r\n    ${props =>\r\n      props.master &&\r\n      css`\r\n        background: url(${MasterSupplier});\r\n        background-size: cover;\r\n      `}\r\n      ${props =>\r\n        props.master &&\r\n        css`\r\n          background: url(${MasterSupplier1});\r\n          background-size: cover;\r\n        `}\r\n\r\n    ${props =>\r\n      props.reports &&\r\n      css`\r\n        background: url(${Reports});\r\n        background-size: cover;\r\n      `}\r\n\r\n    ${props =>\r\n      props.settings &&\r\n      css`\r\n        background: url(${Settings});\r\n        background-size: cover;\r\n      `}\r\n    \r\n    ${props =>\r\n      props.mixDesign &&\r\n      css`\r\n        background: url(${MixDesign});\r\n        background-size: cover;\r\n      `}\r\n\r\n    ${props =>\r\n      props.importexcel &&\r\n      css`\r\n        background: url(${ImportFromExcel});\r\n        background-size: cover;\r\n      `}\r\n\r\n    ${props =>\r\n      props.accounts &&\r\n      css`\r\n        background: url(${Accounts});\r\n        background-size: cover;\r\n      `}\r\n      \r\n\r\n\r\n    ${props =>\r\n      props.rawmaterial &&\r\n      css`\r\n        background: url(${RawMaterial});\r\n        background-size: cover;\r\n        width: 10em;\r\n        height: 13em;\r\n      `}\r\n\r\n    ${props =>\r\n      props.finalproduct &&\r\n      css`\r\n        background: url(${FinalProduct});\r\n        background-size: cover;\r\n        width: 10em;\r\n        height: 13em;\r\n        margin-left: 1.7em;\r\n      `}\r\n  ${props =>\r\n    props.configuration &&\r\n    css`\r\n      background: url(${Configuration});\r\n      background-size: cover;\r\n      width: 10em;\r\n      height: 13em;\r\n      margin-left: 1.7em;\r\n    `};\r\n\r\n\r\n\r\n\r\n\r\n    &:hover {\r\n        position: static;\r\n        animation-name: cardUp;\r\n        /* transform: translateY(-8px);\r\n        transition: 10s; */\r\n        animation-duration: 1s;\r\n        z-index: 300;\r\n        transform: translate3d(52px);\r\n        transform: translateY(-2px);\r\n        /* animation-iteration-count: infinite; */\r\n        box-shadow: 8px 22px 30px 3px rgba(0,0,0,0.6);\r\n        -webkit-animation-name: cardUp; /* Safari 4.0 - 8.0 */\r\n        -webkit-animation-duration: 1s; /* Safari 4.0 - 8.0 */\r\n        -moz-animation-name: cardUp; /* Mozilla */\r\n        -moz-animation-duration: 1s; /* Mozilla */\r\n    }\r\n\r\n    \r\n    @keyframes cardUp {\r\n      from {\r\n        box-shadow: 4px 4px 6px 3px rgba(0,0,0,0.5);\r\n        transform: translate3d(2px);\r\n        z-index: 20;\r\n      }\r\n      to {\r\n        box-shadow: 8px 22px 30px 3px rgba(0,0,0,0.6);\r\n        z-index: 300;\r\n        transform: translate3d(52px);\r\n        transform: translateY(-2px);\r\n      }\r\n    }\r\n    @media ${device.desktop} {  \r\n        height: 250px;\r\n        width: 360px;\r\n        margin: 20px;\r\n    }\r\n    @media ${device.tablet} {  \r\n        width: 8m;\r\n        height: 9em;\r\n        margin: 10px;\r\n        \r\n    }\r\n\r\n\r\n    /* current device */\r\n    @media ${device.laptopL} {  \r\n        height: 145px;\r\n        width: 230px;  \r\n       margin: 15px;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n   \r\n    \r\n\r\n   \r\n    \r\n`;\r\n","import axios from \"axios\";\r\nimport { SuperMix_Base_Url, Login_Base_Url } from \"../Constant/Api\";\r\n\r\nfunction addParamsToURL(url, params) {\r\n  if (params) {\r\n    let temp = url;\r\n    temp = temp + \"/\" + params;\r\n    return temp;\r\n  }\r\n  return url;\r\n}\r\n\r\nfunction getService(service) {\r\n  switch (service) {\r\n    case \"supermix\":\r\n      return SuperMix_Base_Url;\r\n    case \"login\":\r\n      return Login_Base_Url;\r\n    default:\r\n      console.log(\"ERROR: Please specify a service !\");\r\n  }\r\n}\r\n\r\nconst getHeaders = token => {\r\n  if (token) {\r\n    return {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${\"\"}`,\r\n        \"Access-Control-Allow-Origin\": \"*\"\r\n      }\r\n    };\r\n  } else {\r\n    return {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        \"Access-Control-Allow-Origin\": \"*\"\r\n      }\r\n    };\r\n  }\r\n};\r\n\r\nexport const api = (method, service, endpoint, token, body, params) => {\r\n  switch (method) {\r\n    case \"GET\":\r\n      // HTTP GET Request - Returns Resolved or Rejected Promise\r\n      return new Promise((resolve, reject) => {\r\n        console.log(\"workkk\");\r\n        const SERVICE = getService(service);\r\n        const URL = addParamsToURL(`${SERVICE}${endpoint}`, params);\r\n        axios\r\n          .get(URL, getHeaders(token))\r\n          .then(response => {\r\n            resolve(response);\r\n          })\r\n          .catch(error => {\r\n            reject(error);\r\n          });\r\n      });\r\n    case \"POST\":\r\n      // HTTP POST Request - Returns Resolved or Rejected Promise\r\n      return new Promise((resolve, reject) => {\r\n        const SERVICE = getService(service);\r\n        const URL = addParamsToURL(`${SERVICE}${endpoint}`, params);\r\n        axios\r\n          .post(URL, body, getHeaders(token))\r\n          .then(response => {\r\n            resolve(response);\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n            reject(error.response.data);\r\n          });\r\n      });\r\n    case \"DELETE\":\r\n      // HTTP DELETE Request - Returns Resolved or Rejected Promise\r\n      return new Promise((resolve, reject) => {\r\n        const SERVICE = getService(service);\r\n        const URL = addParamsToURL(`${SERVICE}${endpoint}`, params);\r\n        axios\r\n          .delete(URL, getHeaders(token))\r\n          .then(response => {\r\n            resolve(response);\r\n          })\r\n          .catch(error => {\r\n            reject(error);\r\n          });\r\n      });\r\n    case \"PUT\":\r\n      // HTTP PUT Request - Returns Resolved or Rejected Promise\r\n      return new Promise((resolve, reject) => {\r\n        const SERVICE = getService(service);\r\n        const URL = addParamsToURL(`${SERVICE}${endpoint}`, params);\r\n        axios\r\n          .put(URL, body, getHeaders(token))\r\n          .then(response => {\r\n            resolve(response);\r\n          })\r\n          .catch(error => {\r\n            reject(error.response.data);\r\n          });\r\n      });\r\n\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n","export const Login_Base_Url = \"\";\r\n\r\nexport const SuperMix_Base_Url = \"http://localhost:8085/tokyo-supermix/api/v1\";\r\n\r\n//  constant  names\r\n\r\nexport const Main_Category_Name_Aggregate = \"Aggregates\";\r\nexport const Sub_Category_Name_Cement = \"cement\";\r\nexport const Sub_Category_Name_Water = \"water\";\r\nexport const Sub_Category_Name_Flyash = \"flyash\";\r\n","import styled from \"styled-components\";\r\n\r\nexport const ColoredCard = styled.div`\r\n  background: ${props =>\r\n    props.blue\r\n      ? \"#2C365E\"\r\n      : props.green\r\n      ? \"#297373\"\r\n      : props.purple\r\n      ? \"#2B193D\"\r\n      : props.red\r\n      ? \"#610F7F\"\r\n      : \"\"};\r\n  height: 170px;\r\n  width: 180px;\r\n  border-radius: 15px;\r\n  color: white;\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: wrap;\r\n  justify-content: space-evenly;\r\n  box-shadow: 1.5px 4px 4px 3px rgba(0, 0, 0, 0.3);\r\n  cursor: pointer;\r\n\r\n  @media (min-width: 1920px) {\r\n    height: 180px;\r\n    width: 480px;\r\n  }\r\n\r\n  /* cursor: wait; */\r\n`;\r\n\r\nexport const ColoredCardText = styled.h3`\r\n  color: white;\r\n  text-align: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const ColoredCardDescription = styled.h4`\r\n  color: white;\r\n  text-align: center;\r\n  width: 90%;\r\n`;\r\n\r\nexport const ColoredCardImageArea = styled.div`\r\n  width: auto;\r\n  height: auto;\r\n  border-radius: 20px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  height: 60px;\r\n`;\r\n\r\nexport const ColoredCardImage = styled.img`\r\n  width: 60px;\r\n`;\r\n\r\nexport const ColoredCardTextArea = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  text-align: center;\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n  ColoredCard,\r\n  ColoredCardText,\r\n  ColoredCardImageArea,\r\n  ColoredCardImage,\r\n  ColoredCardTextArea,\r\n  ColoredCardDescription\r\n} from \"../styledcomponents/card/ColoredCard\";\r\nimport FineAggregate from \"../../assets/sand.png\";\r\nimport CoarseAggregate from \"../../assets/rock.png\";\r\nimport Cement from \"../../assets/cement.png\";\r\nimport Admixture from \"../../assets/lab.png\";\r\n\r\nconst alt = \"sorry no image\";\r\n\r\nexport const HomeColoredCard = (colorprop, text, totalSamples) => {\r\n  if (colorprop === \"blue\") {\r\n    return (\r\n      <ColoredCard\r\n        blue\r\n        // onClick={() => new ToggleDisplayWindow(\"FineAggregate\")}\r\n      >\r\n        <ColoredCardImageArea>\r\n          <ColoredCardImage src={FineAggregate} alt={alt} />\r\n        </ColoredCardImageArea>\r\n        <ColoredCardTextArea>\r\n          <ColoredCardText>{text}</ColoredCardText>\r\n          <ColoredCardDescription>\r\n            Total Samples Arrived Today is: &nbsp;<em>{totalSamples}</em>\r\n          </ColoredCardDescription>\r\n        </ColoredCardTextArea>\r\n      </ColoredCard>\r\n    );\r\n  }\r\n  if (colorprop === \"green\") {\r\n    return (\r\n      <ColoredCard green>\r\n        <ColoredCardImageArea>\r\n          <ColoredCardImage src={Cement} alt={alt} />\r\n        </ColoredCardImageArea>\r\n        <ColoredCardTextArea>\r\n          <ColoredCardText>{text}</ColoredCardText>\r\n          <ColoredCardDescription>\r\n            Total Samples Arrived Today is: &nbsp;<em>{totalSamples}</em>\r\n          </ColoredCardDescription>\r\n        </ColoredCardTextArea>\r\n      </ColoredCard>\r\n    );\r\n  }\r\n  if (colorprop === \"purple\") {\r\n    return (\r\n      <ColoredCard purple>\r\n        <ColoredCardImageArea>\r\n          <ColoredCardImage src={Admixture} alt={alt} />\r\n        </ColoredCardImageArea>\r\n        <ColoredCardTextArea>\r\n          <ColoredCardText>{text}</ColoredCardText>\r\n          <ColoredCardDescription>\r\n            Total Samples Arrived Today is: &nbsp;<em>{totalSamples}</em>\r\n          </ColoredCardDescription>\r\n        </ColoredCardTextArea>\r\n      </ColoredCard>\r\n    );\r\n  }\r\n  if (colorprop === \"red\") {\r\n    return (\r\n      <ColoredCard red>\r\n        <ColoredCardImageArea>\r\n          <ColoredCardImage src={CoarseAggregate} alt={alt} />\r\n        </ColoredCardImageArea>\r\n        <ColoredCardTextArea>\r\n          <ColoredCardText>{text}</ColoredCardText>\r\n          <ColoredCardDescription>\r\n            Total Samples Arrived Today is: &nbsp;<em>{totalSamples}</em>\r\n          </ColoredCardDescription>\r\n        </ColoredCardTextArea>\r\n      </ColoredCard>\r\n    );\r\n  }\r\n};\r\n","import React, { PureComponent} from \"react\";\r\nimport \"./strengthchart.css\";\r\nimport {\r\n  AreaChart,\r\n  Area,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\n\r\nconst data = [\r\n  {\r\n    name: \"Day 3\",\r\n    uv: 15\r\n  },\r\n  {\r\n    name: \"Day 5\",\r\n    uv: 25\r\n  },\r\n  {\r\n    name: \"Day 7\",\r\n    uv: 55\r\n  },\r\n  {\r\n    name: \"Day 14\",\r\n    uv: 45\r\n  },\r\n  {\r\n    name: \"Day 28\",\r\n    uv: 25\r\n  }\r\n];\r\n\r\nexport default class StrengthTest extends PureComponent {\r\n  render() {\r\n    return (\r\n      <div className='chartStyle'>\r\n        <h3>Strength Test</h3>\r\n        <ResponsiveContainer>\r\n          <AreaChart\r\n            data={data}\r\n            margin={{\r\n              top: 10,\r\n              right: 30,\r\n              left: 0,\r\n              bottom: 0\r\n            }}\r\n          >\r\n            <CartesianGrid strokeDasharray='3 3' />\r\n            <XAxis dataKey='name' label={{ value: \"Dates\", position: \"top\" }} />\r\n            <YAxis />\r\n            <Tooltip />\r\n\r\n            <Area\r\n              type='monotone'\r\n              dataKey='uv'\r\n              stroke='#8884d8'\r\n              fill='#8884d8'\r\n            />\r\n          </AreaChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const ChartResContainer = styled.div`\r\n  background: white;\r\n  border-radius: 15px;\r\n\r\n  height: 285px;\r\n\r\n  @media (min-width: 1920px) {\r\n    height: 410px;\r\n  }\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport { FlexContainer } from \"../styledcomponents/container/FlexGrid\";\r\nimport { ImageCard } from \"../styledcomponents/card/ImageCard\";\r\nimport { NavigationLink } from \"../styledcomponents/Link/NavLink\";\r\nimport \"./style.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { api } from \"../services/AxiosService\";\r\nimport {\r\n  TOGGLE_TO_MASTER_TYPE_NAVIGATION,\r\n  TOGGLE_TO_HOME_SCREEN_NAVIGATION,\r\n  TOGGLE_TO_SAMPLE_TYPE_NAVIGATION,\r\n  TOGGLE_TO_TEST_TRIALS_NAVIGATION,\r\n  TOGGLE_TO_TEST_CONFIGURATION_NAVIGATION,\r\n  TOGGLE_TO_MIX_DESIGN_NAVIGATION,\r\n  TOGGLE_TO_TEST_RESULTS_NAVIGATION\r\n} from \"../../redux/action/topbarnavigation/TopbarNavigation\";\r\nimport { HomeColoredCard } from \"./HomeColoredCard\";\r\nimport StrengthTest from \"./charts/StrengthTest\";\r\nimport { ChartResContainer } from \"../styledcomponents/container/ChartResContainer\";\r\n\r\nclass HomeScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      slider2: false,\r\n      sampleCount: {\r\n        fineAggregate: 0,\r\n        coarseAggregate: 0,\r\n        cement: 0,\r\n        admixture: 0\r\n      }\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const { navigationRefresh } = this.props;\r\n    navigationRefresh();\r\n    api(\"GET\", \"supermix\", \"/incoming-samples\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data.results.incomingSamples);\r\n      for (let k = 0; k < res.data.results.incomingSamples.length; k++) {\r\n        // fine aggregate\r\n        if (\r\n          res.data.results.incomingSamples[k].status === \"NEW\" &&\r\n          res.data.results.incomingSamples[k].rawMaterial.name ===\r\n            \"FineAggregate\"\r\n        ) {\r\n          this.setState({\r\n            sampleCount: {\r\n              fineAggregate: this.state.sampleCount.fineAggregate + 1,\r\n              coarseAggregate: this.state.sampleCount.coarseAggregate,\r\n              cement: this.state.sampleCount.cement,\r\n              admixture: this.state.sampleCount.admixture\r\n            }\r\n          });\r\n\r\n          console.log(this.state.sampleCount);\r\n        }\r\n        // coarse aggregate\r\n        if (\r\n          res.data.results.incomingSamples[k].status === \"NEW\" &&\r\n          res.data.results.incomingSamples[k].rawMaterial.name ===\r\n            \"CoarseAggregate\"\r\n        ) {\r\n          console.log(\"c ag hit\");\r\n          this.setState({\r\n            sampleCount: {\r\n              fineAggregate: this.state.sampleCount.fineAggregate,\r\n              coarseAggregate: this.state.sampleCount.coarseAggregate + 1,\r\n              cement: this.state.sampleCount.cement,\r\n              admixture: this.state.sampleCount.admixture\r\n            }\r\n          });\r\n          console.log(this.state.sampleCount);\r\n        }\r\n        // cement\r\n        if (\r\n          res.data.results.incomingSamples[k].status === \"NEW\" &&\r\n          res.data.results.incomingSamples[k].rawMaterial.name === \"Cement\"\r\n        ) {\r\n          console.log(\"cement hit\");\r\n          this.setState({\r\n            sampleCount: {\r\n              fineAggregate: this.state.sampleCount.fineAggregate,\r\n              coarseAggregate: this.state.sampleCount.coarseAggregate,\r\n              cement: this.state.sampleCount.cement + 1,\r\n              admixture: this.state.sampleCount.admixture\r\n            }\r\n          });\r\n          console.log(this.state.sampleCount);\r\n        }\r\n        // admixture\r\n        if (\r\n          res.data.results.incomingSamples[k].status === \"NEW\" &&\r\n          res.data.results.incomingSamples[k].rawMaterial.name === \"Admixture\"\r\n        ) {\r\n          console.log(\"admixture hit\");\r\n          this.setState({\r\n            sampleCount: {\r\n              fineAggregate: this.state.sampleCount.fineAggregate,\r\n              coarseAggregate: this.state.sampleCount.coarseAggregate,\r\n              cement: this.state.sampleCount.cement,\r\n              admixture: this.state.sampleCount.admixture + 1\r\n            }\r\n          });\r\n          console.log(this.state.sampleCount);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <FlexContainer normal>\r\n        <div className=\"tiles_area\">\r\n          {/* tile column 1 start*/}\r\n          <div className=\"tile_col_1\">\r\n            {/* column 1 tile 1 start*/}\r\n            <NavigationLink\r\n              to=\"/master/plantlevel\"\r\n              onClick={this.props.toggleMasterNavigation}\r\n            >\r\n              <ImageCard master>\r\n                <div>\r\n                  <h1 className=\"h1\">Master</h1>\r\n                  <br></br>\r\n                  <div style={{ height: \"25px\" }}></div>\r\n                  <div className=\"ani\">\r\n                    <h4\r\n                      style={{\r\n                        color: \"#ffff\"\r\n                      }}\r\n                      className=\"ani1\"\r\n                    >\r\n                      Plant Level\r\n                    </h4>\r\n                    {/* <h4\r\n                      style={{\r\n                        color: \"#ffff\"\r\n                      }}\r\n                    >\r\n                     Category\r\n                    </h4> */}\r\n                    <h4\r\n                      style={{\r\n                        color: \"#ffff\"\r\n                      }}\r\n                    >\r\n                      Materials\r\n                    </h4>\r\n                    {/* <h4\r\n                      style={{\r\n                        color: \"#ffff\"\r\n                      }}\r\n                    >\r\n                     Parameter\r\n                    </h4> */}\r\n                  </div>\r\n                </div>\r\n              </ImageCard>\r\n            </NavigationLink>\r\n            {/* column 1 tile 1 end*/}\r\n            {/* column 1 tile 2 start*/}\r\n            <NavigationLink\r\n              to=\"/samples\"\r\n              onClick={this.props.toggleSampleNavigation}\r\n            >\r\n              <ImageCard configuration>\r\n                <div>\r\n                  <h1 className=\"h1\" style={{ marginLeft: \"-120px\" }}>\r\n                    Samples\r\n                  </h1>\r\n                  <br></br>\r\n                  <div style={{ height: \"25px\" }}></div>\r\n                  <div className=\"ani\">\r\n                    <h4\r\n                      style={{\r\n                        color: \"#ffff\"\r\n                      }}\r\n                      className=\"ani1\"\r\n                    >\r\n                      Raw Materials\r\n                    </h4>\r\n                    <h4\r\n                      style={{\r\n                        color: \"#ffff\"\r\n                      }}\r\n                    >\r\n                      Final Product\r\n                    </h4>\r\n                  </div>\r\n                </div>\r\n              </ImageCard>\r\n            </NavigationLink>\r\n            {/* column 1 tile 2 end*/}\r\n            {/* column 1 tile 3 start*/}\r\n            <NavigationLink\r\n              to=\"/testreport\"\r\n              onClick={this.props.toggleTestResults}\r\n            >\r\n              <ImageCard reports>\r\n                <div>\r\n                  <h1 className=\"h1\" style={{ marginLeft: \"-10px\" }}>\r\n                    {\" \"}\r\n                    Test Result & Test Report{\" \"}\r\n                  </h1>\r\n                  <br></br>\r\n                  <div style={{ height: \"25px\" }}></div>\r\n                  <div className=\"ani\" style={{ marginTop: \"-10px\" }}>\r\n                    <h4\r\n                      style={{\r\n                        color: \"#ffff\",\r\n                        marginTop: \"25px\"\r\n                      }}\r\n                      className=\"ani1\"\r\n                    >\r\n                      Samples\r\n                    </h4>\r\n                    {/* <h4\r\n                    style={{\r\n                      color: \"#ffff\"\r\n                    }}\r\n                  >\r\n                    Final Product\r\n                  </h4> */}\r\n                  </div>\r\n                </div>\r\n              </ImageCard>\r\n            </NavigationLink>\r\n            {/* column 1 tile 3 end*/}\r\n          </div>\r\n          {/* tile column 1 end*/}\r\n\r\n          {/* tile column 2 start*/}\r\n          <div className=\"tile_col_2\">\r\n            {/* column 2 tile 1 start*/}\r\n            <NavigationLink\r\n              to=\"/testconfiguration\"\r\n              onClick={this.props.toggleTestConfigurationNavigation}\r\n            >\r\n              <ImageCard testing>\r\n                <div>\r\n                  <h1 className=\"h1\" style={{ marginLeft: \"-45px\" }}>\r\n                    Test Configuration\r\n                  </h1>\r\n                  <br></br>\r\n                  <div style={{ height: \"25px\" }}></div>\r\n                  <div className=\"ani\">\r\n                    <h4\r\n                      style={{\r\n                        color: \"#ffff\"\r\n                      }}\r\n                      className=\"ani1\"\r\n                    >\r\n                      Raw Materials\r\n                    </h4>\r\n                    <h4\r\n                      style={{\r\n                        color: \"#ffff\"\r\n                      }}\r\n                    >\r\n                      Final Product\r\n                    </h4>\r\n                  </div>\r\n                </div>\r\n              </ImageCard>\r\n            </NavigationLink>\r\n            {/* column 2 tile 1 end*/}\r\n            {/* column 2 tile 2 start*/}\r\n            <NavigationLink\r\n              to=\"/trialcards\"\r\n              onClick={this.props.toggleTestTrialsNavigation}\r\n            >\r\n              <ImageCard testTrial>\r\n                <div>\r\n                  <h1 className=\"h1\" style={{ marginLeft: \"-95px\" }}>\r\n                    Test Trials\r\n                  </h1>\r\n                  <br></br>\r\n                  <div style={{ height: \"25px\" }}></div>\r\n                  <div className=\"ani\">\r\n                    <h4\r\n                      style={{\r\n                        color: \"#ffff\"\r\n                      }}\r\n                      className=\"ani1\"\r\n                    >\r\n                      Raw Materials\r\n                    </h4>\r\n                    <h4\r\n                      style={{\r\n                        color: \"#ffff\"\r\n                      }}\r\n                    >\r\n                      Final Product\r\n                    </h4>\r\n                    {/* <h4\r\n                    style={{\r\n                      color: \"#ffff\"\r\n                    }}\r\n                  >\r\n                    Final Product\r\n                  </h4> */}\r\n                  </div>\r\n                </div>\r\n              </ImageCard>\r\n            </NavigationLink>\r\n            {/* column 2 tile 2 end*/}\r\n            {/* column 2 tile 3 start*/}\r\n            <NavigationLink\r\n              to=\"/mixdesign\"\r\n              onClick={this.props.toggleMixDesignNavigation}\r\n            >\r\n              <ImageCard mixDesign>\r\n                <div>\r\n                  <h1\r\n                    className=\"h1\"\r\n                    style={{ textAlign: \"left\", marginLeft: \"2em\" }}\r\n                  >\r\n                    Mix Design\r\n                  </h1>\r\n                  <br></br>\r\n                  <div style={{ height: \"25px\" }}></div>\r\n                  <div className=\"ani\">\r\n                    <h4\r\n                      style={{\r\n                        color: \"#ffff\"\r\n                      }}\r\n                      className=\"ani1\"\r\n                    >\r\n                      Mix Design <br /> Proportion\r\n                    </h4>\r\n                  </div>\r\n                </div>\r\n              </ImageCard>\r\n            </NavigationLink>\r\n            {/* column 2 tile 3 end*/}\r\n          </div>\r\n          {/* tile column 2 end*/}\r\n        </div>\r\n        {/* <div className='charts_area'>\r\n          <Slider />\r\n          <Slider2 />s\r\n        </div> */}\r\n        <FlexContainer column>\r\n          <FlexContainer resCardArea>\r\n            {/* {CircularRadialBar(75)}\r\n            {CircularRadialBar(85)}\r\n            {CircularRadialBar(65)}\r\n            {CircularRadialBar(25)} */}\r\n            {HomeColoredCard(\r\n              \"blue\",\r\n              \"Fine Aggregate\",\r\n              this.state.sampleCount.fineAggregate\r\n            )}\r\n            {HomeColoredCard(\"green\", \"Cement\", this.state.sampleCount.cement)}\r\n            {HomeColoredCard(\r\n              \"purple\",\r\n              \"Admixture\",\r\n              this.state.sampleCount.admixture\r\n            )}\r\n            {HomeColoredCard(\r\n              \"red\",\r\n              \"Coarse Aggregate\",\r\n              this.state.sampleCount.coarseAggregate\r\n            )}\r\n\r\n            {/* <ToggleDisplayWindow /> */}\r\n          </FlexContainer>\r\n          <ChartResContainer>\r\n            <StrengthTest />\r\n          </ChartResContainer>\r\n        </FlexContainer>\r\n\r\n        {/* <SupplierChain /> */}\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    navpath: state.topbarNavigationReducers.navpath\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    toggleMasterNavigation: () => {\r\n      dispatch({ type: TOGGLE_TO_MASTER_TYPE_NAVIGATION });\r\n      console.log(\"toggled to master navigation click dispatched\");\r\n    },\r\n    navigationRefresh: () => {\r\n      dispatch({ type: TOGGLE_TO_HOME_SCREEN_NAVIGATION });\r\n      console.log(\"toggled to home screen navigation render dispatched\");\r\n    },\r\n    toggleSampleNavigation: () => {\r\n      dispatch({ type: TOGGLE_TO_SAMPLE_TYPE_NAVIGATION });\r\n      console.log(\"toggled to samples navigation click dispatched\");\r\n    },\r\n    toggleTestTrialsNavigation: () => {\r\n      dispatch({ type: TOGGLE_TO_TEST_TRIALS_NAVIGATION });\r\n      console.log(\"toggled to test trials navigation click dispatched\");\r\n    },\r\n    toggleTestConfigurationNavigation: () => {\r\n      dispatch({ type: TOGGLE_TO_TEST_CONFIGURATION_NAVIGATION });\r\n      console.log(\"toggled to test configuration navigation click dispatched\");\r\n    },\r\n    toggleMixDesignNavigation: () => {\r\n      dispatch({ type: TOGGLE_TO_MIX_DESIGN_NAVIGATION });\r\n      console.log(\"toggled to mixdesign navigation click dispatched\");\r\n    },\r\n    toggleTestResults: () => {\r\n      dispatch({ type: TOGGLE_TO_TEST_RESULTS_NAVIGATION });\r\n      console.log(\"toggled to test results navigation click dispatched\");\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeScreen);\r\n","const colors = {\r\n  white: \"#ffff\",\r\n  black: \"black\",\r\n  primary: \"#001422\"\r\n};\r\n\r\nconst fonts = {\r\n  roboto: \"Roboto\",\r\n  calibri: \"Calibri\"\r\n  // \"Gill Sans\", \"Gill Sans MT\", Calibri, \"Trebuchet MS\", sansSerif\r\n};\r\n\r\nconst sizes = {\r\n  //master dashboard\r\n  mdZIndex: 500,\r\n  mdCardHeadMarginLeft: \"-10em\",\r\n  mdCardHeadMarginTop: \"-0.2em\"\r\n};\r\n\r\nexport default { colors, sizes, fonts };\r\n","import styled from \"styled-components\";\r\nimport { Typography } from \"antd\";\r\nimport theme from \"../../../theme\";\r\n\r\nconst { Title } = Typography;\r\n\r\nexport const Heading = styled(Title)`\r\n  font-family: ${props => (props.card ? theme.fonts.calibri : \"roboto\")};\r\n`;\r\n\r\nexport const TileParagraph = styled.p`\r\n  font-size: 14px;\r\n  font-family: \"Roboto\";\r\n  align-self: auto;\r\n  width: 100%;\r\n  color: white;\r\n`;\r\n\r\nexport const Heading1 = styled.h1`\r\n  font-family: \"Roboto\";\r\n  color: white;\r\n  font-weight: 500;\r\n  letter-spacing: 1.8;\r\n  font-size: 18px;\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\nimport theme from \"../../../theme\";\r\nimport { Heading } from \"../typography/typography\";\r\n\r\nconst BasicCard = styled.div`\r\n  position: static;\r\n  z-index: 100;\r\n  background: ${props =>\r\n    props.black ? theme.colors.black : theme.colors.white};\r\n  font-family: \"Roboto\";\r\n  box-shadow: ${props =>\r\n    props.finalproduct\r\n      ? \"10px 10px 25px 10px rgba(0, 0, 0, 0.2)\"\r\n      : \"50px 50px 18px 3px rgba(0, 0, 0, 0.1)\"};\r\n  height: auto;\r\n  width: 22em;\r\n  text-align: left;\r\n  margin-top: ${props => (props.margined ? \"0em\" : \"1em\")};\r\n  border-radius: 0.4em;\r\n  cursor: ${props => (props.finalproduct ? \"pointer\" : \"\")};\r\n\r\n  &:hover {\r\n    box-shadow: ${props =>\r\n      props.finalproduct ? \"10px 14px 15px 14px rgba(0, 0, 0, 0.3)\" : \"\"};\r\n    transform: translate3d(2px);\r\n    transition: 0.3s ease-in-out;\r\n  }\r\n\r\n  ${props =>\r\n    props.black &&\r\n    css`\r\n      background: ${theme.colors.black};\r\n      ${Heading} {\r\n        color: ${theme.colors.white};\r\n      }\r\n    `}\r\n\r\n  ${props =>\r\n    props.finalproduct &&\r\n    css`\r\n      &:active {\r\n        transform: translateY(4px);\r\n        transition: 1.5s cubic-bezier(0.215, 0.61, 0.355, 1);\r\n      }\r\n    `}\r\n\r\n\r\n    ${props =>\r\n      props.tileareacard &&\r\n      css`\r\n        background: #001328;\r\n        height: 50px;\r\n        padding-right: 50px;\r\n        font-size: 12px;\r\n        color: #ffff;\r\n        width: 150px;\r\n        padding: 6px;\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: space-evenly;\r\n      `}\r\n\r\n   \r\n    ${props =>\r\n      props.testtrial &&\r\n      css`\r\n        /* background: #001328; */\r\n        height: 120px;\r\n        padding-right: 50px;\r\n        font-size: 12px;\r\n        background: url(${props => props.imgUrl});\r\n        width: 245px;\r\n        padding: 6px;\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: space-evenly;\r\n      `};\r\n\r\n      ${props =>\r\n        props.testreport &&\r\n        css`\r\n          height: 60px;\r\n          width: 170px;\r\n        `}\r\n    \r\n`;\r\n\r\nexport default BasicCard;\r\n","export const ROUTE_TO_PLANT_MASTER = \"ROUTE_TO_PLANT_MASTER\";\r\nexport const ROUTE_TO_USER_ROLE_MASTER = \"ROUTE_TO_USER_ROLE_MASTER\";\r\nexport const ROUTE_TO_EMPLOYEE_MASTER = \"ROUTE_TO_EMPLOYEE_MASTER\";\r\nexport const ROUTE_TO_SUPPLIER_CATEGORY_MASTER =\r\n  \"ROUTE_TO_SUPPLIER_CATEGORY_MASTER\";\r\nexport const ROUTE_TO_CUSTOMER_MASTER = \"ROUTE_TO_CUSTOMER_MASTER\";\r\nexport const ROUTE_TO_SUPPLIER_MASTER = \"ROUTE_TO_SUPPLIER_MASTER\";\r\n\r\n// Integration of Plant\r\nexport const SWITCH_TO_EDIT_MODE = \"SWITCH_TO_EDIT_MODE\";\r\nexport const DISABLE_EDIT_MODE = \"DISABLE_EDIT_MODE\";\r\n\r\n// Integration of Designation\r\n// export const SWITCH_TO_DESIGNATION_EDIT_MODE =\r\n//   \"SWITCH_TO_DESIGNATION_EDIT_MODE\";\r\n// export const DISABLE_DESIGNATION_EDIT_MODE = \"DISABLE_DESIGNATION_EDIT_MODE\";\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const TileArea = styled.div`\r\n  min-height: 200px;\r\n  flex-basis: 180px;\r\n  position: sticky;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.04);\r\n  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\r\n  margin-left: 5px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n`;\r\n\r\nexport const TileAreaText = styled.div`\r\n  margin-top: 9px;\r\n  font-size: 13px;\r\n  flex-basis: 65px;\r\n\r\n  ${props =>\r\n    props.category &&\r\n    css`\r\n      margin-top: 0px;\r\n      font-size: 13px;\r\n      flex-basis: 65px;\r\n    `}\r\n  ${props =>\r\n    props.unit &&\r\n    css`\r\n      margin-top: 0px;\r\n      font-size: 13px;\r\n    `}\r\n  ${props =>\r\n    props.test &&\r\n    css`\r\n      margin-top: -0px;\r\n      font-size: 13px;\r\n    `}\r\n  ${props =>\r\n    props.testreport &&\r\n    css`\r\n      flex-basis: 100px;\r\n    `}\r\n  ${props =>\r\n    props.materialcategory &&\r\n    css`\r\n      flex-basis: 75px;\r\n    `}\r\n`;\r\n\r\nexport const TileAreaAction = styled.div`\r\n  margin-top: 7px;\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport { Icon } from \"antd\";\r\nimport BasicCard from \"../../styledcomponents/card/BasicCard\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  ROUTE_TO_USER_ROLE_MASTER,\r\n  ROUTE_TO_PLANT_MASTER,\r\n  ROUTE_TO_EMPLOYEE_MASTER,\r\n  ROUTE_TO_CUSTOMER_MASTER,\r\n  ROUTE_TO_SUPPLIER_MASTER,\r\n  ROUTE_TO_SUPPLIER_CATEGORY_MASTER\r\n} from \"../../../redux/action/master/plantlevel/PlantLevel\";\r\nimport {\r\n  TileArea,\r\n  TileAreaText,\r\n  TileAreaAction\r\n} from \"../../styledcomponents/card/TileArea\";\r\n\r\nclass PlantsTileArea extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      status: true\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <TileArea>\r\n        <BasicCard\r\n          finalproduct\r\n          tileareacard\r\n          size='small'\r\n          hoverable={true}\r\n          onClick={this.props.routeToPlantMaster}\r\n        >\r\n          <TileAreaText>Plant</TileAreaText>\r\n          <TileAreaAction>\r\n            <Icon\r\n              filled\r\n              type='plus'\r\n              style={{ color: \"red\", fontSize: \"22px\" }}\r\n            />\r\n          </TileAreaAction>\r\n        </BasicCard>\r\n        <BasicCard\r\n          finalproduct\r\n          tileareacard\r\n          size='small'\r\n          hoverable={true}\r\n          onClick={this.props.routeToUserRoleMaster}\r\n        >\r\n          <TileAreaText>Designation</TileAreaText>\r\n          <TileAreaAction>\r\n            <Icon\r\n              filled\r\n              type='plus'\r\n              style={{ color: \"red\", fontSize: \"22px\" }}\r\n            />\r\n          </TileAreaAction>\r\n        </BasicCard>\r\n        <BasicCard\r\n          finalproduct\r\n          tileareacard\r\n          size='small'\r\n          hoverable={true}\r\n          onClick={this.props.routeToEmployeeMaster}\r\n        >\r\n          <TileAreaText>Employee</TileAreaText>\r\n          <TileAreaAction>\r\n            <Icon\r\n              filled\r\n              type='plus'\r\n              style={{ color: \"red\", fontSize: \"22px\" }}\r\n            />\r\n          </TileAreaAction>\r\n        </BasicCard>\r\n\r\n        <BasicCard\r\n          finalproduct\r\n          tileareacard\r\n          size='small'\r\n          hoverable={true}\r\n          onClick={this.props.routeToCustomerMaster}\r\n        >\r\n          <TileAreaText>Customer</TileAreaText>\r\n          <TileAreaAction>\r\n            <Icon\r\n              filled\r\n              type='plus'\r\n              style={{ color: \"red\", fontSize: \"22px\" }}\r\n            />\r\n          </TileAreaAction>\r\n        </BasicCard>\r\n\r\n        <BasicCard\r\n          finalproduct\r\n          tileareacard\r\n          size='small'\r\n          hoverable={true}\r\n          onClick={this.props.routeToSupplierCategoryMaster}\r\n        >\r\n          <TileAreaText unit>Supplier Category</TileAreaText>\r\n          <TileAreaAction>\r\n            <Icon\r\n              filled\r\n              type='plus'\r\n              style={{ color: \"red\", fontSize: \"22px\" }}\r\n            />\r\n          </TileAreaAction>\r\n        </BasicCard>\r\n\r\n        <BasicCard\r\n          finalproduct\r\n          tileareacard\r\n          size='small'\r\n          hoverable={true}\r\n          onClick={this.props.routeToSupplierMaster}\r\n        >\r\n          <TileAreaText>Supplier</TileAreaText>\r\n          <TileAreaAction>\r\n            <Icon\r\n              filled\r\n              type='plus'\r\n              style={{ color: \"red\", fontSize: \"22px\" }}\r\n            />\r\n          </TileAreaAction>\r\n        </BasicCard>\r\n      </TileArea>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapStateToProps = state => {};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    routeToPlantMaster: () => {\r\n      dispatch({ type: ROUTE_TO_PLANT_MASTER });\r\n      console.log(\"route to plant master click dispatched\");\r\n    },\r\n    routeToUserRoleMaster: () => {\r\n      dispatch({ type: ROUTE_TO_USER_ROLE_MASTER });\r\n      console.log(\"route to user role master click dispatched\");\r\n    },\r\n    routeToEmployeeMaster: () => {\r\n      dispatch({ type: ROUTE_TO_EMPLOYEE_MASTER });\r\n      console.log(\"route to employee master click dispatched\");\r\n    },\r\n    routeToCustomerMaster: () => {\r\n      dispatch({ type: ROUTE_TO_CUSTOMER_MASTER });\r\n      console.log(\"route to customer master click dispatched\");\r\n    },\r\n    routeToSupplierMaster: () => {\r\n      dispatch({ type: ROUTE_TO_SUPPLIER_MASTER });\r\n      console.log(\"route to supplier master click dispatched\");\r\n    },\r\n    routeToSupplierCategoryMaster: () => {\r\n      dispatch({ type: ROUTE_TO_SUPPLIER_CATEGORY_MASTER });\r\n      console.log(\"route to supplier category master click dispatched\");\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(PlantsTileArea);\r\n","import styled, { css } from \"styled-components\";\r\nimport theme from \"../../../theme\";\r\nimport { Button } from \"antd\";\r\n\r\nexport const PrimaryButton = styled(Button)`\r\n  ${props =>\r\n    props.primary &&\r\n    css`\r\n      border-radius: \"0.1em\";\r\n      box-shadow: \"20px 20px 1px 1px\";\r\n      border: none;\r\n      outline: none;\r\n\r\n      &:hover {\r\n        color: ${theme.colors.black};\r\n        outline: none;\r\n        border: none;\r\n      }\r\n    `}\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\nimport { Form } from \"antd\";\r\nimport theme from \"../../../theme\";\r\n\r\nexport const MasterLevelForm = styled(Form)`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: ${props =>\r\n    props.unalignedform ? \"flex-start\" : \"space-evenly\"};\r\n  height: auto;\r\n  width: auto;\r\n  background: ${props => (props.filled ? \"white\" : \"\")};\r\n\r\n  ${props =>\r\n    props.testconfiguration &&\r\n    css`\r\n      border-radius: 15px;\r\n      padding: 20px;\r\n      flex-direction: row;\r\n      justify-content: space-around;\r\n      height: 300px;\r\n      width: 250px;\r\n     \r\n      }\r\n    `}\r\n`;\r\n\r\nexport const MasterLevelFormTitle = styled.div`\r\n  padding: 15px;\r\n  margin: ${props => (props.nomargin ? \"0px\" : \"-25px\")};\r\n  width: auto;\r\n  height: 50px;\r\n  background: #001328;\r\n  border-top-right-radius: 10px;\r\n  border-top-left-radius: 10px;\r\n  border-bottom-right-radius: -10px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  color: white;\r\n`;\r\n\r\nexport const AuditFormTitle = styled.div`\r\n  padding: 15px;\r\n  margin: ${props => (props.nomargin ? \"0px\" : \"-7px 0px 1px\")};\r\n  width: auto;\r\n  height: 50px;\r\n  background: ${theme.colors.primary};\r\n  /* border-top-right-radius: 10px; */\r\n  /* border-top-left-radius: 10px; */\r\n  border-bottom-right-radius: -10px;\r\n  border-bottom-left-radius: -10px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  color: white;\r\n  font-size: 18px;\r\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen,\r\n    Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\r\n`;\r\n\r\nexport const PrivlegesFormTitle = styled.div`\r\n  padding: 10px;\r\n  margin: ${props => (props.nomargin ? \"0px\" : \"-7px -25px 1px\")};\r\n  width: auto;\r\n  height: 50px;\r\n  background: ${theme.colors.primary};\r\n  /* border-top-right-radius: 10px; */\r\n  /* border-top-left-radius: 10px; */\r\n  border-bottom-right-radius: -10px;\r\n  border-bottom-left-radius: -10px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  color: white;\r\n  font-size: 18px;\r\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen,\r\n    Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\r\n`;\r\n","import { notification } from \"antd\";\r\n\r\nexport default function Notification(type, message) {\r\n  return notification[type]({\r\n    message: message\r\n  });\r\n}\r\n","export default error => {\r\n  console.log(error);\r\n  const { code, message } = error;\r\n\r\n  console.log(error.code);\r\n\r\n  switch (code) {\r\n    case \"41000\":\r\n      console.log(\"plant\");\r\n      return \"plant notExists\";\r\n    // do something when you're unauthenticated\r\n    case \"41001\":\r\n      return \"plant is Exists\";\r\n    // do something when you're unauthorized to access a resource\r\n    case \"41002\":\r\n      // do something when your server exploded\r\n      return \"plantName is null\";\r\n\r\n    case \"41003\":\r\n      // do something when your server exploded\r\n      return \"plantName is empty\";\r\n\r\n    case \"41004\":\r\n      // do something when your server exploded\r\n      return \"plant id is null\";\r\n    case \"41005\":\r\n      // do something when your server exploded\r\n      return \"plantName is Exists\";\r\n    case \"41006\":\r\n      // do something when your server exploded\r\n      return \"plantID is Exists\";\r\n    case \"42000\":\r\n      // do something when your server exploded\r\n      return \"designation is notExists\";\r\n    case \"42001\":\r\n      // do something when your server exploded\r\n      return \"designation is Exists\";\r\n    case \"42002\":\r\n      // do something when your server exploded\r\n      return \"designationName is null\";\r\n    case \"42003\":\r\n      // do something when your server exploded\r\n      return \"designationName is Empty\";\r\n    case \"42004\":\r\n      // do something when your server exploded\r\n      return \"designationName is Exists\";\r\n    case \"43000\":\r\n      // do something when your server exploded\r\n      return \"supplierCategory Exist\";\r\n    case \"43001\":\r\n      // do something when your server exploded\r\n      return \"supplierCategory is Empty\";\r\n    case \"43002\":\r\n      // do something when your server exploded\r\n      return \"supplierCategory is null\";\r\n    case \"43003\":\r\n      // do something when your server exploded\r\n      return null;\r\n    case \"43004\":\r\n      // do something when your server exploded\r\n      return \"plant name is NotExist\";\r\n    case \"45000\":\r\n      console.log(\"plant\");\r\n      return \"supplier notExists\";\r\n    // do something when you're unauthenticated\r\n    case \"45001\":\r\n      return \"Email is Exists\";\r\n    // do something when you're unauthorized to access a resource\r\n    case \"45002\":\r\n      // do something when your server exploded\r\n      return \"supplier Name is null\";\r\n    case \"45003\":\r\n      // do something when your server exploded\r\n      return \"supplier Name Empty\";\r\n    case \"45004\":\r\n      // do something when your server exploded\r\n      return \"supplier Email null\";\r\n    case \"45005\":\r\n      // do something when your server exploded\r\n      return \"supplier Email Empty\";\r\n    case \"45006\":\r\n      // do something when your server exploded\r\n      return \"supplier phoneNumber null\";\r\n    case \"45007\":\r\n      // do something when your server exploded\r\n      return \"supplier phoneNumber Empty\";\r\n\r\n    case \"44000\":\r\n      console.log(\"plant\");\r\n      return \"employee notExists\";\r\n    // do something when you're unauthenticated\r\n    case \"44001\":\r\n      return \"email is Exists\";\r\n    // do something when you're unauthorized to access a resource\r\n    case \"44002\":\r\n      // do something when your server exploded\r\n      return \"employee firstName is null\";\r\n    case \"44003\":\r\n      // do something when your server exploded\r\n      return \"employee firstName Empty\";\r\n    case \"44004\":\r\n      // do something when your server exploded\r\n      return \"employee lastName null\";\r\n    case \"44005\":\r\n      // do something when your server exploded\r\n      return \"employee lastName Empty\";\r\n    case \"44006\":\r\n      // do something when your server exploded\r\n      return \"employee email null\";\r\n    case \"44007\":\r\n      // do something when your server exploded\r\n      return \"employee email Empty\";\r\n    case \"44008\":\r\n      // do something when your server exploded\r\n      return \"employee Code null\";\r\n    case \"44009\":\r\n      // do something when your server exploded\r\n      return \"employee Code Empty\";\r\n    case \"48001\":\r\n      // do something when your server exploded\r\n      return \"Category is Exist \";\r\n    case \"49001\":\r\n      // do something when your server exploded\r\n      return \"SubCategory is Exist \";\r\n    case \"47003\":\r\n      // do something when your server exploded\r\n      return \"Raw Material name empty\";\r\n    case \"47002\":\r\n      // do something when your server exploded\r\n      return \"Raw Material name null\";\r\n    case \"47001\":\r\n      // do something when your server exploded\r\n      return \"Raw Material name already exist\";\r\n    case \"47000\":\r\n      // do something when your server exploded\r\n      return \"Raw Material id not exist\";\r\n    case \"48003\":\r\n      // do something when your server exploded\r\n      return \"Material category name empty\";\r\n    case \"48002\":\r\n      // do something when your server exploded\r\n      return \"Material Category name null\";\r\n    case \"48001\":\r\n      // do something when your server exploded\r\n      return \"Material Category name already exist\";\r\n    case \"48000\":\r\n      // do something when your server exploded\r\n      return \"Material Category id not exist\";\r\n    case \"51000\":\r\n      // do something when your server exploded\r\n      return \"Material State name null\";\r\n    case \"51001\":\r\n      // do something when your server exploded\r\n      return \"Material State name empty\";\r\n    case \"51002\":\r\n      // do something when your server exploded\r\n      return \"Material State id not exist \";\r\n    case \"51003\":\r\n      // do something when your server exploded\r\n      return \"Material State already exist\";\r\n    case \"52003\":\r\n      // do something when your server exploded\r\n      return \"Equipment name empty\";\r\n    case \"52001\":\r\n      // do something when your server exploded\r\n      return \"Equipment name already exist\";\r\n    case \"52002\":\r\n      // do something when your server exploded\r\n      return \"Equipment name null\";\r\n    case \"52000\":\r\n      // do something when your server exploded\r\n      return \"Equipment id not exist\";\r\n    case \"55009\":\r\n      // do something when your server exploded\r\n      return \"Plant code null\";\r\n    case \"55001\":\r\n      // do something when your server exploded\r\n      return \"Serial Number already exist\";\r\n    case \"55000\":\r\n      // do something when your server exploded\r\n      return \"Serial Number not exist\";\r\n    case \"46005\":\r\n      // do something when your server exploded\r\n      return \"Customer email empty\";\r\n    case \"46006\":\r\n      // do something when your server exploded\r\n      return \"Customer email null\";\r\n    case \"46001\":\r\n      // do something when your server exploded\r\n      return \"Customer email already exist\";\r\n    case \"46000\":\r\n      // do something when your server exploded\r\n      return \"Customer id not exist\";\r\n    case \"65001\":\r\n      // do something when your server exploded\r\n      return \"Test type already exist\";\r\n    case \"65003\":\r\n      // do something when your server exploded\r\n      return \"Test type is empty\";\r\n    case \"65002\":\r\n      // do something when your server exploded\r\n      return \"Test type is null\";\r\n    case \"65000\":\r\n      // do something when your server exploded\r\n      return \"Test type id not exist\";\r\n    case \"62003\":\r\n      // do something when your server exploded\r\n      return \"Test name is empty\";\r\n    case \"62002\":\r\n      // do something when your server exploded\r\n      return \"Test name is null\";\r\n    case \"62000\":\r\n      // do something when your server exploded\r\n      return \"Test name already exist\";\r\n    case \"62001\":\r\n      // do something when your server exploded\r\n      return \"Test id not exist\";\r\n    case \"63003\":\r\n      // do something when your server exploded\r\n      return \"Equation formula is empty\";\r\n    case \"63001\":\r\n      // do something when your server exploded\r\n      return \"Equation formula already exist\";\r\n    case \"63002\":\r\n      // do something when your server exploded\r\n      return \"Equation formula is null\";\r\n    case \"63000\":\r\n      // do something when your server exploded\r\n      return \"Equation id not exist\";\r\n    case \"49000\":\r\n      // do something when your server exploded\r\n      return \"Material Sub Category id not exist\";\r\n    case \"49001\":\r\n      // do something when your server exploded\r\n      return \"Material Sub Category already exist\";\r\n    case \"49002\":\r\n      // do something when your server exploded\r\n      return \"Material Sub Category name null\";\r\n    case \"49003\":\r\n      // do something when your server exploded\r\n      return \"Material Sub Category name empty\";\r\n    case \"50000\":\r\n      // do something when your server exploded\r\n      return \"Unit id not exist\";\r\n    case \"50001\":\r\n      // do something when your server exploded\r\n      return \"Unit already exist\";\r\n    case \"50002\":\r\n      // do something when your server exploded\r\n      return \"Unit is null\";\r\n    case \"50003\":\r\n      // do something when your server exploded\r\n      return \"Unit is empty\";\r\n    case \"50004\":\r\n      // do something when your server exploded\r\n      return \"Special Character is not exit\";\r\n    case \"54000\":\r\n      // do something when your server exploded\r\n      return \"Plant Equipment Calibration id not exit\";\r\n    case \"54008\":\r\n      // do something when your server exploded\r\n      return \"Equipment Plan Id is null\";\r\n    case \"54002\":\r\n      // do something when your server exploded\r\n      return \"Status is null\";\r\n    case \"54003\":\r\n      // do something when your server exploded\r\n      return \"Status is empty\";\r\n    case \"54004\":\r\n      // do something when your server exploded\r\n      return \"Calibrate Date is null\";\r\n    case \"54005\":\r\n      // do something when your server exploded\r\n      return \"Due Date is null\";\r\n    case \"54006\":\r\n      // do something when your server exploded\r\n      return \"User Id is null\";\r\n    case \"54007\":\r\n      // do something when your server exploded\r\n      return \"Supplier Id is null\";\r\n    case \"53000\":\r\n      // do something when your server exploded\r\n      return \"Parameter id not exist\";\r\n    case \"53001\":\r\n      // do something when your server exploded\r\n      return \"Parameter already exist\";\r\n    case \"53002\":\r\n      // do something when your server exploded\r\n      return \"Parameter name is null\";\r\n    case \"53003\":\r\n      // do something when your server exploded\r\n      return \"Parameter name is empty\";\r\n    case \"53004\":\r\n      // do something when your server exploded\r\n      return \"Parameter abbreviation is null\";\r\n    case \"53005\":\r\n      // do something when your server exploded\r\n      return \"Parameter abbreviation is empty\";\r\n    case \"55000\":\r\n      // do something when your server exploded\r\n      return \"Plant Equipment id not exist\";\r\n    case \"55001\":\r\n      // do something when your server exploded\r\n      return \"Plant Equipment already exist\";\r\n    case \"55002\":\r\n      // do something when your server exploded\r\n      return \"Plant Equipment Serial Number is null\";\r\n    case \"55003\":\r\n      // do something when your server exploded\r\n      return \"Plant Equipment Serial Number is empty\";\r\n    case \"55004\":\r\n      // do something when your server exploded\r\n      return \"Plant Equipment Brand name is null\";\r\n    case \"55005\":\r\n      // do something when your server exploded\r\n      return \"Plant Equipment Brand name is empty\";\r\n    case \"55008\":\r\n      // do something when your server exploded\r\n      return \"Plant code is null\";\r\n    case \"55009\":\r\n      // do something when your server exploded\r\n      return \"Plant code is empty\";\r\n\r\n    default:\r\n    // handle normal errors with some alert or whatever\r\n  }\r\n  return null;\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Input, Modal, Button, Icon } from \"antd\";\r\nimport { api } from \"../../../services/AxiosService\";\r\nimport { PrimaryButton } from \"../../../styledcomponents/button/button\";\r\nimport {\r\n  MasterLevelForm,\r\n  MasterLevelFormTitle\r\n} from \"../../../styledcomponents/form/MasterLevelForms\";\r\nimport Notificationfuc from \"../../../Constant/Notification\";\r\nimport HandelError from \"../../../Constant/HandleError\";\r\nimport { connect } from \"react-redux\";\r\nimport { DISABLE_EDIT_MODE } from \"../../../../redux/action/master/plantlevel/PlantLevel\";\r\n\r\n// function onChange(date, dateString) {\r\n//   console.log(date, dateString);\r\n// }\r\n\r\nconst error = {\r\n  color: \"red\",\r\n  fontSize: \"12px\",\r\n  width: \"160px\",\r\n  height: \"2px\"\r\n};\r\n\r\nclass PlantAddForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // console.log(this.props.editPlantData)\r\n    this.state = {\r\n      formValid: false,\r\n      errorCount: 0,\r\n      errors: {\r\n        code: \"\",\r\n        plant: \"\",\r\n        address: \"\",\r\n        phoneNumber: \"\"\r\n      },\r\n      loading: false,\r\n      visible: false,\r\n      plant_code: \"\",\r\n      plant_name: \"\",\r\n      plant_address: \"\",\r\n      plant_contactno: \"\",\r\n      errormgs: \"\",\r\n      type: \"add\"\r\n    };\r\n  }\r\n\r\n  validateForm = errors => {\r\n    let valid;\r\n    Object.values(errors).forEach(\r\n      val => val.length > 1 && (valid = false),\r\n      (valid = true)\r\n    );\r\n    // this.setState({\r\n    //   formValid: valid\r\n    // })\r\n    console.log(valid);\r\n\r\n    return valid;\r\n  };\r\n\r\n  countErrors = errors => {\r\n    let count = 0;\r\n    Object.values(errors).forEach(val => val.length > 0 && (count = count + 1));\r\n\r\n    // this.setState({\r\n    //   errorCount: count\r\n    // })\r\n    console.log(count);\r\n\r\n    return count;\r\n  };\r\n\r\n  handleChange = (event, field) => {\r\n    this.setState({ [field]: event.target.value });\r\n    this.setState({ errormgs: \"\" });\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    let errors = this.state.errors;\r\n    // console.log(name + \" is \\t\" + value);\r\n    switch (name) {\r\n      case \"plant_code\":\r\n        errors.code =\r\n          value.length === 0\r\n            ? \"Code can't be empty\"\r\n            : value.length < 1\r\n            ? \"Code must be one characters long!\"\r\n            : \"\";\r\n        break;\r\n      case \"plant_name\":\r\n        errors.plant =\r\n          value.length === 0\r\n            ? \"Plant Name can't be empty\"\r\n            : value.length < 3\r\n            ? \"Plant Name \\n must be 3 characters long!\"\r\n            : value.replace(/^[a-zA-Z-,]+(\\s{0,1}[a-zA-Z-, ])*$/, \"\")\r\n            ? \"Plant Name allow only letters\"\r\n            : \"\";\r\n        break;\r\n      case \"plant_address\":\r\n        errors.address =\r\n          value.length === 0\r\n            ? \"Address can't be empty\"\r\n            : value.length < 3\r\n            ? \"Address must be 3 characters long!\"\r\n            : \"\";\r\n        break;\r\n      case \"plant_contactno\":\r\n        errors.phoneNumber = isNaN(value)\r\n          ? `Contact Number must be a number`\r\n          : value.length === 0\r\n          ? \"Contact Number can't be empty\"\r\n          : value.length < 9\r\n          ? `Contact Number must be 10 characters long!`\r\n          : \"\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ errors, [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (\r\n      this.state.plant_code.length === 0 &&\r\n      this.state.plant_name.length === 0 &&\r\n      this.state.plant_address.length === 0 &&\r\n      this.state.plant_contactno.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          code: \"Code can't be empty\",\r\n          plant: \"Plant Name can't be empty\",\r\n          address: \"Address can't be empty\",\r\n          phoneNumber: \"Phone Number can't be empty\"\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors)\r\n      });\r\n    } else if (\r\n      this.state.plant_code.length === 0 &&\r\n      this.state.errors.code.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          code: this.state.errors.code || \"Code can't be empty\",\r\n          plant: this.state.errors.plant,\r\n          address: this.state.errors.address,\r\n          phoneNumber: this.state.errors.phoneNumber\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors)\r\n      });\r\n    } else if (\r\n      this.state.plant_name.length === 0 &&\r\n      this.state.errors.plant.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          code: this.state.errors.code,\r\n          plant: this.state.errors.plant || \"Plant Name can't be empty\",\r\n          address: this.state.errors.address,\r\n          phoneNumber: this.state.errors.phoneNumber\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors)\r\n      });\r\n    } else if (\r\n      this.state.plant_address.length === 0 &&\r\n      this.state.errors.address.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          code: this.state.errors.code,\r\n          plant: this.state.errors.plant,\r\n          address: this.state.errors.address || \"Addres can't be empty\",\r\n          phoneNumber: this.state.errors.phoneNumber\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors)\r\n      });\r\n    } else if (\r\n      this.state.plant_contactno.length === 0 &&\r\n      this.state.errors.phoneNumber.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          code: this.state.errors.code,\r\n          plant: this.state.errors.plant,\r\n          address: this.state.errors.address,\r\n          phoneNumber:\r\n            this.state.errors.phoneNumber || \"Phone Number can't be empty\"\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors)\r\n      });\r\n    } else if (\r\n      this.state.errors.code.length === 0 &&\r\n      this.state.errors.plant.length === 0 &&\r\n      this.state.errors.address.length === 0 &&\r\n      this.state.errors.phoneNumber.length === 0\r\n    ) {\r\n      console.log(this.state.errors);\r\n      this.setState({ formValid: this.validateForm(this.state.errors) });\r\n      this.setState({ errorCount: this.countErrors(this.state.errors) });\r\n      console.log(this.state.formValid);\r\n      console.log(this.state.errorCount);\r\n\r\n      const data = {\r\n        code: this.state.plant_code,\r\n        name: this.state.plant_name,\r\n        address: this.state.plant_address,\r\n        phoneNumber: this.state.plant_contactno\r\n      };\r\n      if (this.state.type === \"add\") {\r\n        api(\"POST\", \"supermix\", \"/plant\", \"\", data, \"\")\r\n          .then(\r\n            res => {\r\n              console.log(res.data);\r\n              if (res.data.status === \"VALIDATION_FAILURE\") {\r\n                console.log(\"add\");\r\n                this.responeserror(res.data.results.name.message);\r\n              } else {\r\n                Notificationfuc(\"success\", res.data.message);\r\n                this.props.reload();\r\n                this.setState({ loading: true });\r\n                this.setState({\r\n                  plant_code: \"\",\r\n                  plant_name: \"\",\r\n                  plant_address: \"\",\r\n                  plant_contactno: \"\",\r\n                  errormgs: \"\"\r\n                });\r\n                setTimeout(() => {\r\n                  this.setState({ loading: false, visible: false });\r\n                }, 500);\r\n              }\r\n            },\r\n            error => {\r\n              this.setState({\r\n                errormgs: error.validationFailures[0]\r\n              });\r\n              console.log(\"DEBUG34: \", error);\r\n              console.log(HandelError(error.validationFailures[0]));\r\n            }\r\n          )\r\n          .catch(error => {\r\n            this.setState({\r\n              // errormgs: \"Plant Name Exist\"\r\n            });\r\n            console.log(error);\r\n          });\r\n      } else {\r\n        const data = {\r\n          code: this.state.plant_code,\r\n          name: this.state.plant_name,\r\n          address: this.state.plant_address,\r\n          phoneNumber: this.state.plant_contactno\r\n        };\r\n        api(\"PUT\", \"supermix\", \"/plant\", \"\", data, \"\")\r\n          .then(\r\n            res => {\r\n              console.log(res.data);\r\n\r\n              if (res.data.status === \"VALIDATION_FAILURE\") {\r\n                console.log(\"update\");\r\n                this.responeserror(res.data.results.name.message);\r\n              } else {\r\n                Notificationfuc(\"success\", res.data.message);\r\n                this.props.reload();\r\n                this.setState({ loading: true });\r\n                this.setState({\r\n                  plant_code: \"\",\r\n                  plant_name: \"\",\r\n                  plant_address: \"\",\r\n                  plant_contactno: \"\",\r\n                  errormgs: \"\"\r\n                });\r\n                setTimeout(() => {\r\n                  this.setState({ loading: false, visible: false });\r\n                }, 500);\r\n              }\r\n            },\r\n            error => {\r\n              this.setState({\r\n                errormgs: error.validationFailures[0]\r\n              });\r\n              console.log(\"DEBUG34: \", error);\r\n              console.log(HandelError(error.validationFailures[0]));\r\n            }\r\n          )\r\n          .catch(error => {\r\n            // this.setState({\r\n            //   errormgs: \"Plant Name Exist\"\r\n            // });\r\n            // console.log(error.response.data);\r\n          });\r\n      }\r\n      console.log(data);\r\n      console.log(\"form is valid\");\r\n    }\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n      plant_code: \"\",\r\n      plant_name: \"\",\r\n      plant_address: \"\",\r\n      plant_contactno: \"\"\r\n    });\r\n  };\r\n\r\n  responeserror(error) {\r\n    console.log(error);\r\n    this.setState({\r\n      errormgs: `${error} is exist`\r\n    });\r\n  }\r\n\r\n  //cancelling or closing the modal\r\n  handleCancel = () => {\r\n    if (this.state.type === \"edit\") {\r\n      // we call the redux function to dispatch and delete all the global redux state to close the modal\r\n      this.props.setPlantVisiblity();\r\n    }\r\n\r\n    this.setState({\r\n      visible: false,\r\n      formValid: false,\r\n      errors: {\r\n        code: \"\",\r\n        plant: \"\",\r\n        address: \"\",\r\n        phoneNumber: \"\"\r\n      },\r\n      plant_code: \"\",\r\n      plant_name: \"\",\r\n      plant_address: \"\",\r\n      plant_contactno: \"\",\r\n      errormgs: \"\"\r\n    });\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({\r\n      visible: nextProps.visible,\r\n      plant_code: nextProps.editPlantData.code,\r\n      plant_name: nextProps.editPlantData.name,\r\n      plant_address: nextProps.editPlantData.address,\r\n      plant_contactno: nextProps.editPlantData.phoneNumber,\r\n      type: nextProps.type\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { visible, loading } = this.state;\r\n    const { errors } = this.state;\r\n    console.log(this.state.errorCount);\r\n\r\n    // console.log(this.props.visible);\r\n\r\n    // console.log(this.state.errormgs);\r\n    return (\r\n      <div>\r\n        <PrimaryButton\r\n          onClick={this.showModal}\r\n          style={{\r\n            background: \"#001328\",\r\n            color: \"white\",\r\n            border: \"none\",\r\n            width: \"120px\",\r\n            marginLeft: \"-10px\"\r\n          }}\r\n        >\r\n          Add Plant\r\n        </PrimaryButton>\r\n        <Modal\r\n          visible={visible}\r\n          closable={false}\r\n          loading={loading}\r\n          onCancel={this.handleCancel}\r\n          title={\r\n            <MasterLevelFormTitle>\r\n              <p\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                {this.state.type === \"edit\" ? \"Edit Plant\" : \"Add Plant\"}\r\n              </p>\r\n              <Icon\r\n                type='close-circle'\r\n                onClick={this.handleCancel}\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              />\r\n            </MasterLevelFormTitle>\r\n          }\r\n          footer={[\r\n            <Button key='back' onClick={this.handleCancel}>\r\n              Cancel\r\n            </Button>,\r\n            <PrimaryButton\r\n              key='submit'\r\n              loading={loading}\r\n              onClick={this.handleSubmit}\r\n              style={{ background: \"#001328\", color: \"white\", border: \"none\" }}\r\n            >\r\n              {this.state.type === \"edit\" ? \"Edit\" : \"Save\"}\r\n            </PrimaryButton>\r\n          ]}\r\n          width='600px'\r\n        >\r\n          <MasterLevelForm style={{ justifyContent: \"space-evenly\" }}>\r\n            {/* Code */}\r\n\r\n            {/* Code */}\r\n            <div className='input_wrapper'>\r\n              <label for='plant_code' className='label'>\r\n                Code:\r\n              </label>\r\n              <Input\r\n                id='plant_code'\r\n                name='plant_code'\r\n                placeholder='Enter the Code '\r\n                onChange={this.handleChange}\r\n                value={this.state.plant_code}\r\n                disabled={this.state.type === \"edit\" ? true : false}\r\n              />\r\n\r\n              {errors.code.length > 0 && <div style={error}>{errors.code}</div>}\r\n              {this.state.errormgs.message === \"PlantId\" ? (\r\n                <div style={error}>{HandelError(this.state.errormgs)}</div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n\r\n            {/* Plant Name */}\r\n            <div className='input_wrapper'>\r\n              <label for='plant_name' className='label'>\r\n                Plant:\r\n              </label>\r\n              <Input\r\n                id='plant_name'\r\n                name='plant_name'\r\n                placeholder='Enter the Plant Name '\r\n                onChange={this.handleChange}\r\n                value={this.state.plant_name}\r\n              />\r\n\r\n              {errors.plant.length > 0 && (\r\n                <div style={error}>{errors.plant}</div>\r\n              )}\r\n              {this.state.errormgs.message === \"PlantName\" ? (\r\n                <div style={error}>{HandelError(this.state.errormgs)}</div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n\r\n            {/* Place */}\r\n            <div className='input_wrapper'>\r\n              <label for='plant_address' className='label'>\r\n                Address:\r\n              </label>\r\n              <Input\r\n                id='plant_address'\r\n                name='plant_address'\r\n                placeholder='Enter the Address '\r\n                onChange={this.handleChange}\r\n                value={this.state.plant_address}\r\n              />\r\n              {errors.address.length > 0 && (\r\n                <div style={error}>{errors.address}</div>\r\n              )}\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n\r\n            {/* Contact Number */}\r\n            <div className='input_wrapper'>\r\n              <label for='plant_contactno' className='label'>\r\n                Contact No:\r\n              </label>\r\n              <Input\r\n                className='input_number'\r\n                id='plant_contactno'\r\n                name='plant_contactno'\r\n                placeholder='Enter the Contact No '\r\n                onChange={this.handleChange}\r\n                value={this.state.plant_contactno}\r\n              />\r\n              {errors.phoneNumber.length > 0 && (\r\n                <div style={error}>{errors.phoneNumber}</div>\r\n              )}\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n          </MasterLevelForm>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  //getting the global redux state to get the data from the EditPlantReducer.js\r\n  return {\r\n    visible: state.plantLevelReducers.EditPlantReducer.visible,\r\n    type: state.plantLevelReducers.EditPlantReducer.type,\r\n    editPlantData: state.plantLevelReducers.EditPlantReducer.editPlantData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // setting visible to false if we close the modal .. and all state data will be deleted if this function is dispatched\r\n    setPlantVisiblity: () => {\r\n      dispatch({ type: DISABLE_EDIT_MODE });\r\n      console.log(\"edit modal closed\");\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PlantAddForm);\r\n","import React, { Component } from \"react\";\r\n\r\nimport Paragraph from \"antd/lib/typography/Paragraph\";\r\n\r\nimport PlantAddForm from \"../plant/PlantAddForm\";\r\nimport { FlexContainer } from \"../../../styledcomponents/container/FlexGrid\";\r\n\r\nconst style = {\r\n  fontSize: \"medium\",\r\n  fontWeight: \"600\",\r\n  alignSelf: \"auto\",\r\n  padding: \"10px\"\r\n};\r\n\r\nexport default class PlantMasterTitle extends Component {\r\n  getallplant = () => {\r\n    this.props.reload();\r\n  };\r\n  render() {\r\n    return (\r\n      <FlexContainer titles leveltitles>\r\n        <Paragraph style={style}>Plant </Paragraph>\r\n        <PlantAddForm reload={this.getallplant} />\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapStateToProps = state => {};\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     showAddEmployeeDrawer: () => {\r\n//       dispatch({ type: OPEN_ADD_NEW_EMPLOYEE_DRAWER });\r\n//       console.log(\"add new employee click dispatched\");\r\n//     }\r\n//   };\r\n// };\r\n\r\n// export default connect(\r\n//   mapStateToProps,\r\n//   mapDispatchToProps\r\n// )(EmployeeMasterTitle);\r\n","import styled, { css } from \"styled-components\";\r\nimport { Table } from \"antd\";\r\nexport const AntTable = styled(Table)`\r\n  background: white;\r\n  border: none;\r\n  border-radius: 15px;\r\n  margin-left: ${props => (props.nomargin ? \"0px\" : \"15px\")};\r\n  margin-top: 20px;\r\n  width: ${props =>\r\n    props.length\r\n      ? \"1000px\"\r\n      : props.lowLength2\r\n      ? \"420px\"\r\n      : props.medium\r\n      ? \"600px\"\r\n      : props.length2\r\n      ? \"850px\"\r\n      : props.maxlength\r\n      ? \"1100px\"\r\n      : \"800px\"};\r\n  box-shadow: 8px 5px 15px 5px rgba(0, 0, 0, 0.19);\r\n  height: ${props => (props.lowHeight ? \"220px\" : \"auto\")};\r\n\r\n  @media (min-width: 1920px) {\r\n    width: ${props =>\r\n      props.length ? \"1200px\" : props.lowLength2 ? \"650px\" : \"800px\"};\r\n  }\r\n\r\n  ${props =>\r\n    props.emptyTableTestTrial &&\r\n    css`\r\n      background: none;\r\n      border: none;\r\n      outline: none;\r\n      box-shadow: 0.5px 0.5px 0.5px 1px rgba(0, 0, 0, 0.05);\r\n      height: 150px;\r\n    `}\r\n`;\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\nimport { Icon, Popconfirm, Divider } from \"antd\";\r\nimport PlantMasterTitle from \"../titles/PlantMasterTitle\";\r\nimport { AntTable } from \"../../../styledcomponents/table/AntTabl\";\r\nimport { api } from \"../../../services/AxiosService\";\r\nimport Notification from \"../../../Constant/Notification\";\r\nimport { connect } from \"react-redux\";\r\nimport { SWITCH_TO_EDIT_MODE } from \"../../../../redux/action/master/plantlevel/PlantLevel\";\r\n\r\nclass ManagePlants extends Component {\r\n  state = {\r\n    searchText: \"\",\r\n    visible: false,\r\n    size: \"small\",\r\n    data: \"\",\r\n    id: \"\"\r\n  };\r\n\r\n  componentWillMount() {\r\n    if (window.screen.width > 1900) {\r\n      console.log(\"hooray\");\r\n      this.setState({\r\n        size: \"large\"\r\n      });\r\n    } else if (window.screen.width < 1440) {\r\n      this.setState({\r\n        size: \"small\"\r\n      });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getallPlant();\r\n  }\r\n\r\n  //  get all plant API\r\n  getallPlant = () => {\r\n    api(\"GET\", \"supermix\", \"/plants\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data);\r\n      this.setState({\r\n        data: res.data.results.plants\r\n      });\r\n    });\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  handleOk = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleCancel = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleChange = (pagination, filters, sorter) => {\r\n    console.log(\"Various parameters\", pagination, filters, sorter);\r\n    this.setState({\r\n      filteredInfo: filters,\r\n      sortedInfo: sorter\r\n    });\r\n  };\r\n\r\n  clearFilters = () => {\r\n    this.setState({ filteredInfo: null });\r\n  };\r\n\r\n  clearAll = () => {\r\n    this.setState({\r\n      filteredInfo: null,\r\n      sortedInfo: null\r\n    });\r\n  };\r\n\r\n  setAgeSort = () => {\r\n    this.setState({\r\n      sortedInfo: {\r\n        order: \"descend\",\r\n        columnKey: \"age\"\r\n      }\r\n    });\r\n  };\r\n\r\n  onChange(pageNumber) {\r\n    console.log(\"Page: \", pageNumber);\r\n  }\r\n\r\n  // plant delete API\r\n\r\n  onConfirmdelete(code) {\r\n    console.log(code);\r\n    api(\"DELETE\", \"supermix\", \"/plant\", \"\", \"\", code).then(res => {\r\n      console.log(res.data);\r\n      this.getallPlant();\r\n      Notification(\"success\", res.data.message);\r\n    });\r\n    console.log(this.state.id);\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"Code\",\r\n        dataIndex: \"code\",\r\n        key: \"id\",\r\n        width: \"5%\"\r\n      },\r\n      {\r\n        title: \"Plant Name\",\r\n        dataIndex: \"name\",\r\n        key: \"name\",\r\n        width: \"7%\"\r\n      },\r\n      {\r\n        title: \"Address\",\r\n        dataIndex: \"address\",\r\n        key: \"address\",\r\n        width: \"10%\"\r\n      },\r\n      {\r\n        title: \"Contact No\",\r\n        dataIndex: \"phoneNumber\",\r\n        key: \"tp\",\r\n        width: \"7%\"\r\n      },\r\n\r\n      {\r\n        title: \"Edit & Delete\",\r\n        key: \"action\",\r\n        width: \"7%\",\r\n        render: (text, record = this.state.data) => (\r\n          <span>\r\n            <a>\r\n              <Icon\r\n                type=\"edit\"\r\n                style={{ fontSize: \"1.2em\" }}\r\n                onClick={this.props.passEditPlantRecordtoModal.bind(\r\n                  this,\r\n                  record\r\n                )}\r\n              />\r\n            </a>\r\n            <Divider type=\"vertical\" />\r\n            <a>\r\n              <Popconfirm\r\n                title=\"Are you sure you want to Delete this?\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: \"red\" }} />\r\n                }\r\n                onConfirm={this.onConfirmdelete.bind(this, record.code)}\r\n              >\r\n                <a href=\"#\">\r\n                  <Icon\r\n                    type=\"delete\"\r\n                    style={{ color: \"red\", fontSize: \"1.2em\" }}\r\n                  />\r\n                </a>\r\n              </Popconfirm>\r\n            </a>\r\n          </span>\r\n        )\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <AntTable\r\n        length\r\n        title={() => <PlantMasterTitle reload={this.getallPlant} />}\r\n        className=\"plantManageTable\"\r\n        columns={columns}\r\n        dataSource={this.state.data}\r\n        onChange={this.handleChange}\r\n        pagination={{ defaultPageSize: 7 }}\r\n        size={this.state.size}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => null;\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // if this function dispatches modal will be shown and the data will be drawn :)\r\n    passEditPlantRecordtoModal: record => {\r\n      //this payload is the data we pass into redux which is in the row which we clicked\r\n      dispatch({ type: SWITCH_TO_EDIT_MODE, payload: record });\r\n      console.log(record);\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManagePlants);\r\n","import React, { Component } from \"react\";\r\nimport { Input, Modal, Button, Icon, Select } from \"antd\";\r\n\r\nimport {\r\n  MasterLevelForm,\r\n  MasterLevelFormTitle\r\n} from \"../../../styledcomponents/form/MasterLevelForms\";\r\nimport { PrimaryButton } from \"../../../styledcomponents/button/button\";\r\nimport { api } from \"../../../services/AxiosService\";\r\nimport { connect } from \"react-redux\";\r\nimport Notification from \"../../../Constant/Notification\";\r\nimport HandelError from \"../../../Constant/HandleError\";\r\nimport { DISABLE_EDIT_MODE } from \"../../../../redux/action/master/plantlevel/PlantLevel\";\r\nconst { Option } = Select;\r\n\r\nfunction onBlur() {\r\n  console.log(\"blur\");\r\n}\r\n\r\nfunction onFocus() {\r\n  console.log(\"focus\");\r\n}\r\n\r\nfunction onSearch(val) {\r\n  console.log(\"search:\", val);\r\n}\r\n\r\nconst error = {\r\n  color: \"red\",\r\n  fontSize: \"12px\",\r\n  width: \"160px\",\r\n  height: \"2px\"\r\n};\r\n\r\nclass EmployeeAddForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      formValid: false,\r\n      errorCount: null,\r\n      errors: {\r\n        code: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        plant: \"\",\r\n        desigination: \"\",\r\n        address: \"\",\r\n        phoneno: \"\",\r\n        username: \"\",\r\n        email: \"\"\r\n      },\r\n      loading: false,\r\n      visible: false,\r\n      employee_code: \"\",\r\n      first_name: \"\",\r\n      last_name: \"\",\r\n      plant: \"\",\r\n      desigination: \"\",\r\n      address: \"\",\r\n      phoneno: \"\",\r\n      username: \"\",\r\n      email: \"\",\r\n      errormgs: \"\",\r\n      type: \"\",\r\n      plantdata: \"\",\r\n      errorvalmegss: \"\",\r\n      desiginationEdit: \"\",\r\n      plantEdit: \"\"\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    console.log(nextProps.type);\r\n    this.setState({\r\n      visible: nextProps.visible,\r\n      employee_code: nextProps.editPlantData.id,\r\n      first_name: nextProps.editPlantData.firstName,\r\n      last_name: nextProps.editPlantData.lastName,\r\n      plantEdit: nextProps.editPlantData.plantName,\r\n      desiginationEdit: nextProps.editPlantData.designationName,\r\n      address: nextProps.editPlantData.address,\r\n      phoneno: nextProps.editPlantData.phoneNumber,\r\n      email: nextProps.editPlantData.email,\r\n      plant: nextProps.editPlantData.plantCode,\r\n      desigination: nextProps.editPlantData.designationId,\r\n      type: nextProps.type\r\n    });\r\n  }\r\n\r\n  validateForm = errors => {\r\n    let valid;\r\n    Object.values(errors).forEach(\r\n      val => val.length > 0 && (valid = false),\r\n      (valid = true)\r\n    );\r\n    return valid;\r\n  };\r\n\r\n  countErrors = errors => {\r\n    let count = 0;\r\n    Object.values(errors).forEach(val => val.length > 0 && (count = count + 1));\r\n    return count;\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n      employee_code: \"\",\r\n      first_name: \"\",\r\n      last_name: \"\",\r\n      plant: \"\",\r\n      desigination: \"\",\r\n      address: \"\",\r\n      phoneno: \"\",\r\n      // username: \"\",\r\n      email: \"\"\r\n    });\r\n  };\r\n  responeserror(error) {\r\n    console.log(error);\r\n    this.setState({\r\n      errormgs: `${error} is exist`\r\n    });\r\n  }\r\n\r\n  handleOk = () => {\r\n    this.setState({ loading: true });\r\n    setTimeout(() => {\r\n      this.setState({ loading: false, visible: false });\r\n    }, 3000);\r\n  };\r\n\r\n  handleCancel = () => {\r\n    if (this.state.type === \"edit\") {\r\n      this.props.setEmployeeVisibility();\r\n    }\r\n    this.setState({\r\n      visible: false,\r\n      errors: {\r\n        code: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        plant: \"\",\r\n        desigination: \"\",\r\n        address: \"\",\r\n        phoneno: \"\",\r\n        username: \"\",\r\n        email: \"\"\r\n      },\r\n      employee_code: \"\",\r\n      first_name: \"\",\r\n      last_name: \"\",\r\n      plant: \"\",\r\n      desigination: \"\",\r\n      address: \"\",\r\n      phoneno: \"\",\r\n      // username: \"\",\r\n      email: \"\",\r\n      type: \"\",\r\n      plantEdit: \"\",\r\n      desiginationEdit: \"\",\r\n      errorvalmegss: \"\"\r\n    });\r\n  };\r\n\r\n  // handling for select or dropdown\r\n  handleSelect = (name, value) => {\r\n    console.log(name);\r\n    console.log(value);\r\n    // handle select for  plant\r\n    if (name === \"plant\") {\r\n      this.setState({\r\n        plant: value,\r\n        plantEdit: value\r\n      });\r\n\r\n      if (value.length !== 0) {\r\n        this.setState({\r\n          errors: {\r\n            // code: this.state.errors.code,\r\n            firstName: this.state.errors.firstName,\r\n            lastName: this.state.errors.lastName,\r\n            plant: \"\",\r\n            desigination: this.state.errors.desigination,\r\n            address: this.state.errors.address,\r\n            phoneno: this.state.errors.phoneno,\r\n            email: this.state.errors.email\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    //handle select for designation\r\n    if (name === \"designation\") {\r\n      this.setState({\r\n        desigination: value,\r\n        desiginationEdit: value\r\n      });\r\n\r\n      if (value.length !== 0) {\r\n        this.setState({\r\n          errors: {\r\n            // code: this.state.errors.code,\r\n            firstName: this.state.errors.firstName,\r\n            lastName: this.state.errors.lastName,\r\n            plant: this.state.errors.plant,\r\n            desigination: \"\",\r\n            address: this.state.errors.address,\r\n            phoneno: this.state.errors.phoneno,\r\n            email: this.state.errors.email\r\n          }\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  //dropdown data\r\n  getAllplant() {\r\n    api(\"GET\", \"supermix\", \"/plants\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data.results.plants.length);\r\n      if (res.data.results.plants.length > 0) {\r\n        console.log(\"ggg\");\r\n        let SelectPlants = res.data.results.plants.map((post, index) => {\r\n          return (\r\n            <Option value={post.code} key={index}>\r\n              {post.name}\r\n            </Option>\r\n          );\r\n        });\r\n        this.setState({\r\n          SelectPlants\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  getalldesignation = () => {\r\n    api(\"GET\", \"supermix\", \"/designations\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data);\r\n      if (res.data.results.designations.length > 0) {\r\n        let SelectDesignation = res.data.results.designations.map(\r\n          (post, index) => {\r\n            return (\r\n              <Option value={post.id} key={index}>\r\n                {post.name}\r\n              </Option>\r\n            );\r\n          }\r\n        );\r\n        this.setState({\r\n          SelectDesignation\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  handleChange = (event, field) => {\r\n    this.setState({ [field]: event.target.value });\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    let errors = this.state.errors;\r\n    console.log(name + \" is \\t\" + value);\r\n    switch (name) {\r\n      case \"employee_code\":\r\n        errors.code =\r\n          value.length === 0\r\n            ? \"Code can't be empty\"\r\n            : value.length < 3\r\n            ? \"Code must be 3 characters long!\"\r\n            : \"\";\r\n        break;\r\n      case \"first_name\":\r\n        errors.firstName =\r\n          value.length === 0\r\n            ? \"First Name can't be empty\"\r\n            : value.length < 3\r\n            ? \"First Name \\n must be 3 characters long!\"\r\n            : value.replace(/^[a-zA-Z-,]+(\\s{0,1}[a-zA-Z-, ])*$/, \"\")\r\n            ? \"First Name Allow only Letter\"\r\n            : \"\";\r\n        break;\r\n      case \"last_name\":\r\n        errors.lastName =\r\n          value.length === 0\r\n            ? \"Last Name can't be empty\"\r\n            : value.length < 3\r\n            ? \"Last Name must be 3 characters long!\"\r\n            : value.replace(/^[a-zA-Z-,]+(\\s{0,1}[a-zA-Z-, ])*$/, \"\")\r\n            ? \"Last Name Allow only Letter\"\r\n            : \"\";\r\n        break;\r\n      case \"Plant\":\r\n        errors.plant =\r\n          value.length === 0\r\n            ? \"Plant can't be empty\"\r\n            : value.length < 6\r\n            ? \"Plant must be 6 characters long!\"\r\n            : \"\";\r\n        break;\r\n      case \"Desigination\":\r\n        errors.desigination =\r\n          value.length === 0\r\n            ? \"Desigination can't be empty\"\r\n            : value.length < 6\r\n            ? \"Desigination must be 6 characters long!\"\r\n            : \"\";\r\n        break;\r\n      case \"address\":\r\n        errors.address =\r\n          value.length === 0\r\n            ? \"address can't be empty\"\r\n            : value.length < 6\r\n            ? \"address must be 6 characters long!\"\r\n            : \"\";\r\n        break;\r\n      case \"phoneno\":\r\n        errors.phoneno = isNaN(value)\r\n          ? `Contact Number must be a number`\r\n          : value.length === 0\r\n          ? \"Contact Number can't be empty\"\r\n          : value.length < 6\r\n          ? `Contact Number must be 6 characters long!`\r\n          : \"\";\r\n        break;\r\n      // case \"username\":\r\n      //   errors.username =\r\n      //     value.length === 0\r\n      //       ? \"UserName can't be empty\"\r\n      //       : value.length < 3\r\n      //       ? \"UserName must be 6 characters long!\"\r\n      //       : \"\";\r\n      //   break;\r\n      case \"email\":\r\n        errors.email =\r\n          value.length === 0\r\n            ? \"Email can't be empty\"\r\n            : value.length < 1\r\n            ? \"Email must be 1 characters long!\"\r\n            : value.split(\"\").filter(x => x === \"@\").length !== 1\r\n            ? \"Email should contain a @\"\r\n            : value.indexOf(\".\") === -1\r\n            ? \"Email should contain at least one dot\"\r\n            : \"\";\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ errors, [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (\r\n      // this.state.employee_code.length === 0 &&\r\n      this.state.first_name.length === 0 &&\r\n      this.state.last_name.length === 0 &&\r\n      this.state.plant.length === 0 &&\r\n      this.state.desigination.length === 0 &&\r\n      this.state.address.length === 0 &&\r\n      this.state.phoneno.length === 0 &&\r\n      // this.state.username.length === 0 &&\r\n      this.state.email.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          // code: \"code can't be empty\",\r\n          firstName: \"First Name can't be empty\",\r\n          lastName: \"Last Name can't be empty\",\r\n          plant: \"Plant can't be empty\",\r\n          desigination: \"Desigination can't be empty\",\r\n          address: \"Address can't be empty\",\r\n          phoneno: \"Phone No can't be empty\",\r\n          // username: \"UserName  can't be empty\",\r\n          email: \"Email can't be empty\"\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors)\r\n      });\r\n    } else if (\r\n      this.state.first_name.length === 0 &&\r\n      this.state.errors.firstName.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          // code: this.state.errors.code,\r\n          firstName: this.state.errors.firstName || \"First Name can't be empty\",\r\n          lastName: this.state.errors.lastName,\r\n          plant: this.state.errors.plant,\r\n          desigination: this.state.errors.desigination,\r\n          address: this.state.errors.address,\r\n          phoneno: this.state.errors.phoneno,\r\n          email: this.state.errors.email\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors)\r\n      });\r\n    } else if (\r\n      this.state.last_name.length === 0 &&\r\n      this.state.errors.lastName.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          // code: this.state.errors.code,\r\n          // username: this.state.errors.username,\r\n          firstName: this.state.errors.firstName,\r\n          lastName: this.state.errors.lastName || \"Last Name can't be empty\",\r\n          plant: this.state.errors.plant,\r\n          desigination: this.state.errors.desigination,\r\n          address: this.state.errors.address,\r\n          phoneno: this.state.errors.phoneno,\r\n          email: this.state.errors.email\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors)\r\n      });\r\n    } else if (\r\n      this.state.plant.length === 0 &&\r\n      this.state.errors.plant.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          // code: this.state.errors.code,\r\n          // username: this.state.errors.username,\r\n          firstName: this.state.errors.firstName,\r\n          lastName: this.state.errors.lastName,\r\n          plant: this.state.errors.plant || \"Plant can't be empty\",\r\n          desigination: this.state.errors.desigination,\r\n          address: this.state.errors.address,\r\n          phoneno: this.state.errors.phoneno,\r\n          email: this.state.errors.email\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors)\r\n      });\r\n    } else if (\r\n      this.state.desigination.length === 0 &&\r\n      this.state.errors.desigination.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          // code: this.state.errors.code,\r\n          // username: this.state.errors.username,\r\n          firstName: this.state.errors.firstName,\r\n          lastName: this.state.errors.lastName,\r\n          plant: this.state.errors.plant,\r\n          desigination:\r\n            this.state.errors.desigination || \"Designation can't be empty\",\r\n          address: this.state.errors.address,\r\n          phoneno: this.state.errors.phoneno,\r\n          email: this.state.errors.email\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors)\r\n      });\r\n    } else if (\r\n      this.state.address.length === 0 &&\r\n      this.state.errors.address.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          // code: this.state.errors.code,\r\n          // username: this.state.errors.username,\r\n          firstName: this.state.errors.firstName,\r\n          lastName: this.state.errors.lastName,\r\n          plant: this.state.errors.plant,\r\n          desigination: this.state.errors.desigination,\r\n          address: this.state.errors.address || \"Address can't be empty\",\r\n          phoneno: this.state.errors.phoneno,\r\n          email: this.state.errors.email\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors)\r\n      });\r\n    } else if (\r\n      this.state.phoneno.length === 0 &&\r\n      this.state.errors.phoneno.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          // code: this.state.errors.code,\r\n          // username: this.state.errors.username,\r\n          firstName: this.state.errors.firstName,\r\n          lastName: this.state.errors.lastName,\r\n          plant: this.state.errors.plant,\r\n          desigination: this.state.errors.desigination,\r\n          address: this.state.errors.address,\r\n          phoneno: this.state.errors.phoneno || \"Phone Number can't be empty\",\r\n          email: this.state.errors.email\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors)\r\n      });\r\n    } else if (\r\n      this.state.email.length === 0 &&\r\n      this.state.errors.email.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          // code: this.state.errors.code,\r\n          // username: this.state.errors.username,\r\n          firstName: this.state.errors.firstName,\r\n          lastName: this.state.errors.lastName,\r\n          plant: this.state.errors.plant,\r\n          desigination: this.state.errors.desigination,\r\n          address: this.state.errors.address,\r\n          phoneno: this.state.errors.phoneno,\r\n          email: this.state.errors.email || \"Email can't be empty\"\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors)\r\n      });\r\n    } else if (\r\n      // this.state.code.length === 0 &&\r\n      this.state.errors.firstName.length === 0 &&\r\n      this.state.errors.lastName.length === 0 &&\r\n      this.state.errors.plant.length === 0 &&\r\n      this.state.errors.desigination.length === 0 &&\r\n      this.state.errors.address.length === 0 &&\r\n      this.state.errors.phoneno.length === 0 &&\r\n      // this.state.errors.username.length === 0 &&\r\n      this.state.errors.email.length === 0\r\n    ) {\r\n      console.log(this.state.errors);\r\n      this.setState({ formValid: this.validateForm(this.state.errors) });\r\n      this.setState({ errorCount: this.countErrors(this.state.errors) });\r\n      console.log(this.state.formValid);\r\n      console.log(this.state.errorCount);\r\n\r\n      if (this.state.type === \"edit\") {\r\n        const data = {\r\n          id: this.state.employee_code,\r\n          firstName: this.state.first_name,\r\n          lastName: this.state.last_name,\r\n          plantCode: this.state.plant,\r\n          designationId: this.state.desigination,\r\n          address: this.state.address,\r\n          phoneNumber: this.state.phoneno,\r\n          // username: this.state.username,\r\n          email: this.state.email\r\n        };\r\n        console.log(data);\r\n        api(\"PUT\", \"supermix\", \"/employee\", \"\", data, \"\")\r\n          .then(\r\n            res => {\r\n              console.log(res.data);\r\n\r\n              if (res.data.status === \"VALIDATION_FAILURE\") {\r\n                console.log(\"update\");\r\n                this.responeserror(res.data.results.name.message);\r\n              } else {\r\n                Notification(\"success\", res.data.message);\r\n                this.props.reload();\r\n                this.setState({ loading: true });\r\n                this.setState({\r\n                  employee_code: \"\",\r\n                  first_name: \"\",\r\n                  last_name: \"\",\r\n                  plant: \"\",\r\n                  desigination: \"\",\r\n                  address: \"\",\r\n                  phoneno: \"\",\r\n                  // username: \"\",\r\n                  email: \"\",\r\n                  errormgs: \"\"\r\n                });\r\n                setTimeout(() => {\r\n                  this.setState({ loading: false, visible: false });\r\n                }, 500);\r\n              }\r\n            },\r\n            error => {\r\n              this.setState({\r\n                errorvalmegss: error.validationFailures[0]\r\n              });\r\n              console.log(\"DEBUG34: \", error);\r\n              console.log(HandelError(error.validationFailures[0]));\r\n            }\r\n          )\r\n          .catch(error => {\r\n            // this.setState({\r\n            //   errormgs: \"Plant Name Exist\"\r\n            // });\r\n            console.log(error);\r\n          });\r\n      } else {\r\n        const data = {\r\n          // code: this.state.employee_code,\r\n          firstName: this.state.first_name,\r\n          lastName: this.state.last_name,\r\n          plantCode: this.state.plant,\r\n          designationId: this.state.desigination,\r\n          address: this.state.address,\r\n          phoneNumber: this.state.phoneno,\r\n          // username: this.state.username,\r\n          email: this.state.email\r\n        };\r\n        api(\"POST\", \"supermix\", \"/employee\", \"\", data, \"\").then(\r\n          res => {\r\n            console.log(res.data);\r\n            if (res.data.status === \"VALIDATION_FAILURE\") {\r\n              console.log(\"add\");\r\n              this.responeserror(res.data.results.name.message);\r\n            } else {\r\n              Notification(\"success\", res.data.message);\r\n              this.props.reload();\r\n              this.setState({ loading: true });\r\n              this.setState({\r\n                employee_code: \"\",\r\n                first_name: \"\",\r\n                last_name: \"\",\r\n                plant: \"\",\r\n                desigination: \"\",\r\n                address: \"\",\r\n                phoneno: \"\",\r\n                // username: \"\",\r\n                email: \"\",\r\n                errormgs: \"\"\r\n              });\r\n              setTimeout(() => {\r\n                this.setState({ loading: false, visible: false });\r\n              }, 500);\r\n            }\r\n          },\r\n          error => {\r\n            this.setState({\r\n              errorvalmegss: error.validationFailures[0]\r\n            });\r\n            console.log(\"DEBUG34: \", error);\r\n            console.log(HandelError(error.validationFailures[0]));\r\n          }\r\n        );\r\n      }\r\n\r\n      // console.log(data);\r\n      console.log(\"form is valid\");\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getAllplant();\r\n    this.getalldesignation();\r\n    console.log(this.props.screen);\r\n  }\r\n  render() {\r\n    const { visible, loading } = this.state;\r\n    const { errors } = this.state;\r\n    console.log(this.state.errorCount);\r\n    console.log(this.state.desigination);\r\n    return (\r\n      <div>\r\n        <PrimaryButton\r\n          onClick={this.showModal}\r\n          style={{\r\n            background: \"#001328\",\r\n            color: \"white\",\r\n            border: \"none\",\r\n            width: \"120px\",\r\n            marginLeft: \"-10px\"\r\n          }}\r\n        >\r\n          Add Employee\r\n        </PrimaryButton>\r\n        <Modal\r\n          width='700px'\r\n          visible={visible}\r\n          closable={false}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          title={\r\n            <MasterLevelFormTitle>\r\n              <p\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                {this.state.type === \"edit\" ? \"Edit Employee\" : \"Add Employee\"}\r\n              </p>\r\n              <Icon\r\n                type='close-circle'\r\n                onClick={this.handleCancel}\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              />\r\n            </MasterLevelFormTitle>\r\n          }\r\n          footer={[\r\n            <Button key='back' onClick={this.handleCancel}>\r\n              Cancel\r\n            </Button>,\r\n            <PrimaryButton\r\n              key='submit'\r\n              loading={loading}\r\n              onClick={e => this.handleSubmit(e)}\r\n              style={{ background: \"#001328\", color: \"white\", border: \"none\" }}\r\n            >\r\n              {this.state.type === \"edit\" ? \"Edit\" : \"Save\"}\r\n            </PrimaryButton>\r\n          ]}\r\n        >\r\n          <MasterLevelForm>\r\n            {/* Code */}\r\n            {/* <div className='input_wrapper'>\r\n              <label for='employee_code' className='label'>\r\n                Code:\r\n              </label>\r\n\r\n              <Input\r\n                id='employee_code'\r\n                name='employee_code'\r\n                placeholder='Enter the Code '\r\n                onChange={this.handleChange}\r\n                value={this.state.employee_code}\r\n                disabled={this.props.type === \"edit\" ? true : true}\r\n              />\r\n\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div> */}\r\n\r\n            {/* Plant Name */}\r\n            <div className='input_wrapper'>\r\n              <label for='first_name' className='label'>\r\n                First Name:\r\n              </label>\r\n\r\n              <Input\r\n                id='first_name'\r\n                name='first_name'\r\n                placeholder='Enter the First Name'\r\n                onChange={this.handleChange}\r\n                value={this.state.first_name}\r\n              />\r\n              {errors.firstName.length > 0 && (\r\n                <div style={error}>{errors.firstName}</div>\r\n              )}\r\n              <div style={error}>{this.state.errormgs}</div>\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n\r\n            {/* Place */}\r\n            <div className='input_wrapper'>\r\n              <label for='last_name' className='label'>\r\n                Last Name:\r\n              </label>\r\n\r\n              <Input\r\n                id='last_name'\r\n                name='last_name'\r\n                placeholder='Enter the Last Name'\r\n                onChange={this.handleChange}\r\n                value={this.state.last_name}\r\n              />\r\n              {errors.lastName.length > 0 && (\r\n                <div style={error}>{errors.lastName}</div>\r\n              )}\r\n              <div style={error}>{this.state.errormgs}</div>\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n\r\n            {/* T.P No */}\r\n            <div className='input_wrapper'>\r\n              <label for='plant' className='label'>\r\n                Plant:\r\n              </label>\r\n\r\n              <Select\r\n                showSearch\r\n                style={{ width: 180 }}\r\n                id='plant'\r\n                name='plant'\r\n                placeholder='Select a Plant'\r\n                optionFilterProp='children'\r\n                onChange={value => this.handleSelect(\"plant\", value)}\r\n                onFocus={onFocus}\r\n                value={this.state.plantEdit}\r\n                onBlur={onBlur}\r\n                onSearch={onSearch}\r\n              >\r\n                {this.state.SelectPlants}\r\n              </Select>\r\n              {errors.plant.length > 0 && (\r\n                <div style={error}>{errors.plant}</div>\r\n              )}\r\n              <div style={error}>{this.state.errormgs}</div>\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n\r\n            <div className='input_wrapper'>\r\n              <label for='desigination' className='label'>\r\n                Desigination:\r\n              </label>\r\n\r\n              <Select\r\n                showSearch\r\n                id='desigination'\r\n                name='desigination'\r\n                style={{ width: 170 }}\r\n                placeholder='Select the Desigination'\r\n                optionFilterProp='children'\r\n                onChange={value => this.handleSelect(\"designation\", value)}\r\n                onFocus={onFocus}\r\n                onBlur={onBlur}\r\n                onSearch={onSearch}\r\n                value={this.state.desiginationEdit}\r\n              >\r\n                {this.state.SelectDesignation}\r\n              </Select>\r\n              {errors.desigination.length > 0 && (\r\n                <div style={error}>{errors.desigination}</div>\r\n              )}\r\n              <div style={error}>{this.state.errormgs}</div>\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n            <div className='input_wrapper'>\r\n              <label for='address' className='label'>\r\n                Address:\r\n              </label>\r\n\r\n              <Input\r\n                id='address'\r\n                name='address'\r\n                placeholder='Enter the Address'\r\n                onChange={this.handleChange}\r\n                value={this.state.address}\r\n              />\r\n              {errors.address.length > 0 && (\r\n                <div style={error}>{errors.address}</div>\r\n              )}\r\n              <div style={error}>{this.state.errormgs}</div>\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n            <div className='input_wrapper'>\r\n              <label for='phoneno' className='label'>\r\n                Contact No:\r\n              </label>\r\n\r\n              <Input\r\n                id='phoneno'\r\n                name='phoneno'\r\n                placeholder='Enter the Contact No'\r\n                onChange={this.handleChange}\r\n                value={this.state.phoneno}\r\n              />\r\n              {errors.phoneno.length > 0 && (\r\n                <div style={error}>{errors.phoneno}</div>\r\n              )}\r\n              <div style={error}>{this.state.errormgs}</div>\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n\r\n            <div className='input_wrapper'>\r\n              <label for='email' className='label'>\r\n                Email:\r\n              </label>{\" \"}\r\n              <Input\r\n                id='email'\r\n                name='email'\r\n                placeholder='Enter the Email'\r\n                onChange={this.handleChange}\r\n                value={this.state.email}\r\n              />\r\n              {errors.email.length > 0 && (\r\n                <div style={error}>{errors.email}</div>\r\n              )}\r\n              {this.state.errorvalmegss.message === \"email\" ? (\r\n                <div style={error}>{HandelError(this.state.errorvalmegss)}</div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {/* <div style={error}>{this.state.errormgs}</div> */}\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n          </MasterLevelForm>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  //getting the global redux state to get the data from the EditPlantReducer.js\r\n  return {\r\n    visible: state.plantLevelReducers.EditPlantReducer.visible,\r\n    type: state.plantLevelReducers.EditPlantReducer.type,\r\n    editPlantData: state.plantLevelReducers.EditPlantReducer.editPlantData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setEmployeeVisibility: () => {\r\n      dispatch({ type: DISABLE_EDIT_MODE });\r\n      console.log(\"edit modal closed\");\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EmployeeAddForm);\r\n","import React, { Component } from \"react\";\r\n\r\nimport Paragraph from \"antd/lib/typography/Paragraph\";\r\n\r\nimport EmployeeAddForm from \"../employee/EmployeeAddForm\";\r\nimport { FlexContainer } from \"../../../styledcomponents/container/FlexGrid\";\r\nimport Search from \"antd/lib/input/Search\";\r\n\r\nconst style = {\r\n  fontSize: \"medium\",\r\n  fontWeight: \"600\",\r\n  alignSelf: \"auto\",\r\n  padding: \"10px\"\r\n};\r\n\r\nexport default class EmployeeMasterTitle extends Component {\r\n  getallEmployee = () => {\r\n    this.props.reload();\r\n  };\r\n  render() {\r\n    return (\r\n      <FlexContainer titles leveltitles>\r\n        <Paragraph style={style}>Employee </Paragraph>\r\n        <div style={{ display: \"flex\" }}>\r\n          <Search\r\n            placeholder=\"Search Employee\"\r\n            onSearch={value => console.log(value)}\r\n            style={{ width: 200, height: 30, marginRight: \"50px\" }}\r\n          />\r\n          <EmployeeAddForm reload={this.getallEmployee} />\r\n        </div>\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapStateToProps = state => {};\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     showAddEmployeeDrawer: () => {\r\n//       dispatch({ type: OPEN_ADD_NEW_EMPLOYEE_DRAWER });\r\n//       console.log(\"add new employee click dispatched\");\r\n//     }\r\n//   };\r\n// };\r\n\r\n// export default connect(\r\n//   mapStateToProps,\r\n//   mapDispatchToProps\r\n// )(EmployeeMasterTitle);\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\nimport { Icon, Popconfirm, Divider } from \"antd\";\r\nimport EmployeeMasterTitle from \"../titles/EmployeeMasterTitle\";\r\nimport { AntTable } from \"../../../styledcomponents/table/AntTabl\";\r\nimport { api } from \"../../../services/AxiosService\";\r\nimport Notification from \"../../../Constant/Notification\";\r\nimport { connect } from \"react-redux\";\r\nimport { SWITCH_TO_EDIT_MODE } from \"../../../../redux/action/master/plantlevel/PlantLevel\";\r\n// const Search = Input.Search;\r\n\r\nclass ManageQCStaff extends Component {\r\n  state = {\r\n    searchText: \"\",\r\n    visible: false,\r\n    size: \"small\",\r\n    data: \"\"\r\n  };\r\n\r\n  componentWillMount() {\r\n    if (window.screen.width > 1900) {\r\n      console.log(\"hooray\");\r\n      this.setState({\r\n        size: \"large\"\r\n      });\r\n    } else if (window.screen.width < 1440) {\r\n      this.setState({\r\n        size: \"small\"\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getallEmployee();\r\n  }\r\n\r\n  getallEmployee = () => {\r\n    api(\"GET\", \"supermix\", \"/employees\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data);\r\n      this.setState({\r\n        data: res.data.results.employees\r\n      });\r\n    });\r\n  };\r\n\r\n  onConfirmdelete(id) {\r\n    console.log(id);\r\n    api(\"DELETE\", \"supermix\", \"/employee\", \"\", \"\", id).then(res => {\r\n      console.log(res.data);\r\n      this.getallEmployee();\r\n      Notification(\"success\", res.data.message);\r\n    });\r\n    console.log(this.state.id);\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  handleOk = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleCancel = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleChange = (pagination, filters, sorter) => {\r\n    console.log(\"Various parameters\", pagination, filters, sorter);\r\n  };\r\n\r\n  onChange(pageNumber) {\r\n    console.log(\"Page: \", pageNumber);\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      // {\r\n      //   title: \"Code\",\r\n      //   dataIndex: \"code\",\r\n      //   key: \"id\",\r\n      //   width: \"4%\"\r\n      // },\r\n      {\r\n        title: \"First Name\",\r\n        dataIndex: \"firstName\",\r\n        key: \"firstName\",\r\n        width: \"6%\"\r\n      },\r\n      {\r\n        title: \"Last Name\",\r\n        dataIndex: \"lastName\",\r\n        key: \"lastName\",\r\n        width: \"6%\"\r\n      },\r\n      {\r\n        title: \"Email\",\r\n        dataIndex: \"email\",\r\n        key: \"email\",\r\n        width: \"8%\"\r\n      },\r\n      {\r\n        title: \"Plant \",\r\n        dataIndex: \"plantName\",\r\n        key: \"role\",\r\n        width: \"6%\"\r\n      },\r\n      {\r\n        title: \"Designation \",\r\n        dataIndex: \"designationName\",\r\n        key: \"email\",\r\n        width: \"6%\"\r\n      },\r\n      {\r\n        title: \"Phone Number\",\r\n        dataIndex: \"phoneNumber\",\r\n        key: \"phoneNumber\",\r\n        width: \"6%\"\r\n      },\r\n      {\r\n        title: \"Address\",\r\n        dataIndex: \"address\",\r\n        key: \"address\",\r\n        width: \"7%\"\r\n      },\r\n\r\n      // {\r\n      //   title: \"address\",\r\n      //   dataIndex: \"phoneNumber\",\r\n      //   key: \"detalis\",\r\n      //   width: \"7%\",\r\n      //   render: () => (\r\n      //     <a onClick={this.showModal}>\r\n      //       <Icon type=\"solution\" />\r\n      //     </a>\r\n      //   )\r\n      // },\r\n      {\r\n        title: \"Edit & Delete\",\r\n        key: \"action\",\r\n        width: \"5%\",\r\n        render: (text, record = this.state.data) => (\r\n          <span>\r\n            <a>\r\n              <Icon\r\n                type='edit'\r\n                style={{ fontSize: \"1.2em\" }}\r\n                onClick={this.props.passEditQCStaffRecordToModal.bind(\r\n                  this,\r\n                  record\r\n                )}\r\n              />\r\n            </a>\r\n            <Divider type='vertical' />\r\n            <a>\r\n              <Popconfirm\r\n                title='Are you sure you want to Delete this?'\r\n                icon={\r\n                  <Icon type='question-circle-o' style={{ color: \"red\" }} />\r\n                }\r\n                onConfirm={this.onConfirmdelete.bind(this, record.id)}\r\n              >\r\n                <a href='#'>\r\n                  <Icon\r\n                    type='delete'\r\n                    style={{ color: \"red\", fontSize: \"1.2em\" }}\r\n                  />\r\n                </a>\r\n              </Popconfirm>\r\n            </a>\r\n          </span>\r\n        )\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <AntTable\r\n        maxlength\r\n        title={() => <EmployeeMasterTitle reload={this.getallEmployee} />}\r\n        className='plantManageTable'\r\n        columns={columns}\r\n        dataSource={this.state.data}\r\n        onChange={this.handleChange}\r\n        pagination={{ defaultPageSize: 4 }}\r\n        size={this.state.size}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => null;\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    passEditQCStaffRecordToModal: record => {\r\n      //this payload is the data we pass into redux which is in the row which we clicked\r\n      dispatch({ type: SWITCH_TO_EDIT_MODE, payload: record });\r\n      console.log(record);\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageQCStaff);\r\n","import React, { Component } from \"react\";\r\nimport { Input, Modal, Button, Icon } from \"antd\";\r\nimport { PrimaryButton } from \"../../../styledcomponents/button/button\";\r\n\r\nimport {\r\n  MasterLevelFormTitle,\r\n  MasterLevelForm\r\n} from \"../../../styledcomponents/form/MasterLevelForms\";\r\nimport { connect } from \"react-redux\";\r\nimport { DISABLE_EDIT_MODE } from \"../../../../redux/action/master/plantlevel/PlantLevel\";\r\nimport { api } from \"../../../services/AxiosService\";\r\nimport Notification from \"../../../Constant/Notification\";\r\nimport HandelError from \"../../../Constant/HandleError\";\r\n\r\nconst error = {\r\n  color: \"red\",\r\n  fontSize: \"12px\",\r\n  width: \"160px\",\r\n  height: \"2px\"\r\n};\r\n\r\nclass CustomerAddForm extends Component {\r\n  state = {\r\n    loading: false,\r\n    visible: false,\r\n    errors: {\r\n      name: \"\",\r\n      address: \"\",\r\n      contactno: \"\",\r\n      email: \"\"\r\n    },\r\n    formValid: false,\r\n    errorCount: 0,\r\n    errormsgs: \"\",\r\n    // input fields\r\n    customer_code: \"\",\r\n    customer_name: \"\",\r\n    customer_address: \"\",\r\n    customer_contactno: \"\",\r\n    customer_email: \"\",\r\n    // add or edit\r\n    type: \"add\"\r\n  };\r\n\r\n  validateForm = errors => {\r\n    let valid;\r\n    Object.values(errors).forEach(\r\n      val => val.length > 1 && (valid = false),\r\n      (valid = true)\r\n    );\r\n    console.log(valid);\r\n    return valid;\r\n  };\r\n\r\n  countErrors = errors => {\r\n    let count = 0;\r\n    Object.values(errors).forEach(val => val.length > 0 && (count = count + 1));\r\n    console.log(count);\r\n    return count;\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n      customer_code: \"\",\r\n      customer_name: \"\",\r\n      customer_address: \"\",\r\n      customer_contactno: \"\",\r\n      customer_email: \"\"\r\n    });\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({\r\n      visible: nextProps.visible,\r\n      customer_code: nextProps.editPlantData.id,\r\n      customer_name: nextProps.editPlantData.name,\r\n      customer_address: nextProps.editPlantData.address,\r\n      customer_contactno: nextProps.editPlantData.phoneNumber,\r\n      customer_email: nextProps.editPlantData.email,\r\n      type: nextProps.type\r\n    });\r\n  }\r\n\r\n  handleChange = (event, field) => {\r\n    this.setState({ [field]: event.target.value });\r\n    this.setState({ errormsgs: \"\" });\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    let errors = this.state.errors;\r\n    // console.log(name + \" is \\t\" + value);\r\n    switch (name) {\r\n      case \"customer_name\":\r\n        errors.name =\r\n          value.length === 0\r\n            ? \"Name can't be empty\"\r\n            : value.length < 3\r\n            ? \"Name must be 3 characters long!\"\r\n            : \"\";\r\n        break;\r\n      case \"customer_address\":\r\n        errors.address =\r\n          value.length === 0\r\n            ? \"Address can't be empty\"\r\n            : value.length < 3\r\n            ? \"Address \\n must be 3 characters long!\"\r\n            : \"\";\r\n        break;\r\n\r\n      case \"customer_contactno\":\r\n        errors.contactno = isNaN(value)\r\n          ? `Contact Number must be a number`\r\n          : value.length === 0\r\n          ? \"Contact Number can't be empty\"\r\n          : value.length < 10\r\n          ? `Contact Number must be 10 characters long!`\r\n          : \"\";\r\n        break;\r\n      case \"customer_email\":\r\n        errors.email =\r\n          value.length === 0\r\n            ? \"Email can't be empty\"\r\n            : value.length < 1\r\n            ? \"Email must be 1 characters long!\"\r\n            : value.split(\"\").filter(x => x === \"@\").length !== 1\r\n            ? \"Email should contain a @\"\r\n            : value.indexOf(\".\") === -1\r\n            ? \"Email should contain at least one dot\"\r\n            : \"\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ errors, [name]: value });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    if (this.state.type === \"edit\") {\r\n      this.props.setCustomerVisibility();\r\n    }\r\n    this.setState({\r\n      loading: false,\r\n      visible: false,\r\n      errors: {\r\n        name: \"\",\r\n        address: \"\",\r\n        contactno: \"\",\r\n        email: \"\"\r\n      },\r\n      formValid: false,\r\n      errorCount: 0,\r\n      errormsgs: \"\",\r\n      // input fields\r\n      customer_code: \"\",\r\n      customer_name: \"\",\r\n      customer_address: \"\",\r\n      customer_contactno: \"\",\r\n      customer_email: \"\",\r\n      // add or edit\r\n      type: \"add\"\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    console.log(this.state.errors);\r\n    console.log(this.state.customer_email);\r\n\r\n    if (\r\n      this.state.customer_name.length === 0 &&\r\n      this.state.customer_address.length === 0 &&\r\n      this.state.customer_contactno.length === 0 &&\r\n      this.state.customer_email.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          name: \"Name can't be empty\",\r\n          address: \"Address can't be empty\",\r\n          contactno: \"Contact Number can't be empty\",\r\n          email: \"Email can't be empty\"\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors)\r\n      });\r\n\r\n      console.log(\"form is not valid\");\r\n    } else if (\r\n      this.state.customer_name.length === 0 &&\r\n      this.state.errors.name.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          name: this.state.errors.name || \"Name can't be empty\",\r\n          address: this.state.errors.address,\r\n          contactno: this.state.errors.contactno,\r\n          email: this.state.errors.email\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors)\r\n      });\r\n      console.log(\"form is not valid\");\r\n    } else if (\r\n      this.state.customer_address.length === 0 &&\r\n      this.state.errors.address.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          name: this.state.errors.name,\r\n          address: this.state.errors.address || \"Address can't be empty\",\r\n          contactno: this.state.errors.contactno,\r\n          email: this.state.errors.email\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors)\r\n      });\r\n      console.log(\"form is not valid\");\r\n    } else if (\r\n      this.state.customer_contactno.length === 0 &&\r\n      this.state.errors.contactno.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          name: this.state.errors.name,\r\n          address: this.state.errors.address,\r\n          contactno:\r\n            this.state.errors.contactno || \"Contact Number can't be empty\",\r\n          email: this.state.errors.email\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors)\r\n      });\r\n      console.log(\"form is not valid\");\r\n    } else if (\r\n      this.state.customer_email.length === 0 &&\r\n      this.state.errors.email.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          name: this.state.errors.name,\r\n          address: this.state.errors.address,\r\n          contactno: this.state.errors.contactno,\r\n          email: this.state.errors.email || \"Email can't be empty\"\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors)\r\n      });\r\n      console.log(\"form is not valid\");\r\n    } else if (\r\n      this.state.errors.name.length === 0 &&\r\n      this.state.errors.address.length === 0 &&\r\n      this.state.errors.contactno.length === 0 &&\r\n      this.state.errors.email.length === 0\r\n    ) {\r\n      console.log(this.state.formValid);\r\n      console.log(this.state.errorCount);\r\n      console.log(\"form is valid\");\r\n\r\n      let data = {\r\n        name: this.state.customer_name,\r\n        address: this.state.customer_address,\r\n        phoneNumber: this.state.customer_contactno,\r\n        email: this.state.customer_email\r\n      };\r\n      if (this.state.type === \"add\") {\r\n        let data = {\r\n          name: this.state.customer_name,\r\n          address: this.state.customer_address,\r\n          phoneNumber: this.state.customer_contactno,\r\n          email: this.state.customer_email\r\n        };\r\n\r\n        api(\"POST\", \"supermix\", \"/customer\", \"\", data, \"\")\r\n          .then(\r\n            res => {\r\n              console.log(res.data);\r\n              if (res.data.status === \"VALIDATION_FAILURE\") {\r\n                console.log(\"val error\");\r\n                this.responeserror(res.data.results.name.message);\r\n              } else {\r\n                Notification(\"success\", res.data.message);\r\n                this.props.reload();\r\n                this.setState({ loading: true });\r\n                this.setState({\r\n                  customer_code: \"\",\r\n                  customer_contactno: \"\",\r\n                  customer_address: \"\",\r\n                  customer_email: \"\",\r\n                  customer_name: \"\",\r\n                  errormsgs: \"\"\r\n                });\r\n                setTimeout(() => {\r\n                  this.setState({ loading: false, visible: false });\r\n                }, 500);\r\n              }\r\n            },\r\n            error => {\r\n              this.setState({\r\n                errormsgs: error.validationFailures[0]\r\n              });\r\n              console.log(\"DEBUG34: \", error);\r\n              console.log(HandelError(error.validationFailures[0]));\r\n            }\r\n          )\r\n          .catch(error => {\r\n            this.setState({\r\n              errormsgs: \"customer email already exists\"\r\n            });\r\n            console.log(error);\r\n          });\r\n      } else {\r\n        const data = {\r\n          id: this.state.customer_code,\r\n          name: this.state.customer_name,\r\n          address: this.state.customer_address,\r\n          phoneNumber: this.state.customer_contactno,\r\n          email: this.state.customer_email\r\n        };\r\n        api(\"PUT\", \"supermix\", \"/customer\", \"\", data, \"\").then(res => {\r\n          console.log(res.data);\r\n\r\n          Notification(\"success\", res.data.message);\r\n          this.props.reload();\r\n          this.setState({ loading: true });\r\n          this.setState({\r\n            customer_code: \"\",\r\n            customer_contactno: \"\",\r\n            customer_address: \"\",\r\n            customer_email: \"\",\r\n            customer_name: \"\",\r\n            errormsgs: \"\"\r\n          });\r\n          setTimeout(() => {\r\n            this.setState({ loading: false, visible: false });\r\n          }, 500);\r\n        });\r\n      }\r\n\r\n      console.log(data);\r\n      console.log(\"form is valid\");\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(this.props.screen);\r\n  }\r\n  render() {\r\n    const { visible, loading } = this.state;\r\n    const { errors } = this.state;\r\n    console.log(this.state.type);\r\n    return (\r\n      <div>\r\n        <PrimaryButton\r\n          onClick={this.showModal}\r\n          style={{\r\n            background: \"#001328\",\r\n            color: \"white\",\r\n            border: \"none\",\r\n            width: \"120px\"\r\n          }}\r\n        >\r\n          Add Customer\r\n        </PrimaryButton>\r\n        <Modal\r\n          width='500px'\r\n          visible={visible}\r\n          closable={false}\r\n          onCancel={this.handleCancel}\r\n          footer={[\r\n            <Button key='back' onClick={this.handleCancel}>\r\n              Cancel\r\n            </Button>,\r\n            <PrimaryButton\r\n              key='submit'\r\n              loading={loading}\r\n              onClick={this.handleSubmit}\r\n              style={{ background: \"#001328\", color: \"white\", border: \"none\" }}\r\n            >\r\n              {this.state.type === \"edit\" ? \"Edit\" : \"Save\"}\r\n            </PrimaryButton>\r\n          ]}\r\n          title={\r\n            <MasterLevelFormTitle>\r\n              <p\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                {this.state.type === \"edit\" ? \"Edit Customer\" : \"Add Customer\"}\r\n              </p>\r\n              <Icon\r\n                type='close-circle'\r\n                onClick={this.handleCancel}\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              />\r\n            </MasterLevelFormTitle>\r\n          }\r\n        >\r\n          <MasterLevelForm>\r\n            {/* Code */}\r\n            {this.state.type === \"edit\" ? (\r\n              <div className='input_wrapper'>\r\n                <label for='customer_code' className='label'>\r\n                  Code:\r\n                </label>\r\n                <Input\r\n                  id='customer_code'\r\n                  name='customer_code'\r\n                  value={this.state.customer_code}\r\n                  disabled\r\n                />\r\n                <div style={{ height: \"12px\" }}></div>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n\r\n            {/* Plant Name */}\r\n            <div className='input_wrapper'>\r\n              <label for='customer_name' className='label'>\r\n                Customer Name:\r\n              </label>\r\n\r\n              <Input\r\n                id='customer_name'\r\n                name='customer_name'\r\n                placeholder='Enter the Customer '\r\n                value={this.state.customer_name}\r\n                onChange={this.handleChange}\r\n              />\r\n              {errors.name.length > 0 && <div style={error}>{errors.name}</div>}\r\n\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n\r\n            {/* Place */}\r\n            <div className='input_wrapper'>\r\n              <label for='customer_address' className='label'>\r\n                Address:\r\n              </label>\r\n\r\n              <Input\r\n                id='customer_address'\r\n                name='customer_address'\r\n                placeholder='Enter the Address'\r\n                value={this.state.customer_address}\r\n                onChange={this.handleChange}\r\n              />\r\n              {errors.address.length > 0 && (\r\n                <div style={error}>{errors.address}</div>\r\n              )}\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n\r\n            {/* T.P No */}\r\n            <div className='input_wrapper'>\r\n              <label for='customer_contactno' className='label'>\r\n                Contact No:\r\n              </label>\r\n\r\n              <Input\r\n                className='input_number'\r\n                id='customer_contactno'\r\n                name='customer_contactno'\r\n                placeholder='Enter the Contact No'\r\n                value={this.state.customer_contactno}\r\n                onChange={this.handleChange}\r\n              />\r\n              {errors.contactno.length > 0 && (\r\n                <div style={error}>{errors.contactno}</div>\r\n              )}\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n\r\n            {/* Description  */}\r\n            <div className='input_wrapper'>\r\n              <label for='customer_email' className='label'>\r\n                Email:\r\n              </label>\r\n              <Input\r\n                id='customer_email'\r\n                name='customer_email'\r\n                placeholder='Enter the Email'\r\n                value={this.state.customer_email}\r\n                onChange={this.handleChange}\r\n              />\r\n              {errors.email.length > 0 && (\r\n                <div style={error}>{errors.email}</div>\r\n              )}\r\n\r\n              <div style={error}>{HandelError(this.state.errormsgs)}</div>\r\n\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n          </MasterLevelForm>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  //getting the global redux state to get the data from the EditPlantReducer.js\r\n  return {\r\n    visible: state.plantLevelReducers.EditPlantReducer.visible,\r\n    type: state.plantLevelReducers.EditPlantReducer.type,\r\n    editPlantData: state.plantLevelReducers.EditPlantReducer.editPlantData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setCustomerVisibility: () => {\r\n      dispatch({ type: DISABLE_EDIT_MODE });\r\n      console.log(\"edit modal closed\");\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerAddForm);\r\n","import React, { Component } from \"react\";\r\n\r\nimport Paragraph from \"antd/lib/typography/Paragraph\";\r\n\r\nimport CustomerAddForm from \"../customer/CustomerAddForm\";\r\nimport { FlexContainer } from \"../../../styledcomponents/container/FlexGrid\";\r\n\r\nconst style = {\r\n  fontSize: \"medium\",\r\n  fontWeight: \"600\",\r\n  alignSelf: \"auto\",\r\n  padding: \"10px\"\r\n};\r\n\r\nexport default class CustomerMasterTitle extends Component {\r\n  render() {\r\n    return (\r\n      <FlexContainer titles leveltitles>\r\n        <Paragraph style={style}>Customer </Paragraph>\r\n        <CustomerAddForm reload={this.props.reload} />\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapStateToProps = state => {};\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     showAddEmployeeDrawer: () => {\r\n//       dispatch({ type: OPEN_ADD_NEW_EMPLOYEE_DRAWER });\r\n//       console.log(\"add new employee click dispatched\");\r\n//     }\r\n//   };\r\n// };\r\n\r\n// export default connect(\r\n//   mapStateToProps,\r\n//   mapDispatchToProps\r\n// )(EmployeeMasterTitle);\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\nimport { Icon, Popconfirm, Divider } from \"antd\";\r\nimport CustomerMasterTitle from \"../titles/CustomerMasterTitle\";\r\nimport { AntTable } from \"../../../styledcomponents/table/AntTabl\";\r\nimport { connect } from \"react-redux\";\r\nimport { SWITCH_TO_EDIT_MODE } from \"../../../../redux/action/master/plantlevel/PlantLevel\";\r\nimport Notification from \"../../../Constant/Notification\";\r\nimport { api } from \"../../../services/AxiosService\";\r\n\r\nclass ManageCustomer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchText: \"\",\r\n      visible: false,\r\n      size: \"small\",\r\n      datalist: \"\"\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    if (window.screen.width > 1900) {\r\n      console.log(\"hooray\");\r\n      this.setState({\r\n        size: \"large\"\r\n      });\r\n    } else if (window.screen.width < 1440) {\r\n      this.setState({\r\n        size: \"small\"\r\n      });\r\n    }\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  handleOk = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleCancel = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleChange = (pagination, filters, sorter) => {\r\n    console.log(\"Various parameters\", pagination, filters, sorter);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getallCustomer();\r\n  }\r\n\r\n  getallCustomer = () => {\r\n    api(\"GET\", \"supermix\", \"/customers\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data);\r\n\r\n      this.setState({\r\n        datalist: res.data.results.customers\r\n      });\r\n    });\r\n  };\r\n  onChange(pageNumber) {\r\n    console.log(\"Page: \", pageNumber);\r\n  }\r\n  onConfirmdelete(id) {\r\n    console.log(id);\r\n    console.log(\"ddddd\");\r\n    api(\"DELETE\", \"supermix\", \"/customer\", \"\", \"\", id).then(res => {\r\n      console.log(res.data);\r\n      this.getallCustomer();\r\n      Notification(\"success\", res.data.message);\r\n    });\r\n    console.log(this.state.id);\r\n  }\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"Customer Name\",\r\n        dataIndex: \"name\",\r\n        key: \"name\",\r\n        width: \"16%\"\r\n      },\r\n      {\r\n        title: \"Phone Number\",\r\n        dataIndex: \"phoneNumber\",\r\n        key: \"phoneNumber\",\r\n        width: \"15%\"\r\n      },\r\n      {\r\n        title: \"Email\",\r\n        dataIndex: \"email\",\r\n        key: \"email\",\r\n        width: \"14%\"\r\n      },\r\n      {\r\n        title: \"Address\",\r\n        dataIndex: \"address\",\r\n        key: \"address\",\r\n        width: \"10%\"\r\n      },\r\n      {\r\n        title: \"Edit & Delete\",\r\n        key: \"action\",\r\n        width: \"7%\",\r\n        render: (text, record) => (\r\n          <span>\r\n            <a>\r\n              <Icon\r\n                type='edit'\r\n                onClick={this.props.passEditManageCustomerToModal.bind(\r\n                  this,\r\n                  record\r\n                )}\r\n              />\r\n            </a>\r\n            <Divider type='vertical' />\r\n            <a>\r\n              <Popconfirm\r\n                title='Are you sure you want to Delete this?'\r\n                icon={\r\n                  <Icon type='question-circle-o' style={{ color: \"red\" }} />\r\n                }\r\n                onConfirm={this.onConfirmdelete.bind(this, record.id)}\r\n              >\r\n                <a href='#'>\r\n                  <Icon type='delete' style={{ color: \"red\" }}></Icon>\r\n                </a>\r\n              </Popconfirm>\r\n            </a>\r\n          </span>\r\n        )\r\n      }\r\n    ];\r\n    return (\r\n      <AntTable\r\n        length\r\n        title={() => <CustomerMasterTitle reload={this.getallCustomer} />}\r\n        className='plantManageTable'\r\n        columns={columns}\r\n        dataSource={this.state.datalist}\r\n        onChange={this.handleChange}\r\n        pagination={{ defaultPageSize: 4 }}\r\n        size={this.state.size}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => null;\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    passEditManageCustomerToModal: record => {\r\n      //this payload is the data we pass into redux which is in the row which we clicked\r\n      dispatch({ type: SWITCH_TO_EDIT_MODE, payload: record });\r\n      console.log(record);\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageCustomer);\r\n","import React, { Component } from \"react\";\r\nimport { Input, Modal, Button, Icon, Select } from \"antd\";\r\nimport { PrimaryButton } from \"../../../styledcomponents/button/button\";\r\nimport { api } from \"../../../services/AxiosService\";\r\nimport Notification from \"../../../Constant/Notification\";\r\nimport HandelError from \"../../../Constant/HandleError\";\r\n\r\nimport {\r\n  MasterLevelForm,\r\n  MasterLevelFormTitle\r\n} from \"../../../styledcomponents/form/MasterLevelForms\";\r\nimport { connect } from \"react-redux\";\r\nimport { DISABLE_EDIT_MODE } from \"../../../../redux/action/master/plantlevel/PlantLevel\";\r\n\r\nfunction onBlur() {\r\n  console.log(\"blur\");\r\n}\r\n\r\nfunction onFocus() {\r\n  console.log(\"focus\");\r\n}\r\n\r\nfunction onSearch(val) {\r\n  console.log(\"search:\", val);\r\n}\r\n\r\nconst error = {\r\n  color: \"red\",\r\n  fontSize: \"12px\",\r\n  width: \"160px\",\r\n  height: \"2px\"\r\n};\r\n\r\n//email validation\r\nconst validEmailRegex = RegExp(\r\n  /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\r\n);\r\n\r\nconst { Option } = Select;\r\n\r\nclass SupplierAddForm extends Component {\r\n  state = {\r\n    formValid: false,\r\n    errorCount: null,\r\n    errors: {\r\n      code: \"\",\r\n      name: \"\",\r\n      companyName: \"\",\r\n      category: \"\",\r\n      address: \"\",\r\n      contactno: \"\",\r\n      email: \"\"\r\n    },\r\n    // category: \"\",\r\n    loading: false,\r\n    visible: false,\r\n    supplier_code: \"\",\r\n    supplier_name: \"\",\r\n    supplier_company_name: \"\",\r\n    supplier_category: \"\",\r\n    supplier_address: \"\",\r\n    supplier_contactno: \"\",\r\n    supplier_email: \"\",\r\n    errormgs: \"\",\r\n    type: \"\",\r\n    edit_supplier_category: \"\"\r\n  };\r\n\r\n  validateForm = errors => {\r\n    let valid;\r\n    Object.values(errors).forEach(\r\n      val => val.length > 0 && (valid = false),\r\n      (valid = true)\r\n    );\r\n    return valid;\r\n  };\r\n\r\n  countErrors = errors => {\r\n    let count = 0;\r\n    Object.values(errors).forEach(val => val.length > 0 && (count = count + 1));\r\n    return count;\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n      supplier_code: \"\",\r\n      supplier_name: \"\",\r\n      supplier_company_name: \"\",\r\n      supplier_category: \"\",\r\n      supplier_address: \"\",\r\n      supplier_contactno: \"\",\r\n      supplier_email: \"\",\r\n      edit_supplier_category: \"\"\r\n    });\r\n  };\r\n\r\n  handleSelect = value => {\r\n    this.setState({\r\n      supplier_category: value,\r\n      edit_supplier_category: value\r\n    });\r\n  };\r\n  componentWillReceiveProps(nextProps) {\r\n    console.log(nextProps.editPlantData);\r\n    this.setState({\r\n      visible: nextProps.visible,\r\n      supplier_code: nextProps.editPlantData.id,\r\n      supplier_name: nextProps.editPlantData.name,\r\n      supplier_category: nextProps.editPlantData.supplierCategoryId,\r\n      supplier_address: nextProps.editPlantData.address,\r\n      supplier_contactno: nextProps.editPlantData.phoneNumber,\r\n      supplier_email: nextProps.editPlantData.email,\r\n      supplier_company_name: nextProps.editPlantData.companyName,\r\n      edit_supplier_category: nextProps.editPlantData.category,\r\n\r\n      type: nextProps.type\r\n    });\r\n  }\r\n  handleChange = (event, field) => {\r\n    this.setState({ [field]: event.target.value });\r\n\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    let errors = this.state.errors;\r\n    // console.log(name + \" is \\t\" + value);\r\n    switch (name) {\r\n      case \"supplier_code\":\r\n        errors.code =\r\n          value.length === 0\r\n            ? \"Code can't be empty\"\r\n            : value.length < 3\r\n            ? \"Code must be 3 characters long!\"\r\n            : \"\";\r\n        break;\r\n      case \"supplier_name\":\r\n        errors.name =\r\n          value.length === 0\r\n            ? \"Name can't be empty\"\r\n            : value.length < 3\r\n            ? \"Name \\n must be 6 characters long!\"\r\n            : \"\";\r\n        break;\r\n      case \"supplier_address\":\r\n        errors.address =\r\n          value.length === 0\r\n            ? \"Address can't be empty\"\r\n            : value.length < 6\r\n            ? \"Address \\n must be 6 characters long!\"\r\n            : \"\";\r\n        break;\r\n      case \"supplier_contactno\":\r\n        errors.contactno = isNaN(value)\r\n          ? `Contact Number must be a number`\r\n          : value.length === 0\r\n          ? \"Contact Number can't be empty\"\r\n          : value.length < 6\r\n          ? `Contact Number must be 6 characters long!`\r\n          : \"\";\r\n        break;\r\n      case \"supplier_email\":\r\n        errors.email =\r\n          value.length === 0\r\n            ? \"Email can't be empty\"\r\n            : !validEmailRegex.test(value)\r\n            ? \"Please enter a valid email!\"\r\n            : \"\";\r\n        break;\r\n      case \"supplier_company_name\":\r\n        errors.companyName =\r\n          value.length === 0\r\n            ? \"Company Name can't be empty\"\r\n            : value.length < 2\r\n            ? \"Company Name \\n must be 6 characters long!\"\r\n            : \"\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ errors, [name]: value });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({ loading: true });\r\n    setTimeout(() => {\r\n      this.setState({ loading: false, visible: false });\r\n    }, 3000);\r\n  };\r\n\r\n  handleCancel = () => {\r\n    if (this.state.type === \"edit\") {\r\n      this.props.setSupplierVisiblity();\r\n    }\r\n    this.setState({\r\n      visible: false,\r\n      supplier_code: \"\",\r\n      supplier_name: \"\",\r\n      supplier_category: \"\",\r\n      supplier_address: \"\",\r\n      supplier_contactno: \"\",\r\n      supplier_email: \"\",\r\n      edit_supplier_category: \"\",\r\n      errors: {\r\n        // code: \"\",\r\n        name: \"\",\r\n        companyName: \"\",\r\n        category: \"\",\r\n        address: \"\",\r\n        contactno: \"\",\r\n        email: \"\"\r\n      },\r\n      errormgs: \"\"\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    // initial empty field validation\r\n    if (\r\n      // this.state.supplier_code.length === 0 &&\r\n      this.state.supplier_name.length === 0 &&\r\n      this.state.supplier_category.length === 0 &&\r\n      this.state.supplier_address.length === 0 &&\r\n      this.state.supplier_contactno.length === 0 &&\r\n      this.state.supplier_email.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          // code: \"Code can't be empty\",\r\n          name: \"Name can't be empty\",\r\n          companyName: \"Company Name can't be empty\",\r\n          category: \"Category can't be empty\",\r\n          address: \"Address can't be empty\",\r\n          contactno: \"Contact No can't be empty\",\r\n          email: \"Email can't be empty\"\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors)\r\n      });\r\n    } else if (\r\n      this.state.supplier_name.length === 0 &&\r\n      this.state.errors.name.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          // code: this.state.errors.code || \"Code can't be empty\",\r\n          name: this.state.errors.name || \"Name can't be empty\",\r\n          companyName:\r\n            this.state.errors.companyName || \"Company Name can't be empty\",\r\n          category: this.state.errors.category || \"Category can't be empty\",\r\n          address: this.state.errors.address || \"Address can't be empty\",\r\n          contactno: this.state.errors.contactno || \"Contact No can't be empty\",\r\n          email: this.state.errors.email || \"Email can't be empty\"\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors)\r\n      });\r\n    }\r\n    // company name\r\n    else if (\r\n      this.state.supplier_company_name.length === 0 &&\r\n      this.state.errors.companyName.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          // code: this.state.errors.code || \"Code can't be empty\",\r\n          name: this.state.errors.name || \"Name can't be empty\",\r\n          companyName:\r\n            this.state.errors.companyName || \"Company Name can't be empty\",\r\n          category: this.state.errors.category || \"Category can't be empty\",\r\n          address: this.state.errors.address || \"Address can't be empty\",\r\n          contactno: this.state.errors.contactno || \"Contact No can't be empty\",\r\n          email: this.state.errors.email || \"Email can't be empty\"\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors)\r\n      });\r\n    }\r\n    //category\r\n    else if (\r\n      this.state.supplier_category.length === 0 &&\r\n      this.state.errors.category.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          // code: this.state.errors.code || \"Code can't be empty\",\r\n          name: this.state.errors.name || \"Name can't be empty\",\r\n          companyName:\r\n            this.state.errors.companyName || \"Company Name can't be empty\",\r\n          category: this.state.errors.category || \"Category can't be empty\",\r\n          address: this.state.errors.address || \"Address can't be empty\",\r\n          contactno: this.state.errors.contactno || \"Contact No can't be empty\",\r\n          email: this.state.errors.email || \"Email can't be empty\"\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors)\r\n      });\r\n    }\r\n    //address\r\n    else if (\r\n      this.state.supplier_address.length === 0 &&\r\n      this.state.errors.address.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          // code: this.state.errors.code || \"Code can't be empty\",\r\n          name: this.state.errors.name || \"Name can't be empty\",\r\n          companyName:\r\n            this.state.errors.companyName || \"Company Name can't be empty\",\r\n          category: this.state.errors.category || \"Category can't be empty\",\r\n          address: this.state.errors.address || \"Address can't be empty\",\r\n          contactno: this.state.errors.contactno || \"Contact No can't be empty\",\r\n          email: this.state.errors.email || \"Email can't be empty\"\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors)\r\n      });\r\n    }\r\n    // Email\r\n    else if (\r\n      this.state.supplier_email.length === 0 &&\r\n      this.state.errors.email.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          // code: this.state.errors.code || \"Code can't be empty\",\r\n          name: this.state.errors.name || \"Name can't be empty\",\r\n          companyName:\r\n            this.state.errors.companyName || \"Company Name can't be empty\",\r\n          category: this.state.errors.category || \"Category can't be empty\",\r\n          address: this.state.errors.address || \"Address can't be empty\",\r\n          contactno: this.state.errors.contactno || \"Contact No can't be empty\",\r\n          email: this.state.errors.email || \"Email can't be empty\"\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors)\r\n      });\r\n    }\r\n    // Contact No\r\n    else if (\r\n      this.state.supplier_contactno.length === 0 &&\r\n      this.state.errors.contactno.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          // code: this.state.errors.code || \"Code can't be empty\",\r\n          name: this.state.errors.name || \"Name can't be empty\",\r\n          companyName:\r\n            this.state.errors.companyName || \"Company Name can't be empty\",\r\n          category: this.state.errors.category || \"Category can't be empty\",\r\n          address: this.state.errors.address || \"Address can't be empty\",\r\n          contactno: this.state.errors.contactno || \"Contact No can't be empty\",\r\n          email: this.state.errors.email || \"Email can't be empty\"\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors)\r\n      });\r\n    }\r\n    // proceed to api request\r\n    else if (\r\n      // this.state.errors.code.length === 0 &&\r\n      this.state.errors.name.length === 0 &&\r\n      this.state.errors.companyName.length === 0 &&\r\n      this.state.errors.address.length === 0 &&\r\n      this.state.errors.category.length === 0 &&\r\n      this.state.errors.contactno.length === 0 &&\r\n      this.state.errors.email.length === 0\r\n    ) {\r\n      this.setState({ formValid: this.validateForm(this.state.errors) });\r\n      this.setState({ errorCount: this.countErrors(this.state.errors) });\r\n      console.log(this.state.supplier_name);\r\n\r\n      if (this.state.type === \"edit\") {\r\n        const data = {\r\n          id: this.state.supplier_code,\r\n          name: this.state.supplier_name,\r\n          companyName: this.state.supplier_company_name,\r\n          suppilerCategoryId: this.state.supplier_category,\r\n          address: this.state.supplier_address,\r\n          phoneNumber: this.state.supplier_contactno,\r\n          email: this.state.supplier_email\r\n        };\r\n        console.log(data);\r\n        api(\"PUT\", \"supermix\", \"/supplier\", \"\", data, \"\")\r\n          .then(\r\n            res => {\r\n              console.log(res.data);\r\n\r\n              if (res.data.status === \"VALIDATION_FAILURE\") {\r\n                console.log(\"update\");\r\n                this.responeserror(res.data.results.name.message);\r\n              } else {\r\n                Notification(\"success\", res.data.message);\r\n                this.props.reload();\r\n                this.setState({ loading: true });\r\n                this.setState({\r\n                  supplier_code: \"\",\r\n                  supplier_name: \"\",\r\n                  supplier_company_name: \"\",\r\n                  supplier_category: \"\",\r\n                  supplier_address: \"\",\r\n                  supplier_contactno: \"\",\r\n                  supplier_email: \"\",\r\n                  edit_supplier_category: \"\",\r\n                  errormgs: \"\"\r\n                });\r\n                setTimeout(() => {\r\n                  this.setState({ loading: false, visible: false });\r\n                }, 500);\r\n              }\r\n            },\r\n            error => {\r\n              this.setState({\r\n                errormgs: error.validationFailures[0]\r\n              });\r\n              console.log(\"DEBUG34: \", error);\r\n              console.log(HandelError(error.validationFailures[0]));\r\n            }\r\n          )\r\n          .catch(error => {\r\n            // this.setState({\r\n            //   errormgs: \"Plant Name Exist\"\r\n            // });\r\n            console.log(error);\r\n          });\r\n      } else {\r\n        const data = {\r\n          name: this.state.supplier_name,\r\n          companyName: this.state.supplier_company_name,\r\n          suppilerCategoryId: this.state.supplier_category,\r\n          address: this.state.supplier_address,\r\n          phoneNumber: this.state.supplier_contactno,\r\n          email: this.state.supplier_email\r\n        };\r\n        console.log(data);\r\n        api(\"POST\", \"supermix\", \"/supplier\", \"\", data, \"\").then(\r\n          res => {\r\n            console.log(\"jjjj\");\r\n            console.log(res.data);\r\n            if (res.data.status === \"VALIDATION_FAILURE\") {\r\n              console.log(\"jjjj\");\r\n              // this.responeserror(res.data.results.name.message);\r\n            } else {\r\n              this.props.reload();\r\n              Notification(\"success\", res.data.message);\r\n              this.setState({ loading: true });\r\n              this.setState({\r\n                // supplier_code: \"\",\r\n                supplier_name: \"\",\r\n                supplier_company_name: \"\",\r\n                supplier_category: \"\",\r\n                supplier_address: \"\",\r\n                supplier_contactno: \"\",\r\n                supplier_email: \"\",\r\n                edit_supplier_category: \"\",\r\n                errormgs: \"\"\r\n              });\r\n              setTimeout(() => {\r\n                this.setState({ loading: false, visible: false });\r\n              }, 500);\r\n            }\r\n          },\r\n          error => {\r\n            this.setState({\r\n              errormgs: error.validationFailures[0]\r\n            });\r\n            console.log(\"DEBUG34: \", error);\r\n            console.log(HandelError(error.validationFailures[0]));\r\n          }\r\n        );\r\n      }\r\n\r\n      console.log(\"form is valid\");\r\n    }\r\n  };\r\n\r\n  getallsupplireCategory = () => {\r\n    api(\"GET\", \"supermix\", \"/supplier-categories\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data);\r\n      if (res.data.results.supplierCategory.length > 0) {\r\n        console.log(\"kkkkkkkkkk\");\r\n        let categ = res.data.results.supplierCategory.map((post, index) => {\r\n          return (\r\n            <Option value={post.id} key={index}>\r\n              {post.category}\r\n            </Option>\r\n          );\r\n        });\r\n        this.setState({\r\n          categ\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(this.props.screen);\r\n    this.getallsupplireCategory();\r\n  }\r\n\r\n  render() {\r\n    const { visible, loading } = this.state;\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <PrimaryButton\r\n          onClick={this.showModal}\r\n          style={{\r\n            background: \"#001328\",\r\n            color: \"white\",\r\n            border: \"none\",\r\n            width: \"120px\",\r\n            marginLeft: \"-10px\"\r\n          }}\r\n        >\r\n          Add Supplier\r\n        </PrimaryButton>\r\n        <Modal\r\n          width=\"500px\"\r\n          visible={visible}\r\n          closable={false}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          footer={[\r\n            <Button key=\"back\" onClick={this.handleCancel}>\r\n              Cancel\r\n            </Button>,\r\n            <PrimaryButton\r\n              key=\"submit\"\r\n              loading={loading}\r\n              onClick={e => this.handleSubmit(e)}\r\n              style={{ background: \"#001328\", color: \"white\", border: \"none\" }}\r\n            >\r\n              {this.state.type === \"edit\" ? \"Edit\" : \"Save\"}\r\n            </PrimaryButton>\r\n          ]}\r\n          title={\r\n            <MasterLevelFormTitle>\r\n              <p\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                {this.state.type === \"edit\" ? \"Edit Supplier\" : \" Add Supplier\"}\r\n              </p>\r\n              <Icon\r\n                type=\"close-circle\"\r\n                onClick={this.handleCancel}\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              />\r\n            </MasterLevelFormTitle>\r\n          }\r\n        >\r\n          <MasterLevelForm>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                flexWrap: \"wrap\",\r\n                justifyContent: \"space-evenly\"\r\n              }}\r\n            >\r\n              {/* Code */}\r\n              {/* <div className=\"input_wrapper\">\r\n                <label for=\"supplier_code\" className=\"label\">\r\n                  Code:\r\n                </label>\r\n\r\n                <Input\r\n                  id=\"supplier_code\"\r\n                  name=\"supplier_code\"\r\n                  placeholder=\"Enter the Code\"\r\n                  onChange={this.handleChange}\r\n                  value={this.state.supplier_code}\r\n                  disabled={this.state.type == \"edit\" ? true : true}\r\n                />\r\n              \r\n                <div style={{ height: \"12px\" }}></div>\r\n              </div> */}\r\n\r\n              {/* Plant Name */}\r\n              <div className=\"input_wrapper\">\r\n                <label for=\"supplier_name\" className=\"label\">\r\n                  Supplier Name:\r\n                </label>\r\n\r\n                <Input\r\n                  id=\"supplier_name\"\r\n                  name=\"supplier_name\"\r\n                  placeholder=\"Enter the Supplier\"\r\n                  onChange={this.handleChange}\r\n                  value={this.state.supplier_name}\r\n                />\r\n                {errors.name.length > 0 && (\r\n                  <div style={error}>{errors.name}</div>\r\n                )}\r\n                <div style={{ height: \"12px\" }}></div>\r\n              </div>\r\n\r\n              {/* Company Name */}\r\n              <div className=\"input_wrapper\">\r\n                <label for=\"supplier_company_name\" className=\"label\">\r\n                  Company Name:\r\n                </label>\r\n\r\n                <Input\r\n                  id=\"supplier_company_name\"\r\n                  name=\"supplier_company_name\"\r\n                  placeholder=\"Enter the Supplier\"\r\n                  onChange={this.handleChange}\r\n                  value={this.state.supplier_company_name}\r\n                />\r\n                {errors.companyName.length > 0 && (\r\n                  <div style={error}>{errors.companyName}</div>\r\n                )}\r\n                <div style={{ height: \"12px\" }}></div>\r\n              </div>\r\n              <div className=\"input_wrapper\">\r\n                <label for=\"supplier_category\" className=\"label\">\r\n                  Supplier Category:\r\n                </label>\r\n\r\n                <Select\r\n                  showSearch\r\n                  style={{ width: \"170px\" }}\r\n                  id=\"supplier_category\"\r\n                  name=\"supplier_category\"\r\n                  placeholder=\"Select Category \"\r\n                  optionFilterProp=\"children\"\r\n                  onChange={this.handleSelect}\r\n                  // defaultValue={this.state.supplier_category}\r\n                  value={this.state.edit_supplier_category}\r\n                  onFocus={onFocus}\r\n                  onBlur={onBlur}\r\n                  onSearch={onSearch}\r\n                  filterOption={(input, option) =>\r\n                    option.props.children\r\n                      .toLowerCase()\r\n                      .indexOf(input.toLowerCase()) >= 0\r\n                  }\r\n                >\r\n                  {this.state.categ}\r\n                  {/* Hard Coded */}\r\n                  {/* <Option value=\"category01\">Category 01</Option>\r\n                  <Option value=\"category02\">Category 02</Option> */}\r\n                </Select>\r\n                {errors.category.length > 0 && (\r\n                  <div style={error}>{errors.category}</div>\r\n                )}\r\n                <div style={{ height: \"12px\" }}></div>\r\n              </div>\r\n\r\n              {/* Place */}\r\n              <div className=\"input_wrapper\">\r\n                <label for=\"supplier_address\" className=\"label\">\r\n                  Address:\r\n                </label>\r\n\r\n                <Input\r\n                  id=\"supplier_address\"\r\n                  name=\"supplier_address\"\r\n                  placeholder=\"Enter the Address\"\r\n                  onChange={this.handleChange}\r\n                  value={this.state.supplier_address}\r\n                />\r\n                {errors.address.length > 0 && (\r\n                  <div style={error}>{errors.address}</div>\r\n                )}\r\n                <div style={{ height: \"12px\" }}></div>\r\n              </div>\r\n\r\n              {/* T.P No */}\r\n              <div className=\"input_wrapper\">\r\n                <label for=\"supplier_contactno\" className=\"label\">\r\n                  Contact No:\r\n                </label>\r\n\r\n                <Input\r\n                  className=\"input_number\"\r\n                  id=\"supplier_contactno\"\r\n                  name=\"supplier_contactno\"\r\n                  placeholder=\"Enter Contact No\"\r\n                  onChange={this.handleChange}\r\n                  value={this.state.supplier_contactno}\r\n                />\r\n                {errors.contactno.length > 0 && (\r\n                  <div style={error}>{errors.contactno}</div>\r\n                )}\r\n                <div style={{ height: \"12px\" }}></div>\r\n              </div>\r\n\r\n              {/* Description  */}\r\n              <div className=\"input_wrapper\">\r\n                <label for=\"supplier_email\" className=\"label\">\r\n                  Email:\r\n                </label>\r\n\r\n                <Input\r\n                  id=\"supplier_email\"\r\n                  name=\"supplier_email\"\r\n                  placeholder=\"Enter the Email\"\r\n                  onChange={this.handleChange}\r\n                  value={this.state.supplier_email}\r\n                />\r\n                {errors.email.length > 0 && (\r\n                  <div style={error}>{errors.email}</div>\r\n                )}\r\n                {this.state.errormgs.message === \"email\" ? (\r\n                  <div style={error}>{HandelError(this.state.errormgs)}</div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                <div style={{ height: \"12px\" }}></div>\r\n              </div>\r\n            </div>\r\n          </MasterLevelForm>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  //getting the global redux state to get the data from the EditPlantReducer.js\r\n  return {\r\n    visible: state.plantLevelReducers.EditPlantReducer.visible,\r\n    type: state.plantLevelReducers.EditPlantReducer.type,\r\n    editPlantData: state.plantLevelReducers.EditPlantReducer.editPlantData\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // setting visible to false if we close the modal .. and all state data will be deleted if this function is dispatched\r\n    setSupplierVisiblity: () => {\r\n      dispatch({ type: DISABLE_EDIT_MODE });\r\n      console.log(\"edit modal closed\");\r\n    }\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SupplierAddForm);\r\n","import React, { Component } from \"react\";\r\n\r\nimport Paragraph from \"antd/lib/typography/Paragraph\";\r\n\r\nimport SupplierAddForm from \"../supplier/SupplierAddForm\";\r\nimport { FlexContainer } from \"../../../styledcomponents/container/FlexGrid\";\r\nimport { Input } from \"antd\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst style = {\r\n  fontSize: \"medium\",\r\n  fontWeight: \"600\",\r\n  alignSelf: \"auto\",\r\n  padding: \"10px\"\r\n};\r\n\r\nexport default class SupplierMasterTitle extends Component {\r\n  getallSupplier = () => {\r\n    this.props.reload();\r\n  };\r\n  render() {\r\n    return (\r\n      <FlexContainer titles leveltitles>\r\n        <Paragraph style={style}>Supplier </Paragraph>\r\n        <div style={{ display: \"flex\" }}>\r\n          <Search\r\n            placeholder=\"Search Supplier\"\r\n            onSearch={value => console.log(value)}\r\n            style={{ width: 200, height: 30, marginRight: \"50px\" }}\r\n          />\r\n          <SupplierAddForm reload={this.getallSupplier} />\r\n        </div>\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapStateToProps = state => {};\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     showAddEmployeeDrawer: () => {\r\n//       dispatch({ type: OPEN_ADD_NEW_EMPLOYEE_DRAWER });\r\n//       console.log(\"add new employee click dispatched\");\r\n//     }\r\n//   };\r\n// };\r\n\r\n// export default connect(\r\n//   mapStateToProps,\r\n//   mapDispatchToProps\r\n// )(EmployeeMasterTitle);\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\nimport { Icon, Popconfirm, Divider } from \"antd\";\r\nimport SupplierMasterTitle from \"../titles/SupplierMasterTitle\";\r\nimport { AntTable } from \"../../../styledcomponents/table/AntTabl\";\r\nimport { api } from \"../../../services/AxiosService\";\r\nimport { connect } from \"react-redux\";\r\nimport { SWITCH_TO_EDIT_MODE } from \"../../../../redux/action/master/plantlevel/PlantLevel\";\r\nimport Notification from \"../../../Constant/Notification\";\r\n\r\nclass ManageSupplier extends Component {\r\n  state = {\r\n    searchText: \"\",\r\n    visible: false,\r\n    size: \"small\",\r\n    data: \"\"\r\n  };\r\n\r\n  componentWillMount() {\r\n    if (window.screen.width > 1900) {\r\n      console.log(\"hooray\");\r\n      this.setState({\r\n        size: \"large\"\r\n      });\r\n    } else if (window.screen.width < 1440) {\r\n      this.setState({\r\n        size: \"small\"\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getallSupplier();\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  handleOk = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleCancel = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleChange = (pagination, filters, sorter) => {\r\n    console.log(\"Various parameters\", pagination, filters, sorter);\r\n  };\r\n\r\n  onChange(pageNumber) {\r\n    console.log(\"Page: \", pageNumber);\r\n  }\r\n\r\n  getallSupplier = () => {\r\n    const datalist = [];\r\n    api(\"GET\", \"supermix\", \"/suppliers\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data);\r\n\r\n      res.data.results.Supplier.map((post, index) => {\r\n        console.log(post);\r\n        datalist.push({\r\n          id: post.id,\r\n          name: post.name,\r\n          companyName: post.companyName,\r\n          address: post.address,\r\n          phoneNumber: post.phoneNumber,\r\n          email: post.email,\r\n          supplierCategoryId: post.supplierCategory.id,\r\n          category: post.supplierCategory.category,\r\n          description: post.supplierCategory\r\n        });\r\n        console.log(datalist);\r\n      });\r\n      console.log(datalist);\r\n      this.setState({\r\n        data: datalist\r\n      });\r\n    });\r\n  };\r\n\r\n  onConfirmdelete(id) {\r\n    console.log(id);\r\n    api(\"DELETE\", \"supermix\", \"/supplier\", \"\", \"\", id).then(res => {\r\n      console.log(res.data);\r\n      this.getallSupplier();\r\n      Notification(\"success\", res.data.message);\r\n    });\r\n    console.log(this.state.id);\r\n  }\r\n\r\n  render() {\r\n\r\n    const columns = [\r\n      {\r\n        title: \"Supplier Name\",\r\n        dataIndex: \"name\",\r\n        key: \"supplier_name\",\r\n        width: \"7%\"\r\n      },\r\n\r\n      {\r\n        title: \"Supplier Category\",\r\n        dataIndex: \"category\",\r\n        key: \"supplier_category\",\r\n        width: \"8%\"\r\n      },\r\n\r\n      {\r\n        title: \"Company\",\r\n        dataIndex: \"companyName\",\r\n        key: \"company\",\r\n        width: \"5%\"\r\n      },\r\n      {\r\n        title: \"Contact No\",\r\n        dataIndex: \"phoneNumber\",\r\n        key: \"contact_no\",\r\n        width: \"6%\"\r\n      },\r\n      {\r\n        title: \"Email\",\r\n        dataIndex: \"email\",\r\n        key: \"email\",\r\n        width: \"6%\"\r\n      },\r\n      {\r\n        title: \"Address\",\r\n        dataIndex: \"address\",\r\n        key: \"address\",\r\n        width: \"6%\"\r\n      },\r\n      {\r\n        title: \"Edit & Delete\",\r\n        key: \"action\",\r\n        width: \"7%\",\r\n        render: (text, record = this.state.data) => (\r\n          <span>\r\n            <a>\r\n              <Icon\r\n                type=\"edit\"\r\n                style={{ fontSize: \"1.2em\" }}\r\n                onClick={this.props.passSupplireEditRecordtoModal.bind(\r\n                  this,\r\n                  record\r\n                )}\r\n              />\r\n            </a>\r\n            <Divider type=\"vertical\" />\r\n            <a>\r\n              <Popconfirm\r\n                title=\"Are you sure you want to Delete this?\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: \"red\" }} />\r\n                }\r\n                onConfirm={this.onConfirmdelete.bind(this, record.id)}\r\n              >\r\n                <a href=\"#\">\r\n                  <Icon\r\n                    type=\"delete\"\r\n                    style={{ color: \"red\", fontSize: \"1.2em\" }}\r\n                  />\r\n                </a>\r\n              </Popconfirm>\r\n            </a>\r\n          </span>\r\n        )\r\n      }\r\n    ];\r\n    return (\r\n      <AntTable\r\n        maxlength\r\n        title={() => <SupplierMasterTitle reload={this.getallSupplier} />}\r\n        className=\"plantManageTable\"\r\n        columns={columns}\r\n        dataSource={this.state.data}\r\n        onChange={this.handleChange}\r\n        pagination={{ defaultPageSize: 4 }}\r\n        size={this.state.size}\r\n        style={{\r\n          background: \"white\",\r\n          border: \"none\",\r\n          borderRadius: \"15px\",\r\n          marginLeft: \"15px\",\r\n          marginTop: \"20px\"\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // if this function dispatches modal will be shown and the data will be drawn :)\r\n    passSupplireEditRecordtoModal: record => {\r\n      //this payload is the data we pass into redux which is in the row which we clicked\r\n      dispatch({ type: SWITCH_TO_EDIT_MODE, payload: record });\r\n      console.log(record);\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ManageSupplier);\r\n","import React, { Component } from \"react\";\r\nimport { Input, Modal, Icon, Button } from \"antd\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport { api } from \"../../../services/AxiosService\";\r\nimport Notification from \"../../../Constant/Notification\";\r\nimport HandelError from \"../../../Constant/HandleError\";\r\nimport { PrimaryButton } from \"../../../styledcomponents/button/button\";\r\nimport {\r\n  MasterLevelFormTitle,\r\n  MasterLevelForm\r\n} from \"../../../styledcomponents/form/MasterLevelForms\";\r\nimport { connect } from \"react-redux\";\r\nimport { DISABLE_EDIT_MODE } from \"../../../../redux/action/master/plantlevel/PlantLevel\";\r\n\r\nconst error = {\r\n  color: \"red\",\r\n  fontSize: \"12px\",\r\n  width: \"160px\",\r\n  height: \"2px\"\r\n};\r\n\r\nclass UserRoleAddForm extends Component {\r\n  state = {\r\n    formValid: false,\r\n    errorCount: null,\r\n    errors: {\r\n      designation: \"\",\r\n      description: \"\"\r\n    },\r\n    loading: false,\r\n    visible: false,\r\n    designation_code: \"\",\r\n    designation_name: \"\",\r\n    designation_description: \"\",\r\n    errormgs: \"\",\r\n    type: \"\"\r\n  };\r\n\r\n  validateForm = errors => {\r\n    let valid;\r\n    Object.values(errors).forEach(\r\n      val => val.length > 0 && (valid = false),\r\n      (valid = true)\r\n    );\r\n    return valid;\r\n  };\r\n\r\n  countErrors = errors => {\r\n    let count = 0;\r\n    Object.values(errors).forEach(val => val.length > 0 && (count = count + 1));\r\n    return count;\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n      designation_name: \"\",\r\n      designation_description: \"\"\r\n    });\r\n  };\r\n\r\n  handleChange = (event, field) => {\r\n    this.setState({ [field]: event.target.value });\r\n    this.setState({ errormgs: \"\" });\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    let errors = this.state.errors;\r\n    // console.log(name + \" is \\t\" + value);\r\n    switch (name) {\r\n      case \"designation_name\":\r\n        errors.designation =\r\n          value.length === 0\r\n            ? \"Designation can't be empty\"\r\n            : value.length < 1\r\n            ? \"Designation \\n must be one characters long!\"\r\n            : value.replace(/^[a-zA-Z-,]+(\\s{0,1}[a-zA-Z-, ])*$/, \"\")\r\n            ? \"Desigination allow only letters\"\r\n            : \"\";\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ errors, [name]: value });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    if (this.state.type === \"edit\") {\r\n      // we call the redux function to dispatch and delete all the global redux state to close the modal\r\n      this.props.setDesignationVisiblity();\r\n    }\r\n    this.setState({\r\n      visible: false,\r\n      formValid: false,\r\n      designation_name: \"\",\r\n      designation_description: \"\",\r\n      errors: {\r\n        designation: \"\",\r\n        description: \"\"\r\n      },\r\n      errormgs: \"\"\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (\r\n      this.state.designation_name.length === 0 &&\r\n      this.state.designation_description.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          designation: \"Designation can't be empty\",\r\n          description: \"Description can't be empty\"\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors)\r\n      });\r\n    }\r\n    // else if (\r\n    //   this.state.designation_code.length === 0 &&\r\n    //   this.state.errors.code.length === 0\r\n    // ) {\r\n    //   this.setState({\r\n    //     errors: {\r\n    //       designation: this.state.errors.designation,\r\n    //       description: this.state.errors.description\r\n    //     },\r\n    //     formValid: this.validateForm(this.state.errors),\r\n    //     errorCount: this.countErrors(this.state.errors)\r\n    //   });\r\n    // }\r\n    else if (\r\n      this.state.designation_name.length === 0 &&\r\n      this.state.errors.designation.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          designation:\r\n            this.state.errors.designation || \"Designation can't be empty\",\r\n          description: this.state.errors.description\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors)\r\n      });\r\n    }\r\n    // else if (\r\n    //   this.state.designation_description.length === 0 &&\r\n    //   this.state.errors.description.length === 0\r\n    // ) {\r\n    //   this.setState({\r\n    //     errors: {\r\n    //       designation: this.state.errors.designation,\r\n    //       description:\r\n    //         this.state.errors.description || \"Description can't be empty\"\r\n    //     },\r\n    //     formValid: this.validateForm(this.state.errors),\r\n    //     errorCount: this.countErrors(this.state.errors)\r\n    //   });\r\n    // }\r\n    else if (\r\n      this.state.errors.designation.length === 0 &&\r\n      this.state.errors.description.length === 0\r\n    ) {\r\n      this.setState({ formValid: this.validateForm(this.state.errors) });\r\n      this.setState({ errorCount: this.countErrors(this.state.errors) });\r\n      console.log(this.state.designation_name);\r\n      const data = {\r\n        // i: this.state.designation_code,\r\n        name: this.state.designation_name,\r\n        description: this.state.designation_description\r\n      };\r\n      if (this.state.type === \"edit\") {\r\n        const data = {\r\n          id: this.state.designation_code,\r\n          name: this.state.designation_name,\r\n          description: this.state.designation_description\r\n        };\r\n        console.log(data);\r\n        api(\"PUT\", \"supermix\", \"/designation\", \"\", data, \"\").then(\r\n          res => {\r\n            console.log(res.data);\r\n\r\n            if (res.data.status === \"VALIDATION_FAILURE\") {\r\n              console.log(\"update\");\r\n              this.responeserror(res.data.results.name.message);\r\n            } else {\r\n              Notification(\"success\", res.data.message);\r\n              this.props.reloadrole();\r\n              this.setState({ loading: true });\r\n              this.setState({\r\n                designation_code: \"\",\r\n                designation_name: \"\",\r\n                designation_description: \"\",\r\n                errormgs: \"\"\r\n              });\r\n              setTimeout(() => {\r\n                this.setState({ loading: false, visible: false });\r\n              }, 500);\r\n            }\r\n          },\r\n          error => {\r\n            this.setState({\r\n              errormgs: error.validationFailures[0]\r\n            });\r\n            console.log(\"DEBUG34: \", error);\r\n            console.log(HandelError(error.validationFailures[0]));\r\n          }\r\n        );\r\n      } else {\r\n        const data = {\r\n          name: this.state.designation_name,\r\n          description: this.state.designation_description\r\n        };\r\n        console.log(data);\r\n        api(\"POST\", \"supermix\", \"/designation\", \"\", data, \"\")\r\n          .then(\r\n            res => {\r\n              console.log(this.state.type);\r\n              console.log(res.data);\r\n              if (res.data.status === \"VALIDATION_FAILURE\") {\r\n                console.log(\"jjjj\");\r\n                this.responeserror(res.data.results.name.message);\r\n              } else {\r\n                Notification(\"success\", res.data.message);\r\n                this.props.reloadrole();\r\n                // this.props.reload();\r\n                this.setState({ loading: true });\r\n                this.setState({\r\n                  designation_code: \"\",\r\n                  designation_name: \"\",\r\n                  designation_description: \"\",\r\n                  errormgs: \"\"\r\n                });\r\n                setTimeout(() => {\r\n                  this.setState({ loading: false, visible: false });\r\n                }, 500);\r\n              }\r\n            },\r\n            error => {\r\n              this.setState({\r\n                errormgs: error.validationFailures[0]\r\n              });\r\n              console.log(\"DEBUG34: \", error);\r\n              console.log(HandelError(error.validationFailures[0]));\r\n            }\r\n          )\r\n          .catch(error => {\r\n            console.log(error);\r\n          });\r\n      }\r\n\r\n      console.log(data);\r\n      console.log(\"form is valid\");\r\n    }\r\n  };\r\n  componentWillReceiveProps(nextProps) {\r\n    console.log(nextProps.editPlantData);\r\n    this.setState({\r\n      visible: nextProps.visible,\r\n      designation_code: nextProps.editPlantData.id,\r\n      designation_name: nextProps.editPlantData.name,\r\n      designation_description: nextProps.editPlantData.description,\r\n      type: nextProps.type\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(this.props.screen);\r\n  }\r\n  render() {\r\n    const { visible, loading } = this.state;\r\n    const { errors } = this.state;\r\n    console.log(this.props.type);\r\n\r\n    return (\r\n      <div>\r\n        <PrimaryButton\r\n          onClick={this.showModal}\r\n          style={{\r\n            background: \"#001328\",\r\n            color: \"white\",\r\n            border: \"none\",\r\n            width: \"auto\",\r\n            marginLeft: \"-10px\"\r\n          }}\r\n        >\r\n          Add Designation\r\n        </PrimaryButton>\r\n        <Modal\r\n          width='400px'\r\n          visible={visible}\r\n          closable={false}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          footer={[\r\n            <Button key='back' onClick={this.handleCancel}>\r\n              Cancel\r\n            </Button>,\r\n            <PrimaryButton\r\n              key='submit'\r\n              loading={loading}\r\n              onClick={this.handleSubmit}\r\n              style={{ background: \"#001328\", color: \"white\", border: \"none\" }}\r\n            >\r\n              {this.state.type === \"edit\" ? \"Edit\" : \"Save\"}\r\n            </PrimaryButton>\r\n          ]}\r\n          title={\r\n            <MasterLevelFormTitle>\r\n              <p\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                {this.state.type === \"edit\"\r\n                  ? \"Edit Designation\"\r\n                  : \"Add Designation\"}\r\n              </p>\r\n              <Icon\r\n                type='close-circle'\r\n                onClick={this.handleCancel}\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              />\r\n            </MasterLevelFormTitle>\r\n          }\r\n        >\r\n          <MasterLevelForm>\r\n            {/* Code */}\r\n            {/* <div className=\"input_wrapper\">\r\n              <label for=\"designation_code\" className=\"label\">\r\n                Code:\r\n              </label>\r\n\r\n              <Input\r\n                id=\"designation_code\"\r\n                name=\"designation_code\"\r\n                placeholder=\"Enter the Code \"\r\n                onChange={this.handleChange}\r\n                value={this.state.designation_code}\r\n                disabled\r\n              />\r\n\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div> */}\r\n\r\n            {/* User Role */}\r\n            <div className='input_wrapper'>\r\n              <label for='designation_name' className='label'>\r\n                Desigination:\r\n              </label>\r\n\r\n              <Input\r\n                id='designation_name'\r\n                name='designation_name'\r\n                placeholder='Enter the Desigination'\r\n                onChange={this.handleChange}\r\n                value={this.state.designation_name}\r\n              />\r\n              {errors.designation.length > 0 && (\r\n                <div style={error}>{errors.designation}</div>\r\n              )}\r\n              {this.state.errormgs.message === \"Designation Name\" ? (\r\n                <div style={error}>{HandelError(this.state.errormgs)}</div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n            <div className='input_wrapper'>\r\n              <label\r\n                for='designation_description'\r\n                className='label'\r\n                style={{ width: \"180px\" }}\r\n              >\r\n                Description:\r\n              </label>\r\n              <TextArea\r\n                id='designation_description'\r\n                name='designation_description'\r\n                placeholder='Enter the Description'\r\n                onChange={this.handleChange}\r\n                value={this.state.designation_description}\r\n              />\r\n              {errors.description.length > 0 && (\r\n                <div style={error}>{errors.description}</div>\r\n              )}\r\n\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n          </MasterLevelForm>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  //getting the global redux state to get the data from the EditPlantReducer.js\r\n  return {\r\n    visible: state.plantLevelReducers.EditPlantReducer.visible,\r\n    type: state.plantLevelReducers.EditPlantReducer.type,\r\n    editPlantData: state.plantLevelReducers.EditPlantReducer.editPlantData\r\n  };\r\n};\r\n// const mapDispatchToProps = dispatch => null;\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // setting visible to false if we close the modal .. and all state data will be deleted if this function is dispatched\r\n    setDesignationVisiblity: () => {\r\n      dispatch({ type: DISABLE_EDIT_MODE });\r\n      console.log(\"edit modal closed\");\r\n    }\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRoleAddForm);\r\n","import React, { Component } from \"react\";\r\n\r\nimport Paragraph from \"antd/lib/typography/Paragraph\";\r\n\r\nimport UserRoleAddForm from \"../userrole/UserRoleAddForm\";\r\nimport { FlexContainer } from \"../../../styledcomponents/container/FlexGrid\";\r\n\r\nconst style = {\r\n  fontSize: \"medium\",\r\n  fontWeight: \"600\",\r\n  alignSelf: \"auto\",\r\n  padding: \"10px\"\r\n};\r\n\r\nexport default class UserRoleMasterTitle extends Component {\r\n  getalldesignation = () => {\r\n    this.props.reload();\r\n  };\r\n  render() {\r\n    return (\r\n      <FlexContainer titles leveltitles>\r\n        <Paragraph style={style}>Designation </Paragraph>\r\n        <UserRoleAddForm reloadrole={this.getalldesignation} />\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapStateToProps = state => {};\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     showAddEmployeeDrawer: () => {\r\n//       dispatch({ type: OPEN_ADD_NEW_EMPLOYEE_DRAWER });\r\n//       console.log(\"add new employee click dispatched\");\r\n//     }\r\n//   };\r\n// };\r\n\r\n// export default connect(\r\n//   mapStateToProps,\r\n//   mapDispatchToProps\r\n// )(EmployeeMasterTitle);\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\nimport { Popconfirm, Divider, Icon } from \"antd\";\r\nimport UserRoleMasterTitle from \"../titles/UserRoleMasterTitle\";\r\nimport { AntTable } from \"../../../styledcomponents/table/AntTabl\";\r\nimport { api } from \"../../../services/AxiosService\";\r\nimport Notification from \"../../../Constant/Notification\";\r\nimport { SWITCH_TO_EDIT_MODE } from \"../../../../redux/action/master/plantlevel/PlantLevel\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ManageUserRoles extends Component {\r\n  state = {\r\n    searchText: \"\",\r\n    visible: false,\r\n    size: \"small\",\r\n    listData: \"\"\r\n    // listData: {\r\n\r\n    // }\r\n  };\r\n\r\n  componentWillMount() {\r\n    if (window.screen.width > 1900) {\r\n      console.log(\"hooray\");\r\n      this.setState({\r\n        size: \"large\"\r\n      });\r\n    } else if (window.screen.width < 1440) {\r\n      this.setState({\r\n        size: \"small\"\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getalldesignation();\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  handleOk = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleCancel = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleChange = (pagination, filters, sorter) => {\r\n    console.log(\"Various parameters\", pagination, filters, sorter);\r\n  };\r\n\r\n  getalldesignation = () => {\r\n    api(\"GET\", \"supermix\", \"/designations\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data);\r\n      this.setState({\r\n        listData: res.data.results.designations\r\n      });\r\n    });\r\n  };\r\n\r\n  onConfirmdelete(id) {\r\n    console.log(id);\r\n    api(\"DELETE\", \"supermix\", \"/designation\", \"\", \"\", id).then(res => {\r\n      console.log(res.data);\r\n      this.getalldesignation();\r\n      Notification(\"success\", res.data.message);\r\n    });\r\n    console.log(this.state.id);\r\n  }\r\n\r\n  onChange(pageNumber) {\r\n    console.log(\"Page: \", pageNumber);\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      // {\r\n      //   title: \"Code\",\r\n      //   dataIndex: \"id\",\r\n      //   key: \"code\",\r\n      //   width: \"4%\",\r\n\r\n      //   filteredValue: filteredInfo.name || null,\r\n      //   onFilter: (value, record) => record.name.includes(value),\r\n      //   sorter: (a, b) => a.code - b.code,\r\n      //   sortOrder: sortedInfo.columnKey === \"code\" && sortedInfo.order\r\n      // },\r\n      {\r\n        title: \"Designation\",\r\n        dataIndex: \"name\",\r\n        key: \"designation\",\r\n        width: \"10%\"\r\n      },\r\n      {\r\n        title: \"Description\",\r\n        dataIndex: \"description\",\r\n        key: \"description\",\r\n        width: \"12%\"\r\n      },\r\n      {\r\n        title: \"Edit & Delete\",\r\n        key: \"action\",\r\n        width: \"7%\",\r\n        render: (text, record = this.state.listData) => (\r\n          <span>\r\n            <a>\r\n              <Icon\r\n                type=\"edit\"\r\n                style={{ fontSize: \"1.2em\" }}\r\n                onClick={this.props.passEditDesignationRecordToModal.bind(\r\n                  this,\r\n                  record\r\n                )}\r\n              />\r\n            </a>\r\n            <Divider type=\"vertical\" />\r\n            <a>\r\n              <Popconfirm\r\n                title=\"Are you sure you want to Delete this?\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: \"red\" }} />\r\n                }\r\n                onConfirm={this.onConfirmdelete.bind(this, record.id)}\r\n              >\r\n                <a href=\"#\">\r\n                  <Icon\r\n                    type=\"delete\"\r\n                    style={{ color: \"red\", fontSize: \"1.2em\" }}\r\n                  />\r\n                </a>\r\n              </Popconfirm>\r\n            </a>\r\n          </span>\r\n        )\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <AntTable\r\n        length\r\n        className=\"userRolesManageTable\"\r\n        title={() => <UserRoleMasterTitle reload={this.getalldesignation} />}\r\n        columns={columns}\r\n        dataSource={this.state.listData}\r\n        onChange={this.handleChange}\r\n        pagination={{ defaultPageSize: 8 }}\r\n        size={this.state.size}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  // return {\r\n  //   visible: state.plantLevelReducers.EditPlantReducer.visible,\r\n  //   type: state.plantLevelReducers.EditPlantReducer.type,\r\n  //   editPlantData: state.plantLevelReducers.EditPlantReducer.editPlantData\r\n  // };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // if this function dispatches modal will be shown and the data will be drawn :)\r\n    passEditDesignationRecordToModal: record => {\r\n      //this payload is the data we pass into redux which is in the row which we clicked\r\n      dispatch({ type: SWITCH_TO_EDIT_MODE, payload: record });\r\n      console.log(record);\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageUserRoles);\r\n","import React, { Component } from \"react\";\r\nimport { Input, Modal, Icon, Button } from \"antd\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\n\r\nimport { PrimaryButton } from \"../../../styledcomponents/button/button\";\r\nimport {\r\n  MasterLevelFormTitle,\r\n  MasterLevelForm\r\n} from \"../../../styledcomponents/form/MasterLevelForms\";\r\nimport { connect } from \"react-redux\";\r\nimport { api } from \"../../../services/AxiosService\";\r\nimport Notification from \"../../../Constant/Notification\";\r\nimport HandelError from \"../../../Constant/HandleError\";\r\nimport { DISABLE_EDIT_MODE } from \"../../../../redux/action/master/plantlevel/PlantLevel\";\r\n\r\nconst error = {\r\n  color: \"red\",\r\n  fontSize: \"12px\",\r\n  width: \"160px\",\r\n  height: \"2px\"\r\n};\r\n\r\nclass AddSupplierCategory extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      formValid: false,\r\n      errorCount: null,\r\n      errors: {\r\n        category: \"\"\r\n      },\r\n      loading: false,\r\n      visible: false,\r\n      supllierCategory_code: \"\",\r\n      supplier_category: \"\",\r\n      supplierCategory_description: \"\",\r\n      errormgs: \"\",\r\n      type: \"add\"\r\n    };\r\n  }\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n      supplier_category: \"\",\r\n      supplierCategory_description: \"\"\r\n    });\r\n  };\r\n\r\n  validateForm = errors => {\r\n    let valid;\r\n    Object.values(errors).forEach(val => val.length > 0 && (valid = false));\r\n    return valid;\r\n  };\r\n\r\n  countErrors = errors => {\r\n    let count = 0;\r\n    Object.values(errors).forEach(val => val.length > 0 && (count = count + 1));\r\n    return count;\r\n  };\r\n\r\n  handleCancel = () => {\r\n    if (this.state.type === \"edit\") {\r\n      this.props.setSupplierCategoryVisiblity();\r\n    }\r\n\r\n    this.setState({\r\n      visible: false,\r\n      errors: {\r\n        category: \"\"\r\n      },\r\n      errormgs: \"\",\r\n      supplier_category: \"\",\r\n      supplierCategory_description: \"\",\r\n      type: \"\"\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({ loading: true });\r\n    setTimeout(() => {\r\n      this.setState({ loading: false, visible: false });\r\n    }, 3000);\r\n  };\r\n\r\n  handleChange = (event, field) => {\r\n    this.setState({ [field]: event.target.value });\r\n    this.setState({ errormgs: \"\" });\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    let errors = this.state.errors;\r\n    console.log(name + \" is \\t\" + value);\r\n    switch (name) {\r\n      case \"supplier_category\":\r\n        errors.category =\r\n          value.length === 0\r\n            ? \"Category can't be empty\"\r\n            : value.length < 2\r\n            ? \"Category \\n must be two characters long!\"\r\n            : \"\";\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ errors, [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    // check for whole empty fields\r\n    if (this.state.supplier_category.length === 0) {\r\n      this.setState({\r\n        errors: {\r\n          category: \"Category can't be empty\"\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors)\r\n      });\r\n    } else if (\r\n      this.state.supplier_category === 0 &&\r\n      this.state.errors.category.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          category: this.state.errors.category || \"Category can't be empty\"\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors)\r\n      });\r\n    }\r\n    //description\r\n\r\n    // api request section if no errors occured\r\n    else if (this.state.errors.category.length === 0) {\r\n      this.setState({ formValid: this.validateForm(this.state.errors) });\r\n      this.setState({ errorCount: this.countErrors(this.state.errors) });\r\n      console.log(this.state.supplierCategory_description);\r\n      const data = {\r\n        // code: this.state.supllierCategory_code,\r\n        category: this.state.supplier_category,\r\n        description: this.state.supplierCategory_description\r\n      };\r\n      if (this.state.type === \"add\") {\r\n        const data = {\r\n          category: this.state.supplier_category,\r\n          description: this.state.supplierCategory_description\r\n        };\r\n        api(\"POST\", \"supermix\", \"/supplier-category\", \"\", data, \"\").then(\r\n          res => {\r\n            console.log(res.data);\r\n            if (res.data.status === \"VALIDATION_FAILURE\") {\r\n              console.log(\"add\");\r\n              this.responeserror(res.data.results.name.message);\r\n            } else {\r\n              Notification(\"success\", res.data.message);\r\n              this.props.reload();\r\n              this.setState({ loading: true });\r\n              this.setState({\r\n                supllierCategory_code: \"\",\r\n                supplier_category: \"\",\r\n                supplierCategory_description: \"\",\r\n\r\n                errormgs: \"\"\r\n              });\r\n              setTimeout(() => {\r\n                this.setState({ loading: false, visible: false });\r\n              }, 500);\r\n            }\r\n          },\r\n          error => {\r\n            this.setState({\r\n              errormgs: error.validationFailures[0]\r\n            });\r\n            console.log(\"DEBUG34: \", error);\r\n            console.log(HandelError(error.validationFailures[0]));\r\n          }\r\n        );\r\n      } else {\r\n        const data = {\r\n          id: this.state.supllierCategory_code,\r\n          category: this.state.supplier_category,\r\n          description: this.state.supplierCategory_description\r\n        };\r\n        api(\"PUT\", \"supermix\", \"/supplier-category\", \"\", data, \"\").then(res => {\r\n          console.log(res.data);\r\n          if (res.data.status === \"VALIDATION_FAILURE\") {\r\n            console.log(\"update\");\r\n            this.responeserror(res.data.results.name.message);\r\n          } else {\r\n            Notification(\"success\", res.data.message);\r\n            this.props.reload();\r\n            this.setState({ loading: true });\r\n            this.setState({\r\n              supllierCategory_code: \"\",\r\n              supplier_category: \"\",\r\n              supplierCategory_description: \"\",\r\n              errormgs: \"\"\r\n            });\r\n            setTimeout(() => {\r\n              this.setState({ loading: false, visible: false });\r\n            }, 500);\r\n          }\r\n        });\r\n      }\r\n\r\n      console.log(data);\r\n      console.log(\"form is valid\");\r\n    }\r\n  };\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({\r\n      visible: nextProps.visible,\r\n      supllierCategory_code: nextProps.editPlantData.id,\r\n      supplier_category: nextProps.editPlantData.category,\r\n      supplierCategory_description: nextProps.editPlantData.description,\r\n\r\n      type: nextProps.type\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(this.props.screen);\r\n  }\r\n  render() {\r\n    const { visible, loading } = this.state;\r\n    const { errors } = this.state;\r\n    return (\r\n      <div>\r\n        <PrimaryButton\r\n          onClick={this.showModal}\r\n          style={{\r\n            background: \"#001328\",\r\n            color: \"white\",\r\n            border: \"none\",\r\n            width: \"120px\",\r\n            marginLeft: \"-10px\"\r\n          }}\r\n        >\r\n          Add Category\r\n        </PrimaryButton>\r\n        <Modal\r\n          width='300px'\r\n          visible={visible}\r\n          closable={false}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          footer={[\r\n            <Button key='back' onClick={this.handleCancel}>\r\n              Cancel\r\n            </Button>,\r\n            <PrimaryButton\r\n              key='submit'\r\n              loading={loading}\r\n              onClick={e => this.handleSubmit(e)}\r\n              style={{ background: \"#001328\", color: \"white\", border: \"none\" }}\r\n            >\r\n              {this.state.type === \"edit\" ? \"Edit\" : \"Save\"}\r\n            </PrimaryButton>\r\n          ]}\r\n          title={\r\n            <MasterLevelFormTitle>\r\n              <p\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                {this.state.type === \"edit\"\r\n                  ? \"Edit Supplier Category\"\r\n                  : \"Add Supplier Category\"}\r\n              </p>\r\n              <Icon\r\n                type='close-circle'\r\n                onClick={this.handleCancel}\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              />\r\n            </MasterLevelFormTitle>\r\n          }\r\n        >\r\n          <MasterLevelForm>\r\n            {/* Code */}\r\n            {this.state.type === \"edit\" ? (\r\n              <div className='input_wrapper'>\r\n                <label for='supllierCategory_code' className='label'>\r\n                  Code:\r\n                </label>\r\n\r\n                <Input\r\n                  id='supllierCategory_code'\r\n                  name='supllierCategory_code'\r\n                  onChange={this.handleChange}\r\n                  value={this.state.supllierCategory_code}\r\n                  disabled\r\n                />\r\n                {/* {errors.code.length > 0 && <div style={error}>{errors.code}</div>} */}\r\n                <div style={{ height: \"12px\" }}></div>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n\r\n            {/* category*/}\r\n            <div className='input_wrapper'>\r\n              <label for='supplier_category' className='label'>\r\n                Category:\r\n              </label>\r\n\r\n              <Input\r\n                id='supplier_category'\r\n                name='supplier_category'\r\n                placeholder='Enter Supplier Category Type'\r\n                onChange={this.handleChange}\r\n                value={this.state.supplier_category}\r\n              />\r\n              {errors.category.length > 0 && (\r\n                <div style={error}>{errors.category}</div>\r\n              )}\r\n              {this.state.errormgs.message === \"category\" ? (\r\n                <div style={error}>{HandelError(this.state.errormgs)}</div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n\r\n            {/* Description */}\r\n            <div className='input_wrapper'>\r\n              <label for='supplierCategory_description' className='label'>\r\n                Description:\r\n              </label>\r\n              <TextArea\r\n                id='supplierCategory_description'\r\n                name='supplierCategory_description'\r\n                placeholder='Enter the Description'\r\n                onChange={this.handleChange}\r\n                style={{ width: \"180px\" }}\r\n                value={this.state.supplierCategory_description}\r\n              />\r\n\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n          </MasterLevelForm>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  //getting the global redux state to get the data from the EditPlantReducer.js\r\n  return {\r\n    visible: state.plantLevelReducers.EditPlantReducer.visible,\r\n    type: state.plantLevelReducers.EditPlantReducer.type,\r\n    editPlantData: state.plantLevelReducers.EditPlantReducer.editPlantData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // setting visible to false if we close the modal .. and all state data will be deleted if this function is dispatched\r\n    setSupplierCategoryVisiblity: () => {\r\n      dispatch({ type: DISABLE_EDIT_MODE });\r\n      console.log(\"edit modal closed\");\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AddSupplierCategory);\r\n","import React, { Component } from \"react\";\r\n\r\nimport Paragraph from \"antd/lib/typography/Paragraph\";\r\n\r\nimport AddSupplierCategory from \"../suppliercategory/AddSupplierCategory\";\r\nimport { FlexContainer } from \"../../../styledcomponents/container/FlexGrid\";\r\n\r\nconst style = {\r\n  fontSize: \"medium\",\r\n  fontWeight: \"600\",\r\n  alignSelf: \"auto\",\r\n  padding: \"10px\"\r\n};\r\n\r\nexport default class SupplierCategoryTitle extends Component {\r\n  getallsupplireCategory = () => {\r\n    this.props.reload();\r\n  };\r\n  render() {\r\n    return (\r\n      <FlexContainer titles leveltitles>\r\n        <Paragraph style={style}>Supplier Category</Paragraph>\r\n        <AddSupplierCategory reload={this.getallsupplireCategory} />\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\nimport { Popconfirm, Divider, Icon } from \"antd\";\r\nimport SupplierCategoryTitle from \"../titles/SupplierCategoryTitle\";\r\nimport { AntTable } from \"../../../styledcomponents/table/AntTabl\";\r\nimport { api } from \"../../../services/AxiosService\";\r\nimport { SWITCH_TO_EDIT_MODE } from \"../../../../redux/action/master/plantlevel/PlantLevel\";\r\nimport { connect } from \"react-redux\";\r\nimport Notification from \"../../../Constant/Notification\";\r\n\r\nclass ManageSupplierCategory extends Component {\r\n  state = {\r\n    searchText: \"\",\r\n    visible: false,\r\n    size: \"small\",\r\n    datalist: \"\"\r\n  };\r\n\r\n  componentWillMount() {\r\n    if (window.screen.width > 1900) {\r\n      console.log(\"hooray\");\r\n      this.setState({\r\n        size: \"large\"\r\n      });\r\n    } else if (window.screen.width < 1440) {\r\n      this.setState({\r\n        size: \"small\"\r\n      });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getallsupplireCategory();\r\n  }\r\n\r\n  getallsupplireCategory = () => {\r\n    api(\"GET\", \"supermix\", \"/supplier-categories\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data);\r\n      this.setState({\r\n        datalist: res.data.results.supplierCategory\r\n      });\r\n    });\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  handleOk = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleCancel = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleChange = (pagination, filters, sorter) => {\r\n    console.log(\"Various parameters\", pagination, filters, sorter);\r\n  };\r\n\r\n  onChange(pageNumber) {\r\n    console.log(\"Page: \", pageNumber);\r\n  }\r\n  onConfirmdelete(id) {\r\n    console.log(id);\r\n    api(\"DELETE\", \"supermix\", \"/supplier-category\", \"\", \"\", id).then(res => {\r\n      console.log(res.data);\r\n      this.getallsupplireCategory();\r\n      Notification(\"success\", res.data.message);\r\n    });\r\n    console.log(this.state.id);\r\n  }\r\n  render() {\r\n    const columns = [\r\n      // {\r\n      //   title: \"Code\",\r\n      //   dataIndex: \"id\",\r\n      //   key: \"code\",\r\n      //   width: \"4%\"\r\n      // },\r\n\r\n      {\r\n        title: \"Category Type\",\r\n        dataIndex: \"category\",\r\n        key: \"category\",\r\n        width: \"10%\"\r\n      },\r\n      {\r\n        title: \"Description\",\r\n        dataIndex: \"description\",\r\n        key: \"description\",\r\n        width: \"12%\"\r\n      },\r\n      {\r\n        title: \"Edit & Delete\",\r\n        key: \"action\",\r\n        width: \"7%\",\r\n        render: (text, record = this.state.datalist) => (\r\n          <span>\r\n            <a>\r\n              <Icon\r\n                type=\"edit\"\r\n                style={{ fontSize: \"1.2em\" }}\r\n                onClick={this.props.passEditPlantRecordtoModal.bind(\r\n                  this,\r\n                  record\r\n                )}\r\n              />\r\n            </a>\r\n            <Divider type=\"vertical\" />\r\n            <a>\r\n              <Popconfirm\r\n                title=\"Are you sure you want to Delete this Supplier Category?\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: \"red\" }} />\r\n                }\r\n                onConfirm={this.onConfirmdelete.bind(this, record.id)}\r\n              >\r\n                <a href=\"#\">\r\n                  <Icon\r\n                    type=\"delete\"\r\n                    style={{ color: \"red\", fontSize: \"1.2em\" }}\r\n                  />\r\n                </a>\r\n              </Popconfirm>\r\n            </a>\r\n          </span>\r\n        )\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <AntTable\r\n        length\r\n        title={() => (\r\n          <SupplierCategoryTitle reload={this.getallsupplireCategory} />\r\n        )}\r\n        columns={columns}\r\n        dataSource={this.state.datalist}\r\n        onChange={this.handleChange}\r\n        pagination={{ defaultPageSize: 8 }}\r\n        size={this.state.size}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // if this function dispatches modal will be shown and the data will be drawn :)\r\n    passEditPlantRecordtoModal: record => {\r\n      //this payload is the data we pass into redux which is in the row which we clicked\r\n      dispatch({ type: SWITCH_TO_EDIT_MODE, payload: record });\r\n      console.log(record);\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ManageSupplierCategory);\r\n","import React, { Component } from \"react\";\r\nimport {} from \"antd\";\r\nimport PlantsTileArea from \"./PlantsTileArea\";\r\nimport { connect } from \"react-redux\";\r\nimport { FlexContainer } from \"../../styledcomponents/container/FlexGrid\";\r\nimport ManagePlants from \"./plant/ManagePlants\";\r\nimport ManageQCStaff from \"./employee/ManageQCStaff\";\r\nimport ManageCustomer from \"./customer/ManageCustomer\";\r\nimport ManageSupplier from \"./supplier/ManageSupplier\";\r\nimport ManageUserRoles from \"./userrole/ManageUserRoles\";\r\nimport ManageSupplierCategory from \"./suppliercategory/ManageSupplierCategory\";\r\nimport { CHECK_WHETHER_DEFAULT_MASTER_LEVEL } from \"../../../redux/action/topbarnavigation/MasterLevelNavigation\";\r\n\r\nclass PlantMaster extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      status: true,\r\n      visible: this.props.visible\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.masterkeys === \"plantlevel\") {\r\n      console.log(\"out passed\");\r\n    } else {\r\n      this.props.navigationRefresh();\r\n    }\r\n  }\r\n\r\n  controlstatus = status => {\r\n    console.log(status);\r\n  };\r\n\r\n  renderComponents = () => {\r\n    if (this.props.routepath === \"/plantmaster\") {\r\n      return <ManagePlants />;\r\n    } else if (this.props.routepath === \"/userrolemaster\") {\r\n      return <ManageUserRoles />;\r\n    } else if (this.props.routepath === \"/employeemaster\") {\r\n      return <ManageQCStaff />;\r\n    } else if (this.props.routepath === \"/customermaster\") {\r\n      return <ManageCustomer />;\r\n    } else if (this.props.routepath === \"/suppliermaster\") {\r\n      return <ManageSupplier />;\r\n    } else if (this.props.routepath === \"/suppliercategorymaster\") {\r\n      return <ManageSupplierCategory />;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <FlexContainer leveltileareafixed>\r\n        <PlantsTileArea />\r\n\r\n        {this.renderComponents()}\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    routepath: state.plantLevelReducers.RoutingBetweenPlantLevel.routepath,\r\n    masterkeys: state.masterLevelNavigationReducer.masterlevelkey\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    navigationRefresh: () => {\r\n      dispatch({ type: CHECK_WHETHER_DEFAULT_MASTER_LEVEL });\r\n      console.log(\"check default master key while master clicked\");\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PlantMaster);\r\n","import React, { Component } from \"react\";\r\nimport { Icon } from \"antd\";\r\nimport BasicCard from \"../../styledcomponents/card/BasicCard\";\r\n\r\nimport {\r\n  TileArea,\r\n  TileAreaText,\r\n  TileAreaAction\r\n} from \"../../styledcomponents/card/TileArea\";\r\n\r\nexport default class MaterialTileArea extends Component {\r\n  statusChange1 = () => {\r\n    console.log(\"type\");\r\n    this.props.type(\"type\");\r\n    // this.setState({:\"supplier\"});\r\n  };\r\n  statusChange2 = () => {\r\n    this.props.type(\"nature\");\r\n    console.log(\"nature\");\r\n    // this.setState({type:\"customer\"})\r\n  };\r\n  render() {\r\n    return (\r\n      <TileArea>\r\n        <BasicCard\r\n          finalproduct\r\n          tileareacard\r\n          size='small'\r\n          hoverable={true}\r\n          onClick={this.statusChange1}\r\n        >\r\n          <TileAreaText unit>Material State</TileAreaText>\r\n          <TileAreaAction>\r\n            <Icon\r\n              filled\r\n              type='plus'\r\n              style={{ color: \"red\", fontSize: \"22px\" }}\r\n            />\r\n          </TileAreaAction>\r\n        </BasicCard>\r\n\r\n        <BasicCard\r\n          finalproduct\r\n          tileareacard\r\n          size='small'\r\n          hoverable={true}\r\n          onClick={this.statusChange2}\r\n        >\r\n          <TileAreaText>Materials</TileAreaText>\r\n          <TileAreaAction>\r\n            <Icon\r\n              filled\r\n              type='plus'\r\n              style={{ color: \"red\", fontSize: \"22px\" }}\r\n            />\r\n          </TileAreaAction>\r\n        </BasicCard>\r\n      </TileArea>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Input, Modal, Icon, Button } from \"antd\";\r\nimport Notification from \"../../../Constant/Notification\";\r\nimport HandelError from \"../../../Constant/HandleError\";\r\nimport { PrimaryButton } from \"../../../styledcomponents/button/button\";\r\nimport {\r\n  MasterLevelFormTitle,\r\n  MasterLevelForm\r\n} from \"../../../styledcomponents/form/MasterLevelForms\";\r\nimport { api } from \"../../../services/AxiosService\";\r\nimport { DISABLE_EDIT_MODE } from \"../../../../redux/action/master/plantlevel/PlantLevel\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst error = {\r\n  color: \"red\",\r\n  fontSize: \"12px\",\r\n  width: \"160px\",\r\n  height: \"0.2px\"\r\n};\r\n\r\nclass MaterialNatureAddForm extends Component {\r\n  state = {\r\n    loading: false,\r\n    visible: false,\r\n    formValid: false,\r\n    errorCount: 0,\r\n    errormsg: \"\",\r\n    type: \"add\",\r\n    errors: {\r\n      material_state: \"\"\r\n    },\r\n    code: \"\",\r\n    material_state: \"\"\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n      formValid: false,\r\n      errorCount: 0,\r\n      errormsg: \"\",\r\n      type: \"add\",\r\n      errors: {\r\n        material_state: \"\"\r\n      },\r\n      code: \"\",\r\n      material_state: \"\"\r\n    });\r\n  };\r\n\r\n  handleChange = (event, field) => {\r\n    this.setState({ [field]: event.target.value });\r\n    this.setState({ errormgs: \"\" });\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    let errors = this.state.errors;\r\n    // console.log(name + \" is \\t\" + value);\r\n    switch (name) {\r\n      case \"material_state\":\r\n        errors.material_state =\r\n          value.length === 0\r\n            ? \"Material State can't be empty\"\r\n            : value.length < 3\r\n            ? \"Material State \\n must be 3 characters long!\"\r\n            : !isNaN(value)\r\n            ? \"Material State won't allow only letters\"\r\n            : \"\";\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ errors, [name]: value });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    if (this.state.type === \"edit\") {\r\n      // we call the redux function to dispatch and delete all the global redux state to close the modal\r\n      this.props.setMaterialStateVisiblity();\r\n    }\r\n    this.setState({\r\n      visible: false,\r\n      formValid: false,\r\n      errorCount: 0,\r\n      errormsg: \"\",\r\n      type: \"add\",\r\n      errors: {\r\n        material_state: \"\"\r\n      },\r\n      code: \"\",\r\n      material_state: \"\"\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    const { code, material_state, errors } = this.state;\r\n    e.preventDefault();\r\n    if (material_state.length === 0) {\r\n      this.setState({\r\n        errors: {\r\n          material_state: \"Material State can't be empty\"\r\n        }\r\n      });\r\n    } else if (\r\n      material_state.length === 0 &&\r\n      errors.material_state.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          material_state:\r\n            errors.material_state || \"Material State can't be empty\"\r\n        }\r\n      });\r\n    } else if (errors.material_state.length === 0) {\r\n      console.log(\"form is valid\");\r\n      const data = {\r\n        materialState: material_state\r\n      };\r\n      console.log(data);\r\n      console.log(this.state.type);\r\n      if (this.state.type === \"add\") {\r\n        api(\"POST\", \"supermix\", \"/material-state\", \"\", data, \"\")\r\n          .then(\r\n            res => {\r\n              console.log(res.data);\r\n              if (res.data.status === \"VALIDATION_FAILURE\") {\r\n                console.log(\"add\");\r\n                this.responeserror(res.data.results.name.message);\r\n              } else {\r\n                Notification(\"success\", res.data.message);\r\n                this.props.reload();\r\n                this.setState({\r\n                  loading: true,\r\n                  errormgs: \"\",\r\n                  errors: {\r\n                    material_state: \"\"\r\n                  },\r\n                  code: \"\",\r\n                  material_state: \"\"\r\n                });\r\n                setTimeout(() => {\r\n                  this.setState({ loading: false, visible: false });\r\n                }, 500);\r\n              }\r\n            },\r\n            error => {\r\n              this.setState({\r\n                errormgs: error.validationFailures[0]\r\n              });\r\n              console.log(\"DEBUG34: \", error);\r\n              console.log(HandelError(error.validationFailures[0]));\r\n            }\r\n          )\r\n          .catch(error => {\r\n            this.setState({\r\n              // errormgs: \"Plant Name Exist\"\r\n            });\r\n            console.log(error);\r\n          });\r\n      } else {\r\n        const data = {\r\n          id: code,\r\n          materialState: material_state\r\n        };\r\n        console.log(this.state.type);\r\n        api(\"PUT\", \"supermix\", \"/material-state\", \"\", data, \"\")\r\n          .then(\r\n            res => {\r\n              console.log(res.data);\r\n\r\n              if (res.data.status === \"VALIDATION_FAILURE\") {\r\n                console.log(\"update\");\r\n                this.responeserror(res.data.results.name.message);\r\n              } else {\r\n                Notification(\"success\", res.data.message);\r\n                this.props.reload();\r\n                this.setState({\r\n                  loading: true,\r\n                  errormgs: \"\",\r\n                  errors: {\r\n                    material_state: \"\"\r\n                  },\r\n                  code: \"\",\r\n                  material_state: \"\"\r\n                });\r\n                setTimeout(() => {\r\n                  this.setState({ loading: false, visible: false });\r\n                }, 500);\r\n              }\r\n            },\r\n            error => {\r\n              this.setState({\r\n                errormgs: error.validationFailures[0]\r\n              });\r\n              console.log(\"DEBUG34: \", error);\r\n              console.log(HandelError(error.validationFailures[0]));\r\n            }\r\n          )\r\n          .catch(error => {\r\n            // this.setState({\r\n            //   errormgs: \"Plant Name Exist\"\r\n            // });\r\n            // console.log(error.response.data);\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({\r\n      visible: nextProps.visible,\r\n      code: nextProps.editPlantData.id,\r\n      material_state: nextProps.editPlantData.materialState,\r\n      type: nextProps.type\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { visible, loading, code, material_state, errors, type } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <PrimaryButton\r\n          onClick={this.showModal}\r\n          style={{\r\n            background: \"#001328\",\r\n            color: \"white\",\r\n            border: \"none\",\r\n            width: \"auto\",\r\n            marginLeft: \"-10px\"\r\n          }}\r\n        >\r\n          Add Material State\r\n        </PrimaryButton>\r\n        <Modal\r\n          width='330px'\r\n          visible={visible}\r\n          closable={false}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          footer={[\r\n            <Button key='back' onClick={this.handleCancel}>\r\n              Cancel\r\n            </Button>,\r\n            <PrimaryButton\r\n              key='submit'\r\n              loading={loading}\r\n              onClick={e => this.handleSubmit(e)}\r\n              style={{ background: \"#001328\", color: \"white\", border: \"none\" }}\r\n            >\r\n              {type === \"edit\" ? \"Edit\" : \"Save\"}\r\n            </PrimaryButton>\r\n          ]}\r\n          title={\r\n            <MasterLevelFormTitle>\r\n              <p\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                {type === \"edit\" ? \"Edit State\" : \"Add State\"}\r\n              </p>\r\n              <Icon\r\n                type='close-circle'\r\n                onClick={this.handleCancel}\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              />\r\n            </MasterLevelFormTitle>\r\n          }\r\n        >\r\n          <MasterLevelForm>\r\n            {/* Code */}\r\n            {this.state.type === \"edit\" ? (\r\n              <div className='input_wrapper'>\r\n                <label for='code' className='label'>\r\n                  Code:\r\n                </label>\r\n\r\n                <Input\r\n                  id='code'\r\n                  name='code'\r\n                  placeholder='Enter the Code '\r\n                  value={code}\r\n                  disabled\r\n                />\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {/* User Role */}\r\n            <div className='input_wrapper'>\r\n              <label for='material_state' className='label'>\r\n                State:\r\n              </label>\r\n\r\n              <Input\r\n                id='material_state'\r\n                name='material_state'\r\n                placeholder='Enter Material State'\r\n                value={material_state}\r\n                onChange={this.handleChange}\r\n              />\r\n              {errors.material_state.length > 0 && (\r\n                <div style={error}>{errors.material_state}</div>\r\n              )}\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n          </MasterLevelForm>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  //getting the global redux state to get the data from the EditPlantReducer.js\r\n  return {\r\n    visible: state.plantLevelReducers.EditPlantReducer.visible,\r\n    type: state.plantLevelReducers.EditPlantReducer.type,\r\n    editPlantData: state.plantLevelReducers.EditPlantReducer.editPlantData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // setting visible to false if we close the modal .. and all state data will be deleted if this function is dispatched\r\n    setMaterialStateVisiblity: () => {\r\n      dispatch({ type: DISABLE_EDIT_MODE });\r\n      console.log(\"edit modal closed\");\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MaterialNatureAddForm);\r\n","import React, { Component } from \"react\";\r\nimport { FlexContainer } from \"../../../styledcomponents/container/FlexGrid\";\r\n\r\nimport Paragraph from \"antd/lib/typography/Paragraph\";\r\nimport MaterialNatureAddForm from \"../materialnature/MaterialNatureAddForm\";\r\n\r\nconst style = {\r\n  fontSize: \"medium\",\r\n  fontWeight: \"600\",\r\n  alignSelf: \"auto\",\r\n  padding: \"10px\"\r\n};\r\n\r\nexport default class MaterialNatureTitle extends Component {\r\n  render() {\r\n    return (\r\n      <FlexContainer titles leveltitles>\r\n        <Paragraph style={style}>Material State</Paragraph>\r\n        <MaterialNatureAddForm reload={this.props.reload} />\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapStateToProps = state => {};\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     showAddEmployeeDrawer: () => {\r\n//       dispatch({ type: OPEN_ADD_NEW_EMPLOYEE_DRAWER });\r\n//       console.log(\"add new employee click dispatched\");\r\n//     }\r\n//   };\r\n// };\r\n\r\n// export default connect(\r\n//   mapStateToProps,\r\n//   mapDispatchToProps\r\n// )(EmployeeMasterTitle);\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\nimport {  Popconfirm, Divider, Icon } from \"antd\";\r\nimport NatureTitle from \"../titles/MaterialNatureTitle\";\r\nimport { AntTable } from \"../../../styledcomponents/table/AntTabl\";\r\nimport { SWITCH_TO_EDIT_MODE } from \"../../../../redux/action/master/plantlevel/PlantLevel\";\r\nimport { connect } from \"react-redux\";\r\nimport { api } from \"../../../services/AxiosService\";\r\nimport Notification from \"../../../Constant/Notification\";\r\n\r\nclass ManageNature extends Component {\r\n  state = {\r\n    visible: false,\r\n    size: \"small\",\r\n    type: \"add\",\r\n    data: []\r\n  };\r\n  componentWillMount() {\r\n    if (window.screen.width > 1900) {\r\n      console.log(\"hooray\");\r\n      this.setState({\r\n        size: \"large\"\r\n      });\r\n    } else if (window.screen.width < 1440) {\r\n      this.setState({\r\n        size: \"small\"\r\n      });\r\n    }\r\n  }\r\n\r\n  handleOk = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleCancel = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleChange = (pagination, filters, sorter) => {\r\n    console.log(\"Various parameters\", pagination, filters, sorter);\r\n    this.setState({\r\n      filteredInfo: filters,\r\n      sortedInfo: sorter\r\n    });\r\n  };\r\n\r\n  clearFilters = () => {\r\n    this.setState({ filteredInfo: null });\r\n  };\r\n\r\n  clearAll = () => {\r\n    this.setState({\r\n      filteredInfo: null,\r\n      sortedInfo: null\r\n    });\r\n  };\r\n\r\n  onChange(pageNumber) {\r\n    console.log(\"Page: \", pageNumber);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getallMaterialStates();\r\n  }\r\n\r\n  //get all\r\n  getallMaterialStates = () => {\r\n    console.log(\"api\");\r\n    api(\"GET\", \"supermix\", \"/material-states\", \"\", \"\", \"\").then(res => {\r\n      console.log(res);\r\n      this.setState({\r\n        data: res.data.results.materialState\r\n      });\r\n    });\r\n  };\r\n\r\n  //delete\r\n  onConfirmdelete(code) {\r\n    console.log(\"delete\");\r\n    console.log(code);\r\n    api(\"DELETE\", \"supermix\", \"/material-state\", \"\", \"\", code).then(res => {\r\n      console.log(res.data);\r\n      this.getallMaterialStates();\r\n      Notification(\"success\", res.data.message);\r\n    });\r\n    console.log(this.state.id);\r\n  }\r\n  render() {\r\n    const columns = [\r\n      {\r\n        width: \"3%\"\r\n      },\r\n      {\r\n        title: \"Material State\",\r\n        dataIndex: \"materialState\",\r\n        key: \"materialState\",\r\n        width: \"8%\"\r\n      },\r\n      {\r\n        title: \"Edit & Delete\",\r\n        key: \"action\",\r\n        width: \"6%\",\r\n        render: (text, record = this.state.data) => (\r\n          <span>\r\n            <a>\r\n              <Icon\r\n                type=\"edit\"\r\n                onClick={this.props.passEditMaterialStateRecordtoModal.bind(\r\n                  this,\r\n                  record\r\n                )}\r\n              />\r\n            </a>\r\n            <Divider type=\"vertical\" />\r\n            <a>\r\n              <Popconfirm\r\n                title=\"Are you sure you want to Delete this?\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: \"red\" }} />\r\n                }\r\n                onConfirm={this.onConfirmdelete.bind(this, record.id)}\r\n              >\r\n                <a href=\"#\">\r\n                  <Icon type=\"delete\" style={{ color: \"red\" }}></Icon>\r\n                </a>\r\n              </Popconfirm>\r\n            </a>\r\n          </span>\r\n        )\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <AntTable\r\n        title={() => <NatureTitle reload={this.getallMaterialStates} />}\r\n        columns={columns}\r\n        dataSource={this.state.data}\r\n        onChange={this.handleChange}\r\n        pagination={{ defaultPageSize: 8 }}\r\n        size={this.state.size}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => null;\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // if this function dispatches modal will be shown and the data will be drawn :)\r\n    passEditMaterialStateRecordtoModal: record => {\r\n      //this payload is the data we pass into redux which is in the row which we clicked\r\n      dispatch({ type: SWITCH_TO_EDIT_MODE, payload: record });\r\n      console.log(record);\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageNature);\r\n","import React, { Component } from \"react\";\r\nimport { Input, Modal, Button, Icon, Select } from \"antd\";\r\nimport Notification from \"../../../Constant/Notification\";\r\nimport HandelError from \"../../../Constant/HandleError\";\r\nimport { PrimaryButton } from \"../../../styledcomponents/button/button\";\r\nimport {\r\n  MasterLevelFormTitle,\r\n  MasterLevelForm\r\n} from \"../../../styledcomponents/form/MasterLevelForms\";\r\nimport { connect } from \"react-redux\";\r\nimport { DISABLE_EDIT_MODE } from \"../../../../redux/action/master/plantlevel/PlantLevel\";\r\nimport { api } from \"../../../services/AxiosService\";\r\n\r\nconst error = {\r\n  color: \"red\",\r\n  fontSize: \"12px\",\r\n  width: \"160px\",\r\n  height: \"0.2px\"\r\n};\r\n\r\nconst Option = Select;\r\nclass MaterialMasterAddForm extends Component {\r\n  state = {\r\n    loading: false,\r\n    visible: false,\r\n    formValid: false,\r\n    errorCount: 0,\r\n    errors: {\r\n      sub_category: \"\",\r\n      material_name: \"\",\r\n      material_nature: \"\"\r\n    },\r\n    code: \"\",\r\n    // material_category: \"\",\r\n    material_nature: \"\",\r\n    sub_category: \"\",\r\n    material_name: \"\",\r\n    errormgs: \"\",\r\n    type: \"add\",\r\n    edit_material_nature: \"\",\r\n    edit_sub_category: \"\",\r\n    subCategoryList: [],\r\n    categoryList: []\r\n  };\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n      errors: {\r\n        sub_category: \"\",\r\n        material_name: \"\",\r\n        material_nature: \"\"\r\n      },\r\n      material_category: \"\",\r\n      sub_category: \"\",\r\n      material_name: \"\",\r\n      errormgs: \"\",\r\n      edit_sub_category: \"\",\r\n      material_nature: \"\",\r\n      type: \"add\"\r\n    });\r\n  };\r\n\r\n  //validators\r\n  validateForm = errors => {\r\n    let valid;\r\n    Object.values(errors).forEach(\r\n      val => val.length > 0 && (valid = false),\r\n      (valid = true)\r\n    );\r\n    return valid;\r\n  };\r\n\r\n  countErrors = errors => {\r\n    let count = 0;\r\n    Object.values(errors).forEach(val => val.length > 0 && (count = count + 1));\r\n    return count;\r\n  };\r\n\r\n  handleChange = (event, field) => {\r\n    this.setState({ [field]: event.target.value });\r\n    this.setState({ errormgs: \"\" });\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    let errors = this.state.errors;\r\n    // console.log(name + \" is \\t\" + value);\r\n    switch (name) {\r\n      case \"material_name\":\r\n        errors.material_name =\r\n          value.length === 0\r\n            ? \"Name can't be empty\"\r\n            : value.length < 2\r\n            ? \"Name \\n must be 2 characters long!\"\r\n            : !isNaN(value)\r\n            ? \"Name won't allow only letters\"\r\n            : \"\";\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ errors, [name]: value });\r\n  };\r\n\r\n  // handling for select or dropdown\r\n  handleSelect = (name, value) => {\r\n    console.log(name);\r\n    console.log(value);\r\n\r\n    const { errors } = this.state;\r\n\r\n    if (name === \"sub_category\") {\r\n      this.setState({\r\n        sub_category: value,\r\n        edit_sub_category: value\r\n      });\r\n      if (value.length !== 0) {\r\n        this.setState({\r\n          errors: {\r\n            // material_category: errors.material_category,\r\n            sub_category: \"\",\r\n            material_name: errors.material_name,\r\n            material_nature: errors.material_nature\r\n          },\r\n          formValid: this.validateForm(errors),\r\n          errorCount: this.countErrors(errors)\r\n        });\r\n      }\r\n    }\r\n\r\n    if (name === \"material_nature\") {\r\n      this.setState({\r\n        material_nature: value\r\n      });\r\n      if (value.length !== 0) {\r\n        this.setState({\r\n          errors: {\r\n            // material_category: errors.material_category,\r\n            sub_category: errors.sub_category,\r\n            material_name: errors.material_name,\r\n            material_nature: \"\"\r\n          },\r\n          formValid: this.validateForm(errors),\r\n          errorCount: this.countErrors(errors)\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  //filling dripdown\r\n  //get all\r\n  getallMaterialCategory = () => {\r\n    console.log(\"api\");\r\n    api(\"GET\", \"supermix\", \"/material-categories\", \"\", \"\", \"\").then(res => {\r\n      console.log(res);\r\n      let categoryselect = res.data.results.materialCategories.map(\r\n        (post, index) => {\r\n          return (\r\n            <Option value={post.id} key={index}>\r\n              {post.name}\r\n            </Option>\r\n          );\r\n        }\r\n      );\r\n      this.setState({\r\n        categoryselect\r\n      });\r\n    });\r\n  };\r\n\r\n  //get all\r\n  getallMaterialSubCategory = () => {\r\n    console.log(\"api\");\r\n    api(\"GET\", \"supermix\", \"/material-sub-categories\", \"\", \"\", \"\").then(res => {\r\n      console.log(res);\r\n      let subCategorySelect = res.data.results.materialSubCategories.map(\r\n        (post, index) => {\r\n          return (\r\n            <Option value={post.id} key={index}>\r\n              {post.name}\r\n            </Option>\r\n          );\r\n        }\r\n      );\r\n      this.setState({\r\n        subCategorySelect\r\n      });\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getallMaterialSubCategory();\r\n    // this.getallMaterialCategory();\r\n  }\r\n\r\n  handleCancel = () => {\r\n    if (this.state.type === \"edit\") {\r\n      // we call the redux function to dispatch and delete all the global redux state to close the modal\r\n      this.props.setMaterialMasterVisiblity();\r\n    }\r\n    this.setState({\r\n      visible: false,\r\n      errors: {\r\n        // material_category: \"\",\r\n        sub_category: \"\",\r\n        material_name: \"\",\r\n        material_nature: \"\"\r\n      },\r\n      material_category: \"\",\r\n      sub_category: \"\",\r\n      edit_sub_category: \"\",\r\n      material_name: \"\",\r\n      errormgs: \"\",\r\n      material_nature: \"\",\r\n      type: \"\"\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const {\r\n      errors,\r\n      sub_category,\r\n      material_name,\r\n      code,\r\n      material_nature\r\n    } = this.state;\r\n    if (\r\n      // material_category.length === 0 &&\r\n      sub_category.length === 0 &&\r\n      material_name.length === 0 &&\r\n      material_nature.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          // material_category: \"Material Category can't be empty\",\r\n          sub_category: \"Sub Category can't be empty\",\r\n          material_name: \"Name can't be empty\",\r\n          material_nature: \"Material Nature can't be empty\"\r\n        },\r\n        formValid: this.validateForm(errors),\r\n        errorCount: this.countErrors(errors)\r\n      });\r\n    } else if (sub_category.length === 0 && errors.sub_category.length === 0) {\r\n      this.setState({\r\n        errors: {\r\n          // material_category: errors.material_category,\r\n          sub_category: errors.sub_category || \"Sub Category can't be empty\",\r\n          material_name: errors.material_name,\r\n          material_nature: errors.material_nature\r\n        },\r\n        formValid: this.validateForm(errors),\r\n        errorCount: this.countErrors(errors)\r\n      });\r\n    } else if (\r\n      material_name.length === 0 &&\r\n      errors.material_name.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          // material_category: errors.material_category,\r\n          sub_category: errors.sub_category,\r\n          material_name: errors.material_name || \"Name can't be empty\",\r\n          material_nature: errors.material_nature\r\n        },\r\n        formValid: this.validateForm(errors),\r\n        errorCount: this.countErrors(errors)\r\n      });\r\n    } else if (\r\n      material_nature.length === 0 &&\r\n      errors.material_nature.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          // material_category: errors.material_category,\r\n          sub_category: errors.sub_category,\r\n          material_name: errors.material_name,\r\n          material_nature:\r\n            errors.material_nature || \"Material Nature can't be empty\"\r\n        },\r\n        formValid: this.validateForm(errors),\r\n        errorCount: this.countErrors(errors)\r\n      });\r\n    } else if (\r\n      // errors.material_category.length === 0 &&\r\n      errors.sub_category.length === 0 &&\r\n      errors.material_name.length === 0\r\n    ) {\r\n      console.log(\"form is valid\");\r\n\r\n      console.log(this.state.type);\r\n      if (this.state.type === \"add\") {\r\n        const data = {\r\n          // materialCategory: material_category,\r\n          materialSubCategoryId: sub_category,\r\n          name: material_name,\r\n          nature: material_nature\r\n        };\r\n        console.log(data);\r\n        api(\"POST\", \"supermix\", \"/raw-material\", \"\", data, \"\")\r\n          .then(\r\n            res => {\r\n              console.log(res.data);\r\n              if (res.data.status === \"VALIDATION_FAILURE\") {\r\n                console.log(\"add\");\r\n                this.responeserror(res.data.results.name.message);\r\n              } else {\r\n                Notification(\"success\", res.data.message);\r\n                this.props.reload();\r\n                this.setState({\r\n                  loading: true,\r\n                  errormgs: \"\",\r\n                  errors: {\r\n                    material_category: \"\",\r\n                    sub_category: \"\",\r\n                    material_name: \"\",\r\n                    material_nature: \"\"\r\n                  },\r\n                  code: \"\",\r\n                  material_category: \"\",\r\n                  sub_category: \"\",\r\n                  material_name: \"\",\r\n                  material_nature: \"\",\r\n                  edit_sub_category: \"\",\r\n                  type: \"add\"\r\n                });\r\n                setTimeout(() => {\r\n                  this.setState({ loading: false, visible: false });\r\n                }, 500);\r\n              }\r\n            },\r\n            error => {\r\n              this.setState({\r\n                errormgs: error.validationFailures[0]\r\n              });\r\n              console.log(\"DEBUG34: \", error);\r\n              console.log(HandelError(error.validationFailures[0]));\r\n            }\r\n          )\r\n          .catch(error => {\r\n            this.setState({\r\n              // errormgs: \"Plant Name Exist\"\r\n            });\r\n            console.log(error);\r\n          });\r\n      } else {\r\n        const data = {\r\n          // materialCategory: material_category,\r\n          id: code,\r\n          materialSubCategoryId: sub_category,\r\n          name: material_name,\r\n          nature: material_nature\r\n        };\r\n        console.log(data);\r\n        api(\"PUT\", \"supermix\", \"/raw-material\", \"\", data, \"\")\r\n          .then(\r\n            res => {\r\n              console.log(res.data);\r\n\r\n              if (res.data.status === \"VALIDATION_FAILURE\") {\r\n                console.log(\"update\");\r\n                this.responeserror(res.data.results.name.message);\r\n              } else {\r\n                Notification(\"success\", res.data.message);\r\n                this.props.reload();\r\n                this.setState({\r\n                  loading: true,\r\n                  errormgs: \"\",\r\n                  errors: {\r\n                    material_category: \"\",\r\n                    sub_category: \"\",\r\n                    material_name: \"\"\r\n                  },\r\n                  code: \"\",\r\n                  material_category: \"\",\r\n                  sub_category: \"\",\r\n                  edit_sub_category: \"\",\r\n                  material_name: \"\",\r\n                  type: \"add\"\r\n                });\r\n                setTimeout(() => {\r\n                  this.setState({ loading: false, visible: false });\r\n                }, 500);\r\n              }\r\n            },\r\n            error => {\r\n              this.setState({\r\n                errormgs: error.validationFailures[0]\r\n              });\r\n              console.log(\"DEBUG34: \", error);\r\n              console.log(HandelError(error.validationFailures[0]));\r\n            }\r\n          )\r\n          .catch(error => {\r\n            // this.setState({\r\n            //   errormgs: \"Plant Name Exist\"\r\n            // });\r\n            // console.log(error.response.data);\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({\r\n      visible: nextProps.visible,\r\n      code: nextProps.editPlantData.id,\r\n      material_category: nextProps.editPlantData.materialCategory,\r\n      sub_category: nextProps.editPlantData.subCategory_Id,\r\n      material_name: nextProps.editPlantData.name,\r\n      material_nature: nextProps.editPlantData.nature,\r\n      edit_material_nature: nextProps.editPlantData.nature,\r\n      edit_sub_category: nextProps.editPlantData.subCategory,\r\n      type: nextProps.type\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      visible,\r\n      loading,\r\n      type,\r\n      errors,\r\n      code,\r\n      edit_sub_category,\r\n      material_name,\r\n      material_nature\r\n    } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <PrimaryButton\r\n          onClick={this.showModal}\r\n          style={{\r\n            background: \"#001328\",\r\n            color: \"white\",\r\n            border: \"none\",\r\n            width: \"auto\",\r\n            marginLeft: \"-10px\"\r\n          }}\r\n        >\r\n          Add Material\r\n        </PrimaryButton>\r\n        <Modal\r\n          width=\"500px\"\r\n          visible={visible}\r\n          closable={false}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          footer={[\r\n            <Button key=\"back\" onClick={this.handleCancel}>\r\n              Cancel\r\n            </Button>,\r\n            <PrimaryButton\r\n              key=\"submit\"\r\n              loading={loading}\r\n              onClick={e => this.handleSubmit(e)}\r\n              style={{ background: \"#001328\", color: \"white\", border: \"none\" }}\r\n            >\r\n              {this.state.type === \"edit\" ? \"Edit \" : \"Save \"}\r\n            </PrimaryButton>\r\n          ]}\r\n          title={\r\n            <MasterLevelFormTitle>\r\n              <p\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                {this.state.type === \"edit\" ? \"Edit Material\" : \"Add Material\"}\r\n              </p>\r\n              <Icon\r\n                type=\"close-circle\"\r\n                onClick={this.handleCancel}\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              />\r\n            </MasterLevelFormTitle>\r\n          }\r\n        >\r\n          <MasterLevelForm>\r\n            {/* Code */}\r\n            {type === \"edit\" ? (\r\n              <div className=\"input_wrapper\">\r\n                <label for=\"code\" className=\"label\">\r\n                  Code:\r\n                </label>\r\n\r\n                <Input\r\n                  id=\"code\"\r\n                  name=\"code\"\r\n                  placeholder=\"Enter the Code \"\r\n                  value={code}\r\n                  disabled\r\n                />\r\n                <div style={{ height: \"12px\" }}></div>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n\r\n            <div className=\"input_wrapper\">\r\n              <label for=\"sub_category\" className=\"label\">\r\n                Sub Category:\r\n              </label>\r\n\r\n              <Select\r\n                placeholder=\"Select Sub Category\"\r\n                id=\"sub_category\"\r\n                name=\"sub_category \"\r\n                style={{ width: 170 }}\r\n                value={edit_sub_category}\r\n                onChange={value => this.handleSelect(\"sub_category\", value)}\r\n              >\r\n                {this.state.subCategorySelect}\r\n                {/* <Option value='sc01'>Sub C 01</Option>\r\n                <Option value='sc02'>Sub C 02</Option> */}\r\n              </Select>\r\n              {errors.sub_category.length > 0 && (\r\n                <div style={error}>{errors.sub_category}</div>\r\n              )}\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n\r\n            <div className=\"input_wrapper\">\r\n              <label for=\"sub_category\" className=\"label\">\r\n                Material Nature :\r\n              </label>\r\n\r\n              <Select\r\n                placeholder=\"Select Sub Category\"\r\n                id=\"material_nature\"\r\n                name=\"material_nature\"\r\n                style={{ width: 170 }}\r\n                value={material_nature}\r\n                onChange={value => this.handleSelect(\"material_nature\", value)}\r\n              >\r\n                <Option value=\"SOLID\">SOLID</Option>\r\n                <Option value=\"LIQUID\">LIQUID</Option>\r\n                <Option value=\"GAS\">GAS</Option>\r\n              </Select>\r\n              {/* {errors.material_nature.length > 0 && (\r\n                <div style={error}>{errors.material_nature}</div>\r\n              )} */}\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n\r\n            <div className=\"input_wrapper\">\r\n              <label for=\"material_name\" className=\"label\">\r\n                Material Name:\r\n              </label>\r\n\r\n              <Input\r\n                id=\"material_name\"\r\n                name=\"material_name\"\r\n                placeholder=\"Enter Material Name\"\r\n                value={material_name}\r\n                onChange={this.handleChange}\r\n              />\r\n              {errors.material_name.length > 0 && (\r\n                <div style={error}>{errors.material_name}</div>\r\n              )}\r\n              {this.state.errormgs.message === \"name\" ? (\r\n                <div style={error}>{HandelError(this.state.errormgs)}</div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n          </MasterLevelForm>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  //getting the global redux state to get the data from the EditPlantReducer.js\r\n  return {\r\n    visible: state.plantLevelReducers.EditPlantReducer.visible,\r\n    type: state.plantLevelReducers.EditPlantReducer.type,\r\n    editPlantData: state.plantLevelReducers.EditPlantReducer.editPlantData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // setting visible to false if we close the modal .. and all state data will be deleted if this function is dispatched\r\n    setMaterialMasterVisiblity: () => {\r\n      dispatch({ type: DISABLE_EDIT_MODE });\r\n      console.log(\"edit modal closed\");\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MaterialMasterAddForm);\r\n","import React, { Component } from \"react\";\r\nimport { FlexContainer } from \"../../../styledcomponents/container/FlexGrid\";\r\n\r\nimport Paragraph from \"antd/lib/typography/Paragraph\";\r\nimport MaterialMasterAddForm from \"../materialMaster/MaterialMasterAddForm\";\r\n\r\nconst style = {\r\n  fontSize: \"medium\",\r\n  fontWeight: \"600\",\r\n  alignSelf: \"auto\",\r\n  padding: \"10px\"\r\n};\r\n\r\nexport default class MaterialMasterTitle extends Component {\r\n  render() {\r\n    return (\r\n      <FlexContainer titles leveltitles>\r\n        <Paragraph style={style}>Materials</Paragraph>\r\n        <MaterialMasterAddForm reload={this.props.reload} />\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapStateToProps = state => {};\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     showAddEmployeeDrawer: () => {\r\n//       dispatch({ type: OPEN_ADD_NEW_EMPLOYEE_DRAWER });\r\n//       console.log(\"add new employee click dispatched\");\r\n//     }\r\n//   };\r\n// };\r\n\r\n// export default connect(\r\n//   mapStateToProps,\r\n//   mapDispatchToProps\r\n// )(EmployeeMasterTitle);\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\nimport {Icon, Popconfirm, Divider } from \"antd\";\r\nimport MaterialMasterTitle from \"../titles/MaterialMasterTitle\";\r\nimport { AntTable } from \"../../../styledcomponents/table/AntTabl\";\r\nimport { SWITCH_TO_EDIT_MODE } from \"../../../../redux/action/master/plantlevel/PlantLevel\";\r\nimport { connect } from \"react-redux\";\r\nimport { api } from \"../../../services/AxiosService\";\r\nimport Notification from \"../../../Constant/Notification\";\r\n\r\n// const Search = Input.Search;\r\n\r\nclass ManageMaterial extends Component {\r\n  state = {\r\n    filteredInfo: null,\r\n    sortedInfo: null,\r\n    searchText: \"\",\r\n    visible: false,\r\n    size: \"small\",\r\n    data: \"\"\r\n  };\r\n\r\n  componentWillMount() {\r\n    if (window.screen.width > 1900) {\r\n      console.log(\"hooray\");\r\n      this.setState({\r\n        size: \"large\"\r\n      });\r\n    } else if (window.screen.width < 1440) {\r\n      this.setState({\r\n        size: \"small\"\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getallMaterial();\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  handleOk = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleCancel = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  //get all\r\n  getallMaterial = () => {\r\n    console.log(\"api\");\r\n    const datalist = [];\r\n    api(\"GET\", \"supermix\", \"/raw-materials\", \"\", \"\", \"\").then(res => {\r\n      console.log(res);\r\n      res.data.results.rawMaterial.map((post, index) => {\r\n        console.log(post);\r\n        datalist.push({\r\n          id: post.id,\r\n          name: post.name,\r\n          nature: post.nature,\r\n          materialCategory: post.materialSubCategory.materialCategoryName,\r\n          subCategory: post.materialSubCategory.name,\r\n          subCategory_Id: post.materialSubCategory.id\r\n        });\r\n        console.log(datalist);\r\n      });\r\n      this.setState({\r\n        datalist\r\n      });\r\n    });\r\n  };\r\n\r\n  //delete\r\n  onConfirmdelete(code) {\r\n    console.log(\"delete\");\r\n    console.log(code);\r\n    api(\"DELETE\", \"supermix\", \"/raw-material\", \"\", \"\", code).then(res => {\r\n      console.log(res.data);\r\n      this.getallMaterial();\r\n      Notification(\"success\", res.data.message);\r\n    });\r\n    console.log(this.state.id);\r\n  }\r\n\r\n  handleChange = (pagination, filters, sorter) => {\r\n    console.log(\"Various parameters\", pagination, filters, sorter);\r\n    this.setState({\r\n      filteredInfo: filters,\r\n      sortedInfo: sorter\r\n    });\r\n  };\r\n\r\n  clearFilters = () => {\r\n    this.setState({ filteredInfo: null });\r\n  };\r\n\r\n  clearAll = () => {\r\n    this.setState({\r\n      filteredInfo: null,\r\n      sortedInfo: null\r\n    });\r\n  };\r\n\r\n  onChange(pageNumber) {\r\n    console.log(\"Page: \", pageNumber);\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      // {\r\n      //   title: \"Code\",\r\n      //   dataIndex: \"code\",\r\n      //   key: \"code\"\r\n      //   // width: \"5%\",\r\n      // },\r\n      {\r\n        title: \"Material Name\",\r\n        dataIndex: \"name\",\r\n        key: \"materialName\"\r\n        // width: \"6%\",\r\n      },\r\n      {\r\n        title: \"Material Category\",\r\n        dataIndex: \"materialCategory\",\r\n        key: \"materialCategory\"\r\n        // width: \"7%\",\r\n      },\r\n      {\r\n        title: \"Sub Category\",\r\n        dataIndex: \"subCategory\",\r\n        key: \"subCategory\"\r\n        // width: \"7%\",\r\n      },\r\n      {\r\n        title: \"Nature\",\r\n        dataIndex: \"nature\",\r\n        key: \"subCategory\"\r\n        // width: \"7%\",\r\n      },\r\n      {\r\n        title: \"Edit & Delete\",\r\n        key: \"action\",\r\n        width: \"10%\",\r\n        render: (text, record = this.state.datalist) => (\r\n          <span>\r\n            <a>\r\n              <Icon\r\n                type='edit'\r\n                onClick={this.props.passEditMaterialRecordtoModal.bind(\r\n                  this,\r\n                  record\r\n                )}\r\n              />\r\n            </a>\r\n            <Divider type='vertical' />\r\n            <a>\r\n              <Popconfirm\r\n                title='Are you sure you want to Delete this?'\r\n                icon={\r\n                  <Icon type='question-circle-o' style={{ color: \"red\" }} />\r\n                }\r\n                onConfirm={this.onConfirmdelete.bind(this, record.id)}\r\n              >\r\n                <a href='#'>\r\n                  <Icon type='delete' style={{ color: \"red\" }}></Icon>\r\n                </a>\r\n              </Popconfirm>\r\n            </a>\r\n          </span>\r\n        )\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <AntTable\r\n        title={() => <MaterialMasterTitle reload={this.getallMaterial} />}\r\n        maxlength\r\n        columns={columns}\r\n        dataSource={this.state.datalist}\r\n        onChange={this.handleChange}\r\n        pagination={{ defaultPageSize: 8 }}\r\n        size={this.state.size}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => null;\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // if this function dispatches modal will be shown and the data will be drawn :)\r\n    passEditMaterialRecordtoModal: record => {\r\n      //this payload is the data we pass into redux which is in the row which we clicked\r\n      dispatch({ type: SWITCH_TO_EDIT_MODE, payload: record });\r\n      console.log(record);\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageMaterial);\r\n","import React, { Component } from \"react\";\r\nimport { FlexContainer } from \"../../styledcomponents/container/FlexGrid\";\r\nimport MaterialtileArea from \"./MaterialTileArea\";\r\n\r\nimport ManageNature from \"./materialnature/ManageNature\";\r\nimport ManageMaterial from \"./materialMaster/ManageMaterial\";\r\n\r\nexport default class MaterialMaster extends Component {\r\n  state = {\r\n    type: \"\"\r\n  };\r\n\r\n  typechange = type => {\r\n    console.log(type);\r\n    this.setState({ type: type });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <FlexContainer leveltileareafixed>\r\n        <MaterialtileArea type={this.typechange} />\r\n\r\n        {this.state.type === \"nature\" ? <ManageMaterial /> : <ManageNature />}\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n","export const ROUTE_TO_MAIN_CATEGORY_MASTER = \"ROUTE_TO_MAIN_CATEGORY_MASTER\";\r\nexport const ROUTE_TO_SUB_CATEGORY_MASTER = \"ROUTE_TO_SUB_CATEGORY_MASTER\";\r\nexport const ROUTE_TO_SAMPLE_CATEGORY_MASTER =\r\n  \"ROUTE_TO_SAMPLE_CATEGORY_MASTER\";\r\nexport const ROUTE_TO_MATERIAL_TYPE = \"ROUTE_TO_MATERIAL_TYPE\";\r\n","import React, { Component } from \"react\";\r\nimport { Icon } from \"antd\";\r\nimport BasicCard from \"../../styledcomponents/card/BasicCard\";\r\nimport \"./styleCategory.css\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  ROUTE_TO_MAIN_CATEGORY_MASTER,\r\n  ROUTE_TO_SUB_CATEGORY_MASTER,\r\n  ROUTE_TO_SAMPLE_CATEGORY_MASTER,\r\n  ROUTE_TO_MATERIAL_TYPE\r\n} from \"../../../redux/action/master/categorylevel/CatergoryLevel\";\r\nimport {\r\n  TileArea,\r\n  TileAreaText,\r\n  TileAreaAction\r\n} from \"../../styledcomponents/card/TileArea\";\r\n\r\nclass CategoryTitleArea extends Component {\r\n  render() {\r\n    return (\r\n      <TileArea>\r\n        <BasicCard\r\n          finalproduct\r\n          tileareacard\r\n          size=\"small\"\r\n          hoverable={true}\r\n          onClick={this.props.routeToMaterialType}\r\n        >\r\n          <TileAreaText category>Material Category</TileAreaText>\r\n          <TileAreaAction>\r\n            <Icon\r\n              filled\r\n              type=\"plus\"\r\n              style={{ color: \"red\", fontSize: \"22px\" }}\r\n            />\r\n          </TileAreaAction>\r\n        </BasicCard>\r\n        <BasicCard\r\n          finalproduct\r\n          tileareacard\r\n          size=\"small\"\r\n          hoverable={true}\r\n          onClick={this.props.routeToMainCategoryMaster}\r\n        >\r\n          <TileAreaText materialcategory unit>\r\n            Material Sub Category\r\n          </TileAreaText>\r\n          <TileAreaAction>\r\n            <Icon\r\n              filled\r\n              type=\"plus\"\r\n              style={{ color: \"red\", fontSize: \"22px\" }}\r\n            />\r\n          </TileAreaAction>\r\n        </BasicCard>\r\n      </TileArea>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapStateToProps = state => {};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    routeToMainCategoryMaster: () => {\r\n      dispatch({ type: ROUTE_TO_MAIN_CATEGORY_MASTER });\r\n      console.log(\"ROUTE_TO_MAIN_CATEGORY_MASTER click dispatched\");\r\n    },\r\n    routeToSubCategoryMaster: () => {\r\n      dispatch({ type: ROUTE_TO_SUB_CATEGORY_MASTER });\r\n      console.log(\"ROUTE_TO_SUB_CATEGORY_MASTER click dispatched\");\r\n    },\r\n    routeToSampleCategoryMaster: () => {\r\n      dispatch({ type: ROUTE_TO_SAMPLE_CATEGORY_MASTER });\r\n      console.log(\"ROUTE_TO_SAMPLE_CATEGORY_MASTER click dispatched\");\r\n    },\r\n    routeToMaterialType: () => {\r\n      dispatch({ type: ROUTE_TO_MATERIAL_TYPE });\r\n      console.log(\"ROUTE_TO_MATERIAL_TYPE click dispatched\");\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(CategoryTitleArea);\r\n","import React, { Component } from \"react\";\r\nimport { Input, Modal, Icon, Select, Button } from \"antd\";\r\n\r\nimport \"./style.css\";\r\nimport { PrimaryButton } from \"../../../styledcomponents/button/button\";\r\nimport {\r\n  MasterLevelFormTitle,\r\n  MasterLevelForm\r\n} from \"../../../styledcomponents/form/MasterLevelForms\";\r\nimport { api } from \"../../../services/AxiosService\";\r\nimport Notification from \"../../../Constant/Notification\";\r\nimport HandelError from \"../../../Constant/HandleError\";\r\nimport { connect } from \"react-redux\";\r\nimport { DISABLE_EDIT_MODE } from \"../../../../redux/action/master/plantlevel/PlantLevel\";\r\n\r\nconst Option = Select;\r\n\r\nconst error = {\r\n  color: \"red\",\r\n  fontSize: \"12px\",\r\n  width: \"160px\",\r\n  height: \"2px\"\r\n};\r\n\r\nclass AddMainCategoryForm extends Component {\r\n  state = {\r\n    loading: false,\r\n    visible: false,\r\n    formValid: false,\r\n    errorCount: null,\r\n    errors: {\r\n      sub_category: \"\",\r\n      category: \"\"\r\n    },\r\n    subcategory_code: \"\",\r\n    subcategory_name: \"\",\r\n    material_category: \"\",\r\n    errormgs: \"\",\r\n    type: \"\"\r\n  };\r\n\r\n  validateForm = errors => {\r\n    let valid;\r\n    Object.values(errors).forEach(val => val.length > 0 && (valid = false));\r\n    return valid;\r\n  };\r\n\r\n  countErrors = errors => {\r\n    let count = 0;\r\n    Object.values(errors).forEach(val => val.length > 0 && (count = count + 1));\r\n    return count;\r\n  };\r\n  getallCategory = () => {\r\n    api(\"GET\", \"supermix\", \"/material-categories\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data);\r\n\r\n      if (res.data.results.materialCategories.length > 0) {\r\n        console.log(\"kkkkkkkkkk\");\r\n        let categ = res.data.results.materialCategories.map((post, index) => {\r\n          return (\r\n            <Option value={post.id} key={index}>\r\n              {post.name}\r\n            </Option>\r\n          );\r\n        });\r\n        this.setState({\r\n          categ\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  handleChange = (event, field) => {\r\n    this.setState({ [field]: event.target.value });\r\n    this.setState({ errormgs: \"\" });\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    console.log(value);\r\n    let errors = this.state.errors;\r\n    console.log(name + \" is \\t\" + value);\r\n    switch (name) {\r\n      case \"subcategory_name\":\r\n        errors.sub_category =\r\n          value.length === 0\r\n            ? \"Category can't be empty\"\r\n            : value.length < 1\r\n            ? \"Category \\n must be 6 characters long!\"\r\n            : \"\";\r\n        break;\r\n      case \"material_category\":\r\n        errors.category =\r\n          value.length === 0\r\n            ? \"subcategory name can't be empty\"\r\n            : value.length < 6\r\n            ? \"subcategory name must be 3 characters long!\"\r\n            : \"\";\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ errors, [name]: value });\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({ loading: true });\r\n    setTimeout(() => {\r\n      this.setState({ loading: false, visible: false });\r\n    }, 3000);\r\n  };\r\n\r\n  handleCancel = () => {\r\n    if (this.state.type === \"edit\") {\r\n      this.props.setSubCategoryVisibility();\r\n    }\r\n\r\n    this.setState({\r\n      errors: {\r\n        sub_category: \"\",\r\n        category: \"\"\r\n      },\r\n      loading: false,\r\n      visible: false,\r\n      subcategory_code: \"\",\r\n      subcategory_name: \"\",\r\n      material_category: \"\",\r\n      errormgs: \"\",\r\n      type: \"\"\r\n    });\r\n  };\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({\r\n      visible: nextProps.visible,\r\n      subcategory_code: nextProps.editPlantData.id,\r\n      subcategory_name: nextProps.editPlantData.name,\r\n      material_category: nextProps.editPlantData.materialCategoryId,\r\n      material_category_edit: nextProps.editPlantData.materialCategoryName,\r\n      type: nextProps.type\r\n    });\r\n  }\r\n\r\n  handleSelect = value => {\r\n    console.log(value);\r\n    // handle select for  plant\r\n\r\n    this.setState({\r\n      material_category: value,\r\n      material_category_edit: value\r\n    });\r\n\r\n    if (value.length !== 0) {\r\n      this.setState({\r\n        errors: {\r\n          sub_category: this.state.errors.sub_category,\r\n          category: \"\"\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({\r\n        errors: {\r\n          sub_category: this.state.sub_category,\r\n          category: \"Category can't be empty\"\r\n        }\r\n      });\r\n    }\r\n  };\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    // check for whole empty fields\r\n    if (\r\n      this.state.subcategory_name.length === 0 &&\r\n      this.state.material_category.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          category: \"Category can't be empty\",\r\n          sub_category: \"subcategory name can't be empty\"\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors)\r\n      });\r\n    } else if (\r\n      this.state.subcategory_name === 0 &&\r\n      this.state.errors.sub_category.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          category: this.state.errors.category || \"Category can't be empty\",\r\n          sub_category:\r\n            this.state.errors.sub_category || \"subcategory name can't be empty\"\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors)\r\n      });\r\n    }\r\n    //description\r\n\r\n    if (this.state.type === \"edit\") {\r\n      const data = {\r\n        id: this.state.subcategory_code,\r\n        name: this.state.subcategory_name,\r\n        materialCategoryId: 1\r\n      };\r\n      api(\"PUT\", \"supermix\", \"/material-sub-category\", \"\", data, \"\").then(\r\n        res => {\r\n          console.log(res.data);\r\n\r\n          Notification(\"success\", res.data.message);\r\n          this.props.reload();\r\n          this.setState({ loading: true });\r\n          this.setState({\r\n            subcategory_code: \"\",\r\n            subcategory_name: \"\",\r\n            material_category: \"\",\r\n            material_category_edit: \"\",\r\n            errormgs: \"\"\r\n          });\r\n          setTimeout(() => {\r\n            this.setState({ loading: false, visible: false });\r\n          }, 500);\r\n        },\r\n        error => {\r\n          this.setState({\r\n            errormgs: error.validationFailures[0]\r\n          });\r\n          console.log(\"DEBUG34: \", error);\r\n          console.log(HandelError(error.validationFailures[0]));\r\n        }\r\n      );\r\n      console.log(data);\r\n    } else {\r\n      const data = {\r\n        name: this.state.subcategory_name,\r\n        materialCategoryId: this.state.material_category\r\n      };\r\n      console.log(data);\r\n      api(\"POST\", \"supermix\", \"/material-sub-category\", \"\", data, \"\").then(\r\n        res => {\r\n          console.log(res.data);\r\n\r\n          Notification(\"success\", res.data.message);\r\n          this.props.reload();\r\n          this.setState({ loading: true });\r\n          this.setState({\r\n            subcategory_code: \"\",\r\n            subcategory_name: \"\",\r\n            material_category: \"\",\r\n            material_category_edit: \"\",\r\n            errormgs: \"\"\r\n          });\r\n          setTimeout(() => {\r\n            this.setState({ loading: false, visible: false });\r\n          }, 500);\r\n        },\r\n        error => {\r\n          // this.setState({\r\n          //   errormgs: error.validationFailures[0]\r\n          // });\r\n          console.log(\"DEBUG34: \", error);\r\n          // console.log(HandelError(error.validationFailures[0]));\r\n        }\r\n      );\r\n\r\n      console.log(data);\r\n    }\r\n\r\n    // console.log(data);\r\n    console.log(\"form is valid\");\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getallCategory();\r\n    console.log(this.props.screen);\r\n  }\r\n  render() {\r\n    const { visible, loading } = this.state;\r\n    const { errors } = this.state;\r\n    return (\r\n      <div>\r\n        <PrimaryButton\r\n          onClick={this.showModal}\r\n          style={{\r\n            background: \"#001328\",\r\n            color: \"white\",\r\n            border: \"none\",\r\n            width: \"auto\",\r\n            marginLeft: \"-10px\"\r\n          }}\r\n        >\r\n          Add Material Sub Category\r\n        </PrimaryButton>\r\n        <Modal\r\n          width='350px'\r\n          visible={visible}\r\n          closable={false}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          footer={[\r\n            <Button key='back' onClick={this.handleCancel}>\r\n              Cancel\r\n            </Button>,\r\n            <PrimaryButton\r\n              key='submit'\r\n              loading={loading}\r\n              onClick={e => this.handleSubmit(e)}\r\n              style={{ background: \"#001328\", color: \"white\", border: \"none\" }}\r\n            >\r\n              Save\r\n            </PrimaryButton>\r\n          ]}\r\n          title={\r\n            <MasterLevelFormTitle>\r\n              <p\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                {this.state.type === \"edit\"\r\n                  ? \" Edit Material Sub Category\"\r\n                  : \" Add Material Sub Category\"}\r\n              </p>\r\n              <Icon\r\n                type='close-circle'\r\n                onClick={this.handleCancel}\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              />\r\n            </MasterLevelFormTitle>\r\n          }\r\n        >\r\n          <MasterLevelForm>\r\n            {/* Code */}\r\n            {/* {this.state.type === \"edit\" ? (\r\n              <div className=\"input_wrapper\">\r\n                <label for=\"code\" className=\"label\">\r\n                  Code:\r\n                </label>\r\n\r\n                <Input id=\"code\" name=\"subcategory_code\"  disabled />\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )} */}\r\n\r\n            {/* Sub Category Name */}\r\n            <div className='input_wrapper'>\r\n              <label for='subcategory_name' className='label'>\r\n                Name:\r\n              </label>\r\n\r\n              <Input\r\n                id='subcategory_name'\r\n                name='subcategory_name'\r\n                placeholder='Enter Sub Category'\r\n                value={this.state.subcategory_name}\r\n                onChange={this.handleChange}\r\n              />\r\n              {this.state.errormgs.message === \"name\" ? (\r\n                <div style={error}>{HandelError(this.state.errormgs)}</div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {errors.sub_category.length > 0 && (\r\n                <div style={error}>{errors.sub_category}</div>\r\n              )}\r\n            </div>\r\n            {/* User Role */}\r\n            <div className='input_wrapper'>\r\n              <label for='material_category' className='label'>\r\n                Material Category:\r\n              </label>\r\n\r\n              <Select\r\n                showSearch\r\n                style={{ width: 180 }}\r\n                placeholder='Select Material Category'\r\n                id='material_category'\r\n                name='material_category'\r\n                onChange={this.handleSelect}\r\n                value={this.state.material_category_edit}\r\n              >\r\n                {this.state.categ}\r\n              </Select>\r\n            </div>\r\n          </MasterLevelForm>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  //getting the global redux state to get the data from the EditPlantReducer.js\r\n  return {\r\n    visible: state.plantLevelReducers.EditPlantReducer.visible,\r\n    type: state.plantLevelReducers.EditPlantReducer.type,\r\n    editPlantData: state.plantLevelReducers.EditPlantReducer.editPlantData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setSubCategoryVisibility: () => {\r\n      dispatch({ type: DISABLE_EDIT_MODE });\r\n      console.log(\"edit modal closed\");\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AddMainCategoryForm);\r\n","import React, { Component } from \"react\";\r\nimport { FlexContainer } from \"../../../styledcomponents/container/FlexGrid\";\r\n\r\nimport Paragraph from \"antd/lib/typography/Paragraph\";\r\nimport \"./style.css\";\r\nimport AddMainCategoryForm from \"../maincategory/AddMainCategoryForm\";\r\n\r\nconst style = {\r\n  fontSize: \"medium\",\r\n  fontWeight: \"600\",\r\n  alignSelf: \"auto\",\r\n  padding: \"10px\"\r\n};\r\n\r\nexport default class ManageMainCategoryMasterTitle extends Component {\r\n  getallsubcategory = () => {\r\n    this.props.reload();\r\n  };\r\n  render() {\r\n    return (\r\n      <FlexContainer titles leveltitles>\r\n        <Paragraph style={style}>Material Sub Category </Paragraph>\r\n        <AddMainCategoryForm reload={this.getallsubcategory} />\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapStateToProps = state => {};\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     showAddEmployeeDrawer: () => {\r\n//       dispatch({ type: OPEN_ADD_NEW_EMPLOYEE_DRAWER });\r\n//       console.log(\"add new employee click dispatched\");\r\n//     }\r\n//   };\r\n// };\r\n\r\n// export default connect(\r\n//   mapStateToProps,\r\n//   mapDispatchToProps\r\n// )(EmployeeMasterTitle);\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\nimport { Popconfirm, Divider, Icon } from \"antd\";\r\nimport ManageMainCategoryMasterTitle from \"../titles/ManageMainCategoryMasterTitle\";\r\nimport { AntTable } from \"../../../styledcomponents/table/AntTabl\";\r\nimport { api } from \"../../../services/AxiosService\";\r\nimport Notification from \"../../../Constant/Notification\";\r\nimport { SWITCH_TO_EDIT_MODE } from \"../../../../redux/action/master/plantlevel/PlantLevel\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// const datalist = [];\r\nclass ManageMainCategory extends Component {\r\n  state = {\r\n    searchText: \"\",\r\n    visible: false,\r\n    size: \"small\",\r\n    datalist: \"\"\r\n  };\r\n\r\n  componentWillMount() {\r\n    if (window.screen.width > 1900) {\r\n      console.log(\"hooray\");\r\n      this.setState({\r\n        size: \"large\"\r\n      });\r\n    } else if (window.screen.width < 1440) {\r\n      this.setState({\r\n        size: \"small\"\r\n      });\r\n    }\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  handleOk = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleCancel = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.getallsubcategory();\r\n  }\r\n  handleChange = (pagination, filters, sorter) => {\r\n    console.log(\"Various parameters\", pagination, filters, sorter);\r\n  };\r\n  getallsubcategory = () => {\r\n    api(\"GET\", \"supermix\", \"/material-sub-categories\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data);\r\n\r\n      // res.data.results.Supplier.map((post, index) => {\r\n      //   console.log(post);\r\n      //   datalist.push({\r\n      //     id: post.id,\r\n      //     name: post.name,\r\n      //     companyName: post.companyName,\r\n      //     address: post.address,\r\n      //     phoneNumber: post.phoneNumber,\r\n      //     email: post.email,\r\n      //     supplierCategoryId: post.supplierCategory.id,\r\n      //     category: post.supplierCategory.category,\r\n      //     description: post.supplierCategory\r\n      //   });\r\n      //   console.log(datalist);\r\n      // });\r\n      // console.log(datalist);\r\n      this.setState({\r\n        datalist: res.data.results.materialSubCategories\r\n      });\r\n    });\r\n  };\r\n\r\n  onConfirmdelete(id) {\r\n    console.log(id);\r\n    api(\"DELETE\", \"supermix\", \"/material-sub-category\", \"\", \"\", id).then(\r\n      res => {\r\n        console.log(res.data);\r\n        this.getallsubcategory();\r\n        Notification(\"success\", res.data.message);\r\n      }\r\n    );\r\n    console.log(this.state.id);\r\n  }\r\n\r\n  onChange(pageNumber) {\r\n    console.log(\"Page: \", pageNumber);\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"Sub Category\",\r\n        dataIndex: \"name\",\r\n        key: \"subCategory\",\r\n        width: \"10%\"\r\n      },\r\n      {\r\n        title: \"Material Category\",\r\n        dataIndex: \"materialCategoryName\",\r\n        key: \"materialCategory\",\r\n        width: \"10%\"\r\n      },\r\n      {\r\n        title: \"Edit & Delete\",\r\n        key: \"action\",\r\n        width: \"7%\",\r\n        render: (text, record = this.state.datalist) => (\r\n          <span>\r\n            <a>\r\n              <Icon\r\n                type=\"edit\"\r\n                onClick={this.props.passEditSubManageCategoryToModal.bind(\r\n                  this,\r\n                  record\r\n                )}\r\n              />\r\n            </a>\r\n            <Divider type=\"vertical\" />\r\n            <a>\r\n              <Popconfirm\r\n                title=\"Are you sure you want to Delete this?\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: \"red\" }} />\r\n                }\r\n                onConfirm={this.onConfirmdelete.bind(this, record.id)}\r\n              >\r\n                <a href=\"#\">\r\n                  <Icon type=\"delete\" style={{ color: \"red\" }}></Icon>\r\n                </a>\r\n              </Popconfirm>\r\n            </a>\r\n          </span>\r\n        )\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <div>\r\n        <AntTable\r\n          title={() => (\r\n            <ManageMainCategoryMasterTitle reload={this.getallsubcategory} />\r\n          )}\r\n          columns={columns}\r\n          dataSource={this.state.datalist}\r\n          onChange={this.handleChange}\r\n          pagination={{ defaultPageSize: 8 }}\r\n          size={this.state.size}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // if this function dispatches modal will be shown and the data will be drawn :)\r\n    passEditSubManageCategoryToModal: record => {\r\n      //this payload is the data we pass into redux which is in the row which we clicked\r\n      dispatch({ type: SWITCH_TO_EDIT_MODE, payload: record });\r\n      console.log(record);\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ManageMainCategory);\r\n","import React, { Component } from \"react\";\r\nimport { Input, Modal, Icon, Button } from \"antd\";\r\n\r\nimport \"./styleType.css\";\r\nimport { PrimaryButton } from \"../../../styledcomponents/button/button\";\r\nimport {\r\n  MasterLevelFormTitle,\r\n  MasterLevelForm\r\n} from \"../../../styledcomponents/form/MasterLevelForms\";\r\nimport { api } from \"../../../services/AxiosService\";\r\nimport Notification from \"../../../Constant/Notification\";\r\nimport HandelError from \"../../../Constant/HandleError\";\r\nimport { connect } from \"react-redux\";\r\nimport { DISABLE_EDIT_MODE } from \"../../../../redux/action/master/plantlevel/PlantLevel\";\r\n\r\nconst error = {\r\n  color: \"red\",\r\n  fontSize: \"12px\",\r\n  width: \"160px\",\r\n  height: \"0.3px\"\r\n};\r\n\r\nclass AddType extends Component {\r\n  state = {\r\n    loading: false,\r\n    visible: false,\r\n    formValid: false,\r\n    errorCount: 0,\r\n    errors: {\r\n      // code: \"\",\r\n      name: \"\"\r\n    },\r\n    // input fields\r\n    category_code: \"\",\r\n    category_name: \"\",\r\n    type: \"add\",\r\n    errormgs: \"\"\r\n  };\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  validateForm = errors => {\r\n    let valid;\r\n    Object.values(errors).forEach(\r\n      val => val.length > 0 && (valid = false),\r\n      (valid = true)\r\n    );\r\n    return valid;\r\n  };\r\n\r\n  countErrors = errors => {\r\n    let count = 0;\r\n    Object.values(errors).forEach(val => val.length > 0 && (count = count + 1));\r\n    return count;\r\n  };\r\n\r\n  handleCancel = () => {\r\n    if (this.state.type === \"edit\") {\r\n      this.props.setCategoryVisibility();\r\n    }\r\n    this.setState({\r\n      visible: false,\r\n      errors: {\r\n        name: \"\"\r\n      },\r\n      // input fields\r\n      category_code: \"\",\r\n      category_name: \"\",\r\n      type: \"\",\r\n      errormgs: \"\"\r\n    });\r\n  };\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({\r\n      visible: nextProps.visible,\r\n      category_code: nextProps.editPlantData.id,\r\n      category_name: nextProps.editPlantData.name,\r\n\r\n      type: nextProps.type\r\n    });\r\n  }\r\n\r\n  handleChange = (event, field) => {\r\n    this.setState({ [field]: event.target.value });\r\n    this.setState({ errormgs: \"\" });\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    let errors = this.state.errors;\r\n    // console.log(name + \" is \\t\" + value);\r\n    switch (name) {\r\n      case \"category_name\":\r\n        errors.name =\r\n          value.length === 0\r\n            ? \"Name can't be empty\"\r\n            : value.length < 3\r\n            ? \"Name \\n must be 3 characters long!\"\r\n            : \"\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.setState({ errors, [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (\r\n      this.state.errors.name.length === 0 &&\r\n      this.state.category_name.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          name: \"Name can't be empty\"\r\n        }\r\n      });\r\n    }\r\n\r\n    if (this.state.type === \"add\") {\r\n      console.log(\"add part\");\r\n      let data = {\r\n        name: this.state.category_name\r\n      };\r\n\r\n      api(\"POST\", \"supermix\", \"/material-category\", \"\", data, \"\").then(\r\n        res => {\r\n          console.log(res.data);\r\n\r\n          Notification(\"success\", res.data.message);\r\n          this.props.reload();\r\n          this.setState({ loading: true });\r\n          this.setState({\r\n            category_name: \"\",\r\n\r\n            errormgs: \"\"\r\n          });\r\n          setTimeout(() => {\r\n            this.setState({ loading: false, visible: false });\r\n          }, 500);\r\n        },\r\n        error => {\r\n          this.setState({\r\n            errormgs: error.validationFailures[0]\r\n          });\r\n          console.log(\"DEBUG34: \", error);\r\n          console.log(HandelError(error.validationFailures[0]));\r\n        }\r\n      );\r\n    } else {\r\n      const data = {\r\n        id: this.state.category_code,\r\n        name: this.state.category_name\r\n      };\r\n      api(\"PUT\", \"supermix\", \"/material-category\", \"\", data, \"\").then(\r\n        res => {\r\n          console.log(res.data);\r\n\r\n          Notification(\"success\", res.data.message);\r\n          this.props.reload();\r\n          this.setState({ loading: true });\r\n          this.setState({\r\n            category_code: \"\",\r\n            category_name: \"\",\r\n            errormgs: \"\"\r\n          });\r\n          setTimeout(() => {\r\n            this.setState({ loading: false, visible: false });\r\n          }, 500);\r\n        },\r\n        error => {\r\n          // this.setState({\r\n          //   errormgs: error.validationFailures[0]\r\n          // });\r\n          console.log(\"DEBUG34: \", error);\r\n          console.log(HandelError(error.validationFailures[0]));\r\n        }\r\n      );\r\n    }\r\n\r\n    console.log(\"form is valid\");\r\n  };\r\n\r\n  render() {\r\n    const { visible, loading } = this.state;\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <PrimaryButton\r\n          onClick={this.showModal}\r\n          style={{\r\n            background: \"#001328\",\r\n            color: \"white\",\r\n            border: \"none\",\r\n            width: \"auto\",\r\n            marginLeft: \"-10px\"\r\n          }}\r\n        >\r\n          Add Material Category\r\n        </PrimaryButton>\r\n        <Modal\r\n          width='350px'\r\n          visible={visible}\r\n          closable={false}\r\n          onCancel={this.handleCancel}\r\n          footer={[\r\n            <Button key='back' onClick={this.handleCancel}>\r\n              Cancel\r\n            </Button>,\r\n            <PrimaryButton\r\n              key='submit'\r\n              loading={loading}\r\n              onClick={e => this.handleSubmit(e)}\r\n              style={{ background: \"#001328\", color: \"white\", border: \"none\" }}\r\n            >\r\n              {this.state.type === \"edit\" ? \"Edit\" : \"Save\"}\r\n            </PrimaryButton>\r\n          ]}\r\n          title={\r\n            <MasterLevelFormTitle>\r\n              <p\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                {this.state.type === \"edit\"\r\n                  ? \"Edit Material Category\"\r\n                  : \"Add Material Category\"}\r\n              </p>\r\n              <Icon\r\n                type='close-circle'\r\n                onClick={this.handleCancel}\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              />\r\n            </MasterLevelFormTitle>\r\n          }\r\n        >\r\n          <MasterLevelForm>\r\n            {/* Code */}\r\n            {this.state.type === \"edit\" ? (\r\n              <div className='input_wrapper'>\r\n                <label for='category_code' className='label'>\r\n                  Code:\r\n                </label>\r\n                <Input\r\n                  id='category_code'\r\n                  name='category_code'\r\n                  value={this.state.category_code}\r\n                  disabled\r\n                />\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n\r\n            {/* Category Name */}\r\n            <div className='input_wrapper'>\r\n              <label for='category_name' className='label'>\r\n                Name:\r\n              </label>\r\n\r\n              <Input\r\n                id='category_name'\r\n                name='category_name'\r\n                placeholder='Enter Category Name '\r\n                value={this.state.category_name}\r\n                onChange={this.handleChange}\r\n              />\r\n              {errors.name.length > 0 && <div style={error}>{errors.name}</div>}\r\n              {this.state.errormgs.message === \"name\" ? (\r\n                <div style={error}>{HandelError(this.state.errormgs)}</div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              <div style={{ height: \"12px\" }} />\r\n            </div>\r\n          </MasterLevelForm>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  //getting the global redux state to get the data from the EditPlantReducer.js\r\n  return {\r\n    visible: state.plantLevelReducers.EditPlantReducer.visible,\r\n    type: state.plantLevelReducers.EditPlantReducer.type,\r\n    editPlantData: state.plantLevelReducers.EditPlantReducer.editPlantData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setCategoryVisibility: () => {\r\n      dispatch({ type: DISABLE_EDIT_MODE });\r\n      console.log(\"edit modal closed\");\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddType);\r\n","import React, { Component } from \"react\";\r\nimport { FlexContainer } from \"../../../styledcomponents/container/FlexGrid\";\r\n\r\nimport Paragraph from \"antd/lib/typography/Paragraph\";\r\nimport \"./style.css\";\r\nimport AddType from \"../materialtype/AddType\";\r\n\r\nconst style = {\r\n  fontSize: \"medium\",\r\n  fontWeight: \"600\",\r\n  alignSelf: \"auto\",\r\n  padding: \"10px\"\r\n};\r\n\r\nexport default class ManageMaterialTypeTitle extends Component {\r\n  getallcategory = () => {\r\n    this.props.reload();\r\n  };\r\n  render() {\r\n    return (\r\n      <FlexContainer titles leveltitles>\r\n        <Paragraph style={style}>Material Category </Paragraph>\r\n        <AddType reload={this.getallcategory} />\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapStateToProps = state => {};\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     showAddEmployeeDrawer: () => {\r\n//       dispatch({ type: OPEN_ADD_NEW_EMPLOYEE_DRAWER });\r\n//       console.log(\"add new employee click dispatched\");\r\n//     }\r\n//   };\r\n// };\r\n\r\n// export default connect(\r\n//   mapStateToProps,\r\n//   mapDispatchToProps\r\n// )(EmployeeMasterTitle);\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\nimport { Popconfirm, Divider, Icon } from \"antd\";\r\nimport \"./styleType.css\";\r\nimport MangeMaterialTypeTitle from \"../titles/MangeMaterialTypeTitle\";\r\nimport { AntTable } from \"../../../styledcomponents/table/AntTabl\";\r\nimport Notification from \"../../../Constant/Notification\";\r\nimport { api } from \"../../../services/AxiosService\";\r\nimport { SWITCH_TO_EDIT_MODE } from \"../../../../redux/action/master/plantlevel/PlantLevel\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ManageType extends Component {\r\n  state = {\r\n    searchText: \"\",\r\n    visible: false,\r\n    size: \"small\",\r\n    datalist: \"\"\r\n  };\r\n  componentWillMount() {\r\n    if (window.screen.width > 1900) {\r\n      console.log(\"hooray\");\r\n      this.setState({\r\n        size: \"large\"\r\n      });\r\n    } else if (window.screen.width < 1440) {\r\n      this.setState({\r\n        size: \"small\"\r\n      });\r\n    }\r\n  }\r\n  handleOk = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleCancel = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleChange = (pagination, filters, sorter) => {\r\n    console.log(\"Various parameters\", pagination, filters, sorter);\r\n  };\r\n\r\n  onChange(pageNumber) {\r\n    console.log(\"Page: \", pageNumber);\r\n  }\r\n  componentDidMount() {\r\n    this.getallcategory();\r\n  }\r\n  getallcategory = () => {\r\n    api(\"GET\", \"supermix\", \"/material-categories\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data);\r\n\r\n      this.setState({\r\n        datalist: res.data.results.materialCategories\r\n      });\r\n    });\r\n  };\r\n  onConfirmdelete(id) {\r\n    console.log(\"ddddd\");\r\n    console.log(id);\r\n    console.log(\"ddddd\");\r\n    api(\"DELETE\", \"supermix\", \"/material-category\", \"\", \"\", id).then(res => {\r\n      console.log(res.data);\r\n      this.getallcategory();\r\n      Notification(\"success\", res.data.message);\r\n    });\r\n    console.log(this.state.id);\r\n  }\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"\",\r\n\r\n        key: \"categoryName\",\r\n        width: \"6%\"\r\n      },\r\n      {\r\n        title: \" Category Name\",\r\n        dataIndex: \"name\",\r\n        key: \"categoryName\",\r\n        width: \"16%\"\r\n      },\r\n      {\r\n        title: \"Edit & Delete\",\r\n        key: \"action\",\r\n        width: \"7%\",\r\n        render: (text, record = this.state.datalist) => (\r\n          <span>\r\n            <a>\r\n              <Icon\r\n                type=\"edit\"\r\n                onClick={this.props.passEditManageCategoryToModal.bind(\r\n                  this,\r\n                  record\r\n                )}\r\n              />\r\n            </a>\r\n            <Divider type=\"vertical\" />\r\n            <a>\r\n              <Popconfirm\r\n                title=\"Are you sure you want to Delete this?\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: \"red\" }} />\r\n                }\r\n                onConfirm={this.onConfirmdelete.bind(this, record.id)}\r\n              >\r\n                <a href=\"#\">\r\n                  <Icon type=\"delete\" style={{ color: \"red\" }}></Icon>\r\n                </a>\r\n              </Popconfirm>\r\n            </a>\r\n          </span>\r\n        )\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <AntTable\r\n        title={() => <MangeMaterialTypeTitle reload={this.getallcategory} />}\r\n        columns={columns}\r\n        dataSource={this.state.datalist}\r\n        onChange={this.handleChange}\r\n        pagination={{ defaultPageSize: 10 }}\r\n        size={this.state.size}\r\n      />\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // if this function dispatches modal will be shown and the data will be drawn :)\r\n    passEditManageCategoryToModal: record => {\r\n      //this payload is the data we pass into redux which is in the row which we clicked\r\n      dispatch({ type: SWITCH_TO_EDIT_MODE, payload: record });\r\n      console.log(record);\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ManageType);\r\n","import React, { Component } from \"react\";\r\nimport { FlexContainer } from \"../../styledcomponents/container/FlexGrid\";\r\nimport CategoryTitleArea from \"./CategoryTileArea\";\r\nimport { connect } from \"react-redux\";\r\nimport ManageMainCategory from \"./maincategory/ManageMainCategory\";\r\nimport ManageType from \"../categorylevel/materialtype/ManageType\";\r\n\r\nclass CategoryMaster extends Component {\r\n  renderComponents = () => {\r\n    if (this.props.routepath === \"/materialtypemaster\") {\r\n      return <ManageType />;\r\n    } else if (this.props.routepath === \"/maincatergorymaster\") {\r\n      return <ManageMainCategory />;\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <FlexContainer leveltileareafixed>\r\n        <CategoryTitleArea />\r\n        {this.renderComponents()}\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    routepath: state.categoryLevelReducers.RoutingBetweenCategoryLevel.routepath\r\n  };\r\n};\r\n\r\n// const mapDispatchToProps = dispatch => {};\r\n\r\nexport default connect(mapStateToProps, null)(CategoryMaster);\r\n","export const ROUTE_TO_POUR_MASTER = \"ROUTE_TO_POUR_MASTER\";\r\nexport const ROUTE_TO_PROJECT_MASTER = \"ROUTE_TO_PROJECT_MASTER\";\r\n","import React, { Component } from \"react\";\r\nimport { Icon } from \"antd\";\r\nimport BasicCard from \"../../styledcomponents/card/BasicCard\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  ROUTE_TO_POUR_MASTER,\r\n  ROUTE_TO_PROJECT_MASTER\r\n} from \"../../../redux/action/master/sitelevel/SiteLevel\";\r\nimport {\r\n  TileArea,\r\n  TileAreaText,\r\n  TileAreaAction\r\n} from \"../../styledcomponents/card/TileArea\";\r\n\r\nclass SiteTitleArea extends Component {\r\n  render() {\r\n    return (\r\n      <TileArea>\r\n        <BasicCard\r\n          finalproduct\r\n          tileareacard\r\n          size=\"small\"\r\n          hoverable={true}\r\n          onClick={this.props.routeToProjectMaster}\r\n        >\r\n          <TileAreaText>Project</TileAreaText>\r\n          <TileAreaAction>\r\n            <Icon\r\n              filled\r\n              type=\"plus\"\r\n              style={{ color: \"red\", fontSize: \"22px\" }}\r\n            />\r\n          </TileAreaAction>\r\n        </BasicCard>\r\n        <BasicCard\r\n          finalproduct\r\n          tileareacard\r\n          size=\"small\"\r\n          hoverable={true}\r\n          onClick={this.props.routeToPourMaster}\r\n        >\r\n          <TileAreaText>Pour</TileAreaText>\r\n          <TileAreaAction>\r\n            <Icon\r\n              filled\r\n              type=\"plus\"\r\n              style={{ color: \"red\", fontSize: \"22px\" }}\r\n            />\r\n          </TileAreaAction>\r\n        </BasicCard>\r\n      </TileArea>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    routeToPourMaster: () => {\r\n      dispatch({ type: ROUTE_TO_POUR_MASTER });\r\n      console.log(\"ROUTE_TO_POUR_MASTER click dispatched\");\r\n    },\r\n    routeToProjectMaster: () => {\r\n      dispatch({ type: ROUTE_TO_PROJECT_MASTER });\r\n      console.log(\"ROUTE_TO_PROJECT_MASTER click dispatched\");\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SiteTitleArea);\r\n","import React, { Component } from \"react\";\r\nimport { Input, Modal, Icon, Select, Button, DatePicker } from \"antd\";\r\nimport { PrimaryButton } from \"../../../styledcomponents/button/button\";\r\nimport {\r\n  MasterLevelFormTitle,\r\n  MasterLevelForm\r\n} from \"../../../styledcomponents/form/MasterLevelForms\";\r\nimport moment from \"moment\";\r\nimport { api } from \"../../../services/AxiosService\";\r\nimport { connect } from \"react-redux\";\r\nimport Notification from \"../../../Constant/Notification\";\r\nimport HandelError from \"../../../Constant/HandleError\";\r\nimport { DISABLE_EDIT_MODE } from \"../../../../redux/action/master/plantlevel/PlantLevel\";\r\n\r\nconst Option = Select;\r\n\r\nconst error = {\r\n  color: \"red\",\r\n  fontSize: \"12px\",\r\n  width: \"160px\",\r\n  height: \"0.2px\"\r\n};\r\n\r\nclass AddProjectForm extends Component {\r\n  state = {\r\n    loading: false,\r\n    visible: false,\r\n    code: \"\",\r\n    start_date: \"\",\r\n    project_name: \"\",\r\n    customer: \"\",\r\n    customer_edit: \"\",\r\n    contact_person: \"\",\r\n    contact_person_edit: \"\",\r\n    contact_no: \"\",\r\n    plant: \"\",\r\n    plant_edit: \"\",\r\n    type: \"add\",\r\n    errors: {\r\n      code: \"\",\r\n      project_name: \"\",\r\n      start_date: \"\",\r\n      customer: \"\",\r\n      contact_person: \"\",\r\n      contact_no: \"\",\r\n      plant: \"\"\r\n    },\r\n    errormgs: \"\",\r\n    errorvalmegss: \"\"\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n      code: \"\",\r\n      start_date: \"\",\r\n      project_name: \"\",\r\n      customer: \"\",\r\n      customer_edit: \"\",\r\n      contact_person: \"\",\r\n      contact_person_edit: \"\",\r\n      contact_no: \"\",\r\n      plant: \"\",\r\n      plant_edit: \"\",\r\n      type: \"add\",\r\n      errors: {\r\n        code: \"\",\r\n        project_name: \"\",\r\n        customer: \"\",\r\n        start_date: \"\",\r\n        contact_person: \"\",\r\n        contact_no: \"\",\r\n        plant: \"\"\r\n      }\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getAllplant();\r\n    this.getAllCustomers();\r\n  }\r\n\r\n  //dropdown data for plant\r\n  getAllplant() {\r\n    api(\"GET\", \"supermix\", \"/plants\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data.results.plants.length);\r\n      if (res.data.results.plants.length > 0) {\r\n        console.log(\"ggg\");\r\n        let SelectPlants = res.data.results.plants.map((post, index) => {\r\n          return (\r\n            <Option value={post.code} key={index}>\r\n              {post.name}\r\n            </Option>\r\n          );\r\n        });\r\n        this.setState({\r\n          SelectPlants\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  //dropdown data for plant\r\n  getAllCustomers() {\r\n    api(\"GET\", \"supermix\", \"/customers\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data.results);\r\n      if (res.data.results.customers.length > 0) {\r\n        console.log(\"ggg\");\r\n        let SelectCustomers = res.data.results.customers.map((post, index) => {\r\n          return (\r\n            <Option value={post.id} key={index}>\r\n              {post.name}\r\n            </Option>\r\n          );\r\n        });\r\n        this.setState({\r\n          SelectCustomers\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  handleChange = (event, field) => {\r\n    this.setState({ [field]: event.target.value });\r\n    this.setState({ errormgs: \"\" });\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    let errors = this.state.errors;\r\n    console.log(name + \" is \\n\" + value);\r\n    switch (name) {\r\n      case \"code\":\r\n        errors.code =\r\n          value.length === 0\r\n            ? \"Code can't be empty\"\r\n            : value.length < 2\r\n            ? \"Code \\n must be 2 characters long!\"\r\n            : !isNaN(value)\r\n            ? \"Code won't allow only letters\"\r\n            : \"\";\r\n        break;\r\n      case \"project_name\":\r\n        errors.project_name =\r\n          value.length === 0\r\n            ? \"Name can't be empty\"\r\n            : value.length < 3\r\n            ? \"Name \\n must be 3 characters long!\"\r\n            : !isNaN(value)\r\n            ? \"Code won't allow only letters\"\r\n            : \"\";\r\n        break;\r\n\r\n      case \"contact_no\":\r\n        errors.contact_no =\r\n          value.length === 0\r\n            ? \"contact no can't be empty\"\r\n            : value.length < 8\r\n            ? \"contact no \\n must be 8 characters long!\"\r\n            : // : isNaN(value)\r\n              // ? \"contact no won't allow only letters\"\r\n              \"\";\r\n        break;\r\n      case \"contact_person\":\r\n        errors.contact_person =\r\n          value.length === 0\r\n            ? \"contact person can't be empty\"\r\n            : value.length < 3\r\n            ? \"contact person \\n must be 3 characters long!\"\r\n            : !isNaN(value)\r\n            ? \"contact person won't allow only numbers\"\r\n            : \"\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ errors, [name]: value });\r\n  };\r\n\r\n  // handling for select or dropdown\r\n  handleSelect = (name, value) => {\r\n    const { errors } = this.state;\r\n    console.log(name);\r\n    console.log(value);\r\n\r\n    // const { errors } = this.state;\r\n    // handle select for  customer\r\n    if (name === \"customer\") {\r\n      this.setState({\r\n        customer: value,\r\n        customer_edit: value,\r\n        errors: {\r\n          code: errors.code,\r\n          project_name: errors.project_name,\r\n          start_date: errors.start_date,\r\n          customer: \"\",\r\n          contact_person: errors.contact_person,\r\n          contact_no: errors.contact_no,\r\n          plant: errors.plant\r\n        }\r\n      });\r\n    }\r\n\r\n    // handle select for  plant\r\n    if (name === \"plant\") {\r\n      this.setState({\r\n        plant: value,\r\n        plant_edit: value,\r\n        errors: {\r\n          code: errors.code,\r\n          project_name: errors.project_name,\r\n          start_date: errors.start_date,\r\n          customer: errors.customer,\r\n          contact_person: errors.contact_person,\r\n          contact_no: errors.contact_no,\r\n          plant: \"\"\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  handleDates(name, dateString, field) {\r\n    const { errors } = this.state;\r\n    console.log(name);\r\n    console.log(dateString);\r\n    console.log(field);\r\n    let convertedDate = moment(dateString).format(\"YYYY-MM-DD\");\r\n    console.log(convertedDate);\r\n    if (name === \"start_date\") {\r\n      this.setState({\r\n        start_date: dateString,\r\n        start_date_edit: dateString,\r\n        errors: {\r\n          code: errors.code,\r\n          project_name: errors.project_name,\r\n          start_date: \"\",\r\n          customer: errors.customer,\r\n          contact_person: errors.contact_person,\r\n          contact_no: errors.contact_no,\r\n          plant: errors.plant\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  handleCancel = () => {\r\n    if (this.state.type === \"edit\") {\r\n      this.props.setProjectVisibility();\r\n    }\r\n    this.setState({\r\n      loading: false,\r\n      visible: false,\r\n      code: \"\",\r\n      start_date: \"\",\r\n      project_name: \"\",\r\n      customer: \"\",\r\n      customer_edit: \"\",\r\n      contact_person: \"\",\r\n      contact_person_edit: \"\",\r\n      contact_no: \"\",\r\n      plant: \"\",\r\n      plant_edit: \"\",\r\n      type: \"add\",\r\n      errors: {\r\n        code: \"\",\r\n        project_name: \"\",\r\n        customer: \"\",\r\n        start_date: \"\",\r\n        contact_person: \"\",\r\n        contact_no: \"\",\r\n        plant: \"\"\r\n      }\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const {\r\n      code,\r\n      project_name,\r\n      start_date,\r\n      customer,\r\n      customer_edit,\r\n      contact_person,\r\n      contact_no,\r\n      plant,\r\n      plant_edit,\r\n      errors\r\n    } = this.state;\r\n\r\n    if (\r\n      code.length === 0 &&\r\n      project_name.length === 0 &&\r\n      start_date.length === 0 &&\r\n      customer.length === 0 &&\r\n      contact_person.length === 0 &&\r\n      contact_no.length === 0 &&\r\n      plant.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          code: \"code can't be empty\",\r\n          project_name: \"name can't be empty\",\r\n          customer: \"customer can't be empty\",\r\n          start_date: \"start date can't be empty\",\r\n          contact_person: \"contact person can't be empty\",\r\n          contact_no: \"contact no can't be empty\",\r\n          plant: \"plant can't be empty\"\r\n        }\r\n      });\r\n    } else if (errors.code.length === 0 && code.length === 0) {\r\n      this.setState({\r\n        errors: {\r\n          code: errors.code || \"code can't be empty\",\r\n          project_name: errors.project_name,\r\n          start_date: errors.start_date,\r\n          customer: errors.customer,\r\n          contact_person: errors.contact_person,\r\n          contact_no: errors.contact_no,\r\n          plant: errors.plant\r\n        }\r\n      });\r\n    } else if (errors.project_name.length === 0 && project_name.length === 0) {\r\n      this.setState({\r\n        errors: {\r\n          code: errors.code,\r\n          project_name: errors.project_name || \"project name can't be empty\",\r\n          start_date: errors.start_date,\r\n          customer: errors.customer,\r\n          contact_person: errors.contact_person,\r\n          contact_no: errors.contact_no,\r\n          plant: errors.plant\r\n        }\r\n      });\r\n    } else if (errors.start_date.length === 0 && start_date.length === 0) {\r\n      this.setState({\r\n        errors: {\r\n          code: errors.code,\r\n          project_name: errors.project_name,\r\n          start_date: errors.start_date || \"start date can't be empty\",\r\n          customer: errors.customer,\r\n          contact_person: errors.contact_person,\r\n          contact_no: errors.contact_no,\r\n          plant: errors.plant\r\n        }\r\n      });\r\n    } else if (errors.customer.length === 0 && customer.length === 0) {\r\n      this.setState({\r\n        errors: {\r\n          code: errors.code,\r\n          project_name: errors.project_name,\r\n          start_date: errors.start_date,\r\n          customer: errors.customer || \"customer can't be empty\",\r\n          contact_person: errors.contact_person,\r\n          contact_no: errors.contact_no,\r\n          plant: errors.plant\r\n        }\r\n      });\r\n    } else if (\r\n      errors.contact_person.length === 0 &&\r\n      contact_person.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          code: errors.code,\r\n          project_name: errors.project_name,\r\n          start_date: errors.start_date,\r\n          customer: errors.customer,\r\n          contact_person:\r\n            errors.contact_person || \"contact person can't be empty\",\r\n          contact_no: errors.contact_no,\r\n          plant: errors.plant\r\n        }\r\n      });\r\n    } else if (errors.contact_no.length === 0 && contact_no.length === 0) {\r\n      this.setState({\r\n        errors: {\r\n          code: errors.code,\r\n          project_name: errors.project_name,\r\n          start_date: errors.start_date,\r\n          customer: errors.customer,\r\n          contact_person: errors.contact_person,\r\n          contact_no: errors.contact_no || \"contact no can't be empty\",\r\n          plant: errors.plant\r\n        }\r\n      });\r\n    } else if (errors.plant.length === 0 && plant.length === 0) {\r\n      this.setState({\r\n        errors: {\r\n          code: errors.code,\r\n          project_name: errors.project_name,\r\n          start_date: errors.start_date,\r\n          customer: errors.customer,\r\n          contact_person: errors.contact_person,\r\n          contact_no: errors.contact_no,\r\n          plant: errors.plant || \"plant no can't be empty\"\r\n        }\r\n      });\r\n    } else if (\r\n      errors.code.length === 0 &&\r\n      errors.contact_no.length === 0 &&\r\n      errors.contact_person.length === 0 &&\r\n      errors.customer.length === 0 &&\r\n      errors.plant.length === 0 &&\r\n      errors.project_name.length === 0 &&\r\n      errors.start_date.length === 0\r\n    ) {\r\n      console.log(\"form is valid\");\r\n      if (this.state.type === \"edit\") {\r\n        const data = {\r\n          code: code,\r\n          name: project_name,\r\n          contactNumber: contact_no,\r\n          startDate: moment(start_date).format(\"YYYY-MM-DD\"),\r\n          customerId: customer_edit,\r\n          plantCode: plant_edit,\r\n          contactPerson: contact_person\r\n        };\r\n        console.log(data);\r\n        api(\"PUT\", \"supermix\", \"/project\", \"\", data, \"\")\r\n          .then(\r\n            res => {\r\n              console.log(res.data);\r\n\r\n              if (res.data.status === \"VALIDATION_FAILURE\") {\r\n                console.log(\"update\");\r\n                this.responeserror(res.data.results.name.message);\r\n              } else {\r\n                Notification(\"success\", res.data.message);\r\n                this.props.reload();\r\n                this.setState({\r\n                  loading: true,\r\n                  code: \"\",\r\n                  start_date: \"\",\r\n                  project_name: \"\",\r\n                  customer: \"\",\r\n                  contact_person: \"\",\r\n                  contact_no: \"\",\r\n                  plant: \"\"\r\n                });\r\n                setTimeout(() => {\r\n                  this.setState({ loading: false, visible: false });\r\n                }, 500);\r\n              }\r\n            },\r\n            error => {\r\n              this.setState({\r\n                errorvalmegss: error.validationFailures[0]\r\n              });\r\n              console.log(\"DEBUG34: \", error);\r\n              console.log(HandelError(error.validationFailures[0]));\r\n            }\r\n          )\r\n          .catch(error => {\r\n            // this.setState({\r\n            //   errormgs: \"Plant Name Exist\"\r\n            // });\r\n            console.log(error);\r\n          });\r\n      } else {\r\n        //         code: \"pr01\"\r\n        // name: \"yifuf\"\r\n        // contactNumber: \"12456494\"\r\n        // contactPerson: \"uhguhfuf\"\r\n        // startDate: \"2020-02-20\"\r\n        // customerId: 1\r\n        // plantCode: \"p01\"\r\n        // plantName: \"jaffna\"\r\n        // customerName: \"kiri\"\r\n        const data = {\r\n          code: code,\r\n          name: project_name,\r\n          contactNumber: contact_no,\r\n          startDate: moment(start_date).format(\"YYYY-MM-DD\"),\r\n          customerId: customer,\r\n          plantCode: plant,\r\n          contactPerson: contact_person\r\n        };\r\n        console.log(data);\r\n        api(\"POST\", \"supermix\", \"/project\", \"\", data, \"\").then(\r\n          res => {\r\n            console.log(res.data);\r\n            if (res.data.status === \"VALIDATION_FAILURE\") {\r\n              console.log(\"add\");\r\n              this.responeserror(res.data.results.name.message);\r\n            } else {\r\n              Notification(\"success\", res.data.message);\r\n              this.props.reload();\r\n              this.setState({\r\n                loading: true,\r\n                code: \"\",\r\n                start_date: \"\",\r\n                project_name: \"\",\r\n                customer: \"\",\r\n                contact_person: \"\",\r\n                contact_no: \"\",\r\n                plant: \"\"\r\n              });\r\n              setTimeout(() => {\r\n                this.setState({ loading: false, visible: false });\r\n              }, 500);\r\n            }\r\n          },\r\n          error => {\r\n            this.setState({\r\n              errorvalmegss: error.validationFailures[0]\r\n            });\r\n            console.log(\"DEBUG34: \", error);\r\n            console.log(HandelError(error.validationFailures[0]));\r\n          }\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  //   code: \"pr01\"\r\n  // name: \"yifuf\"\r\n  // contactNumber: \"12456494\"\r\n  // contactPerson: \"uhguhfuf\"\r\n  // startDate: \"2020-02-20\"\r\n  // customerId: 1\r\n  // plantCode: \"p01\"\r\n  // plantName: \"jaffna\"\r\n  // customerName: \"kiri\"\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    console.log(nextProps.type);\r\n    this.setState({\r\n      visible: nextProps.visible,\r\n      code: nextProps.editPlantData.code,\r\n      start_date: moment(nextProps.editPlantData.startDate, \"YYYY-MM-DD\"),\r\n      project_name: nextProps.editPlantData.name,\r\n      customer: nextProps.editPlantData.customerName,\r\n      customer_edit: nextProps.editPlantData.customerId,\r\n      contact_person: nextProps.editPlantData.contactPerson,\r\n      contact_no: nextProps.editPlantData.contactNumber,\r\n      plant: nextProps.editPlantData.plantName,\r\n      plant_edit: nextProps.editPlantData.plantCode,\r\n      type: nextProps.type\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      visible,\r\n      loading,\r\n      errors,\r\n      code,\r\n      project_name,\r\n      start_date,\r\n      customer,\r\n      contact_person,\r\n      contact_no,\r\n      plant,\r\n      type\r\n    } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <PrimaryButton\r\n          onClick={this.showModal}\r\n          style={{\r\n            background: \"#001328\",\r\n            color: \"white\",\r\n            border: \"none\",\r\n            width: \"auto\",\r\n            marginLeft: \"-10px\"\r\n          }}\r\n        >\r\n          Add Project\r\n        </PrimaryButton>\r\n        <Modal\r\n          width='800px'\r\n          visible={visible}\r\n          closable={false}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          footer={[\r\n            <Button key='back' onClick={this.handleCancel}>\r\n              Return\r\n            </Button>,\r\n            <PrimaryButton\r\n              key='submit'\r\n              loading={loading}\r\n              onClick={this.handleSubmit}\r\n              style={{ background: \"#001328\", color: \"white\", border: \"none\" }}\r\n            >\r\n              Submit\r\n            </PrimaryButton>\r\n          ]}\r\n          title={\r\n            <MasterLevelFormTitle>\r\n              <p\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                Add Project\r\n              </p>\r\n              <Icon\r\n                type='close-circle'\r\n                onClick={this.handleCancel}\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              />\r\n            </MasterLevelFormTitle>\r\n          }\r\n        >\r\n          <MasterLevelForm>\r\n            {/* Code */}\r\n            <div className='input_wrapper'>\r\n              <label for='code' className='label'>\r\n                Code:\r\n              </label>\r\n\r\n              <Input\r\n                id='code'\r\n                name='code'\r\n                placeholder='Enter the Code '\r\n                value={code}\r\n                onChange={this.handleChange}\r\n                disabled={type === \"edit\" ? true : false}\r\n              />\r\n              {errors.code.length > 0 && <div style={error}>{errors.code}</div>}\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n\r\n            <div className='input_wrapper'>\r\n              <label for='project_name' className='label'>\r\n                Project Name:\r\n              </label>\r\n\r\n              <Input\r\n                id='project_name'\r\n                name='project_name'\r\n                placeholder='Enter Project Name'\r\n                value={project_name}\r\n                onChange={this.handleChange}\r\n              />\r\n              {errors.project_name.length > 0 && (\r\n                <div style={error}>{errors.project_name}</div>\r\n              )}\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n\r\n            <div className='input_wrapper'>\r\n              <label for='start_date' className='label'>\r\n                Start Date:\r\n              </label>\r\n              <DatePicker\r\n                id='start_date'\r\n                name='start_date'\r\n                format={\"YYYY-MM-DD\"}\r\n                showToday\r\n                // disabledDate={this.disabledDate()}\r\n                value={start_date}\r\n                onChange={(dateString, field) =>\r\n                  this.handleDates(\"start_date\", dateString, field)\r\n                }\r\n                // disabledTime={() => Date.now()}\r\n              />\r\n              {errors.start_date.length > 0 && (\r\n                <div style={error}>{errors.start_date}</div>\r\n              )}\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n\r\n            <div className='input_wrapper'>\r\n              <label for='customer' className='label'>\r\n                Customer\r\n              </label>\r\n\r\n              <Select\r\n                id='customer'\r\n                placeholder='Select Customer'\r\n                name='customer '\r\n                style={{ width: \"180px\" }}\r\n                value={customer}\r\n                onChange={value => this.handleSelect(\"customer\", value)}\r\n              >\r\n                {this.state.SelectCustomers}\r\n              </Select>\r\n              {errors.customer.length > 0 && (\r\n                <div style={error}>{errors.customer}</div>\r\n              )}\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n\r\n            <div className='input_wrapper'>\r\n              <label for='contact_person ' className='label'>\r\n                Contact Person\r\n              </label>\r\n\r\n              <Input\r\n                id='contact_person'\r\n                placeholder='Select Contact Person'\r\n                name='contact_person'\r\n                style={{ width: \"180px\" }}\r\n                value={contact_person}\r\n                onChange={this.handleChange}\r\n              />\r\n              {errors.contact_person.length > 0 && (\r\n                <div style={error}>{errors.contact_person}</div>\r\n              )}\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n            <div className='input_wrapper'>\r\n              <label for='contact_no' className='label'>\r\n                Contact No\r\n              </label>\r\n\r\n              <Input\r\n                id='contact_no'\r\n                placeholder='Enter Contact No'\r\n                name='contact_no'\r\n                style={{ width: \"180px\" }}\r\n                value={contact_no}\r\n                onChange={this.handleChange}\r\n              />\r\n              {errors.contact_no.length > 0 && (\r\n                <div style={error}>{errors.contact_no}</div>\r\n              )}\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n\r\n            <div className='input_wrapper'>\r\n              <label for='plant' className='label'>\r\n                Plant\r\n              </label>\r\n\r\n              <Select\r\n                id='plant'\r\n                placeholder='Select Plant'\r\n                name='plant '\r\n                style={{ width: \"180px\" }}\r\n                value={plant}\r\n                onChange={value => this.handleSelect(\"plant\", value)}\r\n              >\r\n                {this.state.SelectPlants}\r\n              </Select>\r\n              {errors.plant.length > 0 && (\r\n                <div style={error}>{errors.plant}</div>\r\n              )}\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n          </MasterLevelForm>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  //getting the global redux state to get the data from the EditPlantReducer.js\r\n  return {\r\n    visible: state.plantLevelReducers.EditPlantReducer.visible,\r\n    type: state.plantLevelReducers.EditPlantReducer.type,\r\n    editPlantData: state.plantLevelReducers.EditPlantReducer.editPlantData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setProjectVisibility: () => {\r\n      dispatch({ type: DISABLE_EDIT_MODE });\r\n      console.log(\"edit modal closed\");\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddProjectForm);\r\n","import React, { Component } from \"react\";\r\nimport { FlexContainer } from \"../../../styledcomponents/container/FlexGrid\";\r\n\r\nimport Paragraph from \"antd/lib/typography/Paragraph\";\r\nimport AddProjectForm from \"../project/AddProjectForm\";\r\n\r\nconst style = {\r\n  fontSize: \"medium\",\r\n  fontWeight: \"600\",\r\n  alignSelf: \"auto\",\r\n  padding: \"10px\"\r\n};\r\n\r\nexport default class ManageProjectMasterTitle extends Component {\r\n  render() {\r\n    return (\r\n      <FlexContainer titles leveltitles>\r\n        <Paragraph style={style}>Project </Paragraph>\r\n        <AddProjectForm reload={this.props.reload} />\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\nimport { Popconfirm, Divider, Icon } from \"antd\";\r\nimport ManageProjectMasterTitle from \"../title/ManageProjectMasterTitle\";\r\nimport { AntTable } from \"../../../styledcomponents/table/AntTabl\";\r\nimport { api } from \"../../../services/AxiosService\";\r\nimport { SWITCH_TO_EDIT_MODE } from \"../../../../redux/action/master/plantlevel/PlantLevel\";\r\nimport { connect } from \"react-redux\";\r\nimport Notification from \"../../../Constant/Notification\";\r\n\r\nclass ManageProject extends Component {\r\n  state = {\r\n    filteredInfo: null,\r\n    sortedInfo: null,\r\n    searchText: \"\",\r\n    visible: false,\r\n    size: \"small\",\r\n    projectsList: []\r\n  };\r\n\r\n  componentWillMount() {\r\n    if (window.screen.width > 1900) {\r\n      console.log(\"hooray\");\r\n      this.setState({\r\n        size: \"large\"\r\n      });\r\n    } else if (window.screen.width < 1440) {\r\n      this.setState({\r\n        size: \"small\"\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAllProject();\r\n  }\r\n\r\n  getAllProject = () => {\r\n    api(\"GET\", \"supermix\", \"/projects\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data.results);\r\n      this.setState({\r\n        projectsList: res.data.results.projects\r\n      });\r\n    });\r\n  };\r\n\r\n  onConfirmdelete(code) {\r\n    console.log(code);\r\n\r\n    api(\"DELETE\", \"supermix\", \"/project\", \"\", \"\", code).then(res => {\r\n      console.log(res.data);\r\n      this.getAllProject();\r\n      Notification(\"success\", res.data.message);\r\n    });\r\n    console.log(this.state.code);\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  handleCancel = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleChange = (pagination, filters, sorter) => {\r\n    console.log(\"Various parameters\", pagination, filters, sorter);\r\n    this.setState({\r\n      filteredInfo: filters,\r\n      sortedInfo: sorter\r\n    });\r\n  };\r\n\r\n  clearFilters = () => {\r\n    this.setState({ filteredInfo: null });\r\n  };\r\n\r\n  clearAll = () => {\r\n    this.setState({\r\n      filteredInfo: null,\r\n      sortedInfo: null\r\n    });\r\n  };\r\n\r\n  setAgeSort = () => {\r\n    this.setState({\r\n      sortedInfo: {\r\n        order: \"descend\",\r\n        columnKey: \"code\"\r\n      }\r\n    });\r\n  };\r\n\r\n  onChange(pageNumber) {\r\n    console.log(\"Page: \", pageNumber);\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      /* \r\n  code: \"pr01\"\r\n  name: \"yifuf\"\r\n  contactNumber: \"12456494\"\r\n  contactPerson: \"uhguhfuf\"\r\n  startDate: \"2020-02-20\"\r\n  customerId: 1\r\n  plantCode: \"p01\"\r\n  plantName: \"jaffna\"\r\n  customerName: \"kiri\"\r\n  */\r\n      {\r\n        title: \"Code\",\r\n        dataIndex: \"code\",\r\n        key: \"code\"\r\n        // width: \"3%\",\r\n      },\r\n      {\r\n        title: \"Project Name\",\r\n        dataIndex: \"name\",\r\n        key: \"name\"\r\n        // width: \"6.5%\",\r\n      },\r\n\r\n      {\r\n        title: \"Start Date\",\r\n        dataIndex: \"startDate\",\r\n        key: \"startDate\"\r\n        // width: \"6%\",\r\n      },\r\n\r\n      {\r\n        title: \"Customer\",\r\n        dataIndex: \"customerName\",\r\n        key: \"customerName\"\r\n        // width: \"5%\",\r\n      },\r\n      {\r\n        title: \"Contact Person\",\r\n        dataIndex: \"contactPerson\",\r\n        key: \"contactPerson\"\r\n        // width: \"7%\",\r\n      },\r\n      {\r\n        title: \"Contact Number\",\r\n        dataIndex: \"contactNumber\",\r\n        key: \"contactNumber\"\r\n        // width: \"8%\",\r\n      },\r\n      {\r\n        title: \"Plant\",\r\n        dataIndex: \"plantName\",\r\n        key: \"plantName\"\r\n        // width: \"4%\",\r\n      },\r\n      {\r\n        title: \"Edit & Delete\",\r\n        key: \"action\",\r\n        width: \"7%\",\r\n        render: (text, record = this.state.projectsList) => (\r\n          <span>\r\n            <a>\r\n              <Icon\r\n                type=\"edit\"\r\n                onClick={this.props.passEditProjectRecordToModal.bind(\r\n                  this,\r\n                  record\r\n                )}\r\n              />\r\n            </a>\r\n            <Divider type=\"vertical\" />\r\n            <a>\r\n              <Popconfirm\r\n                title=\"Are you sure you want to Delete this?\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: \"red\" }} />\r\n                }\r\n                onConfirm={this.onConfirmdelete.bind(this, record.code)}\r\n              >\r\n                <a href=\"#\">\r\n                  <Icon type=\"delete\" style={{ color: \"red\" }}></Icon>\r\n                </a>\r\n              </Popconfirm>\r\n            </a>\r\n          </span>\r\n        )\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <AntTable\r\n        maxlength\r\n        title={() => <ManageProjectMasterTitle reload={this.getAllProject} />}\r\n        columns={columns}\r\n        dataSource={this.state.projectsList}\r\n        onChange={this.handleChange}\r\n        pagination={{ defaultPageSize: 3 }}\r\n        size={this.state.size}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => null;\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    passEditProjectRecordToModal: record => {\r\n      //this payload is the data we pass into redux which is in the row which we clicked\r\n      dispatch({ type: SWITCH_TO_EDIT_MODE, payload: record });\r\n      console.log(record);\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageProject);\r\n","import React, { Component } from \"react\";\r\nimport { Input, Modal, Icon, Button, Select } from \"antd\";\r\n\r\nimport {\r\n  MasterLevelFormTitle,\r\n  MasterLevelForm\r\n} from \"../../../styledcomponents/form/MasterLevelForms\";\r\nimport { api } from \"../../../services/AxiosService\";\r\nimport { connect } from \"react-redux\";\r\nimport Notification from \"../../../Constant/Notification\";\r\nimport HandelError from \"../../../Constant/HandleError\";\r\nimport { PrimaryButton } from \"../../../styledcomponents/button/button\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport { DISABLE_EDIT_MODE } from \"../../../../redux/action/master/plantlevel/PlantLevel\";\r\n\r\nconst Option = Select;\r\n\r\nconst error = {\r\n  color: \"red\",\r\n  fontSize: \"12px\",\r\n  width: \"160px\",\r\n  height: \"0.2px\"\r\n};\r\n\r\nclass AddPourForm extends Component {\r\n  state = {\r\n    loading: false,\r\n    visible: false,\r\n    type: \"add\",\r\n    errors: {\r\n      pour_name: \"\",\r\n      project: \"\"\r\n    },\r\n    code: \"\",\r\n    pour_name: \"\",\r\n    project: \"\",\r\n    description: \"\",\r\n    projectEdit: \"\",\r\n    project_code: \"\",\r\n    projectsList: []\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  handleChange = (event, field) => {\r\n    this.setState({ [field]: event.target.value });\r\n    this.setState({ errormgs: \"\" });\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    let errors = this.state.errors;\r\n    // console.log(name + \" is \\t\" + value);\r\n    switch (name) {\r\n      case \"pour_name\":\r\n        errors.pour_name =\r\n          value.length === 0\r\n            ? \"Pour No can't be empty\"\r\n            : value.length < 3\r\n            ? \"Pour No \\n must be 3 characters long!\"\r\n            : // : !isNaN(value)\r\n              // ? \"Pour No won't allow only letters\"\r\n              \"\";\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ errors, [name]: value });\r\n  };\r\n\r\n  // handling for select or dropdown\r\n  handleSelect = (name, value) => {\r\n    console.log(name);\r\n    console.log(value);\r\n\r\n    const { errors } = this.state;\r\n    // handle select for  plant\r\n    if (name === \"project\") {\r\n      this.setState({\r\n        project: value,\r\n        projectEdit: value\r\n      });\r\n\r\n      if (value.length !== 0) {\r\n        this.setState({\r\n          errors: {\r\n            pour_name: errors.pour_name,\r\n            project: \"\"\r\n          }\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleCancel = () => {\r\n    if (this.state.type === \"edit\") {\r\n      this.props.setPourVisibility();\r\n    }\r\n    this.setState({\r\n      visible: false,\r\n      type: \"add\",\r\n      errors: {\r\n        pour_name: \"\",\r\n        project: \"\"\r\n      },\r\n      code: \"\",\r\n      pour_name: \"\",\r\n      project: \"\",\r\n      description: \"\",\r\n      projectEdit: \"\",\r\n      project_code: \"\"\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const {\r\n      errors,\r\n      code,\r\n      pour_name,\r\n      project,\r\n      description,\r\n      project_code\r\n    } = this.state;\r\n    if (pour_name.length === 0 && project.length === 0) {\r\n      this.setState({\r\n        errors: {\r\n          pour_name: \"Pour No can't be empty\",\r\n          project: \"Project can't be empty\"\r\n        }\r\n      });\r\n    } else if (pour_name.length === 0 && errors.pour_name.length === 0) {\r\n      this.setState({\r\n        errors: {\r\n          pour_name: errors.pour_name || \"Pour No can't be empty\",\r\n          project: errors.project\r\n        }\r\n      });\r\n    } else if (project.length === 0 && errors.project.length === 0) {\r\n      this.setState({\r\n        errors: {\r\n          pour_name: errors.pour_name,\r\n          project: errors.project || \"Project can't be empty\"\r\n        }\r\n      });\r\n    } else if (errors.pour_name.length === 0 && errors.project.length === 0) {\r\n      console.log(\"form is valid\");\r\n      if (this.state.type === \"edit\") {\r\n        const data = {\r\n          id: code,\r\n          name: pour_name,\r\n          description: description,\r\n          projectCode: project_code\r\n          // projectName: project\r\n        };\r\n        console.log(data);\r\n        api(\"PUT\", \"supermix\", \"/pour\", \"\", data, \"\")\r\n          .then(\r\n            res => {\r\n              console.log(res.data);\r\n\r\n              if (res.data.status === \"VALIDATION_FAILURE\") {\r\n                console.log(\"update\");\r\n                this.responeserror(res.data.results.name.message);\r\n              } else {\r\n                Notification(\"success\", res.data.message);\r\n                this.props.reload();\r\n                this.setState({\r\n                  loading: true,\r\n                  code: \"\",\r\n                  pour_name: \"\",\r\n                  project: \"\",\r\n                  description: \"\",\r\n                  errormgs: \"\"\r\n                });\r\n                setTimeout(() => {\r\n                  this.setState({ loading: false, visible: false });\r\n                }, 500);\r\n              }\r\n            },\r\n            error => {\r\n              this.setState({\r\n                errorvalmegss: error.validationFailures[0]\r\n              });\r\n              console.log(\"DEBUG34: \", error);\r\n              console.log(HandelError(error.validationFailures[0]));\r\n            }\r\n          )\r\n          .catch(error => {\r\n            // this.setState({\r\n            //   errormgs: \"Plant Name Exist\"\r\n            // });\r\n            console.log(error);\r\n          });\r\n      } else {\r\n        const data = {\r\n          name: pour_name,\r\n          description: description,\r\n          projectCode: project\r\n        };\r\n        console.log(data);\r\n        api(\"POST\", \"supermix\", \"/pour\", \"\", data, \"\").then(\r\n          res => {\r\n            console.log(res.data);\r\n            if (res.data.status === \"VALIDATION_FAILURE\") {\r\n              console.log(\"add\");\r\n              this.responeserror(res.data.results.name.message);\r\n            } else {\r\n              Notification(\"success\", res.data.message);\r\n              this.props.reload();\r\n\r\n              this.setState({\r\n                loading: true,\r\n                code: \"\",\r\n                pour_name: \"\",\r\n                project: \"\",\r\n                description: \"\",\r\n                errormgs: \"\"\r\n              });\r\n              setTimeout(() => {\r\n                this.setState({ loading: false, visible: false });\r\n              }, 500);\r\n            }\r\n          },\r\n          error => {\r\n            this.setState({\r\n              errorvalmegss: error.validationFailures[0]\r\n            });\r\n            console.log(\"DEBUG34: \", error);\r\n            console.log(HandelError(error.validationFailures[0]));\r\n          }\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getAllProjects();\r\n  }\r\n\r\n  getAllProjects = () => {\r\n    api(\"GET\", \"supermix\", \"/projects\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data);\r\n\r\n      if (res.data.results.projects.length > 0) {\r\n        let projectsList = res.data.results.projects.map((post, index) => {\r\n          console.log(post.name);\r\n          console.log(\"kkkkkkkkkk\");\r\n          return (\r\n            <Option value={post.code} key={index}>\r\n              {post.name}\r\n            </Option>\r\n          );\r\n        });\r\n        this.setState({\r\n          projectsList\r\n        });\r\n      }\r\n    });\r\n  };\r\n  componentWillReceiveProps(nextProps) {\r\n    console.log(nextProps.type);\r\n    this.setState({\r\n      visible: nextProps.visible,\r\n      code: nextProps.editPlantData.id,\r\n      pour_name: nextProps.editPlantData.name,\r\n      project: nextProps.editPlantData.projectName,\r\n      project_code: nextProps.editPlantData.projectCode,\r\n      description: nextProps.editPlantData.description,\r\n      type: nextProps.type\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      visible,\r\n      loading,\r\n      type,\r\n      code,\r\n      pour_name,\r\n      project,\r\n      description,\r\n      errors\r\n    } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <PrimaryButton\r\n          onClick={this.showModal}\r\n          style={{\r\n            background: \"#001328\",\r\n            color: \"white\",\r\n            border: \"none\",\r\n            width: \"auto\",\r\n            marginLeft: \"-10px\"\r\n          }}\r\n        >\r\n          Add Pour\r\n        </PrimaryButton>\r\n        <Modal\r\n          visible={visible}\r\n          closable={false}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          footer={[\r\n            <Button key='back' onClick={this.handleCancel}>\r\n              Return\r\n            </Button>,\r\n            <PrimaryButton\r\n              key='submit'\r\n              loading={loading}\r\n              onClick={e => this.handleSubmit(e)}\r\n              style={{ background: \"#001328\", color: \"white\", border: \"none\" }}\r\n            >\r\n              Submit\r\n            </PrimaryButton>\r\n          ]}\r\n          title={\r\n            <MasterLevelFormTitle>\r\n              <p\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                Add Pour\r\n              </p>\r\n              <Icon\r\n                type='close-circle'\r\n                onClick={this.handleCancel}\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              />\r\n            </MasterLevelFormTitle>\r\n          }\r\n        >\r\n          <MasterLevelForm>\r\n            {/* Code */}\r\n            {type === \"edit\" ? (\r\n              <div className='input_wrapper'>\r\n                <label for='code' className='label'>\r\n                  Code:\r\n                </label>\r\n\r\n                <Input\r\n                  id='code'\r\n                  name='code'\r\n                  value={code}\r\n                  // placeholder='Enter the Code '\r\n                  disabled\r\n                />\r\n                <div style={{ height: \"8px\" }}></div>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n\r\n            <div className='input_wrapper'>\r\n              <label for='pour_name' className='label'>\r\n                Pour Name:\r\n              </label>\r\n\r\n              <Input\r\n                id='pour_name'\r\n                name='pour_name'\r\n                placeholder=' Enter Pour No'\r\n                value={pour_name}\r\n                onChange={this.handleChange}\r\n              />\r\n              {errors.pour_name.length > 0 && (\r\n                <div style={error}>{errors.pour_name}</div>\r\n              )}\r\n              <div style={{ height: \"8px\" }}></div>\r\n            </div>\r\n\r\n            <div className='input_wrapper' style={{ width: \"200px\" }}>\r\n              <label for='project' className='label'>\r\n                Project:\r\n              </label>\r\n              <Select\r\n                id='project'\r\n                name='project'\r\n                placeholder=' Select Project'\r\n                value={project}\r\n                onChange={value => this.handleSelect(\"project\", value)}\r\n              >\r\n                {this.state.projectsList}\r\n              </Select>\r\n              {errors.project.length > 0 && (\r\n                <div style={error}>{errors.project}</div>\r\n              )}\r\n              <div style={{ height: \"8px\" }}></div>\r\n            </div>\r\n            <div className='input_wrapper'>\r\n              <label for='description' className='label'>\r\n                Description:\r\n              </label>\r\n              <TextArea\r\n                id='description'\r\n                name='description'\r\n                placeholder='Enter Description'\r\n                value={description}\r\n                onChange={this.handleChange}\r\n                style={{ width: \"410px\" }}\r\n              />\r\n              <div style={{ height: \"8px\" }}></div>\r\n            </div>\r\n          </MasterLevelForm>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  //getting the global redux state to get the data from the EditPlantReducer.js\r\n  return {\r\n    visible: state.plantLevelReducers.EditPlantReducer.visible,\r\n    type: state.plantLevelReducers.EditPlantReducer.type,\r\n    editPlantData: state.plantLevelReducers.EditPlantReducer.editPlantData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setPourVisibility: () => {\r\n      dispatch({ type: DISABLE_EDIT_MODE });\r\n      console.log(\"edit modal closed\");\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPourForm);\r\n","import React, { Component } from \"react\";\r\nimport { FlexContainer } from \"../../../styledcomponents/container/FlexGrid\";\r\n\r\nimport Paragraph from \"antd/lib/typography/Paragraph\";\r\nimport AddPourForm from \"../pour/AddPourForm\";\r\n\r\nconst style = {\r\n  fontSize: \"medium\",\r\n  fontWeight: \"600\",\r\n  alignSelf: \"auto\",\r\n  padding: \"10px\"\r\n};\r\n\r\nexport default class ManagePourMasterTitle extends Component {\r\n  render() {\r\n    return (\r\n      <FlexContainer titles leveltitles>\r\n        <Paragraph style={style}>Pour </Paragraph>\r\n        <AddPourForm reload={this.props.reload} />\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\nimport { Popconfirm, Divider, Icon } from \"antd\";\r\nimport ManagePourMasterTitle from \"../title/ManagePourMasterTitle\";\r\nimport { AntTable } from \"../../../styledcomponents/table/AntTabl\";\r\nimport { connect } from \"react-redux\";\r\nimport { SWITCH_TO_EDIT_MODE } from \"../../../../redux/action/master/plantlevel/PlantLevel\";\r\nimport { api } from \"../../../services/AxiosService\";\r\nimport Notification from \"../../../Constant/Notification\";\r\n\r\nclass ManagePour extends Component {\r\n  state = {\r\n    filteredInfo: null,\r\n    sortedInfo: null,\r\n    searchText: \"\",\r\n    visible: false,\r\n    size: \"small\",\r\n    poursList: []\r\n  };\r\n\r\n  componentWillMount() {\r\n    if (window.screen.width > 1900) {\r\n      console.log(\"hooray\");\r\n      this.setState({\r\n        size: \"large\"\r\n      });\r\n    } else if (window.screen.width < 1440) {\r\n      this.setState({\r\n        size: \"small\"\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAllPour();\r\n  }\r\n\r\n  getAllPour = () => {\r\n    api(\"GET\", \"supermix\", \"/pours\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data.results);\r\n      this.setState({\r\n        poursList: res.data.results.pour\r\n      });\r\n    });\r\n  };\r\n\r\n  onConfirmdelete(id) {\r\n    console.log(id);\r\n    api(\"DELETE\", \"supermix\", \"/pour\", \"\", \"\", id).then(res => {\r\n      console.log(res.data);\r\n      this.getAllPour();\r\n      Notification(\"success\", res.data.message);\r\n    });\r\n    console.log(this.state.id);\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  handleOk = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleCancel = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleChange = (pagination, filters, sorter) => {\r\n    console.log(\"Various parameters\", pagination, filters, sorter);\r\n    this.setState({\r\n      filteredInfo: filters,\r\n      sortedInfo: sorter\r\n    });\r\n  };\r\n\r\n  clearFilters = () => {\r\n    this.setState({ filteredInfo: null });\r\n  };\r\n\r\n  clearAll = () => {\r\n    this.setState({\r\n      filteredInfo: null,\r\n      sortedInfo: null\r\n    });\r\n  };\r\n\r\n  setAgeSort = () => {\r\n    this.setState({\r\n      sortedInfo: {\r\n        order: \"descend\",\r\n        columnKey: \"code\"\r\n      }\r\n    });\r\n  };\r\n\r\n  onChange(pageNumber) {\r\n    console.log(\"Page: \", pageNumber);\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      // {\r\n      //   title: \"Code\",\r\n      //   dataIndex: \"id\",\r\n      //   key: \"id\"\r\n      // },\r\n      {\r\n        title: \"Pour Name\",\r\n        dataIndex: \"name\",\r\n        key: \"name\"\r\n      },\r\n      {\r\n        title: \"Project\",\r\n        dataIndex: \"projectName\",\r\n        key: \"projectName\"\r\n      },\r\n      {\r\n        title: \"Description\",\r\n        dataIndex: \"description\",\r\n        key: \"description\"\r\n      },\r\n\r\n      {\r\n        title: \"Edit & Delete\",\r\n        key: \"action\",\r\n        width: \"7%\",\r\n        render: (text, record = this.state.poursList) => (\r\n          <span>\r\n            <a>\r\n              <Icon\r\n                type=\"edit\"\r\n                onClick={this.props.passEditPourRecordToModal.bind(\r\n                  this,\r\n                  record\r\n                )}\r\n              />\r\n            </a>\r\n            <Divider type=\"vertical\" />\r\n            <a>\r\n              <Popconfirm\r\n                title=\"Are you sure you want to Delete this?\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: \"red\" }} />\r\n                }\r\n                onConfirm={this.onConfirmdelete.bind(this, record.id)}\r\n              >\r\n                <a href=\"#\">\r\n                  <Icon type=\"delete\" style={{ color: \"red\" }}></Icon>\r\n                </a>\r\n              </Popconfirm>\r\n            </a>\r\n          </span>\r\n        )\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <AntTable\r\n        maxlength\r\n        title={() => <ManagePourMasterTitle reload={this.getAllPour} />}\r\n        columns={columns}\r\n        dataSource={this.state.poursList}\r\n        onChange={this.handleChange}\r\n        pagination={{ defaultPageSize: 3 }}\r\n        size={this.state.size}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => null;\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    passEditPourRecordToModal: record => {\r\n      //this payload is the data we pass into redux which is in the row which we clicked\r\n      dispatch({ type: SWITCH_TO_EDIT_MODE, payload: record });\r\n      console.log(record);\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManagePour);\r\n","import React, { Component } from \"react\";\r\nimport { FlexContainer } from \"../../styledcomponents/container/FlexGrid\";\r\n\r\nimport SiteTitleArea from \"./SiteTitleArea\";\r\nimport { connect } from \"react-redux\";\r\nimport ManageProject from \"../sitelevel/project/ManageProject\";\r\nimport ManagePour from \"../sitelevel/pour/ManagePour\"\r\n\r\nclass SiteMaster extends Component {\r\n  renderComponents = () => {\r\n    if (this.props.routepath === \"/pourmaster\") {\r\n      return <ManagePour/>;\r\n    } else if (this.props.routepath === \"/projectmaster\") {\r\n      return <ManageProject />;\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <FlexContainer leveltileareafixed>\r\n        <SiteTitleArea />\r\n        {this.renderComponents()}\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    routepath: state.siteLevelReducers.RoutingBetweenSiteLevel.routepath\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SiteMaster);\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class TableGenerator extends Component {\r\n  constructor(props) {\r\n    super(props); //since we are extending class Table so we have to use super in order to override Component class constructor\r\n    this.state = {\r\n      //state is by default an object\r\n      students: [\r\n        { id: 1, name: \"Wasif\", age: 21, email: \"wasif@email.com\" },\r\n        { id: 2, name: \"Ali\", age: 19, email: \"ali@email.com\" },\r\n        { id: 3, name: \"Saad\", age: 16, email: \"saad@email.com\" },\r\n        { id: 4, name: \"Asad\", age: 25, email: \"asad@email.com\" }\r\n      ]\r\n    };\r\n  }\r\n\r\n  renderTableData() {\r\n    return this.state.students.map((student, index) => {\r\n      const { id, name, age, email } = student; //destructuring\r\n      return (\r\n        <tr key={id}>\r\n          <td>{id}</td>\r\n          <td>{name}</td>\r\n          <td>{age}</td>\r\n          <td>{email}</td>\r\n        </tr>\r\n      );\r\n    });\r\n  }\r\n\r\n  renderTableHeader() {\r\n    let header = Object.keys(this.state.students[0]);\r\n    return header.map((key, index) => {\r\n      return <th key={index}>{key.toUpperCase()}</th>;\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 id=\"title\">React Dynamic Table</h1>\r\n        <table id=\"students\">\r\n          <tbody>\r\n            <tr>{this.renderTableHeader()}</tr>\r\n            {this.renderTableData()}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Handlebars from \"handlebars\";\r\nimport Logo from \"../../../assets/new1.png\";\r\nimport SampleTable from \"../../Constant/TableGenerator\";\r\n\r\nconst body = [\r\n  { id: 1, name: \"Wasif\", age: 21, email: \"wasif@email.com\" },\r\n  { id: 2, name: \"Ali\", age: 19, email: \"ali@email.com\" },\r\n  { id: 3, name: \"Saad\", age: 16, email: \"saad@email.com\" },\r\n  { id: 4, name: \"Asad\", age: 25, email: \"asad@email.com\" }\r\n];\r\n\r\nconst hbr = `\r\n<table border=\"1\" width=100%>\r\n    {{#  parameter}}\r\n    <tr>\r\n    <td width=30% style=\"height:80px\">\r\n       {{paraname}}\r\n       </td>\r\n       {{# each value}}\r\n       {{#each this}}\r\n       <td>\r\n       {{ this }}\r\n       </td>\r\n       {{/each}}\r\n       {{/each}}\r\n\r\n       </tr>\r\n    {{/parameter}}\r\n    </table>\r\n`;\r\n\r\nconst hbr1 = `\r\n<table border=\"1\" width=100%>\r\n</table>\r\n\r\n`;\r\n\r\nconst template = Handlebars.compile(hbr);\r\n\r\nexport function Report() {\r\n  const data = {\r\n    name:\r\n      \"DETERMINATION OF CLAY, SILT AND DUST IN FINE AGGREGATE - MANUFACTURED SAND (0-5 mm)\",\r\n    hometown: \"Somewhere, TX\",\r\n    parameter: [\r\n      { paraname: \"Weight\", value: [[1], [4], [9], [9]] },\r\n      { paraname: \"Size\", value: [[5], [8], [12], [9]] },\r\n      { paraname: \"Size\", value: [[5], [8], [12], [9]] },\r\n      { paraname: \"Size\", value: [[5], [8], [12], [9]] }\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        border: \"thin solid black\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        flexWrap: \"wrap\",\r\n        background: \"#DAF6F8\",\r\n        padding: \"2rem\",\r\n        margin: \"4rem\",\r\n        justifyContent: \"space-around\",\r\n        width: \"720px\"\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          flexWrap: \"wrap\",\r\n          border: \"thin solid black\",\r\n          padding: \"1rem\",\r\n          justifyContent: \"space-between\",\r\n          height: \"150px\",\r\n          width: \"650px\"\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            marginRight: \"-20px\"\r\n          }}\r\n        >\r\n          <img\r\n            src={Logo}\r\n            style={{\r\n              height: \"120px\",\r\n              width: \"130px\"\r\n            }}\r\n          />\r\n        </div>\r\n        <div style={{ marginRight: \"10px\" }}>\r\n          <h4 style={{ fontWeight: \"bold\" }}>\r\n            TOKYO SUPERMIX Ready Mixed Concrete Plant.\r\n          </h4>\r\n\r\n          <h5>77B, New Nuge Road, Pliyagoda</h5>\r\n\r\n          <h5 style={{}}>Tel. 0112-945865, Fax. 0112-945866</h5>\r\n\r\n          <div\r\n            style={{\r\n              background: \"#cbcaa5\",\r\n              width: \"420px\",\r\n              height: \"50px\",\r\n\r\n              color: \"black\",\r\n              fontWeight: \"bold\"\r\n            }}\r\n          >\r\n            {data.name}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <SampleTable\r\n        sambodydata={body}\r\n        // sampleheaderdata={header}\r\n      />\r\n      <div\r\n        dangerouslySetInnerHTML={{ __html: template(data) }}\r\n        style={{\r\n          background: \"white\",\r\n          width: \"650px\"\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Report } from \"./Report\";\r\n\r\nexport default class TestMaster extends Component {\r\n  render() {\r\n    return (\r\n      <div\r\n      // style={{\r\n      //   height: \"600px\"\r\n      // }}\r\n      >\r\n        {Report()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Icon } from \"antd\";\r\nimport BasicCard from \"../../styledcomponents/card/BasicCard\";\r\nimport \"./styleEquipment.css\";\r\nimport {\r\n  TileArea,\r\n  TileAreaText,\r\n  TileAreaAction\r\n} from \"../../styledcomponents/card/TileArea\";\r\n\r\nexport default class EquipmentTitleArea extends Component {\r\n  statusChange1 = () => {\r\n    console.log(\"equipment\");\r\n    this.props.type(\"equipment\");\r\n  };\r\n  statusChange2 = () => {\r\n    this.props.type(\"calibration\");\r\n    console.log(\"calibration\");\r\n  };\r\n  statusChange3 = () => {\r\n    this.props.type(\"equipmentplant\");\r\n    console.log(\"equipmentplant\");\r\n  };\r\n  render() {\r\n    return (\r\n      <TileArea>\r\n        <BasicCard\r\n          finalproduct\r\n          tileareacard\r\n          size='small'\r\n          hoverable={true}\r\n          onClick={this.statusChange1}\r\n        >\r\n          <TileAreaText testreport>Equipment</TileAreaText>\r\n          <TileAreaAction>\r\n            <Icon\r\n              filled\r\n              type='plus'\r\n              style={{ color: \"red\", fontSize: \"22px\" }}\r\n            />\r\n          </TileAreaAction>\r\n        </BasicCard>\r\n        <BasicCard\r\n          finalproduct\r\n          tileareacard\r\n          size='small'\r\n          hoverable={true}\r\n          onClick={this.statusChange3}\r\n        >\r\n          <TileAreaText testreport>Plant Equipment</TileAreaText>\r\n          <TileAreaAction>\r\n            <Icon\r\n              filled\r\n              type='plus'\r\n              style={{ color: \"red\", fontSize: \"22px\" }}\r\n            />\r\n          </TileAreaAction>\r\n        </BasicCard>\r\n        <BasicCard\r\n          finalproduct\r\n          tileareacard\r\n          size='small'\r\n          hoverable={true}\r\n          onClick={this.statusChange2}\r\n        >\r\n          <TileAreaText testreport unit>\r\n            Plant Equipment Calibration\r\n          </TileAreaText>\r\n          <TileAreaAction>\r\n            <Icon\r\n              filled\r\n              type='plus'\r\n              style={{ color: \"red\", fontSize: \"22px\" }}\r\n            />\r\n          </TileAreaAction>\r\n        </BasicCard>\r\n      </TileArea>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Input, Modal, Icon, Button } from \"antd\";\r\n\r\nimport \"./styleequipmentmaster.css\";\r\nimport { PrimaryButton } from \"../../../styledcomponents/button/button\";\r\nimport {\r\n  MasterLevelFormTitle,\r\n  MasterLevelForm\r\n} from \"../../../styledcomponents/form/MasterLevelForms\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport { api } from \"../../../services/AxiosService\";\r\nimport Notification from \"../../../Constant/Notification\";\r\nimport HandelError from \"../../../Constant/HandleError\";\r\nimport { connect } from \"react-redux\";\r\nimport { DISABLE_EDIT_MODE } from \"../../../../redux/action/master/plantlevel/PlantLevel\";\r\n\r\nconst error = {\r\n  color: \"red\",\r\n  fontSize: \"12px\",\r\n  width: \"160px\",\r\n  height: \"0.2px\"\r\n};\r\n\r\nclass AddEquipment extends Component {\r\n  state = {\r\n    loading: false,\r\n    visible: false,\r\n    formValid: false,\r\n    errorCount: 0,\r\n    errormgs: \"\",\r\n    errors: {\r\n      name: \"\"\r\n      // description: \"\"\r\n    },\r\n    equipment_code: \"\",\r\n    equipment_name: \"\",\r\n    equipment_description: \"\",\r\n    type: \"\"\r\n  };\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n      errors: {\r\n        name: \"\"\r\n      },\r\n      equipment_name: \"\"\r\n    });\r\n  };\r\n\r\n  // validate when submit\r\n  validateForm = errors => {\r\n    let valid;\r\n    Object.values(errors).forEach(\r\n      val => val.length > 0 && (valid = false),\r\n      (valid = true)\r\n    );\r\n    return valid;\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({\r\n      visible: nextProps.visible,\r\n      equipment_code: nextProps.editPlantData.id,\r\n      equipment_name: nextProps.editPlantData.name,\r\n      equipment_description: nextProps.editPlantData.description,\r\n      type: nextProps.type\r\n    });\r\n  }\r\n\r\n  countErrors = errors => {\r\n    let count = 0;\r\n    Object.values(errors).forEach(val => val.length > 0 && (count = count + 1));\r\n    return count;\r\n  };\r\n\r\n  handleCancel = () => {\r\n    if (this.state.type === \"edit\") {\r\n      this.props.setEquipmentVisibility();\r\n    }\r\n    this.setState({\r\n      visible: false,\r\n      errors: {\r\n        name: \"\"\r\n      },\r\n      equipment_name: \"\",\r\n      equipment_description: \"\",\r\n      equipment_code: \"\",\r\n      errormgs: \"\",\r\n      type: \"\"\r\n    });\r\n  };\r\n\r\n  handleChange = (event, field) => {\r\n    this.setState({ [field]: event.target.value });\r\n    this.setState({ errormgs: \"\" });\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    let errors = this.state.errors;\r\n    // console.log(name + \" is \\t\" + value);\r\n    switch (name) {\r\n      case \"equipment_name\":\r\n        errors.name =\r\n          value.length === 0\r\n            ? \"Name can't be empty\"\r\n            : value.length < 3\r\n            ? \"Name \\n must be 3 characters long!\"\r\n            : \"\";\r\n        break;\r\n      case \"equipment_description\":\r\n        errors.description =\r\n          value.length === 0\r\n            ? \"Description can't be empty\"\r\n            : value.length < 3\r\n            ? \"Description must be 3 characters long!\"\r\n            : \"\";\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ errors, [name]: value });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.state.equipment_name.length === 0) {\r\n      this.setState({\r\n        errors: {\r\n          name: \"Name can't be empty\"\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors)\r\n      });\r\n    } else if (\r\n      this.state.equipment_name.length === 0 &&\r\n      this.state.errors.name.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          name: this.state.errors.name || \"Name can't be empty\"\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors)\r\n      });\r\n    } else if (this.state.errors.name.length === 0) {\r\n      console.log(\"form is valid\");\r\n      // const data = {\r\n      //   equipment_name: this.state.equipment_name,\r\n      //   equipment_description: this.state.equipment_description\r\n      // };\r\n      // console.log(data);\r\n\r\n      // this.setState({\r\n      //   loading: true,\r\n      //   errors: {\r\n      //     name: \"\"\r\n      //   },\r\n      //   equipment_name: \"\",\r\n      //   equipment_description: \"\"\r\n      // });\r\n      setTimeout(() => {\r\n        this.setState({ loading: false, visible: false });\r\n      }, 1500);\r\n    }\r\n\r\n    if (this.state.type === \"edit\") {\r\n      console.log(\"edit part\");\r\n      const data = {\r\n        id: this.state.equipment_code,\r\n        name: this.state.equipment_name,\r\n        description: this.state.equipment_description\r\n      };\r\n\r\n      api(\"PUT\", \"supermix\", \"/equipment\", \"\", data, \"\").then(\r\n        res => {\r\n          console.log(res.data);\r\n\r\n          Notification(\"success\", res.data.message);\r\n          this.props.reload();\r\n          this.setState({ loading: true });\r\n          this.setState({\r\n            category_code: \"\",\r\n            category_name: \"\",\r\n            errormgs: \"\"\r\n          });\r\n          setTimeout(() => {\r\n            this.setState({ loading: false, visible: false });\r\n          }, 500);\r\n        },\r\n        error => {\r\n          this.setState({\r\n            errormgs: error.validationFailures[0]\r\n          });\r\n          console.log(\"DEBUG34: \", error);\r\n          console.log(HandelError(error.validationFailures[0]));\r\n        }\r\n      );\r\n    } else {\r\n      let data = {\r\n        name: this.state.equipment_name,\r\n        description: this.state.equipment_description\r\n      };\r\n      api(\"POST\", \"supermix\", \"/equipment\", \"\", data, \"\").then(\r\n        res => {\r\n          console.log(res.data);\r\n\r\n          Notification(\"success\", res.data.message);\r\n          this.props.reload();\r\n          this.setState({ loading: true });\r\n          this.setState({\r\n            equipment_name: \"\",\r\n            equipment_description: \"\",\r\n            errormgs: \"\"\r\n          });\r\n          setTimeout(() => {\r\n            this.setState({ loading: false, visible: false });\r\n          }, 500);\r\n        },\r\n        error => {\r\n          this.setState({\r\n            errormgs: error.validationFailures[0]\r\n          });\r\n          console.log(\"DEBUG34: \", error);\r\n          console.log(HandelError(error.validationFailures[0]));\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { visible, loading, errors } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <PrimaryButton\r\n          onClick={this.showModal}\r\n          style={{\r\n            background: \"#001328\",\r\n            color: \"white\",\r\n            border: \"none\",\r\n            width: \"auto\",\r\n            marginLeft: \"-10px\"\r\n          }}\r\n        >\r\n          Add Equipment\r\n        </PrimaryButton>\r\n        <Modal\r\n          width='480px'\r\n          visible={visible}\r\n          closable={false}\r\n          onCancel={this.handleCancel}\r\n          footer={[\r\n            <Button key='back' onClick={this.handleCancel}>\r\n              Cancel\r\n            </Button>,\r\n            <PrimaryButton\r\n              key='submit'\r\n              loading={loading}\r\n              onClick={e => this.handleSubmit(e)}\r\n              style={{ background: \"#001328\", color: \"white\", border: \"none\" }}\r\n            >\r\n              Save\r\n            </PrimaryButton>\r\n          ]}\r\n          title={\r\n            <MasterLevelFormTitle>\r\n              <p\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                {this.state.type === \"edit\"\r\n                  ? \" Edit Equipments\"\r\n                  : \" Add Equipments\"}\r\n              </p>\r\n              <Icon\r\n                type='close-circle'\r\n                onClick={this.handleCancel}\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              />\r\n            </MasterLevelFormTitle>\r\n          }\r\n        >\r\n          <MasterLevelForm>\r\n            {/* <Icon type=\"close-circle\" onClick={this.handleCancel} style={{marginLeft:'300px',marginTop:'-65px',color:'white'}}/> */}\r\n\r\n            {/* Code */}\r\n            {this.state.type === \"edit\" ? (\r\n              <div className='input_wrapper'>\r\n                <label for='code' className='label'>\r\n                  Code:\r\n                </label>\r\n                <Input\r\n                  id='code'\r\n                  name='code'\r\n                  // placeholder='Enter the Code '\r\n                  value={this.state.equipment_code}\r\n                  disabled\r\n                />\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n\r\n            {/* User Role */}\r\n            <div className='input_wrapper'>\r\n              <label for='equipment_name' className='label'>\r\n                Equipment Name:\r\n              </label>\r\n\r\n              <Input\r\n                id='equipment_name'\r\n                name='equipment_name'\r\n                placeholder='Enter Equipment Name'\r\n                value={this.state.equipment_name}\r\n                onChange={this.handleChange}\r\n              />\r\n              {errors.name.length > 0 && <div style={error}>{errors.name}</div>}\r\n              {this.state.errormgs.message === \"name\" ? (\r\n                <div style={error}>{HandelError(this.state.errormgs)}</div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              <div style={{ height: \"12.5px\" }}></div>\r\n            </div>\r\n\r\n            <div className='input_wrapper'>\r\n              <label for='equipment_description' className='label'>\r\n                Description:\r\n              </label>\r\n              <TextArea\r\n                id='equipment_description'\r\n                name='equipment_description'\r\n                placeholder='Enter Description '\r\n                style={{ width: \"180px\" }}\r\n                value={this.state.equipment_description}\r\n                onChange={this.handleChange}\r\n              />\r\n              {/* {errors.description.length > 0 && (\r\n                <div style={error}>{errors.description}</div>\r\n              )} */}\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n          </MasterLevelForm>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  //getting the global redux state to get the data from the EditPlantReducer.js\r\n  return {\r\n    visible: state.plantLevelReducers.EditPlantReducer.visible,\r\n    type: state.plantLevelReducers.EditPlantReducer.type,\r\n    editPlantData: state.plantLevelReducers.EditPlantReducer.editPlantData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setEquipmentVisibility: () => {\r\n      dispatch({ type: DISABLE_EDIT_MODE });\r\n      console.log(\"edit modal closed\");\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddEquipment);\r\n","import React, { Component } from \"react\";\r\nimport { FlexContainer } from \"../../../styledcomponents/container/FlexGrid\";\r\n\r\nimport Paragraph from \"antd/lib/typography/Paragraph\";\r\nimport AddEquipment from \"../equipment/AddEquipment\";\r\n\r\nconst style = {\r\n  fontSize: \"medium\",\r\n  fontWeight: \"600\",\r\n  alignSelf: \"auto\",\r\n  padding: \"10px\"\r\n};\r\n\r\nexport default class EquipmentTitle extends Component {\r\n  getallequpiment = () => {\r\n    this.props.reload();\r\n  };\r\n  render() {\r\n    return (\r\n      <FlexContainer titles leveltitles>\r\n        <Paragraph style={style}>Equipment </Paragraph>\r\n        <AddEquipment reload={this.getallequpiment} />\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapStateToProps = state => {};\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     showAddEmployeeDrawer: () => {\r\n//       dispatch({ type: OPEN_ADD_NEW_EMPLOYEE_DRAWER });\r\n//       console.log(\"add new employee click dispatched\");\r\n//     }\r\n//   };\r\n// };\r\n\r\n// export default connect(\r\n//   mapStateToProps,\r\n//   mapDispatchToProps\r\n// )(EmployeeMasterTitle);\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\nimport { Popconfirm, Divider, Icon } from \"antd\";\r\nimport \"./styleequipmentmaster.css\";\r\nimport { AntTable } from \"../../../styledcomponents/table/AntTabl\";\r\nimport EquipmentTitle from \"../title/EquipmentTitle\";\r\nimport Notification from \"../../../Constant/Notification\";\r\nimport { api } from \"../../../services/AxiosService\";\r\nimport { SWITCH_TO_EDIT_MODE } from \"../../../../redux/action/master/plantlevel/PlantLevel\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ManageNature extends Component {\r\n  state = {\r\n    filteredInfo: null,\r\n    sortedInfo: null,\r\n    searchText: \"\",\r\n    visible: false,\r\n    size: \"small\",\r\n    type: \"add\",\r\n    datalist: \"\"\r\n  };\r\n\r\n  componentWillMount() {\r\n    if (window.screen.width > 1900) {\r\n      console.log(\"hooray\");\r\n      this.setState({\r\n        size: \"large\"\r\n      });\r\n    } else if (window.screen.width < 1440) {\r\n      this.setState({\r\n        size: \"small\"\r\n      });\r\n    }\r\n  }\r\n\r\n  handleOk = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.getallequpiment();\r\n  }\r\n  getallequpiment = () => {\r\n    api(\"GET\", \"supermix\", \"/equipments\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data);\r\n\r\n      this.setState({\r\n        datalist: res.data.results.equipments\r\n      });\r\n    });\r\n  };\r\n\r\n  handleCancel = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleChange = (pagination, filters, sorter) => {\r\n    console.log(\"Various parameters\", pagination, filters, sorter);\r\n    this.setState({\r\n      filteredInfo: filters,\r\n      sortedInfo: sorter\r\n    });\r\n  };\r\n\r\n  onChange(pageNumber) {\r\n    console.log(\"Page: \", pageNumber);\r\n  }\r\n  onConfirmdelete(id) {\r\n    console.log(\"ddddd\");\r\n    console.log(id);\r\n    console.log(\"ddddd\");\r\n    api(\"DELETE\", \"supermix\", \"/equipment\", \"\", \"\", id).then(res => {\r\n      console.log(res.data);\r\n      this.getallequpiment();\r\n      Notification(\"success\", res.data.message);\r\n    });\r\n    console.log(this.state.id);\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"Equipment Name\",\r\n        dataIndex: \"name\",\r\n        key: \"equipment_name\",\r\n        width: \"10%\"\r\n      },\r\n\r\n      {\r\n        title: \" Description\",\r\n        dataIndex: \"description\",\r\n        key: \"description\",\r\n        width: \"10%\"\r\n      },\r\n\r\n      {\r\n        title: \"Edit & Delete\",\r\n        key: \"action\",\r\n        width: \"7%\",\r\n        render: (text, record = this.state.datalist) => (\r\n          <span>\r\n            <a>\r\n              <Icon\r\n                type=\"edit\"\r\n                onClick={this.props.passEditManageCategoryToModal.bind(\r\n                  this,\r\n                  record\r\n                )}\r\n              />\r\n            </a>\r\n            <Divider type=\"vertical\" />\r\n            <a>\r\n              <Popconfirm\r\n                title=\"Are you sure you want to Delete this?\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: \"red\" }} />\r\n                }\r\n                onConfirm={this.onConfirmdelete.bind(this, record.id)}\r\n              >\r\n                <a href=\"#\">\r\n                  <Icon type=\"delete\" style={{ color: \"red\" }}></Icon>\r\n                </a>\r\n              </Popconfirm>\r\n            </a>\r\n          </span>\r\n        )\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <AntTable\r\n        length\r\n        title={() => <EquipmentTitle reload={this.getallequpiment} />}\r\n        columns={columns}\r\n        dataSource={this.state.datalist}\r\n        onChange={this.handleChange}\r\n        pagination={{ defaultPageSize: 8 }}\r\n        size={this.state.size}\r\n      />\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // if this function dispatches modal will be shown and the data will be drawn :)\r\n    passEditManageCategoryToModal: record => {\r\n      //this payload is the data we pass into redux which is in the row which we clicked\r\n      dispatch({ type: SWITCH_TO_EDIT_MODE, payload: record });\r\n      console.log(record);\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ManageNature);\r\n","import React, { Component } from \"react\";\r\nimport { Input, DatePicker, Modal, Button, Icon, Radio, Select } from \"antd\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport moment from \"moment\";\r\nimport { PrimaryButton } from \"../../../styledcomponents/button/button\";\r\nimport {\r\n  MasterLevelFormTitle,\r\n  MasterLevelForm\r\n} from \"../../../styledcomponents/form/MasterLevelForms\";\r\nimport { api } from \"../../../services/AxiosService\";\r\nimport Notification from \"../../../Constant/Notification\";\r\nimport { connect } from \"react-redux\";\r\nimport { DISABLE_EDIT_MODE } from \"../../../../redux/action/master/plantlevel/PlantLevel\";\r\n\r\nconst error = {\r\n  color: \"red\",\r\n  fontSize: \"12px\",\r\n  width: \"160px\",\r\n  height: \"0.2px\"\r\n};\r\n\r\nconst { Option } = Select;\r\n\r\nclass AddCalibrationForm extends Component {\r\n  state = {\r\n    loading: false,\r\n    visible: false,\r\n    formValid: false,\r\n    errorCount: 0,\r\n    errors: {\r\n      equipment_plant: \"\",\r\n      // calibrated_date: \"\",\r\n      // due_date: \"\",\r\n      calibrated_by: \"\",\r\n      supplier: \"\",\r\n      tester: \"\",\r\n      status: \"\"\r\n    },\r\n    equipment_plant: \"\",\r\n    calibrated_date: \"\",\r\n    due_date: \"\",\r\n    calibrated_by: \"\",\r\n    supplier: \"\",\r\n    tester: \"\",\r\n    description: \"\",\r\n    status: \"\",\r\n    errormgs: \"\",\r\n    edit_equipment_plant: \"\",\r\n    edit_supplier: \"\",\r\n    type: \"add\",\r\n    employeeId: \"\",\r\n    edit_employeeId: \"\",\r\n    user: \"\",\r\n    userId: \"\"\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n      formValid: false,\r\n      errorCount: 0,\r\n      errors: {\r\n        equipment_plant: \"\",\r\n        calibrated_date: \"\",\r\n        due_date: \"\",\r\n        calibrated_by: \"\",\r\n        // supplier: \"\",\r\n        // tester: \"\",\r\n        status: \"\"\r\n      },\r\n      id: \"\",\r\n      equipment_plant: \"\",\r\n      calibrated_date: \"\",\r\n      due_date: \"\",\r\n      calibrated_by: \"\",\r\n      supplier: \"\",\r\n      tester: \"\",\r\n      description: \"\",\r\n      status: \"\",\r\n      errormgs: \"\",\r\n      type: \"add\",\r\n      user: \"\"\r\n    });\r\n  };\r\n\r\n  //validators\r\n  validateForm = errors => {\r\n    let valid;\r\n    Object.values(errors).forEach(\r\n      val => val.length > 0 && (valid = false),\r\n      (valid = true)\r\n    );\r\n    return valid;\r\n  };\r\n\r\n  countErrors = errors => {\r\n    let count = 0;\r\n    Object.values(errors).forEach(val => val.length > 0 && (count = count + 1));\r\n    return count;\r\n  };\r\n\r\n  handleChange = (event, field) => {\r\n    this.setState({ [field]: event.target.value });\r\n    this.setState({ errormgs: \"\" });\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    let errors = this.state.errors;\r\n    // console.log(name + \" is \\t\" + value);\r\n    switch (name) {\r\n      // case \"tester\":\r\n      //   errors.tester =\r\n      //     value.length === 0\r\n      //       ? \"Tester can't be empty\"\r\n      //       : value.length < 3\r\n      //       ? \"Tester \\n must be 3 characters long!\"\r\n      //       : !isNaN(value)\r\n      //       ? \"Tester Plant won't allow only letters\"\r\n      //       : \"\";\r\n      //   break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ errors, [name]: value });\r\n  };\r\n\r\n  handleRadio = e => {\r\n    const { errors } = this.state;\r\n    let value = e.target.value;\r\n    console.log(value);\r\n    this.setState({\r\n      calibrated_by: value\r\n    });\r\n    if (value.length !== 0) {\r\n      this.setState({\r\n        errors: {\r\n          equipment_plant: errors.equipment_plant,\r\n\r\n          calibrated_by: \"\",\r\n\r\n          status: errors.status\r\n        },\r\n        formValid: this.validateForm(errors),\r\n        errorCount: this.countErrors(errors)\r\n      });\r\n    }\r\n  };\r\n  // handling for select or dropdown\r\n  handleSelect = (name, value) => {\r\n    console.log(name);\r\n    console.log(value);\r\n\r\n    const { errors } = this.state;\r\n    // handle select for  equipment_plant\r\n    if (name === \"equipment_plant\") {\r\n      console.log(value);\r\n      this.setState({\r\n        equipment_plant: value,\r\n        edit_equipment_plant: value\r\n      });\r\n      if (value.length !== 0) {\r\n        this.setState({\r\n          errors: {\r\n            equipment_plant: \"\",\r\n            calibrated_by: errors.calibrated_by,\r\n            status: errors.status\r\n          },\r\n          formValid: this.validateForm(errors),\r\n          errorCount: this.countErrors(errors)\r\n        });\r\n      }\r\n    }\r\n    // handle select for  supplier\r\n    if (name === \"supplier\") {\r\n      this.setState({\r\n        supplier: value,\r\n        edit_supplier: value\r\n      });\r\n    }\r\n    if (name === \"user\") {\r\n      this.setState({\r\n        user: value\r\n        // edit_supplier: value\r\n      });\r\n    }\r\n    if (name === \"employeeId\") {\r\n      this.setState({\r\n        employeeId: value,\r\n        edit_employeeId: value\r\n      });\r\n    }\r\n    // handle select for  status\r\n    if (name === \"status\") {\r\n      this.setState({\r\n        status: value\r\n      });\r\n      if (value.length !== 0) {\r\n        this.setState({\r\n          errors: {\r\n            equipment_plant: errors.equipment_plant,\r\n            // calibrated_date: errors.calibrated_date,\r\n            // due_date: errors.due_date,\r\n            calibrated_by: errors.calibrated_by,\r\n            // supplier: errors.supplier,\r\n            // tester: errors.tester,\r\n            status: \"\"\r\n          },\r\n          formValid: this.validateForm(errors),\r\n          errorCount: this.countErrors(errors)\r\n        });\r\n      }\r\n    }\r\n    // handle select for  radio group\r\n    if (name === \"calibrated_by\") {\r\n      this.setState({\r\n        calibrated_by: value.target.value\r\n      });\r\n      if (value.length !== 0) {\r\n        this.setState({\r\n          errors: {\r\n            equipment_plant: errors.equipment_plant,\r\n            // calibrated_date: errors.calibrated_date,\r\n            // due_date: errors.due_date,\r\n            calibrated_by: \"\",\r\n            // supplier: errors.supplier,\r\n            // tester: errors.tester,\r\n            status: errors.status\r\n          },\r\n          formValid: this.validateForm(errors),\r\n          errorCount: this.countErrors(errors)\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleDates(name, dateString, field) {\r\n    console.log(name);\r\n    console.log(dateString);\r\n    console.log(field);\r\n    let convertedDate = moment(dateString).format(\"DD-MM-YYYY\");\r\n    console.log(convertedDate);\r\n    if (name === \"due_date\") {\r\n      this.setState({\r\n        due_date: dateString\r\n      });\r\n    }\r\n    if (name === \"calibrated_date\") {\r\n      this.setState({\r\n        calibrated_date: dateString\r\n      });\r\n    }\r\n  }\r\n\r\n  handleCancel = () => {\r\n    if (this.state.type === \"edit\") {\r\n      this.props.setCalibrationVisibility();\r\n    }\r\n    this.setState({\r\n      visible: false,\r\n      errors: {\r\n        equipment_plant: \"\",\r\n        calibrated_by: \"\",\r\n        status: \"\"\r\n      },\r\n      equipment_plant: \"\",\r\n      calibrated_date: \"\",\r\n      due_date: \"\",\r\n      calibrated_by: \"\",\r\n      supplier: \"\",\r\n      tester: \"\",\r\n      description: \"\",\r\n      status: \"\",\r\n      errormgs: \"\",\r\n      type: \"\"\r\n    });\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({\r\n      visible: nextProps.visible,\r\n      equipment_plant: nextProps.editPlantData.plantEquipmentEquipmentName,\r\n      calibrated_date: moment(\r\n        nextProps.editPlantData.calibratedDate,\r\n        \"DD-MM-YYYY\"\r\n      ),\r\n      id: nextProps.editPlantData.id,\r\n      due_date: moment(nextProps.editPlantData.dueDate, \"DD-MM-YYYY\"),\r\n      calibrated_by: nextProps.editPlantData.calibrationType,\r\n      edit_supplier: nextProps.editPlantData.supplierName,\r\n      tester: nextProps.editPlantData.userId,\r\n      description: nextProps.editPlantData.description,\r\n      status: nextProps.editPlantData.status,\r\n      equipment_plant: nextProps.editPlantData.plantEquipmentSerialNo,\r\n      edit_equipment_plant: nextProps.editPlantData.plantEquipmentEquipmentName,\r\n      supplier: nextProps.editPlantData.supplierId,\r\n      type: nextProps.type,\r\n      // employeeId: nextProps.editPlantData.employe,\r\n      userId: nextProps.editPlantData.userId\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this.Selectequipmantplant();\r\n    this.Selectsupplier();\r\n    this.Selectemployee();\r\n    this.SelectUser();\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const {\r\n      errors,\r\n      equipment_plant,\r\n      calibrated_by,\r\n      calibrated_date,\r\n      description,\r\n      due_date,\r\n      status,\r\n      supplier\r\n    } = this.state;\r\n    if (\r\n      equipment_plant.length === 0 &&\r\n      calibrated_by.length === 0 &&\r\n      status.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          equipment_plant: \"Equipment Plant can't be empty\",\r\n          calibrated_by: \"Calibrated By can't be empty\",\r\n          status: \"Status can't be empty\"\r\n        },\r\n        formValid: this.validateForm(errors),\r\n        errorCount: this.countErrors(errors)\r\n      });\r\n    } else if (\r\n      equipment_plant.length === 0 &&\r\n      errors.equipment_plant.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          equipment_plant:\r\n            errors.equipment_plant || \"Equipment Plant can't be empty\",\r\n          calibrated_by: errors.calibrated_by,\r\n          status: errors.status\r\n        },\r\n        formValid: this.validateForm(errors),\r\n        errorCount: this.countErrors(errors)\r\n      });\r\n    } else if (\r\n      calibrated_by.length === 0 &&\r\n      errors.calibrated_by.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          equipment_plant: errors.equipment_plant,\r\n          calibrated_by: errors.calibrated_by || \"Calibrated By can't be empty\",\r\n          status: errors.status\r\n        },\r\n        formValid: this.validateForm(errors),\r\n        errorCount: this.countErrors(errors)\r\n      });\r\n    } else if (status.length === 0 && errors.status.length === 0) {\r\n      this.setState({\r\n        errors: {\r\n          equipment_plant: errors.equipment_plant,\r\n          calibrated_by: errors.calibrated_by,\r\n          status: errors.status || \"Status can't be empty\"\r\n        },\r\n        formValid: this.validateForm(errors),\r\n        errorCount: this.countErrors(errors)\r\n      });\r\n    } else if (\r\n      errors.equipment_plant.length === 0 &&\r\n      errors.calibrated_by.length === 0 &&\r\n      errors.status.length === 0\r\n    ) {\r\n      console.log(\"form is valid\");\r\n\r\n      if (this.state.type === \"edit\") {\r\n        console.log(\"edit part\");\r\n        const data = {\r\n          id: this.state.id,\r\n          plantEquipmentSerialNo: equipment_plant,\r\n          calibratedDate: moment(calibrated_date).format(\"YYYY-MM-DD\"),\r\n          dueDate: moment(due_date).format(\"YYYY-MM-DD\"),\r\n          calibrationType: calibrated_by,\r\n          supplierId: supplier,\r\n          userId: this.state.userId,\r\n          description: description,\r\n          status: status,\r\n          employeeId: this.state.employeeId\r\n        };\r\n        console.log(data);\r\n        api(\r\n          \"PUT\",\r\n          \"supermix\",\r\n          \"/plant-equipment-calibration\",\r\n          \"\",\r\n          data,\r\n          \"\"\r\n        ).then(\r\n          res => {\r\n            console.log(res.data);\r\n\r\n            Notification(\"success\", res.data.message);\r\n            this.props.reload();\r\n            this.setState({ loading: true });\r\n            this.setState({\r\n              equipment_plant: \"\",\r\n              calibrated_date: \"\",\r\n              due_date: \"\",\r\n              calibrated_by: \"\",\r\n              supplier: \"\",\r\n              tester: \"\",\r\n              description: \"\",\r\n              status: \"\",\r\n              edit_equipment_plant: \"\",\r\n              edit_supplier: \"\",\r\n              errormgs: \"\"\r\n            });\r\n            setTimeout(() => {\r\n              this.setState({ loading: false, visible: false });\r\n            }, 500);\r\n          },\r\n          error => {\r\n            // this.setState({\r\n            //   errormgs: error.validationFailures[0]\r\n            // });\r\n            console.log(\"DEBUG34: \", error);\r\n            // console.log(HandelError(error.validationFailures[0]));\r\n          }\r\n        );\r\n      } else {\r\n        const data = {\r\n          plantEquipmentSerialNo: equipment_plant,\r\n          calibratedDate: moment(calibrated_date).format(\"YYYY-MM-DD\"),\r\n          dueDate: moment(due_date).format(\"YYYY-MM-DD\"),\r\n          calibrationType: calibrated_by,\r\n          supplierId: supplier,\r\n          userId: this.state.user,\r\n          description: description,\r\n          status: status,\r\n          employeeId: this.state.employeeId\r\n        };\r\n        console.log(\"hhhhhhhhhhhhhhh\");\r\n\r\n        console.log(data);\r\n        api(\r\n          \"POST\",\r\n          \"supermix\",\r\n          \"/plant-equipment-calibration\",\r\n          \"\",\r\n          data,\r\n          \"\"\r\n        ).then(\r\n          res => {\r\n            console.log(res.data);\r\n\r\n            Notification(\"success\", res.data.message);\r\n            this.props.reload();\r\n            this.setState({ loading: true });\r\n            this.setState({\r\n              equipment_plant: \"\",\r\n              calibrated_date: \"\",\r\n              due_date: \"\",\r\n              calibrated_by: \"\",\r\n              supplier: \"\",\r\n              tester: \"\",\r\n              description: \"\",\r\n              status: \"\",\r\n              employeeId: \"\",\r\n              errormgs: \"\",\r\n              edit_equipment_plant: \"\",\r\n              edit_supplier: \"\"\r\n            });\r\n            setTimeout(() => {\r\n              this.setState({ loading: false, visible: false });\r\n            }, 500);\r\n          },\r\n          error => {\r\n            // this.setState({\r\n            //   errormgs: error.validationFailures[0]\r\n            // });\r\n            console.log(\"DEBUG34: \", error);\r\n            // console.log(HandelError(error.validationFailures[0]));\r\n          }\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  //restrict date\r\n  disabledDate = current => {\r\n    // Can not select days before today and today\r\n    return current && current.valueOf() < Date.now();\r\n  };\r\n\r\n  Selectequipmantplant = () => {\r\n    api(\"GET\", \"supermix\", \"/plantequipments\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data);\r\n\r\n      console.log(\"kkkkkkkkkk\");\r\n      let equipmantplantselect = res.data.results.plantEquipments.map(\r\n        (post, index) => {\r\n          return (\r\n            <Option value={post.serialNo} key={index}>\r\n              {post.serialNo}\r\n            </Option>\r\n          );\r\n        }\r\n      );\r\n      this.setState({\r\n        equipmantplantselect\r\n      });\r\n    });\r\n  };\r\n\r\n  Selectsupplier = () => {\r\n    api(\"GET\", \"supermix\", \"/suppliers\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data);\r\n\r\n      if (res.data.results.Supplier.length > 0) {\r\n        let supplierselect = res.data.results.Supplier.map((post, index) => {\r\n          console.log(post.name);\r\n          console.log(\"kkkkkkkkkk\");\r\n          return (\r\n            <Option value={post.id} key={index}>\r\n              {post.name}\r\n            </Option>\r\n          );\r\n        });\r\n        this.setState({\r\n          supplierselect\r\n        });\r\n      }\r\n    });\r\n  };\r\n  SelectUser = () => {\r\n    api(\"GET\", \"supermix\", \"/users\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data);\r\n\r\n      if (res.data.results.user.length > 0) {\r\n        let userselect = res.data.results.user.map((post, index) => {\r\n          console.log(\"kkkkkkkkkk\");\r\n          return (\r\n            <Option value={post.id} key={index}>\r\n              {post.userName}\r\n            </Option>\r\n          );\r\n        });\r\n        this.setState({\r\n          userselect\r\n        });\r\n      }\r\n    });\r\n  };\r\n  Selectemployee = () => {\r\n    api(\"GET\", \"supermix\", \"/employees\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data);\r\n\r\n      if (res.data.results.employees.length > 0) {\r\n        let employeeselect = res.data.results.employees.map((post, index) => {\r\n          console.log(post.firstName);\r\n          console.log(\"kkkkkkkkkk\");\r\n          return (\r\n            <Option value={post.id} key={index}>\r\n              {post.firstName}\r\n            </Option>\r\n          );\r\n        });\r\n        this.setState({\r\n          employeeselect\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      visible,\r\n      loading,\r\n      errors,\r\n      errorCount,\r\n      edit_equipment_plant,\r\n      edit_supplier,\r\n      calibrated_by,\r\n      calibrated_date,\r\n      due_date,\r\n      status,\r\n      tester,\r\n      user\r\n    } = this.state;\r\n    console.log(errorCount);\r\n\r\n    return (\r\n      <div>\r\n        <PrimaryButton\r\n          onClick={this.showModal}\r\n          style={{\r\n            background: \"#001328\",\r\n            color: \"white\",\r\n            border: \"none\",\r\n            width: \"auto\",\r\n            marginLeft: \"-10px\"\r\n          }}\r\n        >\r\n          Add Calibration\r\n        </PrimaryButton>\r\n        <Modal\r\n          width='800px'\r\n          visible={visible}\r\n          closable={false}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          footer={[\r\n            <Button key='back' onClick={this.handleCancel}>\r\n              Cancel\r\n            </Button>,\r\n            <PrimaryButton\r\n              key='submit'\r\n              loading={loading}\r\n              onClick={e => this.handleSubmit(e)}\r\n              style={{ background: \"#001328\", color: \"white\", border: \"none\" }}\r\n            >\r\n              {this.state.type === \"edit\" ? \"Edit\" : \"Save\"}\r\n            </PrimaryButton>\r\n          ]}\r\n          title={\r\n            <MasterLevelFormTitle>\r\n              <p\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                {this.state.type === \"edit\"\r\n                  ? \"Edit Equipment Calibration\"\r\n                  : \" Add Equipment Calibration\"}\r\n              </p>\r\n              <Icon\r\n                type='close-circle'\r\n                onClick={this.handleCancel}\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              />\r\n            </MasterLevelFormTitle>\r\n          }\r\n        >\r\n          <MasterLevelForm>\r\n            {/* <Icon type=\"close-circle\" onClick={this.handleCancel} style={{marginLeft:'300px',marginTop:'-65px',color:'white'}}/> */}\r\n\r\n            {/* Code */}\r\n            {this.state.type === \"edit\" ? (\r\n              <div className='input_wrapper'>\r\n                <label for='code' className='label'>\r\n                  Code:\r\n                </label>\r\n                <Input\r\n                  id='code'\r\n                  name='code'\r\n                  value={this.state.id}\r\n                  disabled\r\n                  placeholder='Enter the Code '\r\n                />\r\n                <div style={{ height: \"12px\" }}></div>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n\r\n            {/* User Role */}\r\n            <div className='input_wrapper'>\r\n              <label for='equipment_plant' className='label'>\r\n                Plant Equipment:\r\n              </label>\r\n\r\n              <Select\r\n                id='equipment_plant'\r\n                name='equipment_plant'\r\n                placeholder='Select Equipment Plant'\r\n                style={{ width: 170 }}\r\n                value={edit_equipment_plant}\r\n                onChange={value => this.handleSelect(\"equipment_plant\", value)}\r\n              >\r\n                {/* <Option value=\"eq01\">Equipment 01</Option>\r\n                <Option value=\"eq02\">Equipment 02</Option> */}\r\n                {this.state.equipmantplantselect}\r\n              </Select>\r\n              {errors.equipment_plant.length > 0 && (\r\n                <div style={error}>{errors.equipment_plant}</div>\r\n              )}\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n\r\n            <div className='input_wrapper'>\r\n              <label for='calibrated_date' className='label'>\r\n                Calibrated Date:\r\n              </label>\r\n              <DatePicker\r\n                id='calibrated_date'\r\n                name='calibrated_date'\r\n                format={\"DD-MM-YYYY\"}\r\n                showToday\r\n                disabledDate={this.disabledDate()}\r\n                value={calibrated_date}\r\n                onChange={(dateString, field) =>\r\n                  this.handleDates(\"calibrated_date\", dateString, field)\r\n                }\r\n                // disabledTime={() => Date.now()}\r\n              />\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n            <div className='input_wrapper'>\r\n              <label for='due_date' className='label'>\r\n                Due Date:\r\n              </label>\r\n              <DatePicker\r\n                id='due_date'\r\n                name='due_date'\r\n                format={\"DD-MM-YYYY\"}\r\n                value={due_date}\r\n                onChange={(dateString, field) =>\r\n                  this.handleDates(\"due_date\", dateString, field)\r\n                }\r\n                showToday\r\n              />\r\n\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n            <div className='input_wrapper'>\r\n              <label for='calibrated_by' className='label'>\r\n                Calibrated Type:\r\n              </label>\r\n              <Radio.Group\r\n                id='calibrated_by'\r\n                name='calibrated_by'\r\n                value={calibrated_by}\r\n                checked={calibrated_by}\r\n                onChange={this.handleRadio}\r\n              >\r\n                <Radio value='INTERNAL'>Internal </Radio>\r\n                <Radio value='EXTERNAL'>External</Radio>\r\n              </Radio.Group>\r\n              {errors.calibrated_by.length > 0 && (\r\n                <div style={error}>{errors.calibrated_by}</div>\r\n              )}\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n            {this.state.calibrated_by === \"EXTERNAL\" ? (\r\n              <div className='input_wrapper'>\r\n                <label\r\n                  for='supplier'\r\n                  className='label'\r\n                  style={{ left: \"20px\" }}\r\n                >\r\n                  Supplier:\r\n                </label>\r\n\r\n                <Select\r\n                  id='supplier'\r\n                  name='supplier'\r\n                  placeholder='Select Supplier'\r\n                  style={{ width: 170 }}\r\n                  value={edit_supplier}\r\n                  onChange={value => this.handleSelect(\"supplier\", value)}\r\n                >\r\n                  {/* <Option value=\"s01\">Supplier 01</Option>\r\n                <Option value=\"s02\">Supplier 02</Option> */}\r\n                  {this.state.supplierselect}\r\n                </Select>\r\n                {/* {errors.supplier.length > 0 && (\r\n                  <div style={error}>{errors.supplier}</div>\r\n                )} */}\r\n                <div style={{ height: \"12px\" }}></div>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {this.state.calibrated_by === \"INTERNALk\" ? (\r\n              <div className='input_wrapper'>\r\n                <label for='tester' className='label'>\r\n                  Tester:\r\n                </label>\r\n                <Input\r\n                  id='tester'\r\n                  name='tester'\r\n                  placeholder='Enter Tester'\r\n                  value={tester}\r\n                  onChange={this.handleChange}\r\n                />\r\n                {/* {errors.tester.length > 0 && (\r\n                  <div style={error}>{errors.tester}</div>\r\n                )} */}\r\n                <div style={{ height: \"12px\" }}></div>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n\r\n            <div className='input_wrapper'>\r\n              <label for='incoming_sample_id' className='label'>\r\n                Employee:\r\n              </label>\r\n\r\n              <Select\r\n                showSearch\r\n                style={{ width: 180 }}\r\n                id='employeeId'\r\n                name='employeeId'\r\n                placeholder='Select a Employee'\r\n                value={this.state.employeeId}\r\n                onChange={value => this.handleSelect(\"employeeId\", value)}\r\n              >\r\n                {this.state.employeeselect}\r\n              </Select>\r\n              {/* {errors.incoming_sample.length > 0 && (\r\n                <div style={error}>{errors.incoming_sample}</div>\r\n              )} */}\r\n\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n            <div className='input_wrapper'>\r\n              <label for='user' className='label' style={{ left: \"20px\" }}>\r\n                User:\r\n              </label>\r\n\r\n              <Select\r\n                id='user'\r\n                name='user'\r\n                placeholder='Select User'\r\n                style={{ width: 170 }}\r\n                value={user}\r\n                onChange={value => this.handleSelect(\"user\", value)}\r\n              >\r\n                {this.state.userselect}\r\n              </Select>\r\n\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n            <div className='input_wrapper'>\r\n              <label for='description' className='label'>\r\n                Description:\r\n              </label>\r\n              <TextArea\r\n                id='description'\r\n                name='description'\r\n                placeholder='Enter Description'\r\n                style={{ width: \"400px\" }}\r\n                value={this.state.description}\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n            <div className='input_wrapper'>\r\n              <label for='status' className='label'>\r\n                Status:\r\n              </label>\r\n              <Select\r\n                id='status'\r\n                name='status'\r\n                placeholder='Select Status'\r\n                style={{ width: 170 }}\r\n                value={status}\r\n                onChange={value => this.handleSelect(\"status\", value)}\r\n              >\r\n                <Option value='NEW'>new</Option>\r\n                <Option value='PASS'>pass</Option>\r\n                <Option value='FAIL'>fail</Option>\r\n                <Option value='PROCESS'>process</Option>\r\n              </Select>\r\n              {errors.status.length > 0 && (\r\n                <div style={error}>{errors.status}</div>\r\n              )}\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n          </MasterLevelForm>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  //getting the global redux state to get the data from the EditPlantReducer.js\r\n  return {\r\n    visible: state.plantLevelReducers.EditPlantReducer.visible,\r\n    type: state.plantLevelReducers.EditPlantReducer.type,\r\n    editPlantData: state.plantLevelReducers.EditPlantReducer.editPlantData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setCalibrationVisibility: () => {\r\n      dispatch({ type: DISABLE_EDIT_MODE });\r\n      console.log(\"edit modal closed\");\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddCalibrationForm);\r\n","import React, { Component } from \"react\";\r\nimport { FlexContainer } from \"../../../styledcomponents/container/FlexGrid\";\r\n\r\nimport Paragraph from \"antd/lib/typography/Paragraph\";\r\nimport AddCalibrationForm from \"../calibration/AddCalibrationForm\";\r\n\r\nconst style = {\r\n  fontSize: \"medium\",\r\n  fontWeight: \"600\",\r\n  alignSelf: \"auto\",\r\n  padding: \"10px\"\r\n};\r\n\r\nexport default class CalibrationTitle extends Component {\r\n  render() {\r\n    return (\r\n      <FlexContainer titles leveltitles>\r\n        <Paragraph style={style}>Equipment Calibration </Paragraph>\r\n        <AddCalibrationForm reload={this.props.reload} />\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapStateToProps = state => {};\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     showAddEmployeeDrawer: () => {\r\n//       dispatch({ type: OPEN_ADD_NEW_EMPLOYEE_DRAWER });\r\n//       console.log(\"add new employee click dispatched\");\r\n//     }\r\n//   };\r\n// };\r\n\r\n// export default connect(\r\n//   mapStateToProps,\r\n//   mapDispatchToProps\r\n// )(EmployeeMasterTitle);\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\nimport { Popconfirm, Divider, Icon } from \"antd\";\r\n\r\nimport CalibrationTitle from \"../title/CalibrationTitle\";\r\nimport { AntTable } from \"../../../styledcomponents/table/AntTabl\";\r\nimport Notification from \"../../../Constant/Notification\";\r\nimport { api } from \"../../../services/AxiosService\";\r\nimport { SWITCH_TO_EDIT_MODE } from \"../../../../redux/action/master/plantlevel/PlantLevel\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ManageCalibration extends Component {\r\n  state = {\r\n    searchText: \"\",\r\n    visible: false,\r\n    size: \"small\",\r\n    datalist: \"\"\r\n  };\r\n\r\n  componentWillMount() {\r\n    if (window.screen.width > 1900) {\r\n      console.log(\"hooray\");\r\n      this.setState({\r\n        size: \"large\"\r\n      });\r\n    } else if (window.screen.width < 1440) {\r\n      this.setState({\r\n        size: \"small\"\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"ffhfhhfh\");\r\n    this.getallplantCalibration();\r\n  }\r\n  handleOk = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleCancel = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleChange = (pagination, filters, sorter) => {\r\n    console.log(\"Various parameters\", pagination, filters, sorter);\r\n  };\r\n\r\n  getallplantCalibration = () => {\r\n    api(\"GET\", \"supermix\", \"/plant-equipment-calibrations\", \"\", \"\", \"\").then(\r\n      res => {\r\n        console.log(res.data);\r\n\r\n        this.setState({\r\n          datalist: res.data.results.plantEquipmentCalibrations\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  onChange(pageNumber) {\r\n    console.log(\"Page: \", pageNumber);\r\n  }\r\n  onConfirmdelete(id) {\r\n    console.log(\"ddddd\");\r\n    console.log(id);\r\n    console.log(\"ddddd\");\r\n    api(\"DELETE\", \"supermix\", \"/plant-equipment-calibration\", \"\", \"\", id).then(\r\n      res => {\r\n        console.log(res.data);\r\n        this.getallplantCalibration();\r\n        Notification(\"success\", res.data.message);\r\n      }\r\n    );\r\n    console.log(this.state.id);\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"Equipment Name\",\r\n        dataIndex: \"plantEquipmentEquipmentName\",\r\n        key: \"calibrated_date\"\r\n      },\r\n\r\n      {\r\n        title: \"Calibrated Date\",\r\n        dataIndex: \"calibratedDate\",\r\n        key: \"calibrated_date\"\r\n      },\r\n\r\n      {\r\n        title: \"Due Date\",\r\n        dataIndex: \"dueDate\",\r\n        key: \"due_date\"\r\n      },\r\n      {\r\n        title: \"Calibrated Type\",\r\n        dataIndex: \"calibrationType\",\r\n        key: \"calibrated_by\"\r\n      },\r\n      {\r\n        title: \"Supplier\",\r\n        dataIndex: \"supplierName\",\r\n        key: \"company\"\r\n      },\r\n      {\r\n        title: \"User\",\r\n        dataIndex: \"userUsername\",\r\n        key: \"tester\"\r\n      },\r\n      {\r\n        title: \"Employee\",\r\n        dataIndex: \"employee.firstName\",\r\n        key: \"employee\"\r\n      },\r\n      {\r\n        title: \"Description\",\r\n        dataIndex: \"description\",\r\n        key: \"description\"\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataIndex: \"status\",\r\n        key: \"description\"\r\n      },\r\n      {\r\n        title: \"Edit & Delete\",\r\n        key: \"action\",\r\n        width: \"7%\",\r\n        render: (text, record = this.state.datalist) => (\r\n          <span>\r\n            <a>\r\n              <Icon\r\n                type=\"edit\"\r\n                onClick={this.props.passEditManageCategoryToModal.bind(\r\n                  this,\r\n                  record\r\n                )}\r\n              />\r\n            </a>\r\n            <Divider type=\"vertical\" />\r\n            <a>\r\n              <Popconfirm\r\n                title=\"Are you sure you want to Delete this?\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: \"red\" }} />\r\n                }\r\n                onConfirm={this.onConfirmdelete.bind(this, record.id)}\r\n              >\r\n                <a href=\"#\">\r\n                  <Icon type=\"delete\" style={{ color: \"red\" }}></Icon>\r\n                </a>\r\n              </Popconfirm>\r\n            </a>\r\n          </span>\r\n        )\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <AntTable\r\n        title={() => <CalibrationTitle reload={this.getallplantCalibration} />}\r\n        columns={columns}\r\n        maxlength\r\n        dataSource={this.state.datalist}\r\n        onChange={this.handleChange}\r\n        pagination={{ defaultPageSize: 8 }}\r\n        size={this.state.size}\r\n      />\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // if this function dispatches modal will be shown and the data will be drawn :)\r\n    passEditManageCategoryToModal: record => {\r\n      //this payload is the data we pass into redux which is in the row which we clicked\r\n      dispatch({ type: SWITCH_TO_EDIT_MODE, payload: record });\r\n      console.log(record);\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ManageCalibration);\r\n","import React, { Component } from \"react\";\r\nimport { Input, Modal, Icon, Button, Select } from \"antd\";\r\n\r\nimport { PrimaryButton } from \"../../../styledcomponents/button/button\";\r\nimport {\r\n  MasterLevelFormTitle,\r\n  MasterLevelForm,\r\n} from \"../../../styledcomponents/form/MasterLevelForms\";\r\nimport { connect } from \"react-redux\";\r\nimport { DISABLE_EDIT_MODE } from \"../../../../redux/action/master/plantlevel/PlantLevel\";\r\nimport Notification from \"../../../Constant/Notification\";\r\nimport HandelError from \"../../../Constant/HandleError\";\r\nimport { api } from \"../../../services/AxiosService\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\n\r\nconst error = {\r\n  color: \"red\",\r\n  fontSize: \"12px\",\r\n  width: \"160px\",\r\n  height: \"0.2px\",\r\n};\r\n\r\nconst { Option } = Select;\r\n\r\nclass AddEquipmentPlant extends Component {\r\n  state = {\r\n    loading: false,\r\n    visible: false,\r\n    formValid: false,\r\n    errorCount: 0,\r\n    errors: {\r\n      serial: \"\",\r\n      equipment: \"\",\r\n      plant: \"\",\r\n      brand: \"\",\r\n      model: \"\",\r\n    },\r\n    serial_no: \"\",\r\n    equipment: \"\",\r\n    plant: \"\",\r\n    brand_name: \"\",\r\n    model_name: \"\",\r\n    description: \"\",\r\n    errormgs: \"\",\r\n    type: \"add\",\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n      formValid: false,\r\n      errorCount: 0,\r\n      errors: {\r\n        serial: \"\",\r\n        equipment: \"\",\r\n        plant: \"\",\r\n        brand: \"\",\r\n        model: \"\",\r\n      },\r\n      serial_no: \"\",\r\n      equipment: \"\",\r\n      equipmentEdit: \"\",\r\n      plant: \"\",\r\n      plantEdit: \"\",\r\n      brand_name: \"\",\r\n      model_name: \"\",\r\n      description: \"\",\r\n      errormgs: \"\",\r\n      edit_equipment: \"\",\r\n      type: \"add\",\r\n    });\r\n  };\r\n\r\n  //validators\r\n  validateForm = (errors) => {\r\n    let valid;\r\n    Object.values(errors).forEach(\r\n      (val) => val.length > 0 && (valid = false),\r\n      (valid = true)\r\n    );\r\n    return valid;\r\n  };\r\n\r\n  countErrors = (errors) => {\r\n    let count = 0;\r\n    Object.values(errors).forEach(\r\n      (val) => val.length > 0 && (count = count + 1)\r\n    );\r\n    return count;\r\n  };\r\n\r\n  handleChange = (event, field) => {\r\n    this.setState({ [field]: event.target.value });\r\n    this.setState({ errormgs: \"\" });\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    let errors = this.state.errors;\r\n    // console.log(name + \" is \\t\" + value);\r\n    switch (name) {\r\n      case \"serial_no\":\r\n        errors.serial =\r\n          value.length === 0\r\n            ? \"Serial No can't be empty\"\r\n            : value.length < 3\r\n            ? \"Serial No \\n must be 3 characters long!\"\r\n            : !isNaN(value)\r\n            ? \"Serial No won't allow only letters\"\r\n            : \"\";\r\n        break;\r\n      case \"brand_name\":\r\n        errors.brand =\r\n          value.length === 0\r\n            ? \"Brand Name can't be empty\"\r\n            : value.length < 3\r\n            ? \"Brand Name must be 3 characters long!\"\r\n            : !isNaN(value)\r\n            ? \"Brand Name won't allow only letters\"\r\n            : \"\";\r\n        break;\r\n      case \"model_name\":\r\n        errors.model =\r\n          value.length === 0\r\n            ? \"Model Name can't be empty\"\r\n            : value.length < 3\r\n            ? \"Model Name must be 3 characters long!\"\r\n            : !isNaN(value)\r\n            ? \"Model Name won't allow only letters\"\r\n            : \"\";\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ errors, [name]: value });\r\n  };\r\n\r\n  // handling for select or dropdown\r\n  handleSelect = (name, value) => {\r\n    console.log(name);\r\n    console.log(value);\r\n    // handle select for  plant\r\n    if (name === \"plant\") {\r\n      this.setState({\r\n        plant: value,\r\n        plantEdit: value,\r\n      });\r\n\r\n      if (value.length !== 0) {\r\n        this.setState({\r\n          errors: {\r\n            serial: this.state.errors.serial,\r\n            equipment: this.state.errors.equipment,\r\n            plant: \"\",\r\n            brand: this.state.errors.brand,\r\n            model: this.state.errors.model,\r\n          },\r\n          formValid: this.validateForm(this.state.errors),\r\n          errorCount: this.countErrors(this.state.errors),\r\n        });\r\n      }\r\n    }\r\n\r\n    if (name === \"equipment\") {\r\n      this.setState({\r\n        equipment: value,\r\n        equipmentEdit: value,\r\n      });\r\n\r\n      if (value.length !== 0) {\r\n        this.setState({\r\n          errors: {\r\n            serial: this.state.errors.serial,\r\n            equipment: \"\",\r\n            plant: this.state.errors.plant,\r\n            brand: this.state.errors.brand,\r\n            model: this.state.errors.model,\r\n          },\r\n          formValid: this.validateForm(this.state.errors),\r\n          errorCount: this.countErrors(this.state.errors),\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    const {\r\n      errors,\r\n      serial_no,\r\n      equipment,\r\n      plant,\r\n      model_name,\r\n      brand_name,\r\n      description,\r\n      plantEdit,\r\n      equipmentEdit,\r\n    } = this.state;\r\n    e.preventDefault();\r\n    if (\r\n      serial_no.length === 0 &&\r\n      equipment.length === 0 &&\r\n      plant.length === 0 &&\r\n      model_name.length === 0 &&\r\n      brand_name.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          serial: \"Serial No can't be empty\",\r\n          equipment: \"Equipment can't be empty\",\r\n          plant: \"Plant can't be empty\",\r\n          brand: \"Brand can't be empty\",\r\n          model: \"Model can't be empty\",\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors),\r\n      });\r\n    } else if (serial_no.length === 0 && errors.serial.length === 0) {\r\n      this.setState({\r\n        errors: {\r\n          serial: errors.serial || \"Serial No can't be empty\",\r\n          equipment: errors.equipment,\r\n          plant: errors.plant,\r\n          brand: errors.brand,\r\n          model: errors.model,\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors),\r\n      });\r\n    } else if (equipment.length === 0 && errors.equipment.length === 0) {\r\n      this.setState({\r\n        errors: {\r\n          serial: errors.serial,\r\n          equipment: errors.equipment || \"Equipment can't be empty\",\r\n          plant: errors.plant,\r\n          brand: errors.brand,\r\n          model: errors.model,\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors),\r\n      });\r\n    } else if (plant.length === 0 && errors.plant.length === 0) {\r\n      this.setState({\r\n        errors: {\r\n          serial: errors.serial,\r\n          equipment: errors.equipment,\r\n          plant: errors.plant || \"Plant can't be empty\",\r\n          brand: errors.brand,\r\n          model: errors.model,\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors),\r\n      });\r\n    } else if (brand_name.length === 0 && errors.brand.length === 0) {\r\n      this.setState({\r\n        errors: {\r\n          serial: errors.serial,\r\n          equipment: errors.equipment,\r\n          plant: errors.plant,\r\n          brand: errors.brand || \"Brand can't be empty\",\r\n          model: errors.model,\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors),\r\n      });\r\n    } else if (model_name.length === 0 && errors.model.length === 0) {\r\n      this.setState({\r\n        errors: {\r\n          serial: errors.serial,\r\n          equipment: errors.equipment,\r\n          plant: errors.plant,\r\n          brand: errors.brand,\r\n          model: errors.model || \"Model can't be empty\",\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors),\r\n      });\r\n    } else if (\r\n      errors.serial.length === 0 &&\r\n      errors.equipment.length === 0 &&\r\n      errors.plant.length === 0 &&\r\n      errors.brand.length === 0 &&\r\n      errors.model.length === 0\r\n    ) {\r\n      this.setState({ formValid: this.validateForm(this.state.errors) });\r\n      this.setState({ errorCount: this.countErrors(this.state.errors) });\r\n      console.log(\"form is valid\");\r\n\r\n      console.log(this.state.type);\r\n      if (this.state.type === \"add\") {\r\n        const data = {\r\n          serialNo: serial_no,\r\n          equipmentId: equipment,\r\n          plantCode: plant,\r\n          brandName: brand_name,\r\n          modelName: model_name,\r\n          description: description,\r\n        };\r\n        console.log(data);\r\n        api(\"POST\", \"supermix\", \"/plantequipment\", \"\", data, \"\")\r\n          .then(\r\n            (res) => {\r\n              console.log(res.data);\r\n              if (res.data.status === \"VALIDATION_FAILURE\") {\r\n                console.log(\"add\");\r\n                this.responeserror(res.data.results.name.message);\r\n              } else {\r\n                Notification(\"success\", res.data.message);\r\n                this.props.reload();\r\n\r\n                this.setState({\r\n                  loading: true,\r\n                  errormgs: \"\",\r\n                  serial_no: \"\",\r\n                  equipment: \"\",\r\n                  plant: \"\",\r\n                  brand_name: \"\",\r\n                  model_name: \"\",\r\n                  description: \"\",\r\n                  errors: {\r\n                    serial: \"\",\r\n                    equipment: \"\",\r\n                    plant: \"\",\r\n                    brand: \"\",\r\n                    model: \"\",\r\n                  },\r\n                });\r\n                setTimeout(() => {\r\n                  this.setState({ loading: false, visible: false });\r\n                }, 500);\r\n              }\r\n            },\r\n            (error) => {\r\n              this.setState({\r\n                errormgs: error.validationFailures[0],\r\n              });\r\n              console.log(\"DEBUG34: \", error);\r\n              console.log(HandelError(error.validationFailures[0]));\r\n            }\r\n          )\r\n          .catch((error) => {\r\n            this.setState({\r\n              // errormgs: \"Plant Name Exist\"\r\n            });\r\n            console.log(error);\r\n          });\r\n      } else {\r\n        const data = {\r\n          serialNo: serial_no,\r\n          equipmentId: equipmentEdit,\r\n          plantCode: plantEdit,\r\n          brandName: brand_name,\r\n          modelName: model_name,\r\n          description: description,\r\n        };\r\n        console.log(data);\r\n        console.log(this.state.type);\r\n        api(\"PUT\", \"supermix\", \"/plantequipment\", \"\", data, \"\")\r\n          .then(\r\n            (res) => {\r\n              console.log(res.data);\r\n\r\n              if (res.data.status === \"VALIDATION_FAILURE\") {\r\n                console.log(\"update\");\r\n                this.responeserror(res.data.results.name.message);\r\n              } else {\r\n                Notification(\"success\", res.data.message);\r\n                this.props.reload();\r\n\r\n                this.setState({\r\n                  loading: true,\r\n                  errormgs: \"\",\r\n                  serial_no: \"\",\r\n                  equipment: \"\",\r\n                  plant: \"\",\r\n                  brand_name: \"\",\r\n                  model_name: \"\",\r\n                  description: \"\",\r\n                  errors: {\r\n                    serial: \"\",\r\n                    equipment: \"\",\r\n                    plant: \"\",\r\n                    brand: \"\",\r\n                    model: \"\",\r\n                  },\r\n                });\r\n                setTimeout(() => {\r\n                  this.setState({ loading: false, visible: false });\r\n                }, 500);\r\n              }\r\n            },\r\n            (error) => {\r\n              this.setState({\r\n                errormgs: error.validationFailures[0],\r\n              });\r\n              console.log(\"DEBUG34: \", error);\r\n              console.log(HandelError(error.validationFailures[0]));\r\n            }\r\n          )\r\n          .catch((error) => {\r\n            // this.setState({\r\n            //   errormgs: \"Plant Name Exist\"\r\n            // });\r\n            // console.log(error.response.data);\r\n          });\r\n      }\r\n      // this.setState({\r\n      //   loading: true,\r\n      //   serial_no: \"\",\r\n      //   equipment: \"\",\r\n      //   plant: \"\",\r\n      //   brand_name: \"\",\r\n      //   model_name: \"\",\r\n      //   errors: {\r\n      //     serial: \"\",\r\n      //     equipment: \"\",\r\n      //     plant: \"\",\r\n      //     brand: \"\",\r\n      //     model: \"\"\r\n      //   }\r\n      // });\r\n      // setTimeout(() => {\r\n      //   this.setState({ loading: false, visible: false });\r\n      // }, 1500);\r\n    }\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({\r\n      visible: nextProps.visible,\r\n      serial_no: nextProps.editPlantData.serialNo,\r\n      equipment: nextProps.editPlantData.equipmentName,\r\n      equipmentEdit: nextProps.editPlantData.equipmentId,\r\n      plant: nextProps.editPlantData.plantName,\r\n      plantEdit: nextProps.editPlantData.plantCode,\r\n      model_name: nextProps.editPlantData.modelName,\r\n      brand_name: nextProps.editPlantData.brandName,\r\n      description: nextProps.editPlantData.description,\r\n      type: nextProps.type,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAllEquipments();\r\n    this.getAllPlants();\r\n  }\r\n\r\n  //dropdown data for plant\r\n  getAllPlants() {\r\n    api(\"GET\", \"supermix\", \"/plants\", \"\", \"\", \"\").then((res) => {\r\n      console.log(res.data.results.plants.length);\r\n      if (res.data.results.plants.length > 0) {\r\n        console.log(\"ggg\");\r\n        let SelectPlants = res.data.results.plants.map((post, index) => {\r\n          return (\r\n            <Option value={post.code} key={index}>\r\n              {post.name}\r\n            </Option>\r\n          );\r\n        });\r\n        this.setState({\r\n          SelectPlants,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  //dropdown data for plant\r\n  getAllEquipments() {\r\n    api(\"GET\", \"supermix\", \"/equipments\", \"\", \"\", \"\").then((res) => {\r\n      console.log(res.data.results);\r\n      if (res.data.results.equipments.length > 0) {\r\n        console.log(\"ggg\");\r\n        let SelectEquipments = res.data.results.equipments.map(\r\n          (post, index) => {\r\n            return (\r\n              <Option value={post.id} key={index}>\r\n                {post.name}\r\n              </Option>\r\n            );\r\n          }\r\n        );\r\n        this.setState({\r\n          SelectEquipments,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  handleCancel = () => {\r\n    if (this.state.type === \"edit\") {\r\n      // we call the redux function to dispatch and delete all the global redux state to close the modal\r\n      this.props.setEquipmentPlantVisiblity();\r\n    }\r\n    this.setState({\r\n      visible: false,\r\n      errormgs: \"\",\r\n      serial_no: \"\",\r\n      equipment: \"\",\r\n      plant: \"\",\r\n      brand_name: \"\",\r\n      model_name: \"\",\r\n      description: \"\",\r\n      errors: {\r\n        serial: \"\",\r\n        equipment: \"\",\r\n        plant: \"\",\r\n        brand: \"\",\r\n        model: \"\",\r\n      },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      visible,\r\n      loading,\r\n      plant,\r\n      model_name,\r\n      brand_name,\r\n      serial_no,\r\n      equipment,\r\n      description,\r\n      errors,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <PrimaryButton\r\n          onClick={this.showModal}\r\n          style={{\r\n            background: \"#001328\",\r\n            color: \"white\",\r\n            border: \"none\",\r\n            width: \"auto\",\r\n            marginLeft: \"-10px\",\r\n          }}\r\n        >\r\n          Add Plant Equipment\r\n        </PrimaryButton>\r\n        <Modal\r\n          width='480px'\r\n          visible={visible}\r\n          closable={false}\r\n          onCancel={this.handleCancel}\r\n          footer={[\r\n            <Button key='back' onClick={this.handleCancel}>\r\n              Cancel\r\n            </Button>,\r\n            <PrimaryButton\r\n              key='submit'\r\n              loading={loading}\r\n              onClick={(e) => this.handleSubmit(e)}\r\n              style={{ background: \"#001328\", color: \"white\", border: \"none\" }}\r\n            >\r\n              {this.state.type === \"edit\" ? \"Edit\" : \"Save\"}\r\n            </PrimaryButton>,\r\n          ]}\r\n          title={\r\n            <MasterLevelFormTitle>\r\n              <p\r\n                style={{\r\n                  color: \"white\",\r\n                }}\r\n              >\r\n                {this.state.type === \"edit\"\r\n                  ? \"Edit Plant Equipment\"\r\n                  : \"Add Plant Equipment\"}\r\n              </p>\r\n              <Icon\r\n                type='close-circle'\r\n                onClick={this.handleCancel}\r\n                style={{\r\n                  color: \"white\",\r\n                }}\r\n              />\r\n            </MasterLevelFormTitle>\r\n          }\r\n        >\r\n          <MasterLevelForm>\r\n            {/* <Icon type=\"close-circle\" onClick={this.handleCancel} style={{marginLeft:'300px',marginTop:'-65px',color:'white'}}/> */}\r\n\r\n            {/* Code */}\r\n\r\n            <div className='input_wrapper'>\r\n              <label for='serial_no' className='label'>\r\n                Serial No:\r\n              </label>\r\n              <Input\r\n                id='serial_no'\r\n                name='serial_no'\r\n                placeholder='Enter Serial No '\r\n                value={serial_no}\r\n                onChange={this.handleChange}\r\n              />\r\n              {this.state.errormgs.message === \"Plantequipment\" ? (\r\n                <div style={error}>{HandelError(this.state.errormgs)}</div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {errors.serial.length > 0 && (\r\n                <div style={error}>{errors.serial}</div>\r\n              )}\r\n              <div style={{ height: \"8px\" }}></div>\r\n            </div>\r\n\r\n            {/* User Role */}\r\n            <div className='input_wrapper'>\r\n              <label for='equipment' className='label'>\r\n                Equipment :\r\n              </label>\r\n\r\n              <Select\r\n                id='equipment'\r\n                name='equipment'\r\n                placeholder='Select Equipment'\r\n                style={{ width: 170 }}\r\n                value={equipment}\r\n                onChange={(value) => this.handleSelect(\"equipment\", value)}\r\n              >\r\n                {this.state.SelectEquipments}\r\n                {/* <Option value={1}>Equipment 01</Option>\r\n                <Option value={2}>Equipment 02</Option> */}\r\n              </Select>\r\n              {errors.equipment.length > 0 && (\r\n                <div style={error}>{errors.equipment}</div>\r\n              )}\r\n              <div style={{ height: \"8px\" }}></div>\r\n            </div>\r\n\r\n            <div className='input_wrapper'>\r\n              <label for='plant' className='label'>\r\n                Plant :\r\n              </label>\r\n\r\n              <Select\r\n                id='plant'\r\n                name='plant'\r\n                placeholder='Select Plant'\r\n                style={{ width: 170 }}\r\n                value={plant}\r\n                onChange={(value) => this.handleSelect(\"plant\", value)}\r\n              >\r\n                {this.state.SelectPlants}\r\n                {/* <Option value='p01'>Plant 01</Option>\r\n                <Option value='p02'>Plant 02</Option> */}\r\n              </Select>\r\n              {errors.plant.length > 0 && (\r\n                <div style={error}>{errors.plant}</div>\r\n              )}\r\n              <div style={{ height: \"8px\" }}></div>\r\n            </div>\r\n\r\n            <div className='input_wrapper'>\r\n              <label for='brand_name' className='label'>\r\n                Brand Name:\r\n              </label>\r\n\r\n              <Input\r\n                id='brand_name'\r\n                name='brand_name'\r\n                placeholder='Enter Brand Name'\r\n                value={brand_name}\r\n                onChange={this.handleChange}\r\n              />\r\n              {errors.brand.length > 0 && (\r\n                <div style={error}>{errors.brand}</div>\r\n              )}\r\n              <div style={{ height: \"2px\" }}></div>\r\n            </div>\r\n            <div className='input_wrapper'>\r\n              <label for='model_name' className='label'>\r\n                Model Name:\r\n              </label>\r\n\r\n              <Input\r\n                id='model_name'\r\n                name='model_name'\r\n                placeholder='Enter Model Name'\r\n                value={model_name}\r\n                onChange={this.handleChange}\r\n              />\r\n              {errors.model.length > 0 && (\r\n                <div style={error}>{errors.model}</div>\r\n              )}\r\n              <div style={{ height: \"10px\" }}></div>\r\n            </div>\r\n\r\n            {/* Description */}\r\n            <div className='input_wrapper'>\r\n              <label for='description' className='label'>\r\n                Description:\r\n              </label>\r\n              <TextArea\r\n                id='description'\r\n                name='description'\r\n                placeholder='Enter Description'\r\n                value={description}\r\n                onChange={this.handleChange}\r\n                style={{ width: \"170px\" }}\r\n              />\r\n            </div>\r\n          </MasterLevelForm>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  //getting the global redux state to get the data from the EditPlantReducer.js\r\n  return {\r\n    visible: state.plantLevelReducers.EditPlantReducer.visible,\r\n    type: state.plantLevelReducers.EditPlantReducer.type,\r\n    editPlantData: state.plantLevelReducers.EditPlantReducer.editPlantData,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    // setting visible to false if we close the modal .. and all state data will be deleted if this function is dispatched\r\n    setEquipmentPlantVisiblity: () => {\r\n      dispatch({ type: DISABLE_EDIT_MODE });\r\n      console.log(\"edit modal closed\");\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddEquipmentPlant);\r\n","import React, { Component } from \"react\";\r\nimport { FlexContainer } from \"../../../styledcomponents/container/FlexGrid\";\r\n\r\nimport Paragraph from \"antd/lib/typography/Paragraph\";\r\nimport AddEquipmentPlant from \"../equipmentplant/AddEquipmentPlant\";\r\n\r\nconst style = {\r\n  fontSize: \"medium\",\r\n  fontWeight: \"600\",\r\n  alignSelf: \"auto\",\r\n  padding: \"10px\",\r\n};\r\n\r\nexport default class EquipmentPlantTitle extends Component {\r\n  render() {\r\n    return (\r\n      <FlexContainer titles leveltitles>\r\n        <Paragraph style={style}> Plant Equipment</Paragraph>\r\n        <AddEquipmentPlant reload={this.props.reload} />\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapStateToProps = state => {};\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     showAddEmployeeDrawer: () => {\r\n//       dispatch({ type: OPEN_ADD_NEW_EMPLOYEE_DRAWER });\r\n//       console.log(\"add new employee click dispatched\");\r\n//     }\r\n//   };\r\n// };\r\n\r\n// export default connect(\r\n//   mapStateToProps,\r\n//   mapDispatchToProps\r\n// )(EmployeeMasterTitle);\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\nimport { Popconfirm, Divider, Icon } from \"antd\";\r\n\r\nimport { AntTable } from \"../../../styledcomponents/table/AntTabl\";\r\nimport EquipmentPlantTitle from \"../title/EquipmentPlantTitle\";\r\nimport { SWITCH_TO_EDIT_MODE } from \"../../../../redux/action/master/plantlevel/PlantLevel\";\r\nimport { connect } from \"react-redux\";\r\nimport { api } from \"../../../services/AxiosService\";\r\nimport Notification from \"../../../Constant/Notification\";\r\n\r\n// const ep = [\r\n//   {\r\n//     serialNo: \"SN001\",\r\n//     equipment: \"Pan\",\r\n//     plant: \"Peliyagoda\",\r\n//     modelName: \"DU 1504552\",\r\n//     brandName: \"HP\"\r\n//   }\r\n// ];\r\n\r\nclass ManageEquipmentPlant extends Component {\r\n  state = {\r\n    filteredInfo: null,\r\n    sortedInfo: null,\r\n    searchText: \"\",\r\n    visible: false,\r\n    size: \"small\",\r\n    type: \"add\",\r\n    data: \"\"\r\n  };\r\n\r\n  componentWillMount() {\r\n    if (window.screen.width > 1900) {\r\n      console.log(\"hooray\");\r\n      this.setState({\r\n        size: \"large\"\r\n      });\r\n    } else if (window.screen.width < 1440) {\r\n      this.setState({\r\n        size: \"small\"\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getallEquipmentPlant();\r\n  }\r\n\r\n  //get all\r\n  getallEquipmentPlant = () => {\r\n    console.log(\"api\");\r\n    api(\"GET\", \"supermix\", \"/plantequipments\", \"\", \"\", \"\").then(res => {\r\n      console.log(res);\r\n      this.setState({\r\n        data: res.data.results.plantEquipments\r\n      });\r\n    });\r\n  };\r\n\r\n  //delete\r\n  onConfirmdelete(serialNo) {\r\n    console.log(\"delete\");\r\n    console.log(serialNo);\r\n\r\n    api(\"DELETE\", \"supermix\", \"/plantequipment\", \"\", \"\", serialNo).then(res => {\r\n      console.log(res.data);\r\n      this.getallEquipmentPlant();\r\n      Notification(\"success\", res.data.message);\r\n    });\r\n    console.log(this.state.id);\r\n  }\r\n\r\n  handleOk = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleCancel = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleChange = (pagination, filters, sorter) => {\r\n    console.log(\"Various parameters\", pagination, filters, sorter);\r\n    this.setState({\r\n      filteredInfo: filters,\r\n      sortedInfo: sorter\r\n    });\r\n  };\r\n\r\n  onChange(pageNumber) {\r\n    console.log(\"Page: \", pageNumber);\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"Serial No\",\r\n        dataIndex: \"serialNo\",\r\n        key: \"serialNo\"\r\n        // width: \"4%\",\r\n      },\r\n      {\r\n        title: \"Equipment\",\r\n        dataIndex: \"equipmentName\",\r\n        key: \"equipmentName\"\r\n        // width: \"6%\",\r\n      },\r\n\r\n      {\r\n        title: \"Plant\",\r\n        dataIndex: \"plantName\",\r\n        key: \"plantName\"\r\n        // width: \"6%\",\r\n      },\r\n      {\r\n        title: \"Brand Name\",\r\n        dataIndex: \"brandName\",\r\n        key: \"brandName\"\r\n        // width: \"6%\",\r\n      },\r\n      {\r\n        title: \"Model Name\",\r\n        dataIndex: \"modelName\",\r\n        key: \"modelName\"\r\n        // width: \"6%\",\r\n      },\r\n      {\r\n        title: \"Description\",\r\n        dataIndex: \"description\",\r\n        key: \"description\"\r\n        // width: \"6%\",\r\n      },\r\n      {\r\n        title: \"Edit & Delete\",\r\n        key: \"action\",\r\n        width: \"12%\",\r\n        render: (text, record) => (\r\n          <span>\r\n            <a>\r\n              <Icon\r\n                type=\"edit\"\r\n                onClick={this.props.passEditEquipmentPlantRecordtoModal.bind(\r\n                  this,\r\n                  record\r\n                )}\r\n              />\r\n            </a>\r\n            <Divider type=\"vertical\" />\r\n            <a>\r\n              <Popconfirm\r\n                title=\"Are you sure you want to Delete this?\"\r\n                icon={<Icon type=\"question-circle-o\" />}\r\n                onConfirm={this.onConfirmdelete.bind(this, record.serialNo)}\r\n              >\r\n                <a href=\"#\">\r\n                  <Icon type=\"delete\" style={{ color: \"red\" }}></Icon>\r\n                </a>\r\n              </Popconfirm>\r\n            </a>\r\n          </span>\r\n        )\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <AntTable\r\n        length\r\n        title={() => <EquipmentPlantTitle reload={this.getallEquipmentPlant} />}\r\n        columns={columns}\r\n        // dataSource={ep}\r\n        dataSource={this.state.data}\r\n        onChange={this.handleChange}\r\n        pagination={{ defaultPageSize: 8 }}\r\n        size={this.state.size}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => null;\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // if this function dispatches modal will be shown and the data will be drawn :)\r\n    passEditEquipmentPlantRecordtoModal: record => {\r\n      //this payload is the data we pass into redux which is in the row which we clicked\r\n      dispatch({ type: SWITCH_TO_EDIT_MODE, payload: record });\r\n      console.log(record);\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ManageEquipmentPlant);\r\n","import React, { Component } from \"react\";\r\nimport { FlexContainer } from \"../../styledcomponents/container/FlexGrid\";\r\nimport EquipmentTitleArea from \"./EquipmentTitleArea\";\r\n\r\nimport ManageEquipment from \"./equipment/ManageEquipment\";\r\n\r\nimport ManageCalibration from \"./calibration/ManageCalibration\";\r\nimport ManageEquipmentPlant from \"./equipmentplant/ManageEquipmentPlant\";\r\n\r\nexport default class EquipmentMaster extends Component {\r\n  state = {\r\n    type: \"\"\r\n  };\r\n\r\n  typechange = type => {\r\n    console.log(type);\r\n    this.setState({ type: type });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <FlexContainer leveltileareafixed>\r\n        <EquipmentTitleArea type={this.typechange} />\r\n        {this.state.type === \"equipment\" ? (\r\n          <ManageEquipment />\r\n        ) : this.state.type === \"equipmentplant\" ? (\r\n          <ManageEquipmentPlant />\r\n        ) : (\r\n          <ManageCalibration />\r\n        )}\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Icon } from \"antd\";\r\nimport BasicCard from \"../../styledcomponents/card/BasicCard\";\r\n\r\nimport {\r\n  TileArea,\r\n  TileAreaText,\r\n  TileAreaAction\r\n} from \"../../styledcomponents/card/TileArea\";\r\n\r\nexport default class TestLevelTileArea extends Component {\r\n  statusChange1 = () => {\r\n    console.log(\"equipment\");\r\n    this.props.type(\"equipment\");\r\n  };\r\n  statusChange2 = () => {\r\n    this.props.type(\"testlevel\");\r\n    console.log(\"testlevel\");\r\n  };\r\n  render() {\r\n    return (\r\n      <TileArea>\r\n        {/* <BasicCard\r\n          finalproduct\r\n          size=\"small\"\r\n          className=\"test_basic_card\"\r\n          hoverable={true}\r\n            onClick={this.statusChange1}\r\n        >\r\n          <div className=\"test_text_area\">Test Parameter</div>\r\n          <div className=\"test_action_area\">\r\n            <Icon\r\n              filled\r\n              type=\"snippets\"\r\n              style={{ color: \"red\", fontSize: \"22px\" }}\r\n            />\r\n          </div>\r\n        </BasicCard> */}\r\n        <BasicCard\r\n          finalproduct\r\n          tileareacard\r\n          size='small'\r\n          className='test_basic_card'\r\n          hoverable={true}\r\n          onClick={this.statusChange2}\r\n        >\r\n          <TileAreaText u>Test Type</TileAreaText>\r\n          <TileAreaAction>\r\n            <Icon\r\n              filled\r\n              type='plus'\r\n              style={{ color: \"red\", fontSize: \"22px\" }}\r\n            />\r\n          </TileAreaAction>\r\n        </BasicCard>\r\n      </TileArea>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Input, Modal, Icon, Button, Select } from \"antd\";\r\nimport { api } from \"../../../services/AxiosService\";\r\nimport { connect } from \"react-redux\";\r\nimport Notification from \"../../../Constant/Notification\";\r\nimport HandelError from \"../../../Constant/HandleError\";\r\nimport \"./styleStatus.css\";\r\nimport { PrimaryButton } from \"../../../styledcomponents/button/button\";\r\nimport {\r\n  MasterLevelFormTitle,\r\n  MasterLevelForm\r\n} from \"../../../styledcomponents/form/MasterLevelForms\";\r\nimport { DISABLE_EDIT_MODE } from \"../../../../redux/action/master/plantlevel/PlantLevel\";\r\n\r\nconst error = {\r\n  color: \"red\",\r\n  fontSize: \"12px\",\r\n  width: \"160px\",\r\n  height: \"0.2px\"\r\n};\r\nconst Option = Select;\r\nclass AddTestType extends Component {\r\n  state = {\r\n    loading: false,\r\n    visible: false,\r\n    errors: {\r\n      test_type: \"\"\r\n    },\r\n    errormgs: \"\",\r\n    code: \"\",\r\n    test_type: \"\",\r\n    classification: \"\",\r\n    materialSubCategoryId: \"\",\r\n    classification: \"\",\r\n    editmaterialSubCategoryId: \"\",\r\n    type: \"add\"\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n      errors: {\r\n        test_type: \"\"\r\n      },\r\n      errormgs: \"\",\r\n      test_type: \"\",\r\n      classification: \"\",\r\n      materialSubCategoryId: \"\",\r\n      type: \"add\"\r\n    });\r\n  };\r\n\r\n  handleChange = (event, field) => {\r\n    this.setState({ [field]: event.target.value });\r\n    this.setState({ errormgs: \"\" });\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    let errors = this.state.errors;\r\n    // console.log(name + \" is \\t\" + value);\r\n    switch (name) {\r\n      case \"test_type\":\r\n        errors.test_type =\r\n          value.length === 0\r\n            ? \"test type can't be empty\"\r\n            : value.length < 3\r\n            ? \"test type \\n must be 3 characters long!\"\r\n            : !isNaN(value)\r\n            ? \"test type won't allow only letters\"\r\n            : \"\";\r\n        break;\r\n      case \"classification\":\r\n        errors.test_type =\r\n          value.length === 0\r\n            ? \"classification can't be empty\"\r\n            : value.length < 1\r\n            ? \"classification \\n must be 3 characters long!\"\r\n            : \"\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ errors, [name]: value });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    if (this.state.type === \"edit\") {\r\n      this.props.setTestTypeVisibility();\r\n    }\r\n    this.setState({\r\n      visible: false,\r\n      errors: {\r\n        test_type: \"\"\r\n      },\r\n      errormgs: \"\",\r\n      test_type: \"\",\r\n      type: \"add\"\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    const {\r\n      errors,\r\n      test_type,\r\n      code,\r\n      classification,\r\n      materialSubCategoryId,\r\n      editmaterialSubCategoryId\r\n    } = this.state;\r\n    e.preventDefault();\r\n    if (test_type.length === 0) {\r\n      this.setState({\r\n        errors: {\r\n          test_type: \"test type can't be empty\"\r\n        }\r\n      });\r\n    } else if (errors.test_type.length === 0) {\r\n      console.log(\"form is valid\");\r\n      if (this.state.type === \"edit\") {\r\n        const data = {\r\n          id: code,\r\n          type: test_type,\r\n          classification: classification,\r\n          materialSubCategoryId: editmaterialSubCategoryId\r\n        };\r\n        console.log(data);\r\n        api(\"PUT\", \"supermix\", \"/test-type\", \"\", data, \"\")\r\n          .then(\r\n            res => {\r\n              console.log(res.data);\r\n\r\n              if (res.data.status === \"VALIDATION_FAILURE\") {\r\n                console.log(\"update\");\r\n                this.responeserror(res.data.results.name.message);\r\n              } else {\r\n                Notification(\"success\", res.data.message);\r\n                this.props.reload();\r\n                this.setState({\r\n                  loading: true,\r\n                  errors: {\r\n                    test_type: \"\"\r\n                  },\r\n                  errormgs: \"\",\r\n                  test_type: \"\",\r\n                  materialSubCategoryId: \"\",\r\n                  classification: \"\",\r\n                  editmaterialSubCategoryId: \"\"\r\n                });\r\n                setTimeout(() => {\r\n                  this.setState({ loading: false, visible: false });\r\n                }, 500);\r\n              }\r\n            },\r\n            error => {\r\n              this.setState({\r\n                errorvalmegss: error.validationFailures[0]\r\n              });\r\n              console.log(\"DEBUG34: \", error);\r\n              console.log(HandelError(error.validationFailures[0]));\r\n            }\r\n          )\r\n          .catch(error => {\r\n            // this.setState({\r\n            //   errormgs: \"Plant Name Exist\"\r\n            // });\r\n            console.log(error);\r\n          });\r\n      } else {\r\n        const data = {\r\n          type: test_type,\r\n          classification: classification,\r\n          materialSubCategoryId: materialSubCategoryId\r\n        };\r\n        console.log(data);\r\n        api(\"POST\", \"supermix\", \"/test-type\", \"\", data, \"\").then(\r\n          res => {\r\n            console.log(res.data);\r\n            if (res.data.status === \"VALIDATION_FAILURE\") {\r\n              console.log(\"add\");\r\n              this.responeserror(res.data.results.name.message);\r\n            } else {\r\n              Notification(\"success\", res.data.message);\r\n              this.props.reload();\r\n\r\n              this.setState({\r\n                loading: true,\r\n                errors: {\r\n                  test_type: \"\"\r\n                },\r\n                errormgs: \"\",\r\n                test_type: \"\",\r\n                materialSubCategoryId: \"\",\r\n                classification: \"\",\r\n                editmaterialSubCategoryId: \"\"\r\n              });\r\n              setTimeout(() => {\r\n                this.setState({ loading: false, visible: false });\r\n              }, 500);\r\n            }\r\n          },\r\n          error => {\r\n            this.setState({\r\n              errorvalmegss: error.validationFailures[0]\r\n            });\r\n            console.log(\"DEBUG34: \", error);\r\n            console.log(HandelError(error.validationFailures[0]));\r\n          }\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    console.log(nextProps.type);\r\n    this.setState({\r\n      visible: nextProps.visible,\r\n      code: nextProps.editPlantData.id,\r\n      test_type: nextProps.editPlantData.type,\r\n      classification: nextProps.editPlantData.classification,\r\n      editmaterialSubCategoryId: nextProps.editPlantData.subCategoryId,\r\n      type: nextProps.type\r\n    });\r\n  }\r\n  handleSelect = (name, value) => {\r\n    console.log(name);\r\n    console.log(value);\r\n\r\n    const { errors } = this.state;\r\n\r\n    if (name === \"materialSubCategoryId\") {\r\n      this.setState({\r\n        materialSubCategoryId: value,\r\n        editmaterialSubCategoryId: value\r\n      });\r\n      if (value.length !== 0) {\r\n        this.setState({\r\n          errors: {\r\n            test_type: \"\"\r\n          }\r\n        });\r\n      }\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getallMaterialSubCategory();\r\n  }\r\n  getallMaterialSubCategory = () => {\r\n    console.log(\"api\");\r\n    api(\"GET\", \"supermix\", \"/material-sub-categories\", \"\", \"\", \"\").then(res => {\r\n      console.log(res);\r\n      let subCategorySelect = res.data.results.materialSubCategories.map(\r\n        (post, index) => {\r\n          return (\r\n            <Option value={post.id} key={index}>\r\n              {post.name}\r\n            </Option>\r\n          );\r\n        }\r\n      );\r\n      this.setState({\r\n        subCategorySelect\r\n      });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      visible,\r\n      loading,\r\n      type,\r\n      code,\r\n      test_type,\r\n      errors,\r\n      classification,\r\n      materialSubCategoryId,\r\n      editmaterialSubCategoryId\r\n    } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <PrimaryButton\r\n          onClick={this.showModal}\r\n          style={{\r\n            background: \"#001328\",\r\n            color: \"white\",\r\n            border: \"none\",\r\n            width: \"auto\",\r\n            marginLeft: \"-10px\"\r\n          }}\r\n        >\r\n          Add Test Type\r\n        </PrimaryButton>\r\n        <Modal\r\n          className='addsubcategorymodal'\r\n          visible={visible}\r\n          closable={false}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          footer={[\r\n            <Button key='back' onClick={this.handleCancel}>\r\n              Cancel\r\n            </Button>,\r\n            <PrimaryButton\r\n              key='submit'\r\n              loading={loading}\r\n              onClick={e => this.handleSubmit(e)}\r\n              style={{ background: \"#001328\", color: \"white\", border: \"none\" }}\r\n            >\r\n              {type === \"edit\" ? \"Edit\" : \"Save\"}\r\n            </PrimaryButton>\r\n          ]}\r\n          title={\r\n            <MasterLevelFormTitle>\r\n              <p\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                {type === \"edit\" ? \"Edit Test Type\" : \"Add Test Type\"}\r\n              </p>\r\n              <Icon\r\n                type='close-circle'\r\n                onClick={this.handleCancel}\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              />\r\n            </MasterLevelFormTitle>\r\n          }\r\n          width='330px'\r\n        >\r\n          <MasterLevelForm>\r\n            {/* Test Type */}\r\n            {type === \"edit\" ? (\r\n              <div className='input_wrapper'>\r\n                <label for='code' className='label'>\r\n                  Code :\r\n                </label>\r\n\r\n                <Input id='code' name='code' value={code} disabled />\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n\r\n            {/* Test Type */}\r\n            <div className='input_wrapper'>\r\n              <label for='test_type' className='label'>\r\n                Test Type:\r\n              </label>\r\n\r\n              <Input\r\n                id='test_type'\r\n                name='test_type'\r\n                placeholder='Enter Test Type'\r\n                value={test_type}\r\n                onChange={this.handleChange}\r\n              />\r\n              {errors.test_type.length > 0 && (\r\n                <div style={error}>{errors.test_type}</div>\r\n              )}\r\n            </div>\r\n            <div className='input_wrapper'>\r\n              <label for='test_type' className='label'>\r\n                Classification :\r\n              </label>\r\n              <Input\r\n                id='classification'\r\n                name='classification'\r\n                placeholder='Enter Test classification'\r\n                value={classification}\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n            <div className='input_wrapper'>\r\n              <label for='sub_category' className='label'>\r\n                Sub Category:\r\n              </label>\r\n\r\n              <Select\r\n                placeholder='Select Sub Category'\r\n                id='materialSubCategoryId'\r\n                name='materialSubCategoryId '\r\n                style={{ width: 170 }}\r\n                value={editmaterialSubCategoryId}\r\n                onChange={value =>\r\n                  this.handleSelect(\"materialSubCategoryId\", value)\r\n                }\r\n              >\r\n                {this.state.subCategorySelect}\r\n              </Select>\r\n            </div>\r\n          </MasterLevelForm>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  //getting the global redux state to get the data from the EditPlantReducer.js\r\n  return {\r\n    visible: state.plantLevelReducers.EditPlantReducer.visible,\r\n    type: state.plantLevelReducers.EditPlantReducer.type,\r\n    editPlantData: state.plantLevelReducers.EditPlantReducer.editPlantData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setTestTypeVisibility: () => {\r\n      dispatch({ type: DISABLE_EDIT_MODE });\r\n      console.log(\"edit modal closed\");\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTestType);\r\n","import React, { Component } from \"react\";\r\nimport { FlexContainer } from \"../../../styledcomponents/container/FlexGrid\";\r\n\r\nimport Paragraph from \"antd/lib/typography/Paragraph\";\r\nimport AddTestType from \"../testtype/AddTestType\";\r\n\r\nconst style = {\r\n  fontSize: \"medium\",\r\n  fontWeight: \"600\",\r\n  alignSelf: \"auto\",\r\n  padding: \"10px\"\r\n};\r\n\r\nexport default class TestLevelTitle extends Component {\r\n  render() {\r\n    return (\r\n      <FlexContainer titles leveltitles>\r\n        <Paragraph style={style}>Test Type</Paragraph>\r\n        <AddTestType reload={this.props.reload} />\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapStateToProps = state => {};\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     showAddEmployeeDrawer: () => {\r\n//       dispatch({ type: OPEN_ADD_NEW_EMPLOYEE_DRAWER });\r\n//       console.log(\"add new employee click dispatched\");\r\n//     }\r\n//   };\r\n// };\r\n\r\n// export default connect(\r\n//   mapStateToProps,\r\n//   mapDispatchToProps\r\n// )(EmployeeMasterTitle);\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\nimport { Popconfirm, Divider, Icon } from \"antd\";\r\n\r\nimport \"./styleStatus.css\";\r\nimport { AntTable } from \"../../../styledcomponents/table/AntTabl\";\r\nimport TestLevelTitle from \"../title/TestLevelTitle\";\r\nimport { connect } from \"react-redux\";\r\nimport { SWITCH_TO_EDIT_MODE } from \"../../../../redux/action/master/plantlevel/PlantLevel\";\r\nimport { api } from \"../../../services/AxiosService\";\r\nimport Notification from \"../../../Constant/Notification\";\r\n\r\n// const data = [{ id: \"QC/MA\", type: \"QC Manager\" }];\r\n\r\nclass ManageTestType extends Component {\r\n  state = {\r\n    visible: false,\r\n    size: \"small\",\r\n    testTypeList: []\r\n  };\r\n\r\n  componentWillMount() {\r\n    if (window.screen.width > 1900) {\r\n      console.log(\"hooray\");\r\n      this.setState({\r\n        size: \"large\"\r\n      });\r\n    } else if (window.screen.width < 1440) {\r\n      this.setState({\r\n        size: \"small\"\r\n      });\r\n    }\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  handleCancel = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleChange = (pagination, filters, sorter) => {\r\n    console.log(\"Various parameters\", pagination, filters, sorter);\r\n    this.setState({\r\n      filteredInfo: filters,\r\n      sortedInfo: sorter\r\n    });\r\n  };\r\n\r\n  onChange(pageNumber) {\r\n    console.log(\"Page: \", pageNumber);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAllTestType();\r\n  }\r\n\r\n  getAllTestType = () => {\r\n    let datalist = [];\r\n\r\n    api(\"GET\", \"supermix\", \"/test-types\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data.results);\r\n      res.data.results.testTypes.map((post, index) => {\r\n        datalist.push({\r\n          id: post.id,\r\n          type: post.type,\r\n          classification: post.classification,\r\n          subCategoryName: post.materialSubCategory.name,\r\n          subCategoryId: post.materialSubCategory.id\r\n        });\r\n      });\r\n      this.setState({\r\n        testTypeList: datalist\r\n      });\r\n    });\r\n  };\r\n\r\n  onConfirmdelete(id) {\r\n    console.log(id);\r\n    api(\"DELETE\", \"supermix\", \"/test-type\", \"\", \"\", id).then(res => {\r\n      console.log(res.data);\r\n      this.getAllTestType();\r\n      Notification(\"success\", res.data.message);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        width: \"4%\"\r\n      },\r\n      {\r\n        title: \"Type\",\r\n        dataIndex: \"type\",\r\n        key: \"type\",\r\n        width: \"8%\"\r\n      },\r\n      {\r\n        title: \"Classification\",\r\n        dataIndex: \"classification\",\r\n        key: \"classification\",\r\n        width: \"8%\"\r\n      },\r\n      {\r\n        title: \"SubCategory\",\r\n        dataIndex: \"subCategoryName\",\r\n        key: \"subCategoryName\",\r\n        width: \"8%\"\r\n      },\r\n\r\n      {\r\n        title: \"Edit & Delete\",\r\n        key: \"action\",\r\n        width: \"6%\",\r\n        render: (text, record = this.state.testTypeList) => (\r\n          <span>\r\n            <a>\r\n              <Icon\r\n                type='edit'\r\n                onClick={this.props.passEditTestTypeRecordToModal.bind(\r\n                  this,\r\n                  record\r\n                )}\r\n              />\r\n            </a>\r\n            <Divider type='vertical' />\r\n            <a>\r\n              <Popconfirm\r\n                title='Are you sure you want to Delete this?'\r\n                icon={\r\n                  <Icon type='question-circle-o' style={{ color: \"red\" }} />\r\n                }\r\n                onConfirm={this.onConfirmdelete.bind(this, record.id)}\r\n              >\r\n                <a href='#'>\r\n                  <Icon type='delete' style={{ color: \"red\" }}></Icon>\r\n                </a>\r\n              </Popconfirm>\r\n            </a>\r\n          </span>\r\n        )\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <AntTable\r\n        title={() => <TestLevelTitle reload={this.getAllTestType} />}\r\n        columns={columns}\r\n        dataSource={this.state.testTypeList}\r\n        onChange={this.handleChange}\r\n        pagination={{ defaultPageSize: 7 }}\r\n        size={this.state.size}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => null;\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    passEditTestTypeRecordToModal: record => {\r\n      //this payload is the data we pass into redux which is in the row which we clicked\r\n      dispatch({ type: SWITCH_TO_EDIT_MODE, payload: record });\r\n      console.log(record);\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageTestType);\r\n","import React, { Component } from \"react\";\r\nimport { FlexContainer } from \"../../styledcomponents/container/FlexGrid\";\r\nimport TestLevelTileArea from \"./TestLevelTileArea\";\r\nimport ManageTestType from \"./testtype/ManageTestType\";\r\n\r\nexport default class TestLevelMaster extends Component {\r\n  state = {\r\n    type: \"\"\r\n  };\r\n\r\n  typechange = type => {\r\n    console.log(type);\r\n    this.setState({ type: type });\r\n  };\r\n  render() {\r\n    return (\r\n      <FlexContainer leveltileareafixed>\r\n        <TestLevelTileArea type={this.typechange} />\r\n        <ManageTestType />\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Input, Modal, Icon, Button } from \"antd\";\r\nimport HandelError from \"../../../Constant/HandleError\";\r\nimport { api } from \"../../../services/AxiosService\";\r\nimport { PrimaryButton } from \"../../../styledcomponents/button/button\";\r\nimport {\r\n  MasterLevelFormTitle,\r\n  MasterLevelForm\r\n} from \"../../../styledcomponents/form/MasterLevelForms\";\r\nimport Notificationfuc from \"../../../Constant/Notification\";\r\nimport { connect } from \"react-redux\";\r\nimport { DISABLE_EDIT_MODE } from \"../../../../redux/action/master/plantlevel/PlantLevel\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\n\r\nconst error = {\r\n  color: \"red\",\r\n  fontSize: \"12px\",\r\n  width: \"160px\",\r\n  height: \"2px\"\r\n};\r\nclass AddParameter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // console.log(this.props.editPlantData)\r\n    this.state = {\r\n      formValid: false,\r\n      errorCount: 0,\r\n      errors: {\r\n        name: \"\",\r\n        abbrivation: \"\"\r\n      },\r\n      loading: false,\r\n      visible: false,\r\n      parameter_code: \"\",\r\n      parameter_name: \"\",\r\n      parameter_abbrivation: \"\",\r\n      errormgs: \"\",\r\n      type: \"add\"\r\n    };\r\n  }\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  validateForm = errors => {\r\n    let valid;\r\n    Object.values(errors).forEach(\r\n      val => val.length > 1 && (valid = false),\r\n      (valid = true)\r\n    );\r\n    // this.setState({\r\n    //   formValid: valid\r\n    // })\r\n    console.log(valid);\r\n\r\n    return valid;\r\n  };\r\n\r\n  countErrors = errors => {\r\n    let count = 0;\r\n    Object.values(errors).forEach(val => val.length > 0 && (count = count + 1));\r\n\r\n    // this.setState({\r\n    //   errorCount: count\r\n    // })\r\n    console.log(count);\r\n\r\n    return count;\r\n  };\r\n\r\n  handleChange = (event, field) => {\r\n    this.setState({ [field]: event.target.value });\r\n    this.setState({ errormgs: \"\" });\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    let errors = this.state.errors;\r\n\r\n    switch (name) {\r\n      case \"parameter_name\":\r\n        errors.name =\r\n          value.length === 0\r\n            ? \"Parameter Name can't be empty\"\r\n            : value.length < 3\r\n            ? \"Parameter Name \\n must be 3 characters long!\"\r\n            : \"\";\r\n        break;\r\n      case \"parameter_abbrivation\":\r\n        errors.abbrivation =\r\n          value.length === 0\r\n            ? \"Abbrivation can't be empty\"\r\n            : value.length < 1\r\n            ? \"Abbrivation \\n must be 3 characters long!\"\r\n            : \"\";\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ errors, [name]: value });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({ loading: true });\r\n    setTimeout(() => {\r\n      this.setState({ loading: false, visible: false });\r\n    }, 500);\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({ visible: false });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (\r\n      this.state.parameter_name.length === 0 &&\r\n      this.state.parameter_abbrivation.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          name: \"Parameter Name can't be empty\",\r\n          abbrivation: \"Abbrivation can't be empty\"\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors)\r\n      });\r\n      // } else if (\r\n      //   this.state.parameter_code.length === 0 &&\r\n      //   this.state.errors.code.length === 0\r\n      // ) {\r\n      //   this.setState({\r\n      //     errors: {\r\n      //       code: this.state.errors.code || \"Code can't be empty\",\r\n      //       name: this.state.errors.name,\r\n      //       abbrivation: this.state.errors.abbrivation\r\n      //     },\r\n      //     formValid: this.validateForm(this.state.errors),\r\n      //     errorCount: this.countErrors(this.state.errors)\r\n      //   });\r\n    } else if (\r\n      this.state.parameter_name.length === 0 &&\r\n      this.state.errors.name.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          name: this.state.errors.name || \"Parameter Name can't be empty\",\r\n          abbrivation: this.state.errors.abbrivation\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors)\r\n      });\r\n    } else if (\r\n      this.state.parameter_abbrivation.length === 0 &&\r\n      this.state.errors.abbrivation.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          name: this.state.errors.name,\r\n          abbrivation:\r\n            this.state.errors.abbrivation || \"Abbrivation can't be empty\"\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors)\r\n      });\r\n    } else if (\r\n      this.state.errors.name.length === 0 &&\r\n      this.state.errors.abbrivation.length === 0\r\n    ) {\r\n      console.log(this.state.errors);\r\n      this.setState({ formValid: this.validateForm(this.state.errors) });\r\n      this.setState({ errorCount: this.countErrors(this.state.errors) });\r\n      console.log(this.state.formValid);\r\n      console.log(this.state.errorCount);\r\n\r\n      const data = {\r\n        // code: this.state.parameter_code,\r\n        name: this.state.parameter_name,\r\n        abbreviation: this.state.parameter_abbrivation\r\n      };\r\n      if (this.state.type === \"add\") {\r\n        const data = {\r\n          // code: this.state.parameter_code,\r\n          name: this.state.parameter_name,\r\n          abbreviation: this.state.parameter_abbrivation\r\n        };\r\n        api(\"POST\", \"supermix\", \"/parameter\", \"\", data, \"\")\r\n          .then(\r\n            res => {\r\n              console.log(res.data);\r\n              if (res.data.status === \"VALIDATION_FAILURE\") {\r\n                console.log(\"add\");\r\n                this.responeserror(res.data.results.name.message);\r\n              } else {\r\n                Notificationfuc(\"success\", res.data.message);\r\n                this.props.reload();\r\n\r\n                this.setState({ loading: true });\r\n                this.setState({\r\n                  parameter_code: \"\",\r\n                  parameter_name: \"\",\r\n                  parameter_abbrivation: \"\",\r\n                  errormgs: \"\"\r\n                });\r\n                setTimeout(() => {\r\n                  this.setState({ loading: false, visible: false });\r\n                }, 500);\r\n              }\r\n            },\r\n            error => {\r\n              this.setState({\r\n                errormgs: error.validationFailures[0]\r\n              });\r\n              console.log(\"DEBUG34: \", error);\r\n              console.log(HandelError(error.validationFailures[0]));\r\n            }\r\n          )\r\n          .catch(error => {\r\n            this.setState({\r\n              // errormgs: \"Plant Name Exist\"\r\n            });\r\n            console.log(error);\r\n          });\r\n      } else {\r\n        const data = {\r\n          id: this.state.parameter_code,\r\n          name: this.state.parameter_name,\r\n          abbreviation: this.state.parameter_abbrivation\r\n        };\r\n        console.log(data);\r\n        api(\"PUT\", \"supermix\", \"/parameter\", \"\", data, \"\")\r\n          .then(\r\n            res => {\r\n              console.log(res.data);\r\n\r\n              Notificationfuc(\"success\", res.data.message);\r\n              this.props.reload();\r\n              this.setState({ loading: true });\r\n              this.setState({\r\n                parameter_code: \"\",\r\n                parameter_name: \"\",\r\n                parameter_abbrivation: \"\",\r\n                visible: false,\r\n                type: \"add\",\r\n                errormgs: \"\"\r\n              });\r\n              setTimeout(() => {\r\n                this.setState({ loading: false, visible: false });\r\n              }, 500);\r\n            },\r\n            error => {\r\n              this.setState({\r\n                errormgs: error.validationFailures[0]\r\n              });\r\n              console.log(\"DEBUG34: \", error);\r\n              console.log(HandelError(error.validationFailures[0]));\r\n            }\r\n          )\r\n          .catch(error => {\r\n            // this.setState({\r\n            //   errormgs: \"Plant Name Exist\"\r\n            // });\r\n            // console.log(error.response.data);\r\n          });\r\n      }\r\n      console.log(data);\r\n      console.log(\"form is valid\");\r\n    }\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n      parameter_code: \"\",\r\n      parameter_name: \"\",\r\n      parameter_abbrivation: \"\"\r\n    });\r\n  };\r\n\r\n  responeserror(error) {\r\n    console.log(error);\r\n    this.setState({\r\n      errormgs: `${error} is exist`\r\n    });\r\n  }\r\n\r\n  //cancelling or closing the modal\r\n  handleCancel = () => {\r\n    if (this.state.type === \"edit\") {\r\n      // we call the redux function to dispatch and delete all the global redux state to close the modal\r\n      this.props.setPlantVisiblity();\r\n    }\r\n\r\n    this.setState({\r\n      visible: false,\r\n      formValid: false,\r\n      errors: {\r\n        code: \"\",\r\n        name: \"\",\r\n        abbrivation: \"\"\r\n      },\r\n      parameter_code: \"\",\r\n      parameter_name: \"\",\r\n      parameter_abbrivation: \"\",\r\n      errormgs: \"\"\r\n    });\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({\r\n      visible: nextProps.visible,\r\n      parameter_code: nextProps.editPlantData.id,\r\n      parameter_name: nextProps.editPlantData.name,\r\n      parameter_abbrivation: nextProps.editPlantData.abbreviation,\r\n      type: nextProps.type\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(this.props.screen);\r\n  }\r\n  render() {\r\n    const { visible, loading } = this.state;\r\n    const { errors } = this.state;\r\n    return (\r\n      <div>\r\n        <PrimaryButton\r\n          onClick={this.showModal}\r\n          style={{\r\n            background: \"#001328\",\r\n            color: \"white\",\r\n            border: \"none\",\r\n            width: \"auto\",\r\n            marginLeft: \"-10px\"\r\n          }}\r\n        >\r\n          Add Parameter\r\n        </PrimaryButton>\r\n        <Modal\r\n          width='450px'\r\n          className='addsubcategorymodal'\r\n          visible={visible}\r\n          closable={false}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          footer={[\r\n            <Button key='back' onClick={this.handleCancel}>\r\n              Return\r\n            </Button>,\r\n            <PrimaryButton\r\n              key='submit'\r\n              loading={loading}\r\n              onClick={this.handleSubmit}\r\n              style={{ background: \"#001328\", color: \"white\", border: \"none\" }}\r\n            >\r\n              {this.state.type === \"edit\" ? \"Edit\" : \"Save\"}\r\n            </PrimaryButton>\r\n          ]}\r\n          title={\r\n            <MasterLevelFormTitle>\r\n              <p\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                {this.state.type === \"edit\"\r\n                  ? \"Edit Parameter\"\r\n                  : \"Add Parameter\"}\r\n              </p>\r\n              <Icon\r\n                type='close-circle'\r\n                onClick={this.handleCancel}\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              />\r\n            </MasterLevelFormTitle>\r\n          }\r\n        >\r\n          <MasterLevelForm>\r\n\r\n\r\n            <div style={{alignItems:'left'}}>\r\n            <div className=\"input_wrapper\">\r\n              <label for=\"parameter_name\" className=\"label\">\r\n                Parameter Name:\r\n              </label>\r\n\r\n              <TextArea\r\n                id='parameter_name'\r\n                name='parameter_name'\r\n                placeholder='Enter Parameter Name'\r\n                onChange={this.handleChange}\r\n                value={this.state.parameter_name}\r\n                style={{ width: 370, height: 90 }}\r\n              />\r\n              {errors.name.length > 0 && <div style={error}>{errors.name}</div>}\r\n              {this.state.errormgs.message === \"name\" ? (\r\n                <div style={error}>{HandelError(this.state.errormgs)}</div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n\r\n            {/* Abbrivation */}\r\n            <div className='input_wrapper'>\r\n              <label for='parameter_abbrivation' className='label'>\r\n                Abbreviation:\r\n              </label>\r\n\r\n              <Input\r\n                id='parameter_abbrivation'\r\n                name='parameter_abbrivation'\r\n                placeholder='Enter Abbrivation'\r\n                onChange={this.handleChange}\r\n                value={this.state.parameter_abbrivation}\r\n                style={{width:'200px'}}\r\n              />\r\n              {errors.abbrivation.length > 0 && (\r\n                <div style={error}>{errors.abbrivation}</div>\r\n              )}\r\n              {this.state.errormgs.message === \"abbrivation\" ? (\r\n                <div style={error}>{HandelError(this.state.errormgs)}</div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n            </div>\r\n          </MasterLevelForm>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  //getting the global redux state to get the data from the EditPlantReducer.js\r\n  return {\r\n    visible: state.plantLevelReducers.EditPlantReducer.visible,\r\n    type: state.plantLevelReducers.EditPlantReducer.type,\r\n    editPlantData: state.plantLevelReducers.EditPlantReducer.editPlantData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // setting visible to false if we close the modal .. and all state data will be deleted if this function is dispatched\r\n    setPlantVisiblity: () => {\r\n      dispatch({ type: DISABLE_EDIT_MODE });\r\n      console.log(\"edit modal closed\");\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddParameter);\r\n","import React, { Component } from \"react\";\r\nimport { FlexContainer } from \"../../../styledcomponents/container/FlexGrid\";\r\n\r\nimport Paragraph from \"antd/lib/typography/Paragraph\";\r\nimport AddParameter from \"../ParameterMaster/AddParameter\";\r\n\r\nconst style = {\r\n  fontSize: \"medium\",\r\n  fontWeight: \"600\",\r\n  alignSelf: \"auto\",\r\n  padding: \"10px\"\r\n};\r\n\r\nexport default class ParameterTitle extends Component {\r\n  render() {\r\n    return (\r\n      <FlexContainer titles leveltitles>\r\n        <Paragraph style={style}>Parameter </Paragraph>\r\n        <AddParameter reload={this.props.reload} />\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\nimport { Popconfirm, Divider, Icon } from \"antd\";\r\n\r\nimport { AntTable } from \"../../../styledcomponents/table/AntTabl\";\r\nimport ParameterTitle from \"../titles/ParameterTitle\";\r\nimport { api } from \"../../../services/AxiosService\";\r\nimport { SWITCH_TO_EDIT_MODE } from \"../../../../redux/action/master/plantlevel/PlantLevel\";\r\nimport { connect } from \"react-redux\";\r\nimport Notification from \"../../../Constant/Notification\";\r\n\r\nclass ManageParameterMaster extends Component {\r\n  state = {\r\n    searchText: \"\",\r\n    visible: false,\r\n    size: \"small\",\r\n    data: \"\",\r\n    id: \"\"\r\n  };\r\n\r\n  componentWillMount() {\r\n    if (window.screen.width > 1900) {\r\n      console.log(\"hooray\");\r\n      this.setState({\r\n        size: \"large\"\r\n      });\r\n    } else if (window.screen.width < 1440) {\r\n      this.setState({\r\n        size: \"small\"\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getallParameter();\r\n  }\r\n\r\n  getallParameter = () => {\r\n    api(\"GET\", \"supermix\", \"/parameters\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data);\r\n      this.setState({\r\n        data: res.data.results.parameters\r\n      });\r\n    });\r\n  };\r\n\r\n  onConfirmdelete(code) {\r\n    console.log(code);\r\n    api(\"DELETE\", \"supermix\", \"/parameter\", \"\", \"\", code).then(res => {\r\n      console.log(res.data);\r\n      this.getallParameter();\r\n      Notification(\"success\", res.data.message);\r\n    });\r\n    console.log(this.state.id);\r\n  }\r\n\r\n  handleOk = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleCancel = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleChange = (pagination, filters, sorter) => {\r\n    console.log(\"Various parameters\", pagination, filters, sorter);\r\n  };\r\n\r\n  onChange(pageNumber) {\r\n    console.log(\"Page: \", pageNumber);\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \" Parameter Name\",\r\n        dataIndex: \"name\",\r\n        key: \"name\",\r\n        width: \"12%\"\r\n      },\r\n      {\r\n        title: \" Abbreviation\",\r\n        dataIndex: \"abbreviation\",\r\n        key: \"abbreviation\",\r\n        width: \"6%\"\r\n      },\r\n      {\r\n        title: \"Edit & Delete\",\r\n        key: \"action\",\r\n        width: \"7%\",\r\n        render: (text, record = this.state.data) => (\r\n          <span>\r\n            <a>\r\n              <Icon\r\n                type=\"edit\"\r\n                style={{ fontSize: \"1.2em\" }}\r\n                onClick={this.props.passEditPlantRecordtoModal.bind(\r\n                  this,\r\n                  record\r\n                )}\r\n              />\r\n            </a>\r\n            <Divider type=\"vertical\" />\r\n            <a>\r\n              <Popconfirm\r\n                title=\"Are you sure you want to Delete this?\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: \"red\" }} />\r\n                }\r\n                onConfirm={this.onConfirmdelete.bind(this, record.id)}\r\n              >\r\n                <a href=\"#\">\r\n                  <Icon\r\n                    type=\"delete\"\r\n                    style={{ color: \"red\", fontSize: \"1.2em\" }}\r\n                  />\r\n                </a>\r\n              </Popconfirm>\r\n            </a>\r\n          </span>\r\n        )\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <AntTable\r\n        length\r\n        title={() => <ParameterTitle reload={this.getallParameter} />}\r\n        columns={columns}\r\n        onChange={this.handleChange}\r\n        dataSource={this.state.data}\r\n        pagination={{ defaultPageSize: 7 }}\r\n        size={this.state.size}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => null;\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // if this function dispatches modal will be shown and the data will be drawn :)\r\n    passEditPlantRecordtoModal: record => {\r\n      //this payload is the data we pass into redux which is in the row which we clicked\r\n      dispatch({ type: SWITCH_TO_EDIT_MODE, payload: record });\r\n      console.log(record);\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ManageParameterMaster);\r\n","export const ROUTE_TO_PARAMETER_MASTER = \"ROUTE_TO_PARAMETER_MASTER\";\r\nexport const ROUTE_TO_MATERIAL_PARAMETER_MASTER =\r\n  \"ROUTE_TO_MATERIAL_PARAMETER_MASTER\";\r\nexport const ROUTE_TO_EQUIPMENT_PARAMETER_MASTER =\r\n  \"ROUTE_TO_EQUIPMENT_PARAMETER_MASTER\";\r\nexport const ROUTE_TO_TEST_PARAMETER_MASTER = \"ROUTE_TO_TEST_PARAMETER_MASTER\";\r\nexport const ROUTE_TO_ADDITIONAL_PARAMETER_MASTER =\r\n  \"ROUTE_TO_ADDITIONAL_PARAMETER_MASTER\";\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Icon } from \"antd\";\r\n\r\nimport BasicCard from \"../../styledcomponents/card/BasicCard\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  ROUTE_TO_PARAMETER_MASTER,\r\n  ROUTE_TO_MATERIAL_PARAMETER_MASTER,\r\n  ROUTE_TO_EQUIPMENT_PARAMETER_MASTER,\r\n  ROUTE_TO_TEST_PARAMETER_MASTER,\r\n  ROUTE_TO_ADDITIONAL_PARAMETER_MASTER\r\n} from \"../../../redux/action/master/parameter/ParameterLevel\";\r\nimport {\r\n  TileArea,\r\n  TileAreaText,\r\n  TileAreaAction\r\n} from \"../../styledcomponents/card/TileArea\";\r\n\r\nclass ParameterTileArea extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      status: true\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <TileArea>\r\n        <BasicCard\r\n          finalproduct\r\n          tileareacard\r\n          size=\"small\"\r\n          hoverable={true}\r\n          onClick={this.props.routeToParameterMaster}\r\n        >\r\n          <TileAreaText>Parameter </TileAreaText>\r\n          <TileAreaAction>\r\n            <Icon\r\n              filled\r\n              type=\"plus\"\r\n              style={{ color: \"red\", fontSize: \"22px\" }}\r\n            />\r\n          </TileAreaAction>\r\n        </BasicCard>\r\n\r\n        {/* <BasicCard\r\n          finalproduct\r\n          tileareacard\r\n          size='small'\r\n          hoverable={true}\r\n          onClick={this.props.routeToMaterialParameterMaster}\r\n        >\r\n          <TileAreaText unit>Material Parameter</TileAreaText>\r\n          <TileAreaAction>\r\n            <Icon\r\n              filled\r\n              type='plus'\r\n              style={{ color: \"red\", fontSize: \"22px\" }}\r\n            />\r\n          </TileAreaAction>\r\n        </BasicCard> */}\r\n\r\n        {/* <BasicCard\r\n          finalproduct\r\n          tileareacard\r\n          size='small'\r\n          hoverable={true}\r\n          onClick={this.props.routeToEquipmentParameterMaster}\r\n        >\r\n          <TileAreaText unit>Equipment Parameter</TileAreaText>\r\n          <TileAreaAction>\r\n            <Icon\r\n              filled\r\n              type='plus'\r\n              style={{ color: \"red\", fontSize: \"22px\" }}\r\n            />\r\n          </TileAreaAction>\r\n        </BasicCard> */}\r\n\r\n        {/* <BasicCard\r\n          finalproduct\r\n          tileareacard\r\n          size=\"small\"\r\n          className=\"parameter_basic_card\"\r\n          hoverable={true}\r\n          onClick={this.props.routeToTestParameterMaster}\r\n        >\r\n          <TileAreaText unit>Test Parameter</TileAreaText>\r\n          <TileAreaAction>\r\n            <Icon\r\n              filled\r\n              type=\"plus\"\r\n              style={{ color: \"red\", fontSize: \"22px\" }}\r\n            />\r\n          </TileAreaAction>\r\n        </BasicCard> */}\r\n\r\n        {/* <BasicCard\r\n          finalproduct\r\n          tileareacard\r\n          size=\"small\"\r\n          className=\"parameter_basic_card\"\r\n          hoverable={true}\r\n          onClick={this.props.routeToAdditionalParameterMaster}\r\n        >\r\n          <TileAreaText unit>Additional Parameter</TileAreaText>\r\n          <TileAreaAction>\r\n            <Icon\r\n              filled\r\n              type=\"plus\"\r\n              style={{ color: \"red\", fontSize: \"22px\" }}\r\n            />\r\n          </TileAreaAction>\r\n        </BasicCard> */}\r\n      </TileArea>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapStateToProps = null;\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    routeToParameterMaster: () => {\r\n      dispatch({ type: ROUTE_TO_PARAMETER_MASTER });\r\n      console.log(\"route to parameter master click dispatched\");\r\n    },\r\n    routeToMaterialParameterMaster: () => {\r\n      dispatch({ type: ROUTE_TO_MATERIAL_PARAMETER_MASTER });\r\n      console.log(\"route to material parameter click dispatched\");\r\n    },\r\n    routeToEquipmentParameterMaster: () => {\r\n      dispatch({ type: ROUTE_TO_EQUIPMENT_PARAMETER_MASTER });\r\n      console.log(\"route to equipment parameter click dispatched\");\r\n    },\r\n    routeToTestParameterMaster: () => {\r\n      dispatch({ type: ROUTE_TO_TEST_PARAMETER_MASTER });\r\n      console.log(\"route to test parameter click dispatched\");\r\n    },\r\n    routeToAdditionalParameterMaster: () => {\r\n      dispatch({ type: ROUTE_TO_ADDITIONAL_PARAMETER_MASTER });\r\n      console.log(\"route to additional parameter click dispatched\");\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ParameterTileArea);\r\n","import React, { Component } from \"react\";\r\nimport { FlexContainer } from \"../../styledcomponents/container/FlexGrid\";\r\nimport { globalHistory } from \"@reach/router\";\r\nimport ManageParameterMaster from \"./ParameterMaster/ManageParameterMaster\";\r\nimport ParameterTileArea from \"./ParameterTileArea\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ParameterMaster extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      status: true,\r\n      visible: this.props.visible\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    console.log(globalHistory.location.hash);\r\n    let orgString = globalHistory.location.hash;\r\n    let modString = orgString.substr(0, 8);\r\n    console.log(modString);\r\n  }\r\n\r\n  controlstatus = status => {\r\n    console.log(status);\r\n  };\r\n\r\n  renderComponents = () => {\r\n    if (this.props.routepath === \"/parametermaster\") {\r\n      return <ManageParameterMaster />;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <FlexContainer leveltileareafixed>\r\n        <ParameterTileArea />\r\n        {this.renderComponents()}\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    routepath:\r\n      state.parameterLevelReducers.RoutingBetweenParameterLevel.routepath\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ParameterMaster);\r\n","import React, { Component } from \"react\";\r\nimport { Icon } from \"antd\";\r\nimport BasicCard from \"../../styledcomponents/card/BasicCard\";\r\nimport \"./styleUnit.css\";\r\nimport {\r\n  TileArea,\r\n  TileAreaText,\r\n  TileAreaAction\r\n} from \"../../styledcomponents/card/TileArea\";\r\n\r\nexport default class UnitTileArea extends Component {\r\n  render() {\r\n    return (\r\n      <TileArea>\r\n        <BasicCard\r\n          finalproduct\r\n          tileareacard\r\n          size=\"small\"\r\n          hoverable={true}\r\n          //   onClick={this.statusChange1}\r\n        >\r\n          <TileAreaText unit>Manage Unit</TileAreaText>\r\n          <TileAreaAction>\r\n            <Icon\r\n              filled\r\n              type=\"plus\"\r\n              style={{ color: \"red\", fontSize: \"22px\" }}\r\n            />\r\n          </TileAreaAction>\r\n        </BasicCard>\r\n      </TileArea>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Input, Modal, Button, Icon } from \"antd\";\r\nimport { api } from \"../../services/AxiosService\";\r\nimport { PrimaryButton } from \"../../styledcomponents/button/button\";\r\nimport {\r\n  MasterLevelForm,\r\n  MasterLevelFormTitle\r\n} from \"../../styledcomponents/form/MasterLevelForms\";\r\nimport Notificationfuc from \"../../Constant/Notification\";\r\nimport { connect } from \"react-redux\";\r\nimport { DISABLE_EDIT_MODE } from \"../../../redux/action/master/plantlevel/PlantLevel\";\r\nimport HandelError from \"../../Constant/HandleError\";\r\n\r\n// function onChange(date, dateString) {\r\n//   console.log(date, dateString);\r\n// }\r\n\r\nconst error = {\r\n  color: \"red\",\r\n  fontSize: \"12px\",\r\n  width: \"160px\",\r\n  height: \"2px\"\r\n};\r\n\r\nclass UnitAddForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // console.log(this.props.editPlantData)\r\n    this.state = {\r\n      formValid: false,\r\n      errorCount: 0,\r\n      errors: {\r\n        unit: \"\"\r\n      },\r\n      loading: false,\r\n      visible: false,\r\n      unit_code: \"\",\r\n      unit_name: \"\",\r\n\r\n      errormgs: \"\",\r\n      type: \"add\"\r\n    };\r\n  }\r\n\r\n  validateForm = errors => {\r\n    let valid;\r\n    Object.values(errors).forEach(\r\n      val => val.length > 1 && (valid = false),\r\n      (valid = true)\r\n    );\r\n    // this.setState({\r\n    //   formValid: valid\r\n    // })\r\n    console.log(valid);\r\n\r\n    return valid;\r\n  };\r\n\r\n  countErrors = errors => {\r\n    let count = 0;\r\n    Object.values(errors).forEach(val => val.length > 0 && (count = count + 1));\r\n\r\n    // this.setState({\r\n    //   errorCount: count\r\n    // })\r\n    console.log(count);\r\n\r\n    return count;\r\n  };\r\n\r\n  handleChange = (event, field) => {\r\n    this.setState({ [field]: event.target.value });\r\n    this.setState({ errormgs: \"\" });\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    let errors = this.state.errors;\r\n\r\n    switch (name) {\r\n      case \"unit_name\":\r\n        errors.unit =\r\n          value.length === 0\r\n            ? \"Unit Name can't be empty\"\r\n            : value.length < 1\r\n            ? \"Unit Name \\n must be one characters long!\"\r\n            : value.replace(/^[a-zA-Z-,%]+(\\s{0,1}[a-zA-Z-, ])*$/, \"\")\r\n            ? \"Unit allow only letters\"\r\n            : \"\";\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ errors, [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (this.state.unit_name.length === 0) {\r\n      this.setState({\r\n        errors: {\r\n          unit: \"Unit can't be empty\"\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors)\r\n      });\r\n    } else if (this.state.errors.unit.length === 0) {\r\n      console.log(this.state.errors);\r\n      this.setState({ formValid: this.validateForm(this.state.errors) });\r\n      this.setState({ errorCount: this.countErrors(this.state.errors) });\r\n      console.log(this.state.formValid);\r\n      console.log(this.state.errorCount);\r\n\r\n      if (this.state.type === \"edit\") {\r\n        const data = {\r\n          id: this.state.unit_code,\r\n          unit: this.state.unit_name\r\n        };\r\n        console.log(this.state.type);\r\n        api(\"PUT\", \"supermix\", \"/unit\", \"\", data, \"\")\r\n          .then(\r\n            res => {\r\n              console.log(res.data);\r\n\r\n              if (res.data.status === \"VALIDATION_FAILURE\") {\r\n                console.log(\"update\");\r\n                this.responeserror(res.data.results.name.message);\r\n              } else {\r\n                Notificationfuc(\"success\", res.data.message);\r\n                this.props.reload();\r\n\r\n                this.setState({\r\n                  unit_code: \"\",\r\n                  unit_name: \"\",\r\n                  loading: true,\r\n                  errormgs: \"\"\r\n                });\r\n                setTimeout(() => {\r\n                  this.setState({ loading: false, visible: false });\r\n                }, 500);\r\n              }\r\n            },\r\n            error => {\r\n              this.setState({\r\n                errormgs: error.validationFailures[0]\r\n              });\r\n              console.log(\"DEBUG34: \", error);\r\n              console.log(HandelError(error.validationFailures[0]));\r\n            }\r\n          )\r\n          .catch(error => {\r\n            // this.setState({\r\n            //   errormgs: \"Plant Name Exist\"\r\n            // });\r\n            // console.log(error.response.data);\r\n          });\r\n      } else {\r\n        const data = {\r\n          unit: this.state.unit_name\r\n        };\r\n        api(\"POST\", \"supermix\", \"/unit\", \"\", data, \"\")\r\n          .then(\r\n            res => {\r\n              console.log(res.data);\r\n              if (res.data.status === \"VALIDATION_FAILURE\") {\r\n                console.log(\"add\");\r\n                this.responeserror(res.data.results.name.message);\r\n              } else {\r\n                Notificationfuc(\"success\", res.data.message);\r\n                this.props.reload();\r\n                this.setState({\r\n                  loading: true,\r\n                  unit_code: \"\",\r\n                  unit_name: \"\",\r\n                  errormgs: \"\"\r\n                });\r\n                setTimeout(() => {\r\n                  this.setState({ loading: false, visible: false });\r\n                }, 500);\r\n              }\r\n            },\r\n            error => {\r\n              this.setState({\r\n                errormgs: error.validationFailures[0]\r\n              });\r\n              console.log(\"DEBUG34: \", error);\r\n              console.log(HandelError(error.validationFailures[0]));\r\n            }\r\n          )\r\n          .catch(error => {\r\n            this.setState({\r\n              // errormgs: \"Plant Name Exist\"\r\n            });\r\n            // console.log(error.response.data);\r\n          });\r\n      }\r\n      // console.log(data);\r\n      console.log(\"form is valid\");\r\n    }\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n      errors: {\r\n        unit: \"\"\r\n      },\r\n      unit_code: \"\",\r\n      unit_name: \"\",\r\n      errormgs: \"\",\r\n      formValid: false,\r\n      errorCount: 0,\r\n      type: \"add\"\r\n    });\r\n  };\r\n\r\n  responeserror(error) {\r\n    console.log(error);\r\n    this.setState({\r\n      errormgs: `${error} is exist`\r\n    });\r\n  }\r\n\r\n  //cancelling or closing the modal\r\n  handleCancel = () => {\r\n    this.setState({ visible: false });\r\n    // we call the redux function to dispatch and delete all the global redux state to close the modal\r\n    this.props.setUnitVisiblity();\r\n    this.setState({\r\n      errormgs: \"\",\r\n      errors: {\r\n        unit: \"\"\r\n      },\r\n      unit_code: \"\",\r\n      unit_name: \"\"\r\n    });\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({\r\n      visible: nextProps.visible,\r\n      unit_code: nextProps.editPlantData.id,\r\n      unit_name: nextProps.editPlantData.unit,\r\n      type: nextProps.type\r\n    });\r\n  }\r\n  render() {\r\n    const { visible, loading } = this.state;\r\n    const { errors } = this.state;\r\n    console.log(this.state.errorCount);\r\n\r\n    return (\r\n      <div>\r\n        <PrimaryButton\r\n          onClick={this.showModal}\r\n          style={{\r\n            background: \"#001328\",\r\n            color: \"white\",\r\n            border: \"none\",\r\n            width: \"120px\",\r\n            marginLeft: \"-10px\"\r\n          }}\r\n        >\r\n          Add Unit\r\n        </PrimaryButton>\r\n        <Modal\r\n          visible={visible}\r\n          closable={false}\r\n          loading={loading}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          title={\r\n            <MasterLevelFormTitle>\r\n              <p\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                {this.state.type === \"edit\" ? \"Edit Unit\" : \"Add Unit\"}\r\n              </p>\r\n              <Icon\r\n                type='close-circle'\r\n                onClick={this.handleCancel}\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              />\r\n            </MasterLevelFormTitle>\r\n          }\r\n          footer={[\r\n            <Button key='back' onClick={this.handleCancel}>\r\n              Cancel\r\n            </Button>,\r\n            <PrimaryButton\r\n              key='submit'\r\n              loading={loading}\r\n              onClick={e => this.handleSubmit(e)}\r\n              style={{ background: \"#001328\", color: \"white\", border: \"none\" }}\r\n            >\r\n              {this.state.type === \"edit\" ? \"Edit\" : \"Save\"}\r\n            </PrimaryButton>\r\n          ]}\r\n          width='400px'\r\n        >\r\n          <MasterLevelForm style={{ justifyContent: \"space-evenly\" }}>\r\n            {/* Code */}\r\n            <div className='input_wrapper'>\r\n              <label for='plant_code' className='label'>\r\n                Unit:\r\n              </label>\r\n              <Input\r\n                id='unit_name'\r\n                name='unit_name'\r\n                placeholder='Enter the Unit '\r\n                onChange={this.handleChange}\r\n                value={this.state.unit_name}\r\n                // disabled={this.state.type === \"edit\" ? true : false}\r\n              />\r\n\r\n              {errors.unit.length > 0 && <div style={error}>{errors.unit}</div>}\r\n              {this.state.errormgs.message === \"unit\" ? (\r\n                <div style={error}>{HandelError(this.state.errormgs)}</div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n          </MasterLevelForm>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  //getting the global redux state to get the data from the EditPlantReducer.js\r\n  return {\r\n    visible: state.plantLevelReducers.EditPlantReducer.visible,\r\n    type: state.plantLevelReducers.EditPlantReducer.type,\r\n    editPlantData: state.plantLevelReducers.EditPlantReducer.editPlantData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // setting visible to false if we close the modal .. and all state data will be deleted if this function is dispatched\r\n    setUnitVisiblity: () => {\r\n      dispatch({ type: DISABLE_EDIT_MODE });\r\n      console.log(\"edit modal closed\");\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UnitAddForm);\r\n","import React, { Component } from \"react\";\r\nimport { FlexContainer } from \"../../../styledcomponents/container/FlexGrid\";\r\n\r\nimport Paragraph from \"antd/lib/typography/Paragraph\";\r\nimport UnitAddForm from \"../UnitAddForm\";\r\n\r\nconst style = {\r\n  fontSize: \"medium\",\r\n  fontWeight: \"600\",\r\n  alignSelf: \"auto\",\r\n  padding: \"5px\"\r\n};\r\n\r\nexport default class ManageSampleCategoryMasterTitle extends Component {\r\n  render() {\r\n    return (\r\n      <FlexContainer titles leveltitles>\r\n        <Paragraph style={style}>Unit </Paragraph>\r\n        <UnitAddForm reload={this.props.reload} />\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapStateToProps = state => {};\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     showAddEmployeeDrawer: () => {\r\n//       dispatch({ type: OPEN_ADD_NEW_EMPLOYEE_DRAWER });\r\n//       console.log(\"add new employee click dispatched\");\r\n//     }\r\n//   };\r\n// };\r\n\r\n// export default connect(\r\n//   mapStateToProps,\r\n//   mapDispatchToProps\r\n// )(EmployeeMasterTitle);\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\nimport { Popconfirm, Divider, Icon } from \"antd\";\r\nimport UnitMasterTitle from \"./title/UnitTitle\";\r\nimport { AntTable } from \"../../styledcomponents/table/AntTabl\";\r\nimport { api } from \"../../services/AxiosService\";\r\nimport Notification from \"../../Constant/Notification\";\r\nimport { SWITCH_TO_EDIT_MODE } from \"../../../redux/action/master/plantlevel/PlantLevel\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ManageUnit extends Component {\r\n  state = {\r\n    searchText: \"\",\r\n    visible: false,\r\n    size: \"small\",\r\n    listData: \"\"\r\n  };\r\n\r\n  componentWillMount() {\r\n    if (window.screen.width > 1900) {\r\n      console.log(\"hooray\");\r\n      this.setState({\r\n        size: \"large\"\r\n      });\r\n    } else if (window.screen.width < 1440) {\r\n      this.setState({\r\n        size: \"small\"\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getallunit();\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  handleOk = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleCancel = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleChange = (pagination, filters, sorter) => {\r\n    console.log(\"Various parameters\", pagination, filters, sorter);\r\n  };\r\n\r\n  getallunit = () => {\r\n    api(\"GET\", \"supermix\", \"/units\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data);\r\n      this.setState({\r\n        listData: res.data.results.units\r\n      });\r\n    });\r\n  };\r\n\r\n  onConfirmdelete(id) {\r\n    console.log(id);\r\n    api(\"DELETE\", \"supermix\", \"/unit\", \"\", \"\", id).then(res => {\r\n      console.log(res.data);\r\n      this.getallunit();\r\n      Notification(\"success\", res.data.message);\r\n    });\r\n    console.log(this.state.id);\r\n  }\r\n\r\n  onChange(pageNumber) {\r\n    console.log(\"Page: \", pageNumber);\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        width: \"3%\"\r\n      },\r\n      {\r\n        title: \"Unit\",\r\n        dataIndex: \"unit\",\r\n        key: \"unit\",\r\n        width: \"8%\"\r\n      },\r\n\r\n      {\r\n        title: \"Edit & Delete\",\r\n        key: \"action\",\r\n        width: \"7%\",\r\n        render: (text, record = this.state.listData) => (\r\n          <span>\r\n            <a>\r\n              <Icon\r\n                type=\"edit\"\r\n                style={{ fontSize: \"1.2em\" }}\r\n                onClick={this.props.passEditDesignationRecordToModal.bind(\r\n                  this,\r\n                  record\r\n                )}\r\n              />\r\n            </a>\r\n            <Divider type=\"vertical\" />\r\n            <a>\r\n              <Popconfirm\r\n                title=\"Are you sure you want to Delete this?\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: \"red\" }} />\r\n                }\r\n                onConfirm={this.onConfirmdelete.bind(this, record.id)}\r\n              >\r\n                <a href=\"#\">\r\n                  <Icon\r\n                    type=\"delete\"\r\n                    style={{ color: \"red\", fontSize: \"1.2em\" }}\r\n                  />\r\n                </a>\r\n              </Popconfirm>\r\n            </a>\r\n          </span>\r\n        )\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <AntTable\r\n        className=\"userRolesManageTable\"\r\n        title={() => <UnitMasterTitle reload={this.getallunit} />}\r\n        columns={columns}\r\n        style={{ width: \"600px\" }}\r\n        dataSource={this.state.listData}\r\n        onChange={this.handleChange}\r\n        pagination={{ defaultPageSize: 8 }}\r\n        size={this.state.size}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  // return {\r\n  //   visible: state.plantLevelReducers.EditPlantReducer.visible,\r\n  //   type: state.plantLevelReducers.EditPlantReducer.type,\r\n  //   editPlantData: state.plantLevelReducers.EditPlantReducer.editPlantData\r\n  // };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // if this function dispatches modal will be shown and the data will be drawn :)\r\n    passEditDesignationRecordToModal: record => {\r\n      //this payload is the data we pass into redux which is in the row which we clicked\r\n      dispatch({ type: SWITCH_TO_EDIT_MODE, payload: record });\r\n      console.log(record);\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageUnit);\r\n","import React, { Component } from \"react\";\r\nimport { FlexContainer } from \"../../styledcomponents/container/FlexGrid\";\r\nimport UnitTileArea from \"./UnitTileArea\";\r\n\r\nimport ManageUnit from \"./ManageUnit\";\r\n\r\nexport default class UnitMaster extends Component {\r\n  render() {\r\n    return (\r\n      <FlexContainer leveltileareafixed>\r\n        <UnitTileArea />\r\n        <ManageUnit />\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Form, Input, Select } from \"antd\";\r\nimport { PrimaryButton } from \"../../../styledcomponents/button/button\";\r\nimport \"./stylegraph.css\";\r\nconst { Option } = Select;\r\n\r\nexport default class AddGraph extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"addFormOuterDiv\">\r\n        <Form className=\"addgraphform\" title=\"Add Graph\">\r\n          <div className=\"headingAddGraph\">\r\n            <p\r\n              style={{ marginTop: \"10px\", marginLeft: \"15px\", color: \"white\" }}\r\n            >\r\n              Add Graph\r\n            </p>\r\n            {/* <Divider style={{marginTop:'-5px'}}/> */}\r\n          </div>\r\n\r\n          <div className=\"innerAddGraphContainer\">\r\n            <div className=\"innerAddGraphFormContainer\">\r\n              {/* Code */}\r\n              <div className=\"input_wrapper\">\r\n                <label for=\"code\" className=\"label\">\r\n                  Code:\r\n                </label>\r\n                <Input\r\n                  className=\"input\"\r\n                  id=\"code\"\r\n                  name=\"code\"\r\n                  placeholder=\"Enter Code \"\r\n                />\r\n              </div>\r\n\r\n              {/* unit Name */}\r\n              <div className=\"input_wrapper\">\r\n                <label for=\"Unit_name\" className=\"label\">\r\n                  Graph Name:\r\n                </label>\r\n                <Input\r\n                  className=\"input\"\r\n                  id=\"Unit_name\"\r\n                  name=\"unit_name\"\r\n                  placeholder=\"Enter Graph Name\"\r\n                />\r\n              </div>\r\n\r\n              {/* Unit */}\r\n              <div className=\"input_wrapper\">\r\n                <label for=\"unit\" className=\"label\">\r\n                  Graph Type\r\n                </label>\r\n                {/* <Input className=\"input\" id=\"unit\" name=\"unit\" placeholder=\"\" /> */}\r\n                <Select\r\n                  className=\"ant-select-selection\"\r\n                  showSearch\r\n                  style={{ width: 200 }}\r\n                  placeholder=\"Select Graph Type\"\r\n                >\r\n                  <Option value=\"QC Manager\">Line Chart</Option>\r\n\r\n                  <Option value=\"QC Technician\">Pie Chart</Option>\r\n                  <Option value=\"Plant manager\">Ring Chart</Option>\r\n                </Select>\r\n              </div>\r\n\r\n              <div className=\"input_wrapper\">\r\n                <label for=\"unit\" className=\"label\">\r\n                  X axis\r\n                </label>\r\n                <Select\r\n                  className=\"input\"\r\n                  showSearch\r\n                  style={{ width: 200 }}\r\n                  placeholder=\"Select X Parameter\"\r\n                >\r\n                  <Option value=\"QC Manager\">Weight</Option>\r\n                  <Option value=\"QC Technician\">Force</Option>\r\n                  <Option value=\"Plant manager\">Mositure</Option>\r\n                  <Option value=\"Plant manager\">Strength</Option>\r\n                  <Option value=\"Plant manager\">Gravity</Option>\r\n                </Select>\r\n              </div>\r\n              <div className=\"input_wrapper\">\r\n                <label for=\"unit\" className=\"label\">\r\n                  Y axis\r\n                </label>\r\n                <Select\r\n                  className=\"input\"\r\n                  showSearch\r\n                  style={{ width: 200 }}\r\n                  placeholder=\"Select Y Parameter\"\r\n                >\r\n                  <Option value=\"QC Manager\">Weight</Option>\r\n                  <Option value=\"QC Technician\">Force</Option>\r\n                  <Option value=\"Plant manager\">Temperature</Option>\r\n                </Select>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                flexWrap: \"wrap\",\r\n                padding: \"10px\"\r\n                // marginTop: \"-20px\"\r\n              }}\r\n            >\r\n              <PrimaryButton\r\n                type=\"\"\r\n                style={{\r\n                  marginTop: \"30px\",\r\n                  marginRight: \"20px\",\r\n                  background: \"#001328\",\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                Submit\r\n              </PrimaryButton>\r\n              <PrimaryButton style={{ marginTop: \"30px\" }}>Clear</PrimaryButton>\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend\r\n} from \"recharts\";\r\n\r\nconst data = [\r\n  { name: \"0 days\", uv: 0 },\r\n  { name: \"7 days\", uv: 1 },\r\n  { name: \" 14 days\", uv: 2 },\r\n  { name: \"21 days\", uv: 4 },\r\n  { name: \"28 days\", uv: 6 },\r\n  { name: \"35 days \", uv: 8 }\r\n];\r\nexport default class LineChartConfig extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{ marginLeft: \"-30px\" }}>\r\n        <LineChart\r\n          width={500}\r\n          height={300}\r\n          data={data}\r\n          margin={{\r\n            top: 5,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 5\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis name=\"Force (N)\" />\r\n          <Tooltip />\r\n          <Legend />\r\n          {/* <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" activeDot={{ r: 8 }} /> */}\r\n          <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\r\n        </LineChart>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Table, Icon, Divider, Popconfirm, Modal } from \"antd\";\r\nimport Paragraph from \"antd/lib/typography/Paragraph\";\r\nimport LineChartConfig from \"./element/LineChart\";\r\n\r\nexport default class ManageGraph extends Component {\r\n  state = { visible: false };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  handleOk = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleCancel = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"Code\",\r\n        dataIndex: \"id\",\r\n        width: \"10%\",\r\n        key: \"id\"\r\n      },\r\n      {\r\n        title: \"Graph Name\",\r\n        dataIndex: \"name\",\r\n        width: \"16%\",\r\n        key: \"id\"\r\n      },\r\n      {\r\n        title: \"Type\",\r\n        dataIndex: \"type\",\r\n        key: \"name\",\r\n        width: \"16%\"\r\n      },\r\n      {\r\n        title: \"X axis\",\r\n        dataIndex: \"x\",\r\n        key: \"name\",\r\n        width: \"16%\"\r\n      },\r\n      {\r\n        title: \"Y axis\",\r\n        dataIndex: \"y\",\r\n        key: \"name\",\r\n        width: \"16%\"\r\n      },\r\n\r\n      {\r\n        title: \"Preview\",\r\n        dataIndex: \"name\",\r\n        key: \"name\",\r\n        width: \"16%\",\r\n        render: (text, record) => (\r\n          <Icon\r\n            type='play-circle'\r\n            style={{ color: \"green\" }}\r\n            onClick={this.showModal}\r\n          />\r\n        )\r\n      },\r\n      {\r\n        title: \"Edit & Delete\",\r\n        key: \"action\",\r\n        width: \"10%\",\r\n        render: (text, record) => (\r\n          <span>\r\n            <a>\r\n              <Icon type='edit' />\r\n            </a>\r\n            <Divider type='vertical' />\r\n            <a>\r\n              <Popconfirm\r\n                title='Are you sure you want to Delete this?'\r\n                icon={\r\n                  <Icon type='question-circle-o' style={{ color: \"red\" }} />\r\n                }\r\n              >\r\n                <a href='#'>\r\n                  <Icon type='delete'></Icon>\r\n                </a>\r\n              </Popconfirm>\r\n            </a>\r\n          </span>\r\n        )\r\n      }\r\n    ];\r\n\r\n    const data = [\r\n      {\r\n        key: \"1\",\r\n        id: \"Test001\",\r\n        name: \"Strength Vs Days\",\r\n        type: \"Line\",\r\n        x: \"Force\",\r\n        y: \"Days\"\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <div className='tablegraph'>\r\n        <Modal\r\n          title='Preview Graph'\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          style={{ borderRadius: \"20px\" }}\r\n          mask={true}\r\n          maskClosable='true'\r\n          // okButtonProps={ghost=\"true\"}\r\n        >\r\n          <LineChartConfig />\r\n        </Modal>\r\n        <Table\r\n          className='tablegraphinner'\r\n          columns={columns}\r\n          dataSource={data}\r\n          title={() => (\r\n            <div className='graphtitle'>\r\n              <Paragraph\r\n                style={{\r\n                  fontFamily: \"Roboto\",\r\n                  color: \"white\",\r\n                  textAlign: \"center\",\r\n                  padding: \"10px\"\r\n                }}\r\n              >\r\n                Manage Graph Configuration{\" \"}\r\n              </Paragraph>\r\n            </div>\r\n          )}\r\n          //   onChange={this.handleChange}\r\n\r\n          size='small'\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport AddGraph from \"./graph/AddGraph\";\r\nimport ManageGraph from \"./graph/ManageGraph\";\r\n\r\nexport default class GraphConfiguration extends Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{ display: \"flex\", flexDirection: \"column\", marginTop: \"20px\" }}\r\n      >\r\n        <AddGraph />\r\n        <ManageGraph />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\nimport { Icon, Popconfirm, Modal } from \"antd\";\r\nimport Paragraph from \"antd/lib/typography/Paragraph\";\r\nimport { AntTable } from \"../../styledcomponents/table/AntTabl\";\r\nimport { FlexContainer } from \"../../styledcomponents/container/FlexGrid\";\r\nimport { api } from \"../../services/AxiosService\";\r\nimport Notification from \"../../Constant/Notification\";\r\nimport { PrimaryButton } from \"../../styledcomponents/button/button\";\r\n\r\nexport default class ManageTestConfiguration extends Component {\r\n  state = {\r\n    size: \"small\",\r\n    testsList: [],\r\n    visible: false,\r\n    testParameters: [],\r\n    filteredParameters: []\r\n  };\r\n  componentWillMount() {\r\n    if (window.screen.width > 1900) {\r\n      console.log(\"hooray\");\r\n      this.setState({\r\n        size: \"large\"\r\n      });\r\n    } else if (window.screen.width < 1440) {\r\n      this.setState({\r\n        size: \"small\"\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAllTests();\r\n    this.getAllTestParameters();\r\n  }\r\n\r\n  getAllTests = () => {\r\n    api(\"GET\", \"supermix\", \"/tests\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data.results);\r\n      this.setState({\r\n        testsList: res.data.results.test\r\n      });\r\n    });\r\n  };\r\n  getAllTestParameters = () => {\r\n    api(\"GET\", \"supermix\", \"/test-parameters\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data.results);\r\n      this.setState({\r\n        testParameters: res.data.results.testparameters\r\n      });\r\n    });\r\n  };\r\n\r\n  onConfirmdelete(id) {\r\n    console.log(id);\r\n\r\n    api(\"DELETE\", \"supermix\", \"/test\", \"\", \"\", id).then(res => {\r\n      console.log(res.data);\r\n      this.getAllTests();\r\n      Notification(\"success\", res.data.message);\r\n    });\r\n  }\r\n\r\n  showTestParams = id => {\r\n    const { testParameters, filteredParameters } = this.state;\r\n    this.setState({\r\n      visible: true\r\n    });\r\n    console.log(testParameters.length);\r\n    for (let i = 0; i < testParameters.length; i++) {\r\n      if (testParameters[i].test.id === id) {\r\n        console.log(testParameters[i]);\r\n        console.log(\"hit\");\r\n        filteredParameters.push({\r\n          parameter: testParameters[i].parameter.name,\r\n          abbreviation: testParameters[i].parameter.abbreviation,\r\n          unit: testParameters[i].unit.unit\r\n        });\r\n      }\r\n    }\r\n    console.log(filteredParameters);\r\n  };\r\n\r\n  handleModalCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n      filteredParameters: []\r\n    });\r\n  };\r\n  render() {\r\n    const parameterColumns = [\r\n      {\r\n        title: \"Parameter\",\r\n        dataIndex: \"parameter\"\r\n      },\r\n      {\r\n        title: \"Abbreviation\",\r\n        dataIndex: \"abbreviation\"\r\n      },\r\n      {\r\n        title: \"Unit\",\r\n        dataIndex: \"unit\"\r\n      }\r\n    ];\r\n\r\n    const columns = [\r\n      {\r\n        title: \"Test Name\",\r\n        dataIndex: \"name\",\r\n        key: \"name\"\r\n        // width: \"16%\"\r\n      },\r\n      {\r\n        title: \"Test Type\",\r\n        dataIndex: \"testType.type\",\r\n        key: \"testType.type\"\r\n        // width: \"16%\"\r\n      },\r\n      {\r\n        title: \"Equation\",\r\n        dataIndex: \"equation.formula\",\r\n        key: \"equation.formula\"\r\n        // width: \"16%\"\r\n      },\r\n      {\r\n        title: \"Test Parameters\",\r\n        key: \"testParams\",\r\n        render: (text, record) => (\r\n          <Icon\r\n            type='container'\r\n            style={{ color: \"green\" }}\r\n            onClick={this.showTestParams.bind(this, record.id)}\r\n          />\r\n        )\r\n        // width: \"16%\"\r\n      },\r\n      {\r\n        title: \"Edit & Delete\",\r\n        key: \"action\",\r\n        width: \"12%\",\r\n        render: (text, record) => (\r\n          <span>\r\n            <a>\r\n              <Popconfirm\r\n                title='Are you sure you want to Delete this?'\r\n                icon={\r\n                  <Icon type='question-circle-o' style={{ color: \"red\" }} />\r\n                }\r\n                onConfirm={this.onConfirmdelete.bind(this, record.id)}\r\n              >\r\n                <Icon type='delete' style={{ color: \"red\" }}></Icon>\r\n              </Popconfirm>\r\n            </a>\r\n          </span>\r\n        )\r\n      }\r\n    ];\r\n    return (\r\n      <FlexContainer stepsarea>\r\n        <AntTable\r\n          style={{ width: \"1200px\" }}\r\n          title={() => (\r\n            <div\r\n              style={{\r\n                background: \"#001328\",\r\n                width: \"auto\",\r\n                height: \"40px\",\r\n                marginTop: \"-25px\",\r\n                borderRadius: \"10px\"\r\n              }}\r\n            >\r\n              <Paragraph\r\n                style={{\r\n                  fontFamily: \"Roboto\",\r\n                  color: \"white\",\r\n                  textAlign: \"center\",\r\n                  padding: \"10px\"\r\n                }}\r\n              >\r\n                Manage Test Configuration{\" \"}\r\n              </Paragraph>\r\n            </div>\r\n          )}\r\n          columns={columns}\r\n          onChange={this.handleChange}\r\n          size={this.state.size}\r\n          dataSource={this.state.testsList}\r\n        />\r\n\r\n        {/* Pop up to View Test Parameters */}\r\n        <Modal\r\n          title='Test Parameters'\r\n          visible={this.state.visible}\r\n          onCancel={this.handleModalCancel}\r\n          footer={[\r\n            <PrimaryButton\r\n              type={\"ghost\"}\r\n              key='submit'\r\n              onClick={this.handleModalCancel}\r\n              style={{ background: \"#001328\", color: \"white\", border: \"none\" }}\r\n            >\r\n              Close\r\n            </PrimaryButton>\r\n          ]}\r\n        >\r\n          <AntTable\r\n            style={{\r\n              width: \"450px\",\r\n              boxShadow: \"0px 0px 0px 0px rgba(0,0,0,0)\",\r\n              border: \"none\"\r\n            }}\r\n            columns={parameterColumns}\r\n            size={this.state.size}\r\n            dataSource={this.state.filteredParameters}\r\n            bordered={false}\r\n          />\r\n        </Modal>\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Input, Select, Switch } from \"antd\";\r\nimport { FlexContainer } from \"../../../styledcomponents/container/FlexGrid\";\r\nimport {\r\n  MasterLevelForm,\r\n  MasterLevelFormTitle\r\n} from \"../../../styledcomponents/form/MasterLevelForms\";\r\nimport { TileParagraph } from \"../../../styledcomponents/typography/typography\";\r\nimport { PrimaryButton } from \"../../../styledcomponents/button/button\";\r\nimport theme from \"../../../../theme\";\r\nimport { api } from \"../../../services/AxiosService\";\r\nimport Notification from \"../../../Constant/Notification\";\r\n\r\nconst { Option } = Select;\r\nconst error = {\r\n  color: \"red\",\r\n  fontSize: \"12px\",\r\n  width: \"170px\",\r\n  height: \"0.2px\"\r\n};\r\n\r\nconst minierror = {\r\n  width: \"90px\",\r\n  color: \"red\",\r\n  fontSize: \"12px\",\r\n  height: \"0.2px\"\r\n};\r\n\r\nexport default class AddTestAcceptedValue extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      switchVal: false,\r\n      test_name: undefined,\r\n      parameter: undefined,\r\n      unit: undefined,\r\n      maximum: \"\",\r\n      minimum: \"\",\r\n      subCategory: undefined,\r\n      material: undefined,\r\n      switchValMaximum: \"\",\r\n      switchValMinimum: \"\",\r\n      errors: {\r\n        parameter: \"\",\r\n        unit: \"\",\r\n        maximum: \"\",\r\n        minimum: \"\"\r\n      },\r\n      optErrors: {\r\n        subCategory: \"\",\r\n        material: \"\",\r\n        switchValMaximum: \"\",\r\n        switchValMinimum: \"\"\r\n      },\r\n      errormsgs: \"\"\r\n    };\r\n  }\r\n\r\n  handleSelect = (name, value) => {\r\n    const { errors, optErrors } = this.state;\r\n    console.log(value + \" of \" + name);\r\n\r\n    //test\r\n    if (name === \"test_name\") {\r\n      this.setState({\r\n        test_name: value\r\n      });\r\n    }\r\n\r\n    //parameter\r\n    if (name === \"parameter\") {\r\n      this.setState({\r\n        parameter: value,\r\n        errors: {\r\n          parameter: \"\",\r\n          unit: errors.unit,\r\n          maximum: errors.maximum,\r\n          minimum: errors.minimum\r\n        },\r\n        optErrors: {\r\n          subCategory: optErrors.subCategory,\r\n          material: optErrors.material,\r\n          switchValMaximum: optErrors.switchValMaximum,\r\n          switchValMinimum: optErrors.switchValMinimum\r\n        }\r\n      });\r\n    }\r\n\r\n    //unit\r\n    if (name === \"unit\") {\r\n      this.setState({\r\n        unit: value,\r\n        errors: {\r\n          parameter: errors.parameter,\r\n          unit: \"\",\r\n          maximum: errors.maximum,\r\n          minimum: errors.minimum\r\n        },\r\n        optErrors: {\r\n          subCategory: optErrors.subCategory,\r\n          material: optErrors.material,\r\n          switchValMaximum: optErrors.switchValMaximum,\r\n          switchValMinimum: optErrors.switchValMinimum\r\n        }\r\n      });\r\n    }\r\n\r\n    //subCategory\r\n    if (name === \"subCategory\") {\r\n      this.getAllMaterials(value);\r\n      this.setState({\r\n        subCategory: value,\r\n        errors: {\r\n          parameter: errors.parameter,\r\n          unit: errors.unit,\r\n          maximum: errors.maximum,\r\n          minimum: errors.minimum\r\n        },\r\n        optErrors: {\r\n          subCategory: \"\",\r\n          material: optErrors.material,\r\n          switchValMaximum: optErrors.switchValMaximum,\r\n          switchValMinimum: optErrors.switchValMinimum\r\n        }\r\n      });\r\n    }\r\n\r\n    //material\r\n    if (name === \"material\") {\r\n      this.setState({\r\n        material: value,\r\n        errors: {\r\n          parameter: errors.parameter,\r\n          unit: errors.unit,\r\n          maximum: errors.maximum,\r\n          minimum: errors.minimum\r\n        },\r\n        optErrors: {\r\n          subCategory: optErrors.subCategory,\r\n          material: \"\",\r\n          switchValMaximum: optErrors.switchValMaximum,\r\n          switchValMinimum: optErrors.switchValMinimum\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  handleChange = (event, field) => {\r\n    this.setState({ [field]: event.target.value });\r\n    this.setState({ errormgs: \"\" });\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    let errors = this.state.errors;\r\n    let optErrors = this.state.optErrors;\r\n    // console.log(name + \" is \\t\" + value);\r\n    switch (name) {\r\n      case \"maximum\":\r\n        errors.maximum =\r\n          value.length === 0\r\n            ? \"maximum can't be empty\"\r\n            : isNaN(value)\r\n            ? \"maximum won't allow only letters\"\r\n            : \"\";\r\n        break;\r\n      case \"minimum\":\r\n        errors.minimum =\r\n          value.length === 0\r\n            ? \"minimum can't be empty\"\r\n            : isNaN(value)\r\n            ? \"minimum won't allow only letters\"\r\n            : \"\";\r\n        break;\r\n      case \"switchValMaximum\":\r\n        optErrors.switchValMaximum =\r\n          value.length === 0\r\n            ? \"maximum can't be empty\"\r\n            : isNaN(value)\r\n            ? \"maximum won't allow only letters\"\r\n            : \"\";\r\n        break;\r\n      case \"switchValMinimum\":\r\n        optErrors.switchValMinimum =\r\n          value.length === 0\r\n            ? \"minimum can't be empty\"\r\n            : isNaN(value)\r\n            ? \"minimum won't allow only letters\"\r\n            : \"\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ errors, [name]: value });\r\n  };\r\n\r\n  onChange(checked) {\r\n    console.log(`switch to ${checked}`);\r\n    if (checked === true) {\r\n      console.log(\"true\");\r\n      this.setState({\r\n        switchVal: true\r\n      });\r\n    }\r\n    if (checked === false) {\r\n      console.log(\"false\");\r\n      this.setState({\r\n        switchVal: false\r\n      });\r\n    }\r\n  }\r\n\r\n  //get all for parameter select\r\n  getAllParameters() {\r\n    api(\"GET\", \"supermix\", \"/parameters\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data.results);\r\n      if (res.data.results.parameters.length > 0) {\r\n        console.log(\"got parameters\");\r\n        let SelectParameter = res.data.results.parameters.map((post, index) => {\r\n          return (\r\n            <Option value={post.id} key={index}>\r\n              {post.name}\r\n            </Option>\r\n          );\r\n        });\r\n        this.setState({\r\n          SelectParameter\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  //get all for unit select\r\n  getAllUnits() {\r\n    api(\"GET\", \"supermix\", \"/units\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data.results);\r\n      if (res.data.results.units.length > 0) {\r\n        console.log(\"got units\");\r\n        let SelectUnit = res.data.results.units.map((post, index) => {\r\n          return (\r\n            <Option value={post.id} key={index}>\r\n              {post.unit}\r\n            </Option>\r\n          );\r\n        });\r\n        this.setState({\r\n          SelectUnit\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  //get all for materials select\r\n  getAllMaterials(subCategory) {\r\n    console.log(subCategory);\r\n    api(\"GET\", \"supermix\", \"/raw-materials\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data.results);\r\n      if (res.data.results.rawMaterial.length > 0) {\r\n        console.log(\"got materials\");\r\n        let SelectMaterial = res.data.results.rawMaterial.map((post, index) => {\r\n          if (subCategory === post.materialSubCategory.id) {\r\n            return (\r\n              <Option value={post.id} key={index}>\r\n                {post.name}\r\n              </Option>\r\n            );\r\n          }\r\n        });\r\n        this.setState({\r\n          SelectMaterial\r\n        });\r\n      }\r\n    });\r\n  }\r\n  //get all for sub category select\r\n  getAllSubCategories() {\r\n    api(\"GET\", \"supermix\", \"/material-sub-categories\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data.results);\r\n      if (res.data.results.materialSubCategories.length > 0) {\r\n        console.log(\"got sub categories\");\r\n        let SelectSubCategories = res.data.results.materialSubCategories.map(\r\n          (post, index) => {\r\n            return (\r\n              <Option value={post.id} key={index}>\r\n                {post.name}\r\n              </Option>\r\n            );\r\n          }\r\n        );\r\n        this.setState({\r\n          SelectSubCategories\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  //get all for sub category select\r\n  getAllTest() {\r\n    api(\"GET\", \"supermix\", \"/tests\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data.results);\r\n      if (res.data.results.test.length > 0) {\r\n        console.log(\"got sub categories\");\r\n        let SelectTest = res.data.results.test.map((post, index) => {\r\n          return (\r\n            <Option value={post.id} key={index}>\r\n              {post.name}\r\n            </Option>\r\n          );\r\n        });\r\n        this.setState({\r\n          SelectTest,\r\n          test_name: res.data.results.test[res.data.results.test.length - 1].id\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const {\r\n      switchVal,\r\n      errors,\r\n      material,\r\n      maximum,\r\n      minimum,\r\n      parameter,\r\n      subCategory,\r\n      switchValMaximum,\r\n      switchValMinimum,\r\n      unit,\r\n      optErrors,\r\n      test_name\r\n    } = this.state;\r\n    let eM = \"can't be empty\";\r\n\r\n    // Case : SwitchVal is True\r\n    if (switchVal) {\r\n      console.log(\"validate for all fields\");\r\n      // const switchedData = {\r\n      //   testId: test_name,\r\n      //   parameterId: parameter,\r\n      //   unitId: unit,\r\n      //   rawMaterialId: material,\r\n      //   minValue: switchValMaximum,\r\n      //   maxValue: switchValMinimum\r\n      // };\r\n      // console.log(switchedData);\r\n      if (\r\n        parameter === undefined &&\r\n        unit === undefined &&\r\n        subCategory === undefined &&\r\n        material === undefined &&\r\n        switchValMaximum.length === 0 &&\r\n        switchValMinimum.length === 0\r\n      ) {\r\n        this.setState({\r\n          optErrors: {\r\n            subCategory: `sub category ${eM}`,\r\n            material: `material ${eM}`,\r\n            switchValMaximum: `maximum ${eM}`,\r\n            switchValMinimum: `minimum ${eM}`\r\n          }\r\n        });\r\n      } else if (parameter === undefined && errors.parameter.length === 0) {\r\n        this.setState({\r\n          optErrors: {\r\n            subCategory: optErrors.subCategory,\r\n            material: optErrors.material,\r\n            switchValMaximum: optErrors.switchValMaximum,\r\n            switchValMinimum: optErrors.switchValMinimum\r\n          }\r\n        });\r\n      } else if (unit === undefined && errors.unit.length === 0) {\r\n        this.setState({\r\n          optErrors: {\r\n            subCategory: optErrors.subCategory,\r\n            material: optErrors.material,\r\n            switchValMaximum: optErrors.switchValMaximum,\r\n            switchValMinimum: optErrors.switchValMinimum\r\n          }\r\n        });\r\n      }\r\n\r\n      // OptError Area Start\r\n      else if (\r\n        subCategory === undefined &&\r\n        optErrors.subCategory.length === 0\r\n      ) {\r\n        this.setState({\r\n          optErrors: {\r\n            subCategory: optErrors.subCategory || `sub category ${eM}`,\r\n            material: optErrors.material,\r\n            switchValMaximum: optErrors.switchValMaximum,\r\n            switchValMinimum: optErrors.switchValMinimum\r\n          }\r\n        });\r\n      } else if (material === undefined && optErrors.material.length === 0) {\r\n        this.setState({\r\n          optErrors: {\r\n            subCategory: optErrors.subCategory,\r\n            material: optErrors.material || `material ${eM}`,\r\n            switchValMaximum: optErrors.switchValMaximum,\r\n            switchValMinimum: optErrors.switchValMinimum\r\n          }\r\n        });\r\n      } else if (\r\n        switchValMaximum.length === 0 &&\r\n        optErrors.switchValMaximum.length === 0\r\n      ) {\r\n        this.setState({\r\n          optErrors: {\r\n            subCategory: optErrors.subCategory,\r\n            material: optErrors.material,\r\n            switchValMaximum: optErrors.switchValMaximum || `maximum ${eM}`,\r\n            switchValMinimum: optErrors.switchValMinimum\r\n          }\r\n        });\r\n      } else if (\r\n        switchValMinimum.length === undefined &&\r\n        optErrors.switchValMaximum.length === 0\r\n      ) {\r\n        this.setState({\r\n          optErrors: {\r\n            subCategory: optErrors.subCategory,\r\n            material: optErrors.material,\r\n            switchValMaximum: optErrors.switchValMaximum,\r\n            switchValMinimum: optErrors.switchValMinimum || `minimum ${eM}`\r\n          }\r\n        });\r\n      } else if (\r\n        optErrors.subCategory.length === 0 &&\r\n        optErrors.material.length === 0 &&\r\n        optErrors.switchValMaximum.length === 0 &&\r\n        optErrors.switchValMinimum.length === 0\r\n      ) {\r\n        console.log(\"form is valid with switch\");\r\n        const switchedData = {\r\n          testId: test_name,\r\n          parameterId: parameter,\r\n          unitId: unit,\r\n          rawMaterialId: material,\r\n          minValue: switchValMaximum,\r\n          maxValue: switchValMinimum\r\n        };\r\n\r\n        console.log(switchedData);\r\n        api(\r\n          \"POST\",\r\n          \"supermix\",\r\n          \"/admixture-accepted-value\",\r\n          \"\",\r\n          switchedData,\r\n          \"\"\r\n        ).then(\r\n          res => {\r\n            console.log(res.data);\r\n            Notification(\"success\", res.data.message);\r\n            // this.props.reload();\r\n            this.setState({\r\n              switchVal: false,\r\n              test_name: undefined,\r\n              parameter: undefined,\r\n              unit: undefined,\r\n              maximum: \"\",\r\n              minimum: \"\",\r\n              subCategory: undefined,\r\n              material: undefined,\r\n              switchValMaximum: \"\",\r\n              switchValMinimum: \"\",\r\n              errors: {\r\n                parameter: \"\",\r\n                unit: \"\",\r\n                maximum: \"\",\r\n                minimum: \"\"\r\n              },\r\n              optErrors: {\r\n                subCategory: \"\",\r\n                material: \"\",\r\n                switchValMaximum: \"\",\r\n                switchValMinimum: \"\"\r\n              },\r\n              errormsgs: \"\"\r\n            });\r\n          },\r\n          error => {\r\n            console.log(error);\r\n          }\r\n        );\r\n      }\r\n    }\r\n    // Case : SwitchVal is False\r\n    else {\r\n      console.log(\"validate for only 4 fields\");\r\n      if (\r\n        parameter === undefined &&\r\n        unit === undefined &&\r\n        maximum.length === 0 &&\r\n        minimum.length === 0\r\n      ) {\r\n        this.setState({\r\n          errors: {\r\n            parameter: `parameter ${eM}`,\r\n            unit: `unit ${eM}`,\r\n            maximum: `maximum ${eM}`,\r\n            minimum: `minimum ${eM}`\r\n          },\r\n          optErrors: {\r\n            subCategory: \"\",\r\n            material: \"\",\r\n            switchValMaximum: \"\",\r\n            switchValMinimum: \"\"\r\n          }\r\n        });\r\n      } else if (parameter === undefined && errors.parameter.length === 0) {\r\n        this.setState({\r\n          errors: {\r\n            parameter: errors.parameter || `parameter ${eM}`,\r\n            unit: errors.unit,\r\n            maximum: errors.maximum,\r\n            minimum: errors.minimum\r\n          },\r\n          optErrors: {\r\n            subCategory: \"\",\r\n            material: \"\",\r\n            switchValMaximum: \"\",\r\n            switchValMinimum: \"\"\r\n          }\r\n        });\r\n      } else if (unit === undefined && errors.unit.length === 0) {\r\n        this.setState({\r\n          errors: {\r\n            parameter: errors.parameter,\r\n            unit: errors.unit || `unit ${eM}`,\r\n            maximum: errors.maximum,\r\n            minimum: errors.minimum\r\n          },\r\n          optErrors: {\r\n            subCategory: \"\",\r\n            material: \"\",\r\n            switchValMaximum: \"\",\r\n            switchValMinimum: \"\"\r\n          }\r\n        });\r\n      } else if (maximum.length === 0 && errors.maximum.length === 0) {\r\n        this.setState({\r\n          errors: {\r\n            parameter: errors.parameter,\r\n            unit: errors.unit,\r\n            maximum: errors.maximum || `maximum ${eM}`,\r\n            minimum: errors.minimum\r\n          },\r\n          optErrors: {\r\n            subCategory: \"\",\r\n            material: \"\",\r\n            switchValMaximum: \"\",\r\n            switchValMinimum: \"\"\r\n          }\r\n        });\r\n      } else if (minimum.length === 0 && errors.minimum.length === 0) {\r\n        this.setState({\r\n          errors: {\r\n            parameter: errors.parameter,\r\n            unit: errors.unit,\r\n            maximum: errors.maximum,\r\n            minimum: errors.minimum || `minimum ${eM}`\r\n          },\r\n          optErrors: {\r\n            subCategory: \"\",\r\n            material: \"\",\r\n            switchValMaximum: \"\",\r\n            switchValMinimum: \"\"\r\n          }\r\n        });\r\n      } else if (\r\n        errors.parameter.length === 0 &&\r\n        errors.unit.length === 0 &&\r\n        errors.maximum.length === 0 &&\r\n        errors.minimum.length === 0\r\n      ) {\r\n        console.log(\"form is valid\");\r\n        console.log(switchVal);\r\n\r\n        const unSwitchedData = {\r\n          testId: test_name,\r\n          parameterId: parameter,\r\n          unitId: unit,\r\n          maxValue: maximum,\r\n          minValue: minimum\r\n        };\r\n        console.log(unSwitchedData);\r\n        api(\"POST\", \"supermix\", \"/accepted-value\", \"\", unSwitchedData, \"\").then(\r\n          res => {\r\n            console.log(res.data);\r\n            Notification(\"success\", res.data.message);\r\n            // this.props.reload();\r\n            this.setState({\r\n              switchVal: false,\r\n              test_name: undefined,\r\n              parameter: undefined,\r\n              unit: undefined,\r\n              maximum: \"\",\r\n              minimum: \"\",\r\n              subCategory: undefined,\r\n              material: undefined,\r\n              switchValMaximum: \"\",\r\n              switchValMinimum: \"\",\r\n              errors: {\r\n                parameter: \"\",\r\n                unit: \"\",\r\n                maximum: \"\",\r\n                minimum: \"\"\r\n              },\r\n              optErrors: {\r\n                subCategory: \"\",\r\n                material: \"\",\r\n                switchValMaximum: \"\",\r\n                switchValMinimum: \"\"\r\n              },\r\n              errormsgs: \"\"\r\n            });\r\n          },\r\n          error => {\r\n            console.log(error);\r\n          }\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getAllParameters();\r\n    this.getAllUnits();\r\n    // this.getAllMaterials();\r\n    this.getAllSubCategories();\r\n    this.getAllTest();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      switchVal,\r\n      errors,\r\n      material,\r\n      maximum,\r\n      minimum,\r\n      parameter,\r\n      subCategory,\r\n      switchValMaximum,\r\n      switchValMinimum,\r\n      unit,\r\n      optErrors,\r\n      test_name\r\n    } = this.state;\r\n    return (\r\n      <FlexContainer stepsarea style={{ marginTop: \"40px\" }}>\r\n        <div testconfig>\r\n          <MasterLevelFormTitle nomargin>\r\n            <TileParagraph>Accepted Value</TileParagraph>\r\n          </MasterLevelFormTitle>\r\n          {/* <Divider style={{marginTop:'-5px'}}/> */}\r\n\r\n          <MasterLevelForm\r\n            filled\r\n            borderRadiused\r\n            style={{\r\n              justifyContent: \"space-around\",\r\n              paddingBottom: \"20px\",\r\n              paddingLeft: \"40px\",\r\n              paddingRight: \"60px\",\r\n              paddingTop: \"10px\",\r\n              width: \"700px\"\r\n            }}\r\n          >\r\n            {/* Test */}\r\n            <div className=\"input_wrapper\">\r\n              <label for=\"test_name\" className=\"label\">\r\n                Test\r\n              </label>\r\n              <Select\r\n                id=\"test_name\"\r\n                name=\"test_name\"\r\n                placeholder=\"Select Test\"\r\n                style={{ width: 170 }}\r\n                value={test_name}\r\n                onChange={value => this.handleSelect(\"test_name\", value)}\r\n              >\r\n                {this.state.SelectTest}\r\n              </Select>\r\n              <div style={{ height: \"6px\" }}></div>\r\n            </div>\r\n\r\n            {/* Parameter */}\r\n            <div className=\"input_wrapper\">\r\n              <label for=\"parameter\" className=\"label\">\r\n                Parameter\r\n              </label>\r\n              <Select\r\n                id=\"parameter\"\r\n                name=\"parameter\"\r\n                placeholder=\"Select Parameter\"\r\n                style={{ width: 170 }}\r\n                value={parameter}\r\n                onChange={value => this.handleSelect(\"parameter\", value)}\r\n              >\r\n                {this.state.SelectParameter}\r\n              </Select>\r\n              {errors.parameter.length > 0 && (\r\n                <div style={error}>{errors.parameter}</div>\r\n              )}\r\n              <div style={{ height: \"6px\" }}></div>\r\n            </div>\r\n\r\n            {/* Unit */}\r\n            <div className=\"input_wrapper\">\r\n              <label for=\"unit\" className=\"label\">\r\n                Unit\r\n              </label>\r\n              <Select\r\n                id=\"unit\"\r\n                name=\"unit\"\r\n                placeholder=\"Select Unit\"\r\n                style={{ width: 170 }}\r\n                value={unit}\r\n                onChange={value => this.handleSelect(\"unit\", value)}\r\n              >\r\n                {this.state.SelectUnit}\r\n              </Select>\r\n              {errors.unit.length > 0 && <div style={error}>{errors.unit}</div>}\r\n              <div style={{ height: \"6px\" }}></div>\r\n            </div>\r\n\r\n            {/* Test Max and Min */}\r\n            {switchVal === false ? (\r\n              <FlexContainer>\r\n                <div className=\"input_wrapper\">\r\n                  <PrimaryButton type=\"ghost\">To</PrimaryButton>\r\n                  <div style={{ height: \"12px\" }}></div>\r\n                </div>\r\n                {/* Minimum */}\r\n                <div className=\"input_wrapper\">\r\n                  <Input\r\n                    id=\"minimum\"\r\n                    name=\"minimum\"\r\n                    placeholder=\"Minimum\"\r\n                    style={{ width: 90 }}\r\n                    value={minimum}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  {errors.minimum.length > 0 && (\r\n                    <div style={minierror}>{errors.minimum}</div>\r\n                  )}\r\n                  <div style={{ height: \"12px\" }}></div>\r\n                </div>\r\n                <div className=\"input_wrapper\">\r\n                  <PrimaryButton type=\"ghost\">Between</PrimaryButton>\r\n                  <div style={{ height: \"18px\" }}></div>\r\n                </div>\r\n                {/* Maximum */}\r\n                <div className=\"input_wrapper\">\r\n                  <Input\r\n                    id=\"maximum\"\r\n                    name=\"maximum\"\r\n                    placeholder=\"Maximum\"\r\n                    style={{ width: 90 }}\r\n                    value={maximum}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  {errors.maximum.length > 0 && (\r\n                    <div style={minierror}>{errors.maximum}</div>\r\n                  )}\r\n                  <div style={{ height: \"12px\" }}></div>\r\n                </div>\r\n              </FlexContainer>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n\r\n            <FlexContainer>\r\n              {/* Material Switch */}\r\n              <div\r\n                className=\"input_wrapper\"\r\n                style={{ marginTop: switchVal === false ? \"5px\" : \"20px\" }}\r\n              >\r\n                <label for=\"material_switch\" className=\"label\">\r\n                  {switchVal === false ? \"Test\" : \"Material\"}\r\n                </label>\r\n                <Switch\r\n                  onChange={checked => this.onChange(checked)}\r\n                  value={switchVal}\r\n                />\r\n                <div style={{ height: \"12px\" }}></div>\r\n              </div>\r\n            </FlexContainer>\r\n\r\n            {switchVal === true ? (\r\n              <FlexContainer home>\r\n                {/* Sub Category */}\r\n                <div className=\"input_wrapper\">\r\n                  <label for=\"subCategory\" className=\"label\">\r\n                    Sub Category\r\n                  </label>\r\n                  <Select\r\n                    id=\"subCategory\"\r\n                    name=\"subCategory\"\r\n                    placeholder=\"Select Sub Category\"\r\n                    style={{ width: 170 }}\r\n                    value={subCategory}\r\n                    onChange={value => this.handleSelect(\"subCategory\", value)}\r\n                  >\r\n                    {this.state.SelectSubCategories}\r\n                  </Select>\r\n                  {optErrors.subCategory.length > 0 && (\r\n                    <div style={error}>{optErrors.subCategory}</div>\r\n                  )}\r\n                  <div style={{ height: \"12px\" }}></div>\r\n                </div>\r\n\r\n                {/* Material */}\r\n                <div className=\"input_wrapper\">\r\n                  <label for=\"material\" className=\"label\">\r\n                    Material\r\n                  </label>\r\n                  <Select\r\n                    id=\"material\"\r\n                    name=\"material\"\r\n                    placeholder=\"Select Material\"\r\n                    style={{ width: 160 }}\r\n                    value={material}\r\n                    onChange={value => this.handleSelect(\"material\", value)}\r\n                  >\r\n                    {this.state.SelectMaterial}\r\n                  </Select>\r\n                  {optErrors.material.length > 0 && (\r\n                    <div style={error}>{optErrors.material}</div>\r\n                  )}\r\n                  <div style={{ height: \"12px\" }}></div>\r\n                </div>\r\n              </FlexContainer>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {switchVal === true ? (\r\n              <FlexContainer home>\r\n                <div className=\"input_wrapper\">\r\n                  <PrimaryButton type=\"ghost\">Between</PrimaryButton>\r\n                  <div style={{ height: \"12px\" }}></div>\r\n                </div>\r\n                {/* Maximum  */}\r\n\r\n                {/* Minimum  */}\r\n                <div className=\"input_wrapper\">\r\n                  <Input\r\n                    id=\"switchValMinimum\"\r\n                    name=\"switchValMinimum\"\r\n                    placeholder=\"minimum\"\r\n                    style={{ width: 90 }}\r\n                    value={switchValMinimum}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  {optErrors.switchValMinimum.length > 0 && (\r\n                    <div style={minierror}>{optErrors.switchValMinimum}</div>\r\n                  )}\r\n                  <div style={{ height: \"12px\" }}></div>\r\n                </div>\r\n                <div className=\"input_wrapper\">\r\n                  <Input\r\n                    id=\"switchValMaximum\"\r\n                    name=\"switchValMaximum\"\r\n                    placeholder=\"maximum\"\r\n                    style={{ width: 90 }}\r\n                    value={switchValMaximum}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  {optErrors.switchValMaximum.length > 0 && (\r\n                    <div style={minierror}>{optErrors.switchValMaximum}</div>\r\n                  )}\r\n                  <div style={{ height: \"12px\" }}></div>\r\n                </div>\r\n\r\n                <div className=\"input_wrapper\">\r\n                  <PrimaryButton type=\"ghost\">To</PrimaryButton>\r\n                  <div style={{ height: \"12px\" }}></div>\r\n                </div>\r\n              </FlexContainer>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </MasterLevelForm>\r\n          <FlexContainer\r\n            style={{\r\n              justifyContent: \"center\",\r\n              background: \"white\",\r\n              borderBottomRightRadius: \"15px\",\r\n              borderBottomLeftRadius: \"15px\",\r\n              padding: \"10px\",\r\n              marginTop: \"-1px\"\r\n            }}\r\n          >\r\n            <PrimaryButton\r\n              type={\"primary\"}\r\n              primary\r\n              style={{\r\n                background: theme.colors.primary,\r\n                border: \"none\",\r\n                color: \"white\"\r\n              }}\r\n              onClick={this.handleSubmit}\r\n            >\r\n              Submit\r\n            </PrimaryButton>\r\n          </FlexContainer>\r\n        </div>\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Input, Select } from \"antd\";\r\nimport { FlexContainer } from \"../../../styledcomponents/container/FlexGrid\";\r\nimport { PrimaryButton } from \"../../../styledcomponents/button/button\";\r\nimport theme from \"../../../../theme\";\r\nimport { connect } from \"react-redux\";\r\nimport Notification from \"../../../Constant/Notification\";\r\nimport HandelError from \"../../../Constant/HandleError\";\r\nimport {\r\n  TRIGGER_EQUATIONS_AREA,\r\n  TRIGGER_BACK_EQUATIONS_AREA\r\n} from \"../../../../redux/action/testconfiguration/TestConfiguration\";\r\nimport { api } from \"../../../services/AxiosService\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst error2 = {\r\n  color: \"red\",\r\n  fontSize: \"12px\",\r\n  width: \"140px\",\r\n  height: \"0.2px\"\r\n};\r\n\r\nclass AddTestName extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      showSecondColumn: false,\r\n      icon: \"+\",\r\n      test_name: \"\",\r\n      equation: \"\",\r\n      test_type: \"\",\r\n      plant: [],\r\n      errors: {\r\n        test_name: \"\",\r\n        test_type: \"\"\r\n      },\r\n      errormsgs: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAllTestType();\r\n    this.getAllPlant();\r\n    this.getAllEquations();\r\n  }\r\n\r\n  //get all for test type select\r\n  getAllTestType() {\r\n    api(\"GET\", \"supermix\", \"/test-types\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data.results.testTypes);\r\n      if (res.data.results.testTypes.length > 0) {\r\n        console.log(\"ggg\");\r\n        let SelectTestType = res.data.results.testTypes.map((post, index) => {\r\n          return (\r\n            <Option value={post.id} key={index}>\r\n              {post.type}\r\n            </Option>\r\n          );\r\n        });\r\n        this.setState({\r\n          SelectTestType\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  //get all for plant select\r\n  getAllPlant() {\r\n    api(\"GET\", \"supermix\", \"/plants\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data.results.plants.length);\r\n      if (res.data.results.plants.length > 0) {\r\n        console.log(\"ggg\");\r\n        let SelectPlants = res.data.results.plants.map((post, index) => {\r\n          return (\r\n            <Option value={post.code} key={index}>\r\n              {post.name}\r\n            </Option>\r\n          );\r\n        });\r\n        this.setState({\r\n          SelectPlants\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  //get all for equations select\r\n  getAllEquations() {\r\n    api(\"GET\", \"supermix\", \"/equations\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data.results.equations);\r\n      if (res.data.results.equations.length > 0) {\r\n        console.log(\"ggg\");\r\n        let SelectEquation = res.data.results.equations.map((post, index) => {\r\n          return (\r\n            <Option value={post.id} key={index}>\r\n              {post.formula}\r\n            </Option>\r\n          );\r\n        });\r\n        this.setState({\r\n          SelectEquation\r\n          // equation:\r\n          //   res.data.results.equations[res.data.results.equations.length - 1].id\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  handleChange = (event, field) => {\r\n    this.setState({ [field]: event.target.value });\r\n    this.setState({ errormgs: \"\" });\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    let errors = this.state.errors;\r\n    // console.log(name + \" is \\t\" + value);\r\n    switch (name) {\r\n      case \"test_name\":\r\n        errors.test_name =\r\n          value.length === 0\r\n            ? \"test name can't be empty\"\r\n            : value.length < 3\r\n            ? \"test name \\n must be 3 characters long!\"\r\n            : !isNaN(value)\r\n            ? \"test name won't allow only letters\"\r\n            : \"\";\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ errors, [name]: value });\r\n  };\r\n\r\n  handleSelect = (name, value) => {\r\n    const { errors } = this.state;\r\n    console.log(value);\r\n\r\n    if (name === \"equation\") {\r\n      this.setState({\r\n        equation: value\r\n      });\r\n    }\r\n    if (name === \"test_type\" || this.props.icon === \"-\") {\r\n      this.setState({\r\n        test_type: value,\r\n        errors: {\r\n          test_name: errors.test_name,\r\n          test_type: \"\"\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { errors, test_name, test_type, equation } = this.state;\r\n    if (test_name.length === 0 && test_type.length === 0) {\r\n      console.log(\"form is not valid\");\r\n      this.setState({\r\n        errors: {\r\n          test_name: \"test name can't be empty\",\r\n          test_type: \"test type can't be empty\"\r\n        }\r\n      });\r\n    } else if (test_name.length === 0 && errors.test_name.length === 0) {\r\n      this.setState({\r\n        errors: {\r\n          test_name: errors.test_name || \"test name can't be empty\",\r\n          test_type: errors.test_type\r\n        }\r\n      });\r\n    } else if (test_type.length === 0 && errors.test_type.length === 0) {\r\n      this.setState({\r\n        errors: {\r\n          test_name: errors.test_name,\r\n\r\n          test_type: errors.test_type || \"test type can't be empty\"\r\n        }\r\n      });\r\n    } else if (errors.test_name.length === 0 && errors.test_type.length === 0) {\r\n      console.log(\"form is valid\");\r\n      const data = {\r\n        name: test_name,\r\n        equationId: equation,\r\n        testTypeId: test_type\r\n      };\r\n      console.log(data);\r\n      api(\"POST\", \"supermix\", \"/test\", \"\", data, \"\").then(\r\n        res => {\r\n          console.log(res.data);\r\n          if (res.data.status === \"VALIDATION_FAILURE\") {\r\n            console.log(\"add\");\r\n            this.responeserror(res.data.results.name.message);\r\n          } else {\r\n            Notification(\"success\", res.data.message);\r\n            // this.props.reload();\r\n\r\n            this.setState({\r\n              test_name: \"\",\r\n              equation: \"\",\r\n              test_type: \"\",\r\n              plant: [],\r\n              errors: {\r\n                test_name: \"\",\r\n                equation: \"\",\r\n                test_type: \"\"\r\n              },\r\n              errormsgs: \"\"\r\n            });\r\n          }\r\n        },\r\n        error => {\r\n          this.setState({\r\n            errorvalmegss: error.validationFailures[0]\r\n          });\r\n          console.log(\"DEBUG34: \", error);\r\n          console.log(HandelError(error.validationFailures[0]));\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  // componentWillReceiveProps(nextProps) {\r\n  //   this.setState({\r\n  //     showSecondColumn: nextProps.showSecondColumn,\r\n  //     icon: nextProps.icon\r\n  //   });\r\n  // }\r\n  render() {\r\n    const { test_name, equation, test_type, errors } = this.state;\r\n    return (\r\n      <FlexContainer\r\n        style={{\r\n          background: \"white\",\r\n          padding: \"15px\",\r\n          borderBottomLeftRadius: \"15px\",\r\n          borderBottomRightRadius: \"15px\"\r\n        }}\r\n      >\r\n        {/* Code */}\r\n        <div className=\"input_wrapper\">\r\n          <label for=\"test_name\" className=\"label\">\r\n            Test Name\r\n          </label>\r\n          <Input\r\n            id=\"test_name\"\r\n            name=\"test_name\"\r\n            placeholder=\"Enter Test Name\"\r\n            value={test_name}\r\n            onChange={this.handleChange}\r\n          />\r\n          {errors.test_name.length > 0 && (\r\n            <div style={error2}>{errors.test_name}</div>\r\n          )}\r\n          <div style={{ height: \"6px\" }}></div>\r\n        </div>\r\n\r\n        {/* Equation */}\r\n        <div className=\"input_wrapper\">\r\n          <label for=\"equation\" className=\"label\">\r\n            Equation\r\n          </label>\r\n          <FlexContainer>\r\n            <Select\r\n              id=\"equation\"\r\n              name=\"equation\"\r\n              placeholder=\"Select Equation\"\r\n              style={{ width: 150 }}\r\n              value={equation}\r\n              onChange={value => this.handleSelect(\"equation\", value)}\r\n            >\r\n              {this.state.SelectEquation}\r\n              {/* {childrenEquation.map((post, index) => (\r\n                <Option value={post.id} key={index}>\r\n                  {post.name}\r\n                </Option>\r\n              ))} */}\r\n            </Select>\r\n\r\n            <div style={{ height: \"6px\" }}></div>\r\n            <PrimaryButton\r\n              type=\"primary\"\r\n              value={this.props.togglerValue}\r\n              style={{\r\n                background: theme.colors.primary,\r\n                color: \"white\",\r\n                border: \"none\",\r\n                marginLeft: \"5px\",\r\n                fontWeight: 500\r\n              }}\r\n              onClick={this.props.toggleEquationArea}\r\n            >\r\n              {this.props.icon}\r\n            </PrimaryButton>\r\n          </FlexContainer>\r\n          {/* {errors.equation.length > 0 && (\r\n            <div style={error2}>{errors.equation}</div>\r\n          )} */}\r\n          <div style={{ height: \"6px\", width: \"auto\" }}></div>\r\n        </div>\r\n\r\n        {/* Test Type */}\r\n        <div className=\"input_wrapper\">\r\n          <label for=\"test_type\" className=\"label\">\r\n            Test Type\r\n          </label>\r\n          <Select\r\n            id=\"test_type\"\r\n            name=\"test_type\"\r\n            placeholder=\"Select Test Type\"\r\n            style={{ width: 180 }}\r\n            value={test_type}\r\n            onChange={value => this.handleSelect(\"test_type\", value)}\r\n          >\r\n            {this.state.SelectTestType}\r\n            {/* {childrenTestType.map((post, index) => (\r\n              <Option value={post.id} key={index}>\r\n                {post.name}\r\n              </Option>\r\n            ))} */}\r\n          </Select>\r\n          {errors.test_type.length > 0 && (\r\n            <div style={error2}>{errors.test_type}</div>\r\n          )}\r\n          <div style={{ height: \"6px\" }}></div>\r\n        </div>\r\n\r\n        {/* Plant Multiselect */}\r\n        {/* <div className='input_wrapper'>\r\n          <label className='label' style={{ position: \"relative\" }}>\r\n            Plant\r\n          </label>\r\n          <Select\r\n            mode='multiple'\r\n            style={{ width: 250 }}\r\n            placeholder='Select Plant'\r\n            id='plant'\r\n            name='plant'\r\n            value={plant}\r\n            onChange={value => this.handleSelect(\"plant\", value)}\r\n          >\r\n            {this.state.SelectPlants}\r\n          </Select>\r\n          {errors.plant.length > 0 && <div style={error}>{errors.plant}</div>}\r\n          <div style={{ height: \"6px\" }}></div>\r\n        </div> */}\r\n\r\n        {/* Description  */}\r\n        {/* <div className='input_wrapper'>\r\n          <label for='description' className='label'>\r\n            Description\r\n          </label>\r\n          <TextArea\r\n            style={{ width: 300 }}\r\n            id='description'\r\n            name='description'\r\n            placeholder=''\r\n          />\r\n        </div> */}\r\n\r\n        {/* Procedure */}\r\n        {/* <div className='input_wrapper'>\r\n          <label for='procedure' className='label'>\r\n            Procedure\r\n          </label>\r\n          <TextArea\r\n            className='textarea1'\r\n            style={{ width: 590 }}\r\n            id='procedure'\r\n            name='procedure'\r\n            placeholder='Enter Procedure'\r\n          />\r\n        </div> */}\r\n        <div\r\n          style={{\r\n            marginTop: \"30px\",\r\n            marginLeft: \"20px\",\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignSelf: \"center\"\r\n          }}\r\n        >\r\n          <PrimaryButton\r\n            type=\"submit\"\r\n            primary\r\n            style={{\r\n              background: theme.colors.primary,\r\n              border: \"none\",\r\n              color: \"white\"\r\n            }}\r\n            onClick={this.handleSubmit}\r\n          >\r\n            Submit\r\n          </PrimaryButton>\r\n        </div>\r\n      </FlexContainer>\r\n    );\r\n  }\r\n  // changeAction = () => {\r\n  //   if (this.props.showSecondColumn === false) {\r\n  //     return { type: TRIGGER_EQUATIONS_AREA };\r\n  //   } else {\r\n  //     return { type: TRIGGER_BACK_EQUATIONS_AREA };\r\n  //   }\r\n  // };\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    icon: state.testConfigurationReducers.triggerEquationAreaReducer.icon,\r\n    togglerValue:\r\n      state.testConfigurationReducers.triggerEquationAreaReducer.togglable\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    toggleEquationArea: event => {\r\n      console.log(event.target.value);\r\n      if (event.target.value === \"yes\") {\r\n        dispatch({ type: TRIGGER_EQUATIONS_AREA });\r\n        console.log(\"triggered equation area\");\r\n      } else {\r\n        dispatch({ type: TRIGGER_BACK_EQUATIONS_AREA });\r\n        console.log(\"triggered back equation area\");\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTestName);\r\n","export const ADD_EQUATION_SYMBOLS = \"ADD_EQUATION_SYMBOLS\";\r\nexport const ADD_TEXT_BODY_WITH_KEYPRESS = \"ADD_TEXT_BODY_WITH_KEYPRESS\";\r\nexport const ADD_PARAMETERS = \"ADD_PARAMETERS\";\r\nexport const POP_PARAMETERS = \"POP_PARAMETERS\";\r\n\r\n//Select Units in Parameters\r\nexport const SELECT_UNIT = \"SELECT_UNIT\";\r\nexport const TICK_CHECKBOX = \"TICK_CHECKBOX\";\r\nexport const UNTICK_CHECKBOX = \"UNTICK_CHECKBOX\";\r\n\r\n//Create Minicard according to parameters\r\nexport const CREATE_MINI_CARD = \"CREATE_MINI_CARD\";\r\nexport const REMOVE_MINI_CARD = \"REMOVE_MINI_CARD\";\r\n\r\n//Stepper Area Joined Forms Connections and it's Logics\r\nexport const TRIGGER_EQUATIONS_AREA = \"TRIGGER_EQUATIONS_AREA\";\r\nexport const TRIGGER_BACK_EQUATIONS_AREA = \"TRIGGER_BACK_EQUATIONS_AREA\";\r\nexport const CLEAR_STATES_WHILE_CANCEL = \"CLEAR_STATES_WHILE_CANCEL\";\r\n","import styled, { css } from \"styled-components\";\r\nimport Add from \"../../../assets/calculator/add.png\";\r\nimport Subtract from \"../../../assets/calculator/subtract.png\";\r\nimport Multiply from \"../../../assets/calculator/multiply.png\";\r\nimport Division from \"../../../assets/calculator/divide.png\";\r\nimport Equal from \"../../../assets/calculator/equal.png\";\r\nimport SquareRoot from \"../../../assets/calculator/square-root.png\";\r\nimport IsLesserThan from \"../../../assets/calculator/is-less-than.png\";\r\nimport IsGreaterThan from \"../../../assets/calculator/is-greater-than.png\";\r\nimport Zigma from \"../../../assets/calculator/zigma.png\";\r\nimport Pie from \"../../../assets/calculator/pie.png\";\r\nimport Square from \"../../../assets/calculator/square.png\";\r\n// import Multiply from \"../../../assets/calculator/\";\r\n\r\nexport const MiniCard = styled.div`\r\n  position: static;\r\n  z-index: 100;\r\n  height: 50px;\r\n  width: 50px;\r\n  display: flex;\r\n  margin: 5px;\r\n  /* border-top-left-radius: ${props => (props.topLeft ? \"20px\" : \"\")};\r\n  border-top-right-radius: ${props => (props.topRight ? \"20px\" : \"\")};\r\n  border-bottom-left-radius: ${props => (props.bottomLeft ? \"20px\" : \"\")};\r\n  border-bottom-right-radius: ${props => (props.bottomRight ? \"20px\" : \"\")}; */\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  \r\n  /* border: 1px solid #001016; */\r\n  border-radius: 20px;\r\n  box-shadow: 1px 4px 2px 2px rgba(0, 0, 0, 0.05);\r\n \r\n  ${props =>\r\n    props.letters &&\r\n    css`\r\n      background: white;\r\n    `}\r\n  /* ${props =>\r\n    props.add &&\r\n    css`\r\n      background: url(${Add});\r\n      background-size: cover;\r\n    `}\r\n    ${props =>\r\n      props.subtract &&\r\n      css`\r\n        background: url(${Subtract});\r\n        background-size: cover;\r\n      `}\r\n    ${props =>\r\n      props.multiply &&\r\n      css`\r\n        background: url(${Multiply});\r\n        background-size: cover;\r\n      `}\r\n    ${props =>\r\n      props.divide &&\r\n      css`\r\n        background: url(${Division});\r\n        background-size: cover;\r\n      `} */\r\n    ${props =>\r\n      props.add &&\r\n      css`\r\n        background: url(${Add});\r\n        background-size: cover;\r\n      `}\r\n    ${props =>\r\n      props.subtract &&\r\n      css`\r\n        background: url(${Subtract});\r\n        background-size: cover;\r\n      `}\r\n    ${props =>\r\n      props.multiply &&\r\n      css`\r\n        background: url(${Multiply});\r\n        background-size: cover;\r\n      `}\r\n    ${props =>\r\n      props.divide &&\r\n      css`\r\n        background: url(${Division});\r\n        background-size: cover;\r\n      `}\r\n    ${props =>\r\n      props.equal &&\r\n      css`\r\n        background: url(${Equal});\r\n        background-size: cover;\r\n      `};\r\n    ${props =>\r\n      props.zigma &&\r\n      css`\r\n        background: url(${Zigma});\r\n        background-size: cover;\r\n      `};\r\n    ${props =>\r\n      props.lowerthan &&\r\n      css`\r\n        background: url(${IsLesserThan});\r\n        background-size: cover;\r\n      `};\r\n\r\n    ${props =>\r\n      props.greaterthan &&\r\n      css`\r\n        background: url(${IsGreaterThan});\r\n        background-size: cover;\r\n      `};\r\n\r\n    ${props =>\r\n      props.squareroot &&\r\n      css`\r\n        background: url(${SquareRoot});\r\n        background-size: cover;\r\n      `};\r\n    ${props =>\r\n      props.pie &&\r\n      css`\r\n        background: url(${Pie});\r\n        background-size: cover;\r\n      `};\r\n    ${props =>\r\n      props.square &&\r\n      css`\r\n        background: url(${Square});\r\n        background-size: cover;\r\n      `};\r\n\r\n\r\n\r\n      &:active{\r\n        box-shadow: 0px 1px 2px 2px rgba(0, 0, 0, 0.1)\r\n      }\r\n  \r\n`;\r\n","import React, { Component } from \"react\";\r\nimport { FlexContainer } from \"../../../styledcomponents/container/FlexGrid\";\r\nimport \"../styleEquationConfiguration.css\";\r\nimport { MiniCard } from \"../../../styledcomponents/card/MiniCard\";\r\nimport Paragraph from \"antd/lib/typography/Paragraph\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  ADD_EQUATION_SYMBOLS,\r\n  ADD_TEXT_BODY_WITH_KEYPRESS,\r\n  ADD_PARAMETERS\r\n} from \"../../../../redux/action/testconfiguration/TestConfiguration\";\r\n\r\nclass AddTestEquation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      equations: [],\r\n      textBoxEquation: \"\",\r\n      cards: []\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({\r\n      textBoxEquation: nextProps.textBody\r\n    });\r\n  }\r\n\r\n  //render mini cards as per cards in the redux state\r\n  // renderMiniCards = () => {\r\n  //   this.state.cards.map((post, index) => {\r\n  //     return (\r\n  //       <MiniCard letters key={index}>\r\n  //         <Paragraph className='backImg'>{post}</Paragraph>\r\n  //       </MiniCard>\r\n  //     );\r\n  //   });\r\n  // };\r\n\r\n  // sum = (a, b) => {\r\n  //   return `${a} ${b}`;\r\n  // };\r\n\r\n  // handleCalculate = value => {\r\n  //   console.log(value);\r\n  //   // // let prevState = this.state.textBoxEquation;\r\n  //   this.state.equations.push(value);\r\n  //   console.log(this.state.equations);\r\n  //   // let eq = this.state.equations.map(post => post);\r\n  //   // console.log(eq);\r\n  //   // let splicedEd = eq.pop();\r\n  //   // console.log(splicedEd);\r\n\r\n  //   let eq = this.sum(...this.state.equations);\r\n  //   let stringEq = JSON.stringify(eq);\r\n  //   console.log(eq);\r\n  //   console.log(stringEq);\r\n  //   this.setState({\r\n  //     textBoxEquation: eq\r\n  //   });\r\n  // };\r\n\r\n  // onChangeTextBox = event => {\r\n  //   console.log(event.target.value);\r\n  //   this.state.equations.push(event.target.value);\r\n  //   this.setState({\r\n  //     textBoxEquation: this.state.equations\r\n  //   });\r\n  // };\r\n\r\n  render() {\r\n    const { textBoxEquation } = this.state;\r\n    console.log(this.props.cards);\r\n    return (\r\n      <FlexContainer style={{ width: \"700px\" }}>\r\n        <FlexContainer normal className='equation_wrapper'>\r\n          <TextArea\r\n            className='equation_playground textEmph'\r\n            value={textBoxEquation}\r\n            onChange={event => this.props.onChangeTextBox(event)}\r\n            style={{ fontSize: \"20px\" }}\r\n          ></TextArea>\r\n          <div className='calculators'>\r\n            <MiniCard\r\n              equal\r\n              onClick={value => this.props.handleCalculate(\"=\", value)}\r\n            ></MiniCard>\r\n\r\n            <MiniCard>\r\n              <Paragraph\r\n                className='backImg'\r\n                onClick={value => this.props.handleCalculate(\"+\", value)}\r\n              >\r\n                +\r\n              </Paragraph>\r\n            </MiniCard>\r\n\r\n            <MiniCard>\r\n              <Paragraph\r\n                className='backImg'\r\n                onClick={value => this.props.handleCalculate(\"-\", value)}\r\n              >\r\n                -\r\n              </Paragraph>\r\n            </MiniCard>\r\n\r\n            <MiniCard>\r\n              <Paragraph\r\n                className='backImg'\r\n                onClick={value => this.props.handleCalculate(\"*\", value)}\r\n              >\r\n                *\r\n              </Paragraph>\r\n            </MiniCard>\r\n\r\n            <MiniCard>\r\n              <Paragraph\r\n                className='backImg'\r\n                onClick={value => this.props.handleCalculate(\"/\", value)}\r\n              >\r\n                /\r\n              </Paragraph>\r\n            </MiniCard>\r\n\r\n            <MiniCard>\r\n              <Paragraph\r\n                className='backImg'\r\n                onClick={value => this.props.handleCalculate(\".\", value)}\r\n              >\r\n                .\r\n              </Paragraph>\r\n            </MiniCard>\r\n\r\n            <MiniCard>\r\n              <Paragraph\r\n                className='backImg'\r\n                onClick={value => this.props.handleCalculate(\"(\", value)}\r\n              >\r\n                (\r\n              </Paragraph>\r\n            </MiniCard>\r\n\r\n            <MiniCard>\r\n              <Paragraph\r\n                className='backImg'\r\n                onClick={value => this.props.handleCalculate(\")\", value)}\r\n              >\r\n                )\r\n              </Paragraph>\r\n            </MiniCard>\r\n\r\n            <MiniCard\r\n              squareroot\r\n              onClick={value => this.props.handleCalculate(\"√\", value)}\r\n            ></MiniCard>\r\n\r\n            <MiniCard\r\n              pie\r\n              onClick={value => this.props.handleCalculate(\"π\", value)}\r\n            ></MiniCard>\r\n\r\n            <MiniCard\r\n              greaterthan\r\n              onClick={value => this.props.handleCalculate(\">\", value)}\r\n            ></MiniCard>\r\n\r\n            <MiniCard\r\n              lowerthan\r\n              onClick={value => this.props.handleCalculate(\"<\", value)}\r\n            ></MiniCard>\r\n\r\n            <MiniCard\r\n              square\r\n              onClick={value => this.props.handleCalculate(\"²\", value)}\r\n            ></MiniCard>\r\n          </div>\r\n        </FlexContainer>\r\n\r\n        <FlexContainer className='letters_area'>\r\n          {this.props.cards.map((post, index) => (\r\n            <MiniCard\r\n              letters\r\n              key={index}\r\n              name={post}\r\n              onClick={name => this.props.selectParameters(post, name)}\r\n            >\r\n              <Paragraph className='backImg'>{post}</Paragraph>\r\n            </MiniCard>\r\n          ))}\r\n          {/* {this.renderMiniCards()} */}\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    textBody:\r\n      state.testConfigurationReducers.equationConfigurationReducer.textBody,\r\n    cards: state.testConfigurationReducers.equationConfigurationReducer.cards\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    handleCalculate: value => {\r\n      dispatch({ type: ADD_EQUATION_SYMBOLS, payload: value });\r\n      console.log(value);\r\n    },\r\n    onChangeTextBox: event => {\r\n      dispatch({\r\n        type: ADD_TEXT_BODY_WITH_KEYPRESS,\r\n        payload: event.target.value\r\n      });\r\n      // console.log(event.target.value);\r\n    },\r\n    selectParameters: post => {\r\n      console.log(post);\r\n      dispatch({ type: ADD_PARAMETERS, payload: post });\r\n      console.log(\"record pushed \" + post);\r\n    }\r\n    //test parameter\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTestEquation);\r\n","import React, { Component } from \"react\";\r\nimport { Checkbox } from \"antd\";\r\nimport { AntTable } from \"../../../styledcomponents/table/AntTabl\";\r\nimport { FlexContainer } from \"../../../styledcomponents/container/FlexGrid\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  REMOVE_MINI_CARD,\r\n  CREATE_MINI_CARD\r\n} from \"../../../../redux/action/testconfiguration/TestConfiguration\";\r\nimport { api } from \"../../../services/AxiosService\";\r\n\r\nclass AddTestParameter extends Component {\r\n  state = {\r\n    size: \"small\",\r\n    unit: [],\r\n    checked: false,\r\n    testParameterData: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getAllParameters();\r\n  }\r\n\r\n  getAllParameters = () => {\r\n    api(\"GET\", \"supermix\", \"/parameters\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data.results);\r\n      this.setState({\r\n        testParameterData: res.data.results.parameters\r\n      });\r\n    });\r\n  };\r\n\r\n  componentWillMount() {\r\n    if (window.screen.width > 1900) {\r\n      console.log(\"hooray\");\r\n      this.setState({\r\n        size: \"large\"\r\n      });\r\n    } else if (window.screen.width < 1440) {\r\n      this.setState({\r\n        size: \"small\"\r\n      });\r\n    }\r\n  }\r\n\r\n  onChangeUnit = (value, record) => {\r\n    console.log(value);\r\n    console.log(record);\r\n  };\r\n\r\n  // stateCheck = e => {\r\n  //   console.log(\"checked in state\" + e.target.checked);\r\n  //   this.setState({\r\n  //     checked: e.target.checked\r\n  //   });\r\n  // };\r\n\r\n  handleChange = value => {\r\n    console.log(`selected ${value}`);\r\n  };\r\n\r\n  render() {\r\n    console.log(\"DEBUG4142\", this.props.cards);\r\n    const testParameterColumns = [\r\n      {\r\n        title: \"Parameter\",\r\n        dataIndex: \"name\",\r\n        key: \"name\"\r\n      },\r\n      {\r\n        title: \"Abbreviation\",\r\n        dataIndex: \"abbreviation\",\r\n        key: \"abbreviation\"\r\n      },\r\n      // {\r\n      //   title: \"Unit\",\r\n      //   dataIndex: \"unit\",\r\n      //   key: \"unit\",\r\n      //   render: (text, record = this.state.unit) => (\r\n      //     <Select\r\n      //       id='unit_select'\r\n      //       name='unit_select'\r\n      //       onChange={this.props.onChangeUnit.bind(this, record)}\r\n      //       style={{ width: 100 }}\r\n      //     >\r\n      //       <Option value='kg'>Kg</Option>\r\n      //       <Option value='lb'>Lb</Option>\r\n      //     </Select>\r\n      //   )\r\n      // },\r\n      {\r\n        title: \"Relevant\",\r\n        dataIndex: \"testParameterCheck\",\r\n        key: \"testParameterCheck\",\r\n        render: (text, record = this.state.testParameterData) => (\r\n          <Checkbox\r\n            id='relevant_check'\r\n            name='relevant_check'\r\n            key={this.state.testParameterData.parameterName}\r\n            onChange={this.props.selectCreateMiniCard.bind(this, record)}\r\n          />\r\n        )\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <FlexContainer>\r\n        <AntTable\r\n          dataSource={this.state.testParameterData}\r\n          size={this.state.size}\r\n          bordered={false}\r\n          columns={testParameterColumns}\r\n          //   title={() => TestTitle(\"Select Parameter\")}\r\n          showHeader={true}\r\n          style={{\r\n            width: \"400px\",\r\n            height: \"280px\",\r\n            background: \"white\",\r\n            boxShadow: \"0px 0px 0px 0px rgba(0,0,0,0)\",\r\n            justifyContent: \"right\"\r\n          }}\r\n          scroll={{ y: 230 }}\r\n          pagination={false}\r\n        />\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    cards: state.testConfigurationReducers.equationConfigurationReducer.cards\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // onChangeUnit: (record, value) => {\r\n    //   dispatch({\r\n    //     type: SELECT_UNIT,\r\n    //     payload: { record: record, value: value }\r\n    //   });\r\n    //   console.log(\"unit selected = \" + value);\r\n    // },\r\n    // onCheckRelevant: record => {\r\n    //   dispatch({\r\n    //     type: TICK_CHECKBOX,\r\n    //     payload: record\r\n    //   });\r\n    //   console.log(\"relevant ticked\");\r\n    // }\r\n    // selectParameters: (record, event) => {\r\n    //   console.log(event.target.checked);\r\n    //   if (event.target.checked === true) {\r\n    //     dispatch({ type: ADD_PARAMETERS, payload: record.parameterAbbr });\r\n    //     console.log(\"record pushed \" + record.parameterAbbr);\r\n    //   }\r\n    //   if (event.target.checked === false) {\r\n    //     dispatch({ type: POP_PARAMETERS, payload: record.parameterAbbr });\r\n    //     console.log(\"record spliced \" + record.parameterAbbr);\r\n    //   }\r\n    // }\r\n    selectCreateMiniCard: (record, event) => {\r\n      console.log(event.target.checked);\r\n      if (event.target.checked === true) {\r\n        dispatch({ type: CREATE_MINI_CARD, payload: record });\r\n        console.log(\"created mini card \" + record.abbreviation);\r\n        // dispatch({\r\n        //   type: TICK_CHECKBOX,\r\n        //   payload: record\r\n        // });\r\n      } else if (event.target.checked === false) {\r\n        dispatch({ type: REMOVE_MINI_CARD, payload: record });\r\n        console.log(\"removed mini card \" + record.abbreviation);\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTestParameter);\r\n","import React, { Component } from \"react\";\r\nimport { FlexContainer } from \"../../../styledcomponents/container/FlexGrid\";\r\nimport AddTestName from \"../configure/AddTestName\";\r\nimport AddTestEquation from \"../configure/AddTestEquation\";\r\nimport { connect } from \"react-redux\";\r\nimport { Modal, Button } from \"antd\";\r\nimport theme from \"../../../../theme\";\r\nimport {\r\n  TRIGGER_BACK_EQUATIONS_AREA,\r\n  CLEAR_STATES_WHILE_CANCEL\r\n} from \"../../../../redux/action/testconfiguration/TestConfiguration\";\r\nimport AddTestParameter from \"../configure/AddTestParameter\";\r\nimport { PrimaryButton } from \"../../../styledcomponents/button/button\";\r\nimport { api } from \"../../../services/AxiosService\";\r\nimport Notification from \"../../../Constant/Notification\";\r\n\r\nclass Step01 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      justifyStyle: \"center\",\r\n      showSecondColumn: false,\r\n      visible: false,\r\n      lastIndexOfEquation: \"\",\r\n      parameterData: this.props.paramsData\r\n    };\r\n  }\r\n\r\n  // api(\"POST\", \"supermix\", \"/test\", \"\", data, \"\").then(\r\n  //   res => {\r\n  //     console.log(res.data);\r\n  //     if (res.data.status === \"VALIDATION_FAILURE\") {\r\n  //       console.log(\"add\");\r\n  //       this.responeserror(res.data.results.name.message);\r\n  //     } else {\r\n  //       Notification(\"success\", res.data.message);\r\n  //       // this.props.reload();\r\n\r\n  //       this.setState({\r\n  //         test_name: \"\",\r\n  //         equation: \"\",\r\n  //         test_type: \"\",\r\n  //         plant: [],\r\n  //         errors: {\r\n  //           test_name: \"\",\r\n  //           equation: \"\",\r\n  //           test_type: \"\"\r\n  //         },\r\n  //         errormsgs: \"\"\r\n  //       });\r\n  //     }\r\n  //   },\r\n  //   error => {\r\n  //     this.setState({\r\n  //       errorvalmegss: error.validationFailures[0]\r\n  //     });\r\n  //     console.log(\"DEBUG34: \", error);\r\n  //     console.log(HandelError(error.validationFailures[0]));\r\n  //   }\r\n  // );\r\n\r\n  handleSubmit = () => {\r\n    let testParameter = [];\r\n    let lastEquationData;\r\n    const saveEquations = {\r\n      formula: this.props.textBody\r\n    };\r\n    // const testParameter = {\r\n    //   equationId: 1,\r\n    //   parameterId: 61\r\n    // };\r\n\r\n    console.log(testParameter);\r\n    const { parameterData } = this.state;\r\n    function saveEquationParameterAfterAwait() {\r\n      return new Promise(resolve => {\r\n        setTimeout(() => {\r\n          api(\"GET\", \"supermix\", \"/equations\", \"\", \"\", \"\").then(res => {\r\n            console.log(res.data.results.equations);\r\n            console.log(res.data.results.equations.length);\r\n            console.log(\r\n              res.data.results.equations[res.data.results.equations.length - 1]\r\n                .id\r\n            );\r\n\r\n            lastEquationData =\r\n              res.data.results.equations[res.data.results.equations.length - 1]\r\n                .id;\r\n            for (let k = 0; k < parameterData.length; k++) {\r\n              testParameter.push({\r\n                equationId: lastEquationData,\r\n                parameterId: parameterData[k]\r\n              });\r\n            }\r\n            api(\r\n              \"POST\",\r\n              \"supermix\",\r\n              \"/equation-parameter\",\r\n              \"\",\r\n              testParameter,\r\n              \"\"\r\n            ).then(res => {\r\n              console.log(res.data);\r\n              Notification(\"success\", res.data.message);\r\n              // this.props.reload();\r\n              // this.setState({});\r\n            });\r\n            // res.data\r\n            // for (let j = 0; j < res.data.results.equations.length; j++) {\r\n\r\n            // }\r\n          });\r\n\r\n          resolve(\"resolved\");\r\n        }, 4000);\r\n      });\r\n    }\r\n\r\n    async function saveEquation() {\r\n      console.log(\"calling\");\r\n\r\n      console.log(saveEquations);\r\n      api(\"POST\", \"supermix\", \"/equation\", \"\", saveEquations, \"\").then(res => {\r\n        console.log(res.data);\r\n        Notification(\"success\", res.data.message);\r\n\r\n        // this.props.reload();\r\n        // this.setState({});\r\n      });\r\n      const result = await saveEquationParameterAfterAwait();\r\n      console.log(result);\r\n\r\n      // expected output: 'resolved'\r\n    }\r\n\r\n    saveEquation();\r\n    if (saveEquation) {\r\n      setTimeout(() => {\r\n        this.props.handleCancelEquationArea();\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props.paramsData);\r\n    return (\r\n      <FlexContainer style={{ justifyContent: \"center\" }}>\r\n        <FlexContainer\r\n          column\r\n          style={{\r\n            // backgroundColor: \"rgba(220, 220, 220, 0.9)\",\r\n            padding: \"10px\",\r\n            width: \"55%\",\r\n            justifyContent: \"center\"\r\n          }}\r\n        >\r\n          <FlexContainer\r\n            column\r\n            style={{\r\n              background: theme.colors.primary,\r\n              color: \"white\",\r\n              borderTopLeftRadius: \"20px\",\r\n              borderTopRightRadius: \"20px\",\r\n              height: \"50px\",\r\n              justifyContent: \"center\",\r\n              verticalAlign: \"middle\",\r\n              marginTop: \"10px\",\r\n              fontSize: \"16px\",\r\n              fontWeight: 480\r\n            }}\r\n          >\r\n            Add Test\r\n          </FlexContainer>\r\n\r\n          <AddTestName />\r\n          <Modal\r\n            width='1250px'\r\n            style={{ height: \"auto\", marginTop: \"-40px\" }}\r\n            title='Equation Area'\r\n            visible={this.props.visible}\r\n            onCancel={this.props.handleCancelEquationArea}\r\n            footer={[\r\n              <Button key='back' onClick={this.props.handleCancelEquationArea}>\r\n                Cancel\r\n              </Button>,\r\n              <PrimaryButton\r\n                key='submit'\r\n                onClick={this.handleSubmit}\r\n                style={{\r\n                  background: \"#001328\",\r\n                  color: \"white\",\r\n                  border: \"none\"\r\n                }}\r\n              >\r\n                Save\r\n              </PrimaryButton>\r\n            ]}\r\n          >\r\n            <FlexContainer normal style={{ width: \"100%\" }}>\r\n              <AddTestParameter />\r\n              <AddTestEquation />\r\n            </FlexContainer>\r\n          </Modal>\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    visible: state.testConfigurationReducers.triggerEquationAreaReducer.visible,\r\n    cards: state.testConfigurationReducers.equationConfigurationReducer.cards,\r\n    paramsData:\r\n      state.testConfigurationReducers.equationConfigurationReducer.paramsData,\r\n    textBody:\r\n      state.testConfigurationReducers.equationConfigurationReducer.textBody\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    handleCancelEquationArea: () => {\r\n      dispatch({ type: TRIGGER_BACK_EQUATIONS_AREA });\r\n      dispatch({ type: CLEAR_STATES_WHILE_CANCEL });\r\n      console.log(\"triggered back equation area\");\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Step01);\r\n","import React, { Component } from \"react\";\r\nimport { Checkbox, Select, Icon, Button } from \"antd\";\r\nimport { AntTable } from \"../../../styledcomponents/table/AntTabl\";\r\nimport { connect } from \"react-redux\";\r\nimport theme from \"../../../../theme\";\r\nimport { FlexContainer } from \"../../../styledcomponents/container/FlexGrid\";\r\nimport { api } from \"../../../services/AxiosService\";\r\nimport { PrimaryButton } from \"../../../styledcomponents/button/button\";\r\nimport Notification from \"../../../Constant/Notification\";\r\nimport AddParameter from \"../../../master/ParameterLevel/ParameterMaster/AddParameter\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass TestParameterTable extends Component {\r\n  state = {\r\n    size: \"small\",\r\n    parameterList: [],\r\n    selectedTestParams: [],\r\n    test_name: undefined,\r\n    addToTestParams: [],\r\n    unit: \"\",\r\n    unitData: []\r\n  };\r\n  componentWillMount() {\r\n    if (window.screen.width > 1900) {\r\n      console.log(\"hooray\");\r\n      this.setState({\r\n        size: \"large\"\r\n      });\r\n    } else if (window.screen.width < 1440) {\r\n      this.setState({\r\n        size: \"small\"\r\n      });\r\n    }\r\n  }\r\n\r\n  //get all for tests select\r\n  getAllTests() {\r\n    api(\"GET\", \"supermix\", \"/tests\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data.results);\r\n      if (res.data.results.test.length > 0) {\r\n        console.log(\"got tests\");\r\n        let SelectTest = res.data.results.test.map((post, index) => {\r\n          return (\r\n            <Option value={post.id} key={index}>\r\n              {post.name}\r\n            </Option>\r\n          );\r\n        });\r\n        this.setState({\r\n          SelectTest,\r\n          test_name: res.data.results.test[res.data.results.test.length - 1].id\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  //get all for units select\r\n  getAllUnits() {\r\n    api(\"GET\", \"supermix\", \"/units\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data.results);\r\n      if (res.data.results.units.length > 0) {\r\n        console.log(\"got tests\");\r\n        let SelectUnit = res.data.results.units.map((post, index) => {\r\n          return (\r\n            <Option value={post.id} key={index}>\r\n              {post.unit}\r\n            </Option>\r\n          );\r\n        });\r\n        this.setState({\r\n          SelectUnit\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  getAllParameters = () => {\r\n    api(\"GET\", \"supermix\", \"/parameters\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data.results);\r\n      this.setState({\r\n        parameterList: res.data.results.parameters\r\n      });\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getAllParameters();\r\n    this.getAllTests();\r\n    this.getAllUnits();\r\n  }\r\n\r\n  handleCheck = (record, event) => {\r\n    const { selectedTestParams } = this.state;\r\n    console.log(record);\r\n    console.log(event.target.checked);\r\n    if (event.target.checked === true) {\r\n      selectedTestParams.push(record);\r\n    } else if (event.target.checked === false) {\r\n      for (let i = 0; i < selectedTestParams.length; i++) {\r\n        if (selectedTestParams[i] === record) {\r\n          selectedTestParams.splice(i, 1);\r\n        }\r\n      }\r\n      console.log(selectedTestParams);\r\n    }\r\n  };\r\n\r\n  handleSelect = (name, value) => {\r\n    console.log(value);\r\n    this.setState({\r\n      test_name: value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    const { selectedTestParams, addToTestParams, test_name } = this.state;\r\n\r\n    e.preventDefault();\r\n    for (let k = 0; k < selectedTestParams.length; k++) {\r\n      addToTestParams.push({\r\n        testId: test_name,\r\n        parameterId: selectedTestParams[k].id,\r\n        unitId: this.state.unitData[selectedTestParams[k].id]\r\n      });\r\n    }\r\n    console.log(addToTestParams);\r\n    console.log(this.state.unitData[1]);\r\n\r\n    api(\"POST\", \"supermix\", \"/test-parameter\", \"\", addToTestParams, \"\").then(\r\n      res => {\r\n        console.log(res.data);\r\n        Notification(\"success\", res.data.message);\r\n        // this.props.reload();\r\n        this.setState({\r\n          selectedTestParams: [],\r\n          test_name: \"\",\r\n          addToTestParams: [],\r\n          unitData: []\r\n        });\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n\r\n    console.log(\"submitted\");\r\n  };\r\n  addunit = (record, value) => {\r\n    this.state.unitData[record.id] = value;\r\n  };\r\n\r\n  render() {\r\n    // this.state.unitData[0] = this.this.state.length;\r\n    // console.log(this.state.SelectUnit);\r\n\r\n    // console.log(this.state.1);\r\n\r\n    const testParameterColumns = [\r\n      {\r\n        title: \"Parameter\",\r\n        dataIndex: \"name\",\r\n        key: \"name\",\r\n        width: \"60%\"\r\n      },\r\n      {\r\n        title: \"Abbreviation\",\r\n        dataIndex: \"abbreviation\",\r\n        key: \"abbreviation\"\r\n      },\r\n      {\r\n        title: \"Relevant\",\r\n        dataIndex: \"action\",\r\n        key: \"action\",\r\n        render: (text, record = this.state.testParameterData) => (\r\n          <Checkbox\r\n            id=\"check_relevant\"\r\n            name=\"check_relevant\"\r\n            onChange={this.handleCheck.bind(this, record)}\r\n          />\r\n        )\r\n      },\r\n      {\r\n        title: \"Unit\",\r\n        dataIndex: \"unit\",\r\n        key: \"unit\",\r\n        render: (text, record = this.state.testParameterData) => (\r\n          <Select\r\n            id=\"unit\"\r\n            name=\"unit\"\r\n            onChange={value => this.addunit(record, value)}\r\n            style={{ width: 80 }}\r\n          >\r\n            {this.state.SelectUnit}\r\n          </Select>\r\n        )\r\n      }\r\n    ];\r\n    return (\r\n      <FlexContainer\r\n        style={{\r\n          width: \"1000px\",\r\n          background: \"rgba(0,0,0,0.4)\",\r\n          marginTop: \"20px\",\r\n          borderRadius: \"15px\",\r\n          padding: \"10px\"\r\n        }}\r\n      >\r\n        <FlexContainer\r\n          style={{\r\n            width: \"800px\",\r\n            justifyContent: \"center\",\r\n            marginTop: \"10px\"\r\n          }}\r\n        ></FlexContainer>\r\n        <AntTable\r\n          dataSource={this.state.parameterList}\r\n          size={this.state.size}\r\n          bordered={false}\r\n          columns={testParameterColumns}\r\n          title={() => (\r\n            <div\r\n              style={{\r\n                background: theme.colors.primary,\r\n                color: \"white\",\r\n                height: \"40px\",\r\n                fontSize: \"16px\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"center\",\r\n                margin: \"-10px\",\r\n                borderTopLeftRadius: \"15px\",\r\n                borderTopRightRadius: \"15px\",\r\n                border: \"none\"\r\n              }}\r\n            >\r\n              <FlexContainer style={{ width: \"50%\", marginLeft: \"40px\" }}>\r\n                <div className=\"input-wrapper\">\r\n                  <label\r\n                    className=\"label\"\r\n                    for=\"test_name\"\r\n                    style={{ color: \"white\" }}\r\n                  >\r\n                    Test\r\n                  </label>\r\n                  <Select\r\n                    id=\"test_name\"\r\n                    name=\"test_name\"\r\n                    value={this.state.test_name}\r\n                    onChange={value => this.handleSelect(\"test_name\", value)}\r\n                    style={{ width: 170, marginLeft: \"10px\" }}\r\n                  >\r\n                    {this.state.SelectTest}\r\n                  </Select>\r\n                </div>\r\n                Test Parameter\r\n                <div style={{ marginRight: \"-430px\" }}>\r\n                  <AddParameter />\r\n                  {/* <Button>\r\n                    <Icon type=\"plus\" /> Parameter\r\n                  </Button> */}\r\n                </div>\r\n              </FlexContainer>\r\n            </div>\r\n          )}\r\n          showHeader={true}\r\n          pagination={false}\r\n          scroll={{ y: 350 }}\r\n          style={{\r\n            height: \"400px\",\r\n            width: \"1100px\",\r\n            backgroundClip: \"padding-box\",\r\n            cellSpacing: \"0\"\r\n          }}\r\n        />\r\n        <FlexContainer\r\n          style={{\r\n            width: \"1100px\",\r\n            justifyContent: \"center\",\r\n            marginTop: \"25px\"\r\n          }}\r\n        >\r\n          <PrimaryButton\r\n            type={\"primary\"}\r\n            primary\r\n            style={{\r\n              background: theme.colors.primary,\r\n              border: \"none\"\r\n              // marginRight: \"-100px\"\r\n            }}\r\n            onClick={this.handleSubmit}\r\n          >\r\n            Submit\r\n          </PrimaryButton>\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {};\r\n};\r\nexport default connect(null, mapDispatchToProps)(TestParameterTable);\r\n","import React, { Component } from \"react\";\r\nimport { FlexContainer } from \"../../../styledcomponents/container/FlexGrid\";\r\nimport TestParameterTable from \"../tables/TestParameterTable\";\r\n// import AddTestParameterTable from \"../tables/AddTestParameterTable\";\r\n\r\nexport default class Step02 extends Component {\r\n  render() {\r\n    return (\r\n      <FlexContainer style={{ justifyContent: \"center\" }}>\r\n        <TestParameterTable />\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n","import {createHashHistory} from 'history';\r\nexport default createHashHistory();","import React, { Component } from \"react\";\r\nimport {\r\n  TileArea,\r\n  TileAreaText,\r\n  TileAreaAction\r\n} from \"../../../../styledcomponents/card/TileArea\";\r\nimport {\r\n  ROUTE_TO_ACCEPTED_VALUE,\r\n  ROUTE_TO_TEST_PARAMETER,\r\n  ROUTE_TO_EQUATION\r\n} from \"../../../../../redux/action/table/Table\";\r\nimport BasicCard from \"../../../../styledcomponents/card/BasicCard\";\r\nimport { Icon } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass TableTileArea extends Component {\r\n  render() {\r\n    return (\r\n      <TileArea style={{ marginTop: \"30px\" }}>\r\n        <BasicCard\r\n          finalproduct\r\n          tileareacard\r\n          size=\"small\"\r\n          hoverable={true}\r\n          onClick={this.props.routeToAcceptedValue}\r\n        >\r\n          <TileAreaText testreport unit>\r\n            Manage Accepted Value\r\n          </TileAreaText>\r\n          <TileAreaAction>\r\n            <Icon\r\n              filled\r\n              type=\"plus\"\r\n              style={{ color: \"red\", fontSize: \"22px\" }}\r\n            />\r\n          </TileAreaAction>\r\n        </BasicCard>\r\n        <BasicCard\r\n          finalproduct\r\n          tileareacard\r\n          size=\"small\"\r\n          hoverable={true}\r\n          onClick={this.props.routeToTestparameter}\r\n        >\r\n          <TileAreaText testreport unit>\r\n            Manage Test Parameter\r\n          </TileAreaText>\r\n          <TileAreaAction>\r\n            <Icon\r\n              filled\r\n              type=\"plus\"\r\n              style={{ color: \"red\", fontSize: \"22px\" }}\r\n            />\r\n          </TileAreaAction>\r\n        </BasicCard>\r\n        <BasicCard\r\n          finalproduct\r\n          tileareacard\r\n          size=\"small\"\r\n          hoverable={true}\r\n          onClick={this.props.routeToEquation}\r\n        >\r\n          <TileAreaText testreport unit>\r\n            Manage Equation\r\n          </TileAreaText>\r\n          <TileAreaAction>\r\n            <Icon\r\n              filled\r\n              type=\"plus\"\r\n              style={{ color: \"red\", fontSize: \"22px\" }}\r\n            />\r\n          </TileAreaAction>\r\n        </BasicCard>\r\n      </TileArea>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    routeToAcceptedValue: () => {\r\n      dispatch({ type: ROUTE_TO_ACCEPTED_VALUE });\r\n      console.log(\"ROUTE_TO_ACCEPTED_VALUE click dispatched\");\r\n    },\r\n    routeToTestparameter: () => {\r\n      dispatch({ type: ROUTE_TO_TEST_PARAMETER });\r\n      console.log(\"ROUTE_TO_TEST_PARAMETER click dispatched\");\r\n    },\r\n    routeToEquation: () => {\r\n      dispatch({ type: ROUTE_TO_EQUATION });\r\n      console.log(\"ROUTE_TO_EQUATION click dispatched\");\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableTileArea);\r\n","export const ROUTE_TO_ACCEPTED_VALUE = \"ROUTE_TO_ACCEPTED_VALUE\";\r\nexport const ROUTE_TO_TEST_PARAMETER = \"ROUTE_TO_TEST_PARAMETER\";\r\nexport const ROUTE_TO_EQUATION = \"ROUTE_TO_EQUATION\";\r\n","import React, { Component } from \"react\";\r\n\r\nimport Paragraph from \"antd/lib/typography/Paragraph\";\r\n\r\nimport { FlexContainer } from \"../../../../../styledcomponents/container/FlexGrid\";\r\n\r\nconst style = {\r\n  fontSize: \"medium\",\r\n  fontWeight: \"600\",\r\n  alignSelf: \"auto\",\r\n  padding: \"10px\"\r\n};\r\n\r\nexport default class AcceptableValueTitle extends Component {\r\n  render() {\r\n    return (\r\n      <FlexContainer titles leveltitles>\r\n        <Paragraph style={style}>Accepted Value </Paragraph>\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport Paragraph from \"antd/lib/typography/Paragraph\";\r\n\r\nimport { FlexContainer } from \"../../../../../styledcomponents/container/FlexGrid\";\r\n\r\nconst style = {\r\n  fontSize: \"medium\",\r\n  fontWeight: \"600\",\r\n  alignSelf: \"auto\",\r\n  padding: \"10px\"\r\n};\r\n\r\nexport default class AdmixtureValueTitle extends Component {\r\n  render() {\r\n    return (\r\n      <FlexContainer titles leveltitles>\r\n        <Paragraph style={style}>Admixture AcceptedValue </Paragraph>\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Input,\r\n  Modal,\r\n  Button,\r\n  Icon,\r\n  Select,\r\n  Switch,\r\n  Checkbox,\r\n  Popconfirm,\r\n  Divider\r\n} from \"antd\";\r\nimport AcceptedValueTitle from \"../ManageTables/titles/AcceptedValueTitle\";\r\nimport AdmixtureValueTitle from \"../ManageTables/titles/AdmixtureValueTitle\";\r\nimport { FlexContainer } from \"../../../../styledcomponents/container/FlexGrid\";\r\nimport { PrimaryButton } from \"../../../../styledcomponents/button/button\";\r\nimport {\r\n  MasterLevelForm,\r\n  MasterLevelFormTitle\r\n} from \"../../../../styledcomponents/form/MasterLevelForms\";\r\nimport { AntTable } from \"../../../../styledcomponents/table/AntTabl\";\r\nimport { api } from \"../../../../services/AxiosService\";\r\nimport Notification from \"../../../../Constant/Notification\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst error = {\r\n  color: \"red\",\r\n  fontSize: \"12px\",\r\n  width: \"170px\",\r\n  height: \"0.2px\"\r\n};\r\n\r\nconst minierror = {\r\n  width: \"90px\",\r\n  color: \"red\",\r\n  fontSize: \"12px\",\r\n  height: \"0.2px\"\r\n};\r\n\r\nclass AcceptedValue extends Component {\r\n  state = {\r\n    loading: false,\r\n    visible: false,\r\n\r\n    searchText: \"\",\r\n    visible: false,\r\n    size: \"small\",\r\n\r\n    admixturedata: \"\",\r\n    acceptedvaluedata: \"\",\r\n    id: \"\",\r\n    switchVal: false,\r\n    test_name: undefined,\r\n    parameter: undefined,\r\n    unit: undefined,\r\n    maximum: \"\",\r\n    minimum: \"\",\r\n    subCategory: undefined,\r\n    material: undefined,\r\n    switchValMaximum: \"\",\r\n    switchValMinimum: \"\",\r\n\r\n    errors: {\r\n      parameter: \"\",\r\n      unit: \"\",\r\n      maximum: \"\",\r\n      minimum: \"\"\r\n    },\r\n    optErrors: {\r\n      subCategory: \"\",\r\n      material: \"\",\r\n      switchValMaximum: \"\",\r\n      switchValMinimum: \"\"\r\n    },\r\n    type: \"edit\",\r\n    accId: \"\",\r\n    errormsgs: \"\",\r\n    switchType: \"\"\r\n  };\r\n\r\n  handleSelect = (name, value) => {\r\n    const { errors, optErrors } = this.state;\r\n    console.log(value + \" of \" + name);\r\n\r\n    //test\r\n    if (name === \"test_name\") {\r\n      this.setState({\r\n        test_name: value\r\n      });\r\n    }\r\n\r\n    //parameter\r\n    if (name === \"parameter\") {\r\n      this.setState({\r\n        parameter: value,\r\n        errors: {\r\n          parameter: \"\",\r\n          unit: errors.unit,\r\n          maximum: errors.maximum,\r\n          minimum: errors.minimum\r\n        },\r\n        optErrors: {\r\n          subCategory: optErrors.subCategory,\r\n          material: optErrors.material,\r\n          switchValMaximum: optErrors.switchValMaximum,\r\n          switchValMinimum: optErrors.switchValMinimum\r\n        }\r\n      });\r\n    }\r\n\r\n    //unit\r\n    if (name === \"unit\") {\r\n      this.setState({\r\n        unit: value,\r\n        errors: {\r\n          parameter: errors.parameter,\r\n          unit: \"\",\r\n          maximum: errors.maximum,\r\n          minimum: errors.minimum\r\n        },\r\n        optErrors: {\r\n          subCategory: optErrors.subCategory,\r\n          material: optErrors.material,\r\n          switchValMaximum: optErrors.switchValMaximum,\r\n          switchValMinimum: optErrors.switchValMinimum\r\n        }\r\n      });\r\n    }\r\n\r\n    //subCategory\r\n    if (name === \"subCategory\") {\r\n      this.setState({\r\n        subCategory: value,\r\n        errors: {\r\n          parameter: errors.parameter,\r\n          unit: errors.unit,\r\n          maximum: errors.maximum,\r\n          minimum: errors.minimum\r\n        },\r\n        optErrors: {\r\n          subCategory: \"\",\r\n          material: optErrors.material,\r\n          switchValMaximum: optErrors.switchValMaximum,\r\n          switchValMinimum: optErrors.switchValMinimum\r\n        }\r\n      });\r\n    }\r\n\r\n    //material\r\n    if (name === \"material\") {\r\n      this.setState({\r\n        material: value,\r\n        errors: {\r\n          parameter: errors.parameter,\r\n          unit: errors.unit,\r\n          maximum: errors.maximum,\r\n          minimum: errors.minimum\r\n        },\r\n        optErrors: {\r\n          subCategory: optErrors.subCategory,\r\n          material: \"\",\r\n          switchValMaximum: optErrors.switchValMaximum,\r\n          switchValMinimum: optErrors.switchValMinimum\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  onChange(checked) {\r\n    console.log(`switch to ${checked}`);\r\n    if (checked === true) {\r\n      console.log(\"true\");\r\n      this.setState({\r\n        switchVal: true\r\n      });\r\n    }\r\n    if (checked === false) {\r\n      console.log(\"false\");\r\n      this.setState({\r\n        switchVal: false\r\n      });\r\n    }\r\n  }\r\n\r\n  getAllParameters() {\r\n    api(\"GET\", \"supermix\", \"/parameters\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data.results);\r\n      if (res.data.results.parameters.length > 0) {\r\n        console.log(\"got parameters\");\r\n        let SelectParameter = res.data.results.parameters.map((post, index) => {\r\n          return (\r\n            <Option value={post.id} key={index}>\r\n              {post.name}\r\n            </Option>\r\n          );\r\n        });\r\n        this.setState({\r\n          SelectParameter\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  //get all for unit select\r\n  getAllUnits() {\r\n    api(\"GET\", \"supermix\", \"/units\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data.results);\r\n      if (res.data.results.units.length > 0) {\r\n        console.log(\"got units\");\r\n        let SelectUnit = res.data.results.units.map((post, index) => {\r\n          return (\r\n            <Option value={post.id} key={index}>\r\n              {post.unit}\r\n            </Option>\r\n          );\r\n        });\r\n        this.setState({\r\n          SelectUnit\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  //get all for materials select\r\n  getAllMaterials() {\r\n    api(\"GET\", \"supermix\", \"/raw-materials\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data.results);\r\n      if (res.data.results.rawMaterial.length > 0) {\r\n        console.log(\"got materials\");\r\n        let SelectMaterial = res.data.results.rawMaterial.map((post, index) => {\r\n          return (\r\n            <Option value={post.id} key={index}>\r\n              {post.name}\r\n            </Option>\r\n          );\r\n        });\r\n        this.setState({\r\n          SelectMaterial\r\n        });\r\n      }\r\n    });\r\n  }\r\n  //get all for sub category select\r\n  getAllSubCategories() {\r\n    api(\"GET\", \"supermix\", \"/material-sub-categories\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data.results);\r\n      if (res.data.results.materialSubCategories.length > 0) {\r\n        console.log(\"got sub categories\");\r\n        let SelectSubCategories = res.data.results.materialSubCategories.map(\r\n          (post, index) => {\r\n            return (\r\n              <Option value={post.id} key={index}>\r\n                {post.name}\r\n              </Option>\r\n            );\r\n          }\r\n        );\r\n        this.setState({\r\n          SelectSubCategories\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  //get all for sub category select\r\n  getAllTest() {\r\n    api(\"GET\", \"supermix\", \"/tests\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data.results);\r\n      if (res.data.results.test.length > 0) {\r\n        console.log(\"got sub categories\");\r\n        let SelectTest = res.data.results.test.map((post, index) => {\r\n          return (\r\n            <Option value={post.id} key={index}>\r\n              {post.name}\r\n            </Option>\r\n          );\r\n        });\r\n        this.setState({\r\n          SelectTest,\r\n          test_name: res.data.results.test[res.data.results.test.length - 1].id\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  handleCancel = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  componentWillMount() {\r\n    if (window.screen.width > 1900) {\r\n      console.log(\"hooray\");\r\n      this.setState({\r\n        size: \"large\"\r\n      });\r\n    } else if (window.screen.width < 1440) {\r\n      this.setState({\r\n        size: \"small\"\r\n      });\r\n    }\r\n  }\r\n\r\n  getallMaterialAcceptedValue = () => {\r\n    api(\"GET\", \"supermix\", \"/admixture-accepted-values\", \"\", \"\", \"\").then(\r\n      res => {\r\n        console.log(res.data);\r\n        this.setState({\r\n          admixturedata: res.data.results.admixtureAcceptedValues\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  getallAcceptedValue = () => {\r\n    api(\"GET\", \"supermix\", \"/accepted-values\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data);\r\n      this.setState({\r\n        acceptedvaluedata: res.data.results.acceptedValues\r\n      });\r\n    });\r\n  };\r\n  showModal = (record, type) => {\r\n    if (type === \"acceptedValue\") {\r\n      this.setState({\r\n        switchVal: false,\r\n        visible: true,\r\n        accId: record.id,\r\n        maximum: record.maxValue,\r\n        minimum: record.minValue,\r\n        test_name: record.test.id,\r\n        parameter: record.parameter.id,\r\n        unit: record.unit.id\r\n      });\r\n    } else {\r\n      this.setState({\r\n        switchVal: true,\r\n        visible: true,\r\n        accId: record.acceptedValue.id,\r\n        test_name: record.acceptedValue.test.id,\r\n        parameter: record.acceptedValue.parameter.id,\r\n        unit: record.acceptedValue.unit.id,\r\n        material: record.rawMaterial.id,\r\n        subCategory: record.rawMaterial.materialSubCategory.id,\r\n        switchValMinimum: record.acceptedValue.minValue,\r\n        switchValMaximum: record.acceptedValue.maxValue\r\n      });\r\n    }\r\n\r\n    console.log(record);\r\n    console.log(type);\r\n  };\r\n\r\n  handleOk = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleChange = (pagination, filters, sorter) => {\r\n    console.log(\"Various parameters\", pagination, filters, sorter);\r\n    this.setState({\r\n      filteredInfo: filters,\r\n      sortedInfo: sorter\r\n    });\r\n  };\r\n\r\n  clearFilters = () => {\r\n    this.setState({ filteredInfo: null });\r\n  };\r\n\r\n  clearAll = () => {\r\n    this.setState({\r\n      filteredInfo: null,\r\n      sortedInfo: null\r\n    });\r\n  };\r\n\r\n  setAgeSort = () => {\r\n    this.setState({\r\n      sortedInfo: {\r\n        order: \"descend\",\r\n        columnKey: \"age\"\r\n      }\r\n    });\r\n  };\r\n\r\n  // plant delete API\r\n\r\n  onConfirmdelete(id) {\r\n    console.log(id);\r\n    let mesg = \"plant delete\";\r\n\r\n    api(\"DELETE\", \"supermix\", \"/accepted-value\", \"\", \"\", id).then(res => {\r\n      console.log(res.data);\r\n      this.getallAcceptedValue();\r\n      Notification(\"success\", res.data.message);\r\n    });\r\n    console.log(this.state.id);\r\n  }\r\n\r\n  onConfirmdelete1(id) {\r\n    console.log(id);\r\n    let mesg = \"plant delete\";\r\n\r\n    api(\"DELETE\", \"supermix\", \"/admixture-accepted-value\", \"\", \"\", id).then(\r\n      res => {\r\n        console.log(res.data);\r\n        this.getallMaterialAcceptedValue();\r\n        Notification(\"success\", res.data.message);\r\n      }\r\n    );\r\n    console.log(this.state.id);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAllParameters();\r\n    this.getAllUnits();\r\n    this.getAllMaterials();\r\n    this.getAllSubCategories();\r\n    this.getAllTest();\r\n    this.getallAcceptedValue();\r\n    this.getallMaterialAcceptedValue();\r\n  }\r\n\r\n  handleChange = (event, field) => {\r\n    this.setState({ [field]: event.target.value });\r\n    this.setState({ errormgs: \"\" });\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    let errors = this.state.errors;\r\n    let optErrors = this.state.optErrors;\r\n    // console.log(name + \" is \\t\" + value);\r\n    switch (name) {\r\n      case \"maximum\":\r\n        errors.maximum =\r\n          value.length === 0\r\n            ? \"maximum can't be empty\"\r\n            : isNaN(value)\r\n            ? \"maximum won't allow only letters\"\r\n            : \"\";\r\n        break;\r\n      case \"minimum\":\r\n        errors.minimum =\r\n          value.length === 0\r\n            ? \"minimum can't be empty\"\r\n            : isNaN(value)\r\n            ? \"minimum won't allow only letters\"\r\n            : \"\";\r\n        break;\r\n      case \"switchValMaximum\":\r\n        optErrors.switchValMaximum =\r\n          value.length === 0\r\n            ? \"maximum can't be empty\"\r\n            : isNaN(value)\r\n            ? \"maximum won't allow only letters\"\r\n            : \"\";\r\n        break;\r\n      case \"switchValMinimum\":\r\n        optErrors.switchValMinimum =\r\n          value.length === 0\r\n            ? \"minimum can't be empty\"\r\n            : isNaN(value)\r\n            ? \"minimum won't allow only letters\"\r\n            : \"\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ errors, [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    const {\r\n      switchVal,\r\n      errors,\r\n      material,\r\n      maximum,\r\n      minimum,\r\n      parameter,\r\n      subCategory,\r\n      switchValMaximum,\r\n      switchValMinimum,\r\n      unit,\r\n      optErrors,\r\n      test_name,\r\n      accId\r\n    } = this.state;\r\n\r\n    if (switchVal) {\r\n      const SwitchedData = {\r\n        id: accId,\r\n        testId: test_name,\r\n        parameterId: parameter,\r\n        unitId: unit,\r\n        rawMaterialId: material,\r\n        maxValue: switchValMaximum,\r\n        minValue: switchValMinimum\r\n      };\r\n      console.log(SwitchedData);\r\n      api(\r\n        \"PUT\",\r\n        \"supermix\",\r\n        \"/admixture-accepted-value\",\r\n        \"\",\r\n        SwitchedData,\r\n        \"\"\r\n      ).then(\r\n        res => {\r\n          console.log(res.data.message);\r\n          Notification(\"success\", res.data.message);\r\n          this.getallMaterialAcceptedValue();\r\n          this.getallAcceptedValue();\r\n          this.setState({\r\n            switchVal: false,\r\n            test_name: undefined,\r\n            parameter: undefined,\r\n            unit: undefined,\r\n            maximum: \"\",\r\n            minimum: \"\",\r\n            subCategory: undefined,\r\n            material: undefined,\r\n            switchValMaximum: \"\",\r\n            switchValMinimum: \"\",\r\n            visible: false,\r\n            errormsgs: \"\"\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        }\r\n      );\r\n    } else {\r\n      const unSwitchedData = {\r\n        id: accId,\r\n        testId: test_name,\r\n        parameterId: parameter,\r\n        unitId: unit,\r\n        maxValue: maximum,\r\n        minValue: minimum\r\n      };\r\n      console.log(unSwitchedData);\r\n      api(\"PUT\", \"supermix\", \"/accepted-value\", \"\", unSwitchedData, \"\").then(\r\n        res => {\r\n          console.log(res.data.message);\r\n          Notification(\"success\", res.data.message);\r\n          this.getallAcceptedValue();\r\n          this.setState({\r\n            switchVal: false,\r\n            test_name: undefined,\r\n            parameter: undefined,\r\n            unit: undefined,\r\n            maximum: \"\",\r\n            minimum: \"\",\r\n            subCategory: undefined,\r\n            material: undefined,\r\n            switchValMaximum: \"\",\r\n            switchValMinimum: \"\",\r\n            visible: false,\r\n            errormsgs: \"\"\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      switchVal,\r\n      errors,\r\n      material,\r\n      maximum,\r\n      minimum,\r\n      parameter,\r\n      subCategory,\r\n      switchValMaximum,\r\n      switchValMinimum,\r\n      unit,\r\n      optErrors,\r\n      test_name\r\n    } = this.state;\r\n    const { visible, loading } = this.state;\r\n    const columns = [\r\n      {\r\n        title: \"Test Name\",\r\n        dataIndex: \"test.name\",\r\n        key: \"test.name\",\r\n        width: \"10%\"\r\n      },\r\n      {\r\n        title: \"Parameter\",\r\n        dataIndex: \"parameter.name\",\r\n        key: \"parameter.name\",\r\n        width: \"16%\"\r\n      },\r\n      {\r\n        title: \"Unit\",\r\n        dataIndex: \"unit.unit\",\r\n        key: \"unit.unit\",\r\n        width: \"5%\"\r\n      },\r\n      {\r\n        title: \"Minimum\",\r\n        dataIndex: \"minValue\",\r\n        key: \"tp\",\r\n        width: \"6%\"\r\n      },\r\n      {\r\n        title: \"Maximum\",\r\n        dataIndex: \"maxValue\",\r\n        key: \"tp\",\r\n        width: \"6%\"\r\n      },\r\n\r\n      {\r\n        title: \"Edit & Delete\",\r\n        key: \"action\",\r\n        width: \"7%\",\r\n        render: (text, record = this.state.data) => (\r\n          <span>\r\n            <a>\r\n              <Icon\r\n                type=\"edit\"\r\n                style={{ fontSize: \"1.2em\" }}\r\n                onClick={this.showModal.bind(this, record, \"acceptedValue\")}\r\n              />\r\n            </a>\r\n            <Divider type=\"vertical\" />\r\n            <a>\r\n              <Popconfirm\r\n                title=\"Are you sure you want to Delete this?\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: \"red\" }} />\r\n                }\r\n                onConfirm={this.onConfirmdelete.bind(this, record.id)}\r\n              >\r\n                <a href=\"#\">\r\n                  <Icon\r\n                    type=\"delete\"\r\n                    style={{ color: \"red\", fontSize: \"1.2em\" }}\r\n                  />\r\n                </a>\r\n              </Popconfirm>\r\n            </a>\r\n          </span>\r\n        )\r\n      }\r\n    ];\r\n\r\n    const columns1 = [\r\n      {\r\n        title: \"Test Name\",\r\n        dataIndex: \"acceptedValue.test.name\",\r\n        key: \"acceptedValue.test.name\",\r\n        width: \"5%\"\r\n      },\r\n      {\r\n        title: \"Parameter\",\r\n        dataIndex: \"acceptedValue.parameter.name\",\r\n        key: \"acceptedValue.parameter.name\",\r\n        width: \"15%\"\r\n      },\r\n      {\r\n        title: \"Unit\",\r\n        dataIndex: \"acceptedValue.unit.unit\",\r\n        key: \"acceptedValue.unit.unit\",\r\n        width: \"4%\"\r\n      },\r\n      {\r\n        title: \"SubCategory\",\r\n        dataIndex: \"rawMaterial.materialSubCategory.name\",\r\n        key: \"rawMaterial.materialSubCategory.name\",\r\n        width: \"8%\"\r\n      },\r\n      {\r\n        title: \"Material\",\r\n        dataIndex: \"rawMaterial.name\",\r\n        key: \"rawMaterial.name\",\r\n        width: \"7%\"\r\n      },\r\n\r\n      {\r\n        title: \"Minimum\",\r\n        dataIndex: \"acceptedValue.minValue\",\r\n        key: \"acceptedValue.minValue\",\r\n        width: \"6%\"\r\n      },\r\n      {\r\n        title: \"Maximum\",\r\n        dataIndex: \"acceptedValue.maxValue\",\r\n        key: \"acceptedValue.maxValue\",\r\n        width: \"6%\"\r\n      },\r\n      {\r\n        title: \"Edit & Delete\",\r\n        key: \"action\",\r\n        width: \"7%\",\r\n        render: (text, record = this.state.admixturedata) => (\r\n          <span>\r\n            <a>\r\n              <Icon\r\n                type=\"edit\"\r\n                style={{ fontSize: \"1.2em\" }}\r\n                onClick={this.showModal.bind(this, record, \"admixtureValue\")}\r\n              />\r\n            </a>\r\n            <Divider type=\"vertical\" />\r\n            <a>\r\n              <Popconfirm\r\n                title=\"Are you sure you want to Delete this?\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: \"red\" }} />\r\n                }\r\n                onConfirm={this.onConfirmdelete1.bind(this, record.id)}\r\n              >\r\n                <a href=\"#\">\r\n                  <Icon\r\n                    type=\"delete\"\r\n                    style={{ color: \"red\", fontSize: \"1.2em\" }}\r\n                  />\r\n                </a>\r\n              </Popconfirm>\r\n            </a>\r\n          </span>\r\n        )\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <div style={{ marginTop: \"20px\" }}>\r\n        <AntTable\r\n          length\r\n          title={() => <AcceptedValueTitle reload={this.getallAcceptedValue} />}\r\n          className=\"plantManageTable\"\r\n          columns={columns}\r\n          dataSource={this.state.acceptedvaluedata}\r\n          onChange={this.handleChange}\r\n          pagination={{ defaultPageSize: 7 }}\r\n          size={this.state.size}\r\n        />\r\n\r\n        <AntTable\r\n          length\r\n          title={() => (\r\n            <AdmixtureValueTitle reload={this.getallMaterialAcceptedValue} />\r\n          )}\r\n          className=\"plantManageTable\"\r\n          columns={columns1}\r\n          dataSource={this.state.admixturedata}\r\n          onChange={this.handleChange}\r\n          pagination={{ defaultPageSize: 7 }}\r\n          size={this.state.size}\r\n        />\r\n\r\n        <Modal\r\n          visible={visible}\r\n          closable={false}\r\n          loading={loading}\r\n          // style={{ width: 1500 }}\r\n          onCancel={this.handleCancel}\r\n          title={\r\n            <MasterLevelFormTitle>\r\n              <p\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                {this.state.type === \"edit\" ? \"Edit Size\" : \"Add Size\"}\r\n              </p>\r\n              <Icon\r\n                type=\"close-circle\"\r\n                onClick={this.handleCancel}\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              />\r\n            </MasterLevelFormTitle>\r\n          }\r\n          footer={[\r\n            <Button key=\"back\" onClick={this.handleCancel}>\r\n              Cancel\r\n            </Button>,\r\n            <PrimaryButton\r\n              key=\"submit\"\r\n              loading={loading}\r\n              onClick={e => this.handleSubmit(e)}\r\n              style={{ background: \"#001328\", color: \"white\", border: \"none\" }}\r\n            >\r\n              {this.state.type === \"edit\" ? \"Edit\" : \"Save\"}\r\n            </PrimaryButton>\r\n          ]}\r\n          width=\"600px\"\r\n        >\r\n          <FlexContainer stepsarea style={{ marginTop: \"40px\" }}>\r\n            <div testconfig>\r\n              <MasterLevelForm\r\n                filled\r\n                borderRadiused\r\n                style={{\r\n                  justifyContent: \"space-around\",\r\n                  paddingBottom: \"20px\",\r\n                  paddingLeft: \"40px\",\r\n                  paddingRight: \"60px\",\r\n                  paddingTop: \"0px\",\r\n                  width: \"600px\"\r\n                }}\r\n              >\r\n                {/* Test */}\r\n                <div className=\"input_wrapper\">\r\n                  <label for=\"test_name\" className=\"label\">\r\n                    Test\r\n                  </label>\r\n                  <Select\r\n                    id=\"test_name\"\r\n                    name=\"test_name\"\r\n                    placeholder=\"Select Test\"\r\n                    style={{ width: 170 }}\r\n                    value={test_name}\r\n                    onChange={value => this.handleSelect(\"test_name\", value)}\r\n                  >\r\n                    {this.state.SelectTest}\r\n                  </Select>\r\n                  <div style={{ height: \"6px\" }}></div>\r\n                </div>\r\n\r\n                {/* Parameter */}\r\n                <div className=\"input_wrapper\">\r\n                  <label for=\"parameter\" className=\"label\">\r\n                    Parameter\r\n                  </label>\r\n                  <Select\r\n                    id=\"parameter\"\r\n                    name=\"parameter\"\r\n                    placeholder=\"Select Parameter\"\r\n                    style={{ width: 170 }}\r\n                    value={parameter}\r\n                    onChange={value => this.handleSelect(\"parameter\", value)}\r\n                  >\r\n                    {this.state.SelectParameter}\r\n                  </Select>\r\n                  {errors.parameter.length > 0 && (\r\n                    <div style={error}>{errors.parameter}</div>\r\n                  )}\r\n                  <div style={{ height: \"6px\" }}></div>\r\n                </div>\r\n\r\n                {/* Unit */}\r\n                <div className=\"input_wrapper\">\r\n                  <label for=\"unit\" className=\"label\">\r\n                    Unit\r\n                  </label>\r\n                  <Select\r\n                    id=\"unit\"\r\n                    name=\"unit\"\r\n                    placeholder=\"Select Unit\"\r\n                    style={{ width: 170 }}\r\n                    value={unit}\r\n                    onChange={value => this.handleSelect(\"unit\", value)}\r\n                  >\r\n                    {this.state.SelectUnit}\r\n                  </Select>\r\n                  {errors.unit.length > 0 && (\r\n                    <div style={error}>{errors.unit}</div>\r\n                  )}\r\n                  <div style={{ height: \"6px\" }}></div>\r\n                </div>\r\n\r\n                {/* Test Max and Min */}\r\n                {switchVal === false ? (\r\n                  <FlexContainer>\r\n                    <div className=\"input_wrapper\">\r\n                      <PrimaryButton type=\"ghost\">Between</PrimaryButton>\r\n                      <div style={{ height: \"18px\" }}></div>\r\n                    </div>\r\n                    {/* Maximum */}\r\n                    <div className=\"input_wrapper\">\r\n                      <Input\r\n                        id=\"maximum\"\r\n                        name=\"maximum\"\r\n                        placeholder=\"Maximum\"\r\n                        style={{ width: 90 }}\r\n                        value={maximum}\r\n                        onChange={this.handleChange}\r\n                      />\r\n                      {errors.maximum.length > 0 && (\r\n                        <div style={minierror}>{errors.maximum}</div>\r\n                      )}\r\n                      <div style={{ height: \"12px\" }}></div>\r\n                    </div>\r\n                    <div className=\"input_wrapper\">\r\n                      <PrimaryButton type=\"ghost\">To</PrimaryButton>\r\n                      <div style={{ height: \"12px\" }}></div>\r\n                    </div>\r\n                    {/* Minimum */}\r\n                    <div className=\"input_wrapper\">\r\n                      <Input\r\n                        id=\"minimum\"\r\n                        name=\"minimum\"\r\n                        placeholder=\"Minimum\"\r\n                        style={{ width: 90 }}\r\n                        value={minimum}\r\n                        onChange={this.handleChange}\r\n                      />\r\n                      {errors.minimum.length > 0 && (\r\n                        <div style={minierror}>{errors.minimum}</div>\r\n                      )}\r\n                      <div style={{ height: \"12px\" }}></div>\r\n                    </div>\r\n                  </FlexContainer>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n\r\n                <FlexContainer>\r\n                  {/* Material Switch */}\r\n                  <div\r\n                    className=\"input_wrapper\"\r\n                    style={{ marginTop: switchVal === false ? \"5px\" : \"20px\" }}\r\n                  >\r\n                    <label for=\"material_switch\" className=\"label\">\r\n                      {switchVal === false ? \"Test\" : \"Material\"}\r\n                    </label>\r\n                    <Switch\r\n                      onChange={checked => this.onChange(checked)}\r\n                      value={switchVal}\r\n                    />\r\n                    <div style={{ height: \"12px\" }}></div>\r\n                  </div>\r\n                </FlexContainer>\r\n\r\n                {switchVal === true ? (\r\n                  <FlexContainer home>\r\n                    {/* Sub Category */}\r\n                    <div className=\"input_wrapper\">\r\n                      <label for=\"subCategory\" className=\"label\">\r\n                        Sub Category\r\n                      </label>\r\n                      <Select\r\n                        id=\"subCategory\"\r\n                        name=\"subCategory\"\r\n                        placeholder=\"Select Sub Category\"\r\n                        style={{ width: 170 }}\r\n                        value={subCategory}\r\n                        onChange={value =>\r\n                          this.handleSelect(\"subCategory\", value)\r\n                        }\r\n                      >\r\n                        {this.state.SelectSubCategories}\r\n                      </Select>\r\n                      {optErrors.subCategory.length > 0 && (\r\n                        <div style={error}>{optErrors.subCategory}</div>\r\n                      )}\r\n                      <div style={{ height: \"12px\" }}></div>\r\n                    </div>\r\n\r\n                    {/* Material */}\r\n                    <div className=\"input_wrapper\">\r\n                      <label for=\"material\" className=\"label\">\r\n                        Material\r\n                      </label>\r\n                      <Select\r\n                        id=\"material\"\r\n                        name=\"material\"\r\n                        placeholder=\"Select Material\"\r\n                        style={{ width: 160 }}\r\n                        value={material}\r\n                        onChange={value => this.handleSelect(\"material\", value)}\r\n                      >\r\n                        {this.state.SelectMaterial}\r\n                      </Select>\r\n                      {optErrors.material.length > 0 && (\r\n                        <div style={error}>{optErrors.material}</div>\r\n                      )}\r\n                      <div style={{ height: \"12px\" }}></div>\r\n                    </div>\r\n                  </FlexContainer>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                {switchVal === true ? (\r\n                  <FlexContainer home>\r\n                    <div className=\"input_wrapper\">\r\n                      <PrimaryButton type=\"ghost\">Between</PrimaryButton>\r\n                      <div style={{ height: \"12px\" }}></div>\r\n                    </div>\r\n                    {/* Maximum  */}\r\n                    <div className=\"input_wrapper\">\r\n                      <Input\r\n                        id=\"switchValMaximum\"\r\n                        name=\"switchValMaximum\"\r\n                        placeholder=\"maximum\"\r\n                        style={{ width: 90 }}\r\n                        value={switchValMaximum}\r\n                        onChange={this.handleChange}\r\n                      />\r\n                      {optErrors.switchValMaximum.length > 0 && (\r\n                        <div style={minierror}>\r\n                          {optErrors.switchValMaximum}\r\n                        </div>\r\n                      )}\r\n                      <div style={{ height: \"12px\" }}></div>\r\n                    </div>\r\n\r\n                    <div className=\"input_wrapper\">\r\n                      <PrimaryButton type=\"ghost\">To</PrimaryButton>\r\n                      <div style={{ height: \"12px\" }}></div>\r\n                    </div>\r\n\r\n                    {/* Minimum  */}\r\n                    <div className=\"input_wrapper\">\r\n                      <Input\r\n                        id=\"switchValMinimum\"\r\n                        name=\"switchValMinimum\"\r\n                        placeholder=\"minimum\"\r\n                        style={{ width: 90 }}\r\n                        value={switchValMinimum}\r\n                        onChange={this.handleChange}\r\n                      />\r\n                      {optErrors.switchValMinimum.length > 0 && (\r\n                        <div style={minierror}>\r\n                          {optErrors.switchValMinimum}\r\n                        </div>\r\n                      )}\r\n                      <div style={{ height: \"12px\" }}></div>\r\n                    </div>\r\n                  </FlexContainer>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </MasterLevelForm>\r\n            </div>\r\n          </FlexContainer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AcceptedValue;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Paragraph from \"antd/lib/typography/Paragraph\";\r\n\r\nimport { FlexContainer } from \"../../../../../styledcomponents/container/FlexGrid\";\r\n\r\nconst style = {\r\n  fontSize: \"medium\",\r\n  fontWeight: \"600\",\r\n  alignSelf: \"auto\",\r\n  padding: \"10px\"\r\n};\r\n\r\nexport default class EquationTitle extends Component {\r\n  //   getallplant = () => {\r\n  //     this.props.reload();\r\n  //   };\r\n  render() {\r\n    return (\r\n      <FlexContainer titles leveltitles>\r\n        <Paragraph style={style}>Equation </Paragraph>\r\n        {/* <PlantAddForm reload={this.getallplant} /> */}\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\nimport { Icon, Popconfirm, Divider } from \"antd\";\r\nimport EquationTitle from \"../ManageTables/titles/ManageEquation\";\r\nimport { AntTable } from \"../../../../styledcomponents/table/AntTabl\";\r\nimport { api } from \"../../../../services/AxiosService\";\r\nimport Notification from \"../../../../Constant/Notification\";\r\nimport { connect } from \"react-redux\";\r\nimport { SWITCH_TO_EDIT_MODE } from \"../../../../../redux/action/master/plantlevel/PlantLevel\";\r\n\r\nclass ManageEquation extends Component {\r\n  state = {\r\n    searchText: \"\",\r\n    visible: false,\r\n    size: \"small\",\r\n    data: \"\",\r\n    id: \"\"\r\n  };\r\n\r\n  componentWillMount() {\r\n    if (window.screen.width > 1900) {\r\n      console.log(\"hooray\");\r\n      this.setState({\r\n        size: \"large\"\r\n      });\r\n    } else if (window.screen.width < 1440) {\r\n      this.setState({\r\n        size: \"small\"\r\n      });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getallEquation();\r\n  }\r\n\r\n  //  get all plant API\r\n  getallEquation = () => {\r\n    api(\"GET\", \"supermix\", \"/equations\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data);\r\n      this.setState({\r\n        data: res.data.results.equations\r\n      });\r\n    });\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  handleOk = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleCancel = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleChange = (pagination, filters, sorter) => {\r\n    console.log(\"Various parameters\", pagination, filters, sorter);\r\n    this.setState({\r\n      filteredInfo: filters,\r\n      sortedInfo: sorter\r\n    });\r\n  };\r\n\r\n  clearFilters = () => {\r\n    this.setState({ filteredInfo: null });\r\n  };\r\n\r\n  clearAll = () => {\r\n    this.setState({\r\n      filteredInfo: null,\r\n      sortedInfo: null\r\n    });\r\n  };\r\n\r\n  setAgeSort = () => {\r\n    this.setState({\r\n      sortedInfo: {\r\n        order: \"descend\",\r\n        columnKey: \"age\"\r\n      }\r\n    });\r\n  };\r\n\r\n  onChange(pageNumber) {\r\n    console.log(\"Page: \", pageNumber);\r\n  }\r\n\r\n  // plant delete API\r\n\r\n  onConfirmdelete(id) {\r\n    console.log(id);\r\n    let mesg = \"plant delete\";\r\n\r\n    api(\"DELETE\", \"supermix\", \"/equation\", \"\", \"\", id).then(res => {\r\n      console.log(res.data);\r\n      this.getallEquation();\r\n      Notification(\"success\", res.data.message);\r\n    });\r\n    console.log(this.state.id);\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"Formula\",\r\n        dataIndex: \"formula\",\r\n        key: \"formula\",\r\n        width: \"10%\"\r\n      },\r\n\r\n      {\r\n        title: \"Edit & Delete\",\r\n        key: \"action\",\r\n        width: \"7%\",\r\n        render: (text, record = this.state.data) => (\r\n          <span>\r\n            <a>\r\n              <Icon\r\n                type=\"edit\"\r\n                style={{ fontSize: \"1.2em\" }}\r\n                onClick={this.props.passEditEquationRecordtoModal.bind(\r\n                  this,\r\n                  record\r\n                )}\r\n              />\r\n            </a>\r\n            <Divider type=\"vertical\" />\r\n            <a>\r\n              <Popconfirm\r\n                title=\"Are you sure you want to Delete this?\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: \"red\" }} />\r\n                }\r\n                onConfirm={this.onConfirmdelete.bind(this, record.id)}\r\n              >\r\n                <a href=\"#\">\r\n                  <Icon\r\n                    type=\"delete\"\r\n                    style={{ color: \"red\", fontSize: \"1.2em\" }}\r\n                  />\r\n                </a>\r\n              </Popconfirm>\r\n            </a>\r\n          </span>\r\n        )\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <div style={{ marginTop: \"20px\" }}>\r\n        <AntTable\r\n          length\r\n          title={() => <EquationTitle reload={this.getallEquation} />}\r\n          className=\"plantManageTable\"\r\n          columns={columns}\r\n          dataSource={this.state.data}\r\n          onChange={this.handleChange}\r\n          pagination={{ defaultPageSize: 7 }}\r\n          size={this.state.size}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => null;\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // if this function dispatches modal will be shown and the data will be drawn :)\r\n    passEditEquationRecordtoModal: record => {\r\n      //this payload is the data we pass into redux which is in the row which we clicked\r\n      dispatch({ type: SWITCH_TO_EDIT_MODE, payload: record });\r\n      console.log(record);\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageEquation);\r\n","import React, { Component } from \"react\";\r\n\r\nimport Paragraph from \"antd/lib/typography/Paragraph\";\r\n\r\nimport { FlexContainer } from \"../../../../../styledcomponents/container/FlexGrid\";\r\n\r\nconst style = {\r\n  fontSize: \"medium\",\r\n  fontWeight: \"600\",\r\n  alignSelf: \"auto\",\r\n  padding: \"10px\"\r\n};\r\n\r\nexport default class TestParameterTitle extends Component {\r\n  //   getallplant = () => {\r\n  //     this.props.reload();\r\n  //   };\r\n  render() {\r\n    return (\r\n      <FlexContainer titles leveltitles>\r\n        <Paragraph style={style}>Test Parameter </Paragraph>\r\n        {/* <PlantAddForm reload={this.getallplant} /> */}\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\nimport { Icon, Popconfirm, Divider } from \"antd\";\r\nimport TestParamterTitle from \"../ManageTables/titles/MaangeTestParamterTitle\";\r\nimport { AntTable } from \"../../../../styledcomponents/table/AntTabl\";\r\nimport { api } from \"../../../../services/AxiosService\";\r\nimport Notification from \"../../../../Constant/Notification\";\r\nimport { connect } from \"react-redux\";\r\nimport { SWITCH_TO_EDIT_MODE } from \"../../../../../redux/action/master/plantlevel/PlantLevel\";\r\n\r\nclass TestParameter extends Component {\r\n  state = {\r\n    searchText: \"\",\r\n    visible: false,\r\n    size: \"small\",\r\n    data: \"\",\r\n    id: \"\"\r\n  };\r\n\r\n  componentWillMount() {\r\n    if (window.screen.width > 1900) {\r\n      console.log(\"hooray\");\r\n      this.setState({\r\n        size: \"large\"\r\n      });\r\n    } else if (window.screen.width < 1440) {\r\n      this.setState({\r\n        size: \"small\"\r\n      });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getallTestParameter();\r\n  }\r\n\r\n  //  get all plant API\r\n  getallTestParameter = () => {\r\n    api(\"GET\", \"supermix\", \"/test-parameters\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data);\r\n      this.setState({\r\n        data: res.data.results.testparameters\r\n      });\r\n    });\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  handleOk = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleCancel = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleChange = (pagination, filters, sorter) => {\r\n    console.log(\"Various parameters\", pagination, filters, sorter);\r\n    this.setState({\r\n      filteredInfo: filters,\r\n      sortedInfo: sorter\r\n    });\r\n  };\r\n\r\n  clearFilters = () => {\r\n    this.setState({ filteredInfo: null });\r\n  };\r\n\r\n  clearAll = () => {\r\n    this.setState({\r\n      filteredInfo: null,\r\n      sortedInfo: null\r\n    });\r\n  };\r\n\r\n  setAgeSort = () => {\r\n    this.setState({\r\n      sortedInfo: {\r\n        order: \"descend\",\r\n        columnKey: \"age\"\r\n      }\r\n    });\r\n  };\r\n\r\n  onChange(pageNumber) {\r\n    console.log(\"Page: \", pageNumber);\r\n  }\r\n\r\n  // plant delete API\r\n\r\n  onConfirmdelete(id) {\r\n    console.log(id);\r\n    let mesg = \"plant delete\";\r\n\r\n    api(\"DELETE\", \"supermix\", \"/test-parameter\", \"\", \"\", id).then(res => {\r\n      console.log(res.data);\r\n      this.getallTestParameter();\r\n      Notification(\"success\", res.data.message);\r\n    });\r\n    console.log(this.state.id);\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"TestName\",\r\n        dataIndex: \"test.name\",\r\n        key: \"test.name\",\r\n        width: \"10%\"\r\n      },\r\n      {\r\n        title: \"Parameter\",\r\n        dataIndex: \"parameter.name\",\r\n        key: \"parameter.name\",\r\n        width: \"30%\"\r\n      },\r\n      {\r\n        title: \"Unit\",\r\n        dataIndex: \"unit.unit\",\r\n        key: \"unit.unit\",\r\n        width: \"10%\"\r\n      },\r\n\r\n      {\r\n        title: \"Edit & Delete\",\r\n        key: \"action\",\r\n        width: \"7%\",\r\n        render: (text, record = this.state.data) => (\r\n          <span>\r\n            <a>\r\n              <Icon type=\"edit\" style={{ fontSize: \"1.2em\" }} />\r\n            </a>\r\n            <Divider type=\"vertical\" />\r\n            <a>\r\n              <Popconfirm\r\n                title=\"Are you sure you want to Delete this?\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: \"red\" }} />\r\n                }\r\n                onConfirm={this.onConfirmdelete.bind(this, record.id)}\r\n              >\r\n                <a href=\"#\">\r\n                  <Icon\r\n                    type=\"delete\"\r\n                    style={{ color: \"red\", fontSize: \"1.2em\" }}\r\n                  />\r\n                </a>\r\n              </Popconfirm>\r\n            </a>\r\n          </span>\r\n        )\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <div style={{ marginTop: \"20px\" }}>\r\n        <AntTable\r\n          length\r\n          title={() => <TestParamterTitle reload={this.getallTestParameter} />}\r\n          className=\"plantManageTable\"\r\n          columns={columns}\r\n          dataSource={this.state.data}\r\n          onChange={this.handleChange}\r\n          pagination={{ defaultPageSize: 7 }}\r\n          size={this.state.size}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TestParameter;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FlexContainer } from \"../../../../styledcomponents/container/FlexGrid\";\r\nimport TableTileArea from \"./TableTileArea\";\r\nimport AcceptedValue from \"./AcceptedValue\";\r\nimport ManageEquation from \"./ManageEquation\";\r\nimport MaangeTestParamterTitle from \"./titles/MaangeTestParamterTitle\";\r\nimport ManageTestParameter from \"./ManageTestParameter\";\r\n\r\nclass TableMaster extends Component {\r\n  renderComponents = () => {\r\n    if (this.props.routepath === \"/acceptedvalue\") {\r\n      return <AcceptedValue />;\r\n    } else if (this.props.routepath === \"/testparameter\") {\r\n      return <ManageTestParameter />;\r\n    } else if (this.props.routepath === \"/equation\") {\r\n      return <ManageEquation />;\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <FlexContainer leveltileareafixed>\r\n        <TableTileArea />\r\n        {this.renderComponents()}\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    routepath: state.tableReducers.RoutingBetweenTables.routepath\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableMaster);\r\n","import React, { Component } from \"react\";\r\nimport { Steps, Button, message } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./styleTestConfig.css\";\r\nimport GraphConfiguration from \"./GraphConfiguration\";\r\nimport ManageTestConfiguration from \"./ManageTestConfiguration\";\r\nimport AddTestAcceptedValue from \"./configure/AddTestAcceptedValue\";\r\nimport Step01 from \"./configuretest/Step01\";\r\nimport Step02 from \"./configuretest/Step02\";\r\nimport history from \"../../../Components/Constant/history\";\r\nimport TableMaster from \"./configure/ManageTables//TableMaster\";\r\n\r\nconst { Step } = Steps;\r\n\r\nconst steps = [\r\n  {\r\n    title: \"First\",\r\n    content: <Step01 />\r\n  },\r\n  {\r\n    title: \"Second\",\r\n    content: <Step02 />\r\n  },\r\n  {\r\n    title: \"Third\",\r\n    content: <AddTestAcceptedValue />\r\n  },\r\n  {\r\n    title: \"fourth\",\r\n    content: <GraphConfiguration />\r\n  },\r\n  {\r\n    title: \"fourth\",\r\n    content: <TableMaster />\r\n  },\r\n  {\r\n    title: \"Last\",\r\n    content: <ManageTestConfiguration />\r\n  }\r\n];\r\n\r\nexport default class TestConfigurationMaster extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      current: 0\r\n    };\r\n  }\r\n\r\n  onChange = current => {\r\n    console.log(\"onChange:\", current);\r\n    this.setState({ current });\r\n  };\r\n\r\n  next() {\r\n    const current = this.state.current + 1;\r\n    this.setState({ current });\r\n  }\r\n\r\n  prev() {\r\n    const current = this.state.current - 1;\r\n    this.setState({ current });\r\n  }\r\n  done = () => {\r\n    message.success(\"Processing complete!\");\r\n    history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { current } = this.state;\r\n    return (\r\n      <div>\r\n        <Steps\r\n          labelPlacement=\"horizontal\"\r\n          current={current}\r\n          size=\"default\"\r\n          className=\"step-area\"\r\n          onChange={this.onChange}\r\n        >\r\n          {steps.map(item => (\r\n            <Step\r\n              key={item.title}\r\n              title={item.title}\r\n              style={{ color: \"#001328\" }}\r\n            />\r\n          ))}\r\n        </Steps>\r\n        <div>{steps[current].content}</div>\r\n        <div className=\"steps-action\">\r\n          {current < steps.length - 1 && (\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => this.next()}\r\n              style={{\r\n                backgroundColor: \"#001328\",\r\n                color: \"white\",\r\n                border: \"none\"\r\n              }}\r\n            >\r\n              Next\r\n            </Button>\r\n          )}\r\n          {current === steps.length - 1 && (\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => this.done()}\r\n              style={{\r\n                background: \"#001328\",\r\n                color: \"white\",\r\n                border: \"none\"\r\n              }}\r\n            >\r\n              Done\r\n            </Button>\r\n          )}\r\n          {current > 0 && (\r\n            <Button style={{ marginLeft: 8 }} onClick={() => this.prev()}>\r\n              Previous\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport flatten from \"flatten\";\r\nimport { PrimaryButton } from \"../styledcomponents/button/button\";\r\nimport { Input, Form } from \"antd\";\r\nimport { FlexContainer } from \"../styledcomponents/container/FlexGrid\";\r\n\r\nexport default class FormGenerator extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      form: { ...props.defaultValues },\r\n      inputs: { ...props.inputs },\r\n      canRender: [],\r\n      validationErrors: {},\r\n      randomisedFields: {}\r\n    };\r\n    // this.reset();\r\n\r\n    this.filterRules = {\r\n      numeric: value => /^$|^[0-9]+$/.test(value),\r\n      decimal: value => /^$|^[\\d.]+$/.test(value)\r\n    };\r\n\r\n    this.transformerRules = {\r\n      uppercase: value => value.toUpperCase(),\r\n      lowercase: value => value.toLowerCase()\r\n    };\r\n\r\n    this.validationRules = {\r\n      required: value => {\r\n        if (typeof value === \"object\") {\r\n          value = Object.keys(value);\r\n        }\r\n\r\n        if (typeof value === \"string\" || Array.isArray(value)) {\r\n          return !!value.length;\r\n        }\r\n\r\n        return value !== null && value !== undefined;\r\n      },\r\n      email: value =>\r\n        !value ||\r\n        /^$|^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\r\n          value\r\n        ),\r\n      decimal: value => !value || /^$|^\\d+$|^\\.\\d+|^\\d+\\.\\d+$/.test(value)\r\n    };\r\n\r\n    this.validateForm = this.validateForm.bind(this);\r\n    this.submitForm = this.submitForm.bind(this);\r\n    this.propagateChange = this.propagateChange.bind(this);\r\n  }\r\n\r\n  // reset = () => {\r\n  //   this.setState({\r\n  //     form: {}\r\n  //   });\r\n  // };\r\n  static flatInputs(entity) {\r\n    return flatten(entity);\r\n  }\r\n\r\n  static getDerivedStateFromProps({ form }, state) {\r\n    const { form: values, validationErrors: errors, randomisedFields } = state;\r\n    const inputs = FormGenerator.flatInputs(form);\r\n\r\n    const newRandomisedFields = { ...randomisedFields };\r\n    const newValues = { ...values };\r\n    const newErrors = { ...errors };\r\n    const canRender = [];\r\n\r\n    inputs.forEach(({ name, renderIf, autocomplete }) => {\r\n      if (typeof renderIf === \"function\" && !renderIf(state)) {\r\n        delete newValues[name];\r\n        delete newErrors[name];\r\n      } else {\r\n        canRender.push(name);\r\n      }\r\n\r\n      if (autocomplete === false) {\r\n        if (!newRandomisedFields[name]) {\r\n          newRandomisedFields[name] = Math.random()\r\n            .toString(36)\r\n            .substring(7);\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      delete newRandomisedFields[name];\r\n    });\r\n\r\n    return {\r\n      ...state,\r\n      inputs: form,\r\n      canRender: canRender,\r\n      form: newValues,\r\n      validationErrors: newErrors,\r\n      randomisedFields: newRandomisedFields\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { values: ppValues } = prevProps;\r\n    const { values: pValues } = this.props;\r\n\r\n    if (pValues) {\r\n      if (JSON.stringify(pValues) !== JSON.stringify(ppValues)) {\r\n        const form = {\r\n          ...ppValues,\r\n          ...pValues\r\n        };\r\n\r\n        this.propagateChange(form);\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  applyFilter(event, filter) {\r\n    switch (filter.constructor) {\r\n      case RegExp:\r\n        return filter.test(event.target.value);\r\n      case Function:\r\n        return filter(event);\r\n      case String:\r\n        //Might be regex if it has been stored as JSON\r\n        if (filter[0] === \"/\" && filter[filter.length - 1] === \"/\") {\r\n          const regex = new RegExp(filter.substring(1, filter.length - 1));\r\n\r\n          return regex.test(event.target.value);\r\n        }\r\n\r\n        try {\r\n          return this.filterRules[filter](event.target.value);\r\n        } catch (e) {\r\n          console.error(\r\n            `Invalid filter rule ${filter} used on input ${event.target.name}`\r\n          );\r\n\r\n          return true;\r\n        }\r\n      default:\r\n        console.error(\r\n          `Invalid filter type of ${filter.constructor} on input ${event.target.name}`\r\n        );\r\n\r\n        return true;\r\n    }\r\n  }\r\n\r\n  applyTransformer(event, transformer) {\r\n    switch (transformer.constructor) {\r\n      case Function:\r\n        return transformer(event);\r\n      case String:\r\n        return this.transformerRules[transformer](event.target.value);\r\n      default:\r\n        console.error(\r\n          `Invalid transformer type of ${transformer.constructor} on input ${event.target.name}`\r\n        );\r\n\r\n        return event.target.value;\r\n    }\r\n  }\r\n  validateInput(name, value, rules) {\r\n    let valid = true;\r\n    let errorMessage = null;\r\n\r\n    if (!Array.isArray(rules)) {\r\n      rules = [rules];\r\n    }\r\n\r\n    rules.forEach(rule => {\r\n      let ruleMessage = null;\r\n\r\n      if (rule.constructor === Object) {\r\n        ruleMessage = rule.message;\r\n        rule = rule.rule;\r\n      }\r\n\r\n      switch (rule.constructor) {\r\n        case Function:\r\n          if (!rule(name, value)) {\r\n            errorMessage = ruleMessage;\r\n            valid = false;\r\n          }\r\n\r\n          break;\r\n        case RegExp:\r\n          if (!rule.test(value)) {\r\n            errorMessage = ruleMessage;\r\n            valid = false;\r\n          }\r\n\r\n          break;\r\n        case String:\r\n          //Might be regex if it has been stored as JSON\r\n          if (rule[0] === \"/\" && rule[rule.length - 1] === \"/\") {\r\n            const regex = new RegExp(rule.substring(1, rule.length - 1));\r\n\r\n            if (!regex.test(value)) {\r\n              errorMessage = ruleMessage;\r\n              valid = false;\r\n\r\n              break;\r\n            }\r\n          }\r\n\r\n          try {\r\n            if (!this.validationRules[rule](value)) {\r\n              errorMessage = ruleMessage;\r\n              valid = false;\r\n            }\r\n          } catch (e) {\r\n            console.error(`Invalid filter rule ${rule} used on input ${name}`);\r\n          }\r\n\r\n          break;\r\n        default:\r\n          console.error(\r\n            `Invalid validation type of ${rule.constructor} on input ${name}`\r\n          );\r\n      }\r\n    });\r\n\r\n    const validationError = {\r\n      [name]: valid ? false : errorMessage || true\r\n    };\r\n\r\n    return [valid, validationError];\r\n  }\r\n\r\n  applyValidation(event, validation, onlyValid = false) {\r\n    let { validationErrors } = this.state;\r\n    let [valid, validationError] = this.validateInput(\r\n      event.target.name,\r\n      event.target.value,\r\n      validation\r\n    );\r\n\r\n    validationErrors = {\r\n      ...validationErrors,\r\n      ...validationError\r\n    };\r\n\r\n    if ((onlyValid && valid) || !onlyValid) {\r\n      this.setState({\r\n        validationErrors\r\n      });\r\n    }\r\n\r\n    return validationErrors;\r\n  }\r\n\r\n  propagateChange(form, validationErrors) {\r\n    const { onChange } = this.props;\r\n\r\n    const callback = () => {\r\n      const [valid, errors] = this.validateForm(false);\r\n\r\n      validationErrors = errors || validationErrors;\r\n\r\n      onChange({\r\n        valid,\r\n        data: {\r\n          form,\r\n          validationErrors\r\n        }\r\n      });\r\n    };\r\n\r\n    this.setState({ form: { ...form } }, callback);\r\n  }\r\n\r\n  handleInput(input, event) {\r\n    event.persist();\r\n    clearTimeout(this.timer);\r\n\r\n    let validationErrors = {};\r\n\r\n    if (input.filter && !this.applyFilter(event, input.filter)) {\r\n      return;\r\n    }\r\n\r\n    let value = event.target.value;\r\n    console.log(value);\r\n    if (input.type === \"checkbox\") {\r\n      value = event.target.checked;\r\n    }\r\n\r\n    if (input.transformer && input.transformer.onChange) {\r\n      value = this.applyTransformer(event, input.transformer.onChange);\r\n    }\r\n\r\n    if (input.validationRules) {\r\n      const { validationTimeout } = this.props;\r\n\r\n      // The third parameter, true, means that the input will not show as invalid\r\n      // while the user is typing\r\n      validationErrors = this.applyValidation(\r\n        event,\r\n        input.validationRules,\r\n        true\r\n      );\r\n\r\n      this.timer = setTimeout(\r\n        () => this.applyValidation(event, input.validationRules),\r\n        validationTimeout\r\n      );\r\n    }\r\n\r\n    let { form } = this.state;\r\n\r\n    form[input.name] =\r\n      value && typeof value === \"object\" && !Array.isArray(value)\r\n        ? value.value\r\n        : value;\r\n\r\n    this.propagateChange(form, validationErrors);\r\n  }\r\n\r\n  handleBlur(input, event) {\r\n    clearTimeout(this.timer);\r\n\r\n    let { form } = this.state;\r\n\r\n    let value = event.target.value;\r\n    let validationErrors = {};\r\n\r\n    if (input.transformer && input.transformer.onBlur) {\r\n      value = this.applyTransformer(event, input.transformer.onBlur);\r\n    }\r\n\r\n    if (input.validationRules) {\r\n      validationErrors = this.applyValidation(event, input.validationRules);\r\n    }\r\n\r\n    if (form[input.name] !== value) {\r\n      form[input.name] = value;\r\n\r\n      this.propagateChange(form, validationErrors);\r\n    }\r\n  }\r\n\r\n  validateForm(display = true) {\r\n    const { form } = this.props;\r\n\r\n    let invalid = false;\r\n    let { validationErrors, form: stateForm } = this.state;\r\n\r\n    flatten(form).forEach(input => {\r\n      if (!input.validationRules) {\r\n        return;\r\n      }\r\n\r\n      let [valid, validationError] = this.validateInput(\r\n        input.name,\r\n        stateForm[input.name],\r\n        input.validationRules\r\n      );\r\n\r\n      validationErrors = {\r\n        ...validationErrors,\r\n        ...validationError\r\n      };\r\n\r\n      if (!valid) {\r\n        invalid = true;\r\n      }\r\n    });\r\n\r\n    if (display) {\r\n      this.setState({\r\n        validationErrors\r\n      });\r\n\r\n      return [!invalid, validationErrors];\r\n    }\r\n\r\n    return [!invalid, validationErrors];\r\n  }\r\n\r\n  getInputValidationError(inputName) {\r\n    const { validationErrors } = this.state;\r\n    const { formErrors } = this.props;\r\n\r\n    const validationError = validationErrors[inputName];\r\n    const propError = formErrors[inputName];\r\n\r\n    return validationError && validationError !== true\r\n      ? validationError\r\n      : propError;\r\n  }\r\n\r\n  submitForm() {\r\n    const { form } = this.state;\r\n    const { onSubmit } = this.props;\r\n    // const { renderSubmit } = this.props;\r\n    // for(let i=0;i<form.s)\r\n    // console.log(form);\r\n\r\n    if (onSubmit) {\r\n      // const { renderSubmit } = this.props;\r\n      let [valid, validationErrors] = this.validateForm();\r\n\r\n      onSubmit({\r\n        valid: valid,\r\n        data: {\r\n          form,\r\n          validationErrors\r\n        }\r\n      });\r\n      this.setState({\r\n        form: {}\r\n      });\r\n      // renderSubmit({\r\n      //   valid: valid,\r\n      //   data: {\r\n      //     form,\r\n      //     validationErrors\r\n      //   }\r\n      // });\r\n    }\r\n  }\r\n\r\n  renderCustomInput(input) {\r\n    const { form } = this.state;\r\n\r\n    if (typeof input.render !== \"function\") {\r\n      if (!React.isValidElement(input.render)) {\r\n        return input.render;\r\n      }\r\n\r\n      return React.cloneElement(input.render, {\r\n        name: input.name,\r\n        placeholder: input.placeholder,\r\n        value: form[input.name] || \"\",\r\n        onChange: this.handleBlur.bind(this, input),\r\n        onBlur: this.handleBlur.bind(this, input),\r\n        invalid: !!this.getInputValidationError(input.name) || undefined\r\n      });\r\n    }\r\n\r\n    return input.render(\r\n      input,\r\n      form[input.name] || \"\",\r\n      this.handleInput.bind(this, input),\r\n      this.handleBlur.bind(this, input),\r\n      this.getInputValidationError(input.name),\r\n      this.state\r\n    );\r\n  }\r\n\r\n  renderInput(input) {\r\n    if (input.constructor === Array) {\r\n      return this.renderInputs(input);\r\n    }\r\n\r\n    const { form, validationErrors, randomisedFields } = this.state;\r\n\r\n    const {\r\n      formErrors,\r\n      classPrefix,\r\n      defaultInputClass,\r\n      invalidInputClass,\r\n      validInputClass\r\n    } = this.props;\r\n\r\n    if (input.render) {\r\n      return this.renderCustomInput(input);\r\n    }\r\n    const { inputStyle } = this.props;\r\n\r\n    const props = {\r\n      className: `${classPrefix}-${input.inputClass ||\r\n        defaultInputClass ||\r\n        \"\"} ${\r\n        validationErrors[input.name] || formErrors[input.name]\r\n          ? invalidInputClass\r\n          : validationErrors[input.name] === false\r\n          ? validInputClass\r\n          : \"\"\r\n      }`,\r\n      name: randomisedFields[input.name] || input.name,\r\n      value: form[input.name] || input.defaultValue || input.value || \"\",\r\n      placeholder: input.placeholder,\r\n      id: input.name,\r\n      onChange: this.handleInput.bind(this, input),\r\n      onBlur: this.handleBlur.bind(this, input),\r\n      ...input.htmlProps\r\n    };\r\n\r\n    switch (input.type) {\r\n      case \"custom\":\r\n        return this.renderCustomInput(input);\r\n      case \"textarea\":\r\n        return <textarea {...props} />;\r\n      case \"checkbox\":\r\n        return (\r\n          <input\r\n            {...props}\r\n            type={input.type}\r\n            onBlur={undefined}\r\n            defaultChecked={props.defaultValue}\r\n            checked={props.value}\r\n          />\r\n        );\r\n      case \"select\":\r\n        return (\r\n          <select\r\n            {...props}\r\n            style={{\r\n              width: \"80px\",\r\n              boxShadow: \"1px 2px 8px 1px rgba(0,0,0,0.08)\",\r\n              borderRadius: \"6px\",\r\n              height: \"32px\"\r\n              // marginTop: \"-10px\"\r\n            }}\r\n          >\r\n            {input.defaultOptionText && (\r\n              <option hidden selected value>\r\n                {input.defaultOptionText}\r\n              </option>\r\n            )}\r\n            {(input.options || []).map(option => {\r\n              return <option value={option.value}>{option.text}</option>;\r\n            })}\r\n          </select>\r\n        );\r\n      case \"radio\":\r\n        return (\r\n          <Fragment>\r\n            {input.options.map((option, i) => {\r\n              return (\r\n                <div\r\n                  key={i}\r\n                  className={`${classPrefix}-${input.radioContainerClass ||\r\n                    \"\"}`}\r\n                >\r\n                  <Input\r\n                    name={input.name}\r\n                    value={option.value}\r\n                    type=\"radio\"\r\n                    onChange={this.handleInput.bind(this, input)}\r\n                  />\r\n                  <label>{option.text}</label>\r\n                </div>\r\n              );\r\n            })}\r\n          </Fragment>\r\n        );\r\n      default:\r\n        return <Input type={input.type} {...props} style={inputStyle} />;\r\n    }\r\n  }\r\n\r\n  renderLabel(input) {\r\n    if (!input.label) {\r\n      return;\r\n    }\r\n\r\n    const { classPrefix, defaultLabelClass } = this.props;\r\n    const props = {\r\n      className:\r\n        classPrefix + \"-\" + (input.label.className || defaultLabelClass || \"\"),\r\n      htmlFor: input.name\r\n    };\r\n\r\n    if (typeof input.label === \"function\") {\r\n      return input.label(props);\r\n    }\r\n\r\n    if (input.label) {\r\n      return <label {...props}>{input.label.text || input.label}</label>;\r\n    }\r\n  }\r\n\r\n  renderValidationErrors(input) {\r\n    const { classPrefix, defaultValidationErrorClass } = this.props;\r\n    const validationError = this.getInputValidationError(input.name);\r\n\r\n    if (validationError) {\r\n      return (\r\n        <p className={`${classPrefix}-${defaultValidationErrorClass || \"\"}`}>\r\n          {validationError}\r\n        </p>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderSubmitButton() {\r\n    const {\r\n      submitButton,\r\n      classPrefix,\r\n      defaultSubmitClass,\r\n      loading\r\n    } = this.props;\r\n\r\n    if (submitButton) {\r\n      return (\r\n        <PrimaryButton\r\n          className={`${classPrefix}-${submitButton.className ||\r\n            defaultSubmitClass ||\r\n            \"\"} ${this.validateForm(false) ? \"\" : \"invalid\"} ${\r\n            loading ? \"loading\" : \"\"\r\n          }`}\r\n          onClick={this.submitForm}\r\n        >\r\n          {this.renderSubmitButtonContents()}\r\n        </PrimaryButton>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderSubmit = () => {\r\n    this.submitForm();\r\n  };\r\n\r\n  renderSubmitButtonContents() {\r\n    const { submitButton, loading, loadingElement } = this.props;\r\n\r\n    if (loading && loadingElement) {\r\n      return loadingElement;\r\n    }\r\n\r\n    return submitButton.text;\r\n  }\r\n\r\n  renderInputs(inputs) {\r\n    const { canRender } = this.state;\r\n    const { classPrefix, defaultContainerClass, formDriction } = this.props;\r\n\r\n    inputs = inputs.filter(\r\n      input => canRender.includes(input.name) || input.constructor === Array\r\n    );\r\n\r\n    const { lableStyle } = this.props;\r\n    return (\r\n      <div\r\n        style={{\r\n          width: \"600px\",\r\n          display: \"flex\",\r\n          flexDirection: formDriction,\r\n          flexWrap: \"wrap\"\r\n        }}\r\n      >\r\n        {inputs.map((input, i) => {\r\n          const isArray = input.constructor === Array;\r\n          const containerClass = isArray\r\n            ? `${classPrefix}-row`\r\n            : `${classPrefix}-${input.containerClass ||\r\n                defaultContainerClass ||\r\n                \"\"}`;\r\n\r\n          return (\r\n            <div>\r\n              <FlexContainer style={{ height: \"auto\" }} key={i}>\r\n                <Form className={containerClass}>\r\n                  <FlexContainer home>\r\n                    <div style={lableStyle}>\r\n                      {!isArray && this.renderLabel(input)}\r\n                    </div>\r\n                    <div>{this.renderInput(input)}</div>\r\n                    {!isArray && this.renderValidationErrors(input)}\r\n                  </FlexContainer>\r\n                  <div style={{ height: \"10px\" }}></div>\r\n                </Form>\r\n              </FlexContainer>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    try {\r\n      const { inputs } = this.state;\r\n      const { buttonStyle, formStyle } = this.props;\r\n\r\n      return (\r\n        <FlexContainer>\r\n          <div style={formStyle}>{this.renderInputs(inputs)}</div>\r\n          <div style={buttonStyle}>{this.renderSubmitButton()}</div>\r\n        </FlexContainer>\r\n      );\r\n    } catch (e) {\r\n      console.error(e);\r\n\r\n      return <p>Error rendering form</p>;\r\n    }\r\n  }\r\n}\r\n\r\nFormGenerator.defaultProps = {\r\n  defaultValues: {},\r\n  values: null,\r\n  classPrefix: \"rdf\",\r\n  defaultContainerClass: \"container\",\r\n  defaultInputClass: \"input\",\r\n  defaultValidationErrorClass: \"error-label\",\r\n  defaultLabelClass: \"label\",\r\n  form: [],\r\n  defaultSubmitClass: \"submit\",\r\n  invalidInputClass: \"invalid\",\r\n  validInputClass: \"valid\",\r\n  loading: false,\r\n  loadingElement: null,\r\n  formErrors: {},\r\n  validationTimeout: 1000,\r\n  inputStyle: {},\r\n  buttonStyle: {},\r\n  formStyle: {},\r\n  lableStyle: { width: \"150px\" },\r\n  formDriction: \"row\",\r\n  onChange: () => null\r\n};\r\n\r\nFormGenerator.propTypes = {\r\n  defaultValues: PropTypes.object,\r\n  values: PropTypes.object,\r\n  defaultInputClass: PropTypes.string,\r\n  defaultLabelClass: PropTypes.string,\r\n  defaultContainerClass: PropTypes.string,\r\n  defaultValidationErrorClass: PropTypes.string,\r\n  form: PropTypes.array.isRequired,\r\n  submitButton: PropTypes.object,\r\n  validationTimeout: PropTypes.number,\r\n  classPrefix: PropTypes.string,\r\n  loading: PropTypes.bool,\r\n  defaultSubmitClass: PropTypes.string,\r\n  invalidInputClass: PropTypes.string,\r\n  validInputClass: PropTypes.string,\r\n  loadingElement: PropTypes.element,\r\n  formErrors: PropTypes.object,\r\n  onChange: PropTypes.func,\r\n  inputStyle: PropTypes.object,\r\n  buttonStyle: PropTypes.object,\r\n  formStyle: PropTypes.object,\r\n  formDriction: PropTypes.string,\r\n  lableStyle: PropTypes.object,\r\n  renderSubmit: PropTypes.func\r\n};\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Input,\r\n  DatePicker,\r\n  Modal,\r\n  Button,\r\n  Icon,\r\n  Table,\r\n  Select,\r\n  Row,\r\n  Col\r\n} from \"antd\";\r\n\r\nimport { PrimaryButton } from \"../../../styledcomponents/button/button\";\r\nimport {\r\n  MasterLevelFormTitle,\r\n  MasterLevelForm\r\n} from \"../../../styledcomponents/form/MasterLevelForms\";\r\nimport { connect } from \"react-redux\";\r\nimport { DISABLE_EDIT_MODE } from \"../../../../redux/action/master/plantlevel/PlantLevel\";\r\nimport moment from \"moment\";\r\nimport FormGenerator from \"../../../Constant/FormGenerator\";\r\nimport { api } from \"../../../services/AxiosService\";\r\nimport Notification from \"../../../Constant/Notification\";\r\nimport {\r\n  Sub_Category_Name_Cement,\r\n  Sub_Category_Name_Water,\r\n  Sub_Category_Name_Flyash\r\n} from \"../../../Constant/Api\";\r\n\r\n// const edit = { cement: 340, water: 156 };\r\n// const a = [];\r\n// const b = [];\r\n\r\nconst Option = Select;\r\nconst error = {\r\n  color: \"red\",\r\n  fontSize: \"12px\",\r\n  width: \"160px\",\r\n  height: \"0.2px\"\r\n};\r\n\r\nfunction isEmpty(obj) {\r\n  for (var key in obj) {\r\n    if (obj.hasOwnProperty(key)) return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nclass AddMixDesignForm extends Component {\r\n  state = {\r\n    loading: false,\r\n    visible: false,\r\n    visible1: false,\r\n    disabled: true,\r\n    errors: {\r\n      code: \"\",\r\n      plant: \"\",\r\n      grade: \"\",\r\n      target_strength: \"\",\r\n      actual_grade: \"\"\r\n    },\r\n    code: \"\",\r\n    plant: \"\",\r\n    grade: \"\",\r\n    date: \"\",\r\n    target_strength: \"\",\r\n    actual_grade: 0,\r\n    water_cement_ratio: 0,\r\n    water_binder_ratio: 0,\r\n    errormgs: \"\",\r\n    rowreord: [{ name: \"\", nature: \"\", unit: \"\", quantity: \"\" }],\r\n    checked: false,\r\n    disableAddQuantity: true,\r\n    mixProportionData: \"\",\r\n    SubCategoriesselect: \"\",\r\n    SubCategory: undefined,\r\n    datalist: \"\",\r\n    unit: \"\",\r\n    selectunit: \"\",\r\n    selectPlants: \"\",\r\n    cement_data: [],\r\n    water_data: [],\r\n    flyash_data: [],\r\n    material_data: {},\r\n    editmixProposionData: {},\r\n    editform: [],\r\n    editdataform: \"\",\r\n    editunit: \"\",\r\n    type: \"add\",\r\n    a: [],\r\n    b: [],\r\n    MixDesignProportionData: \"\",\r\n    subId: \"\"\r\n  };\r\n\r\n  // *******************quantity edit part **********************\r\n  componentWillReceiveProps(nextProps) {\r\n    console.log(nextProps.editPlantData.code);\r\n    this.setState({\r\n      visible: nextProps.visible,\r\n      // visible1: nextProps.visible,\r\n      code: nextProps.editPlantData.code,\r\n      plant: nextProps.editPlantData.plantCode,\r\n      grade: nextProps.editPlantData.targetGrade,\r\n      date: moment(nextProps.editPlantData.date, \"DD-MM-YYYY\"),\r\n      target_strength: nextProps.editPlantData.targetSlump,\r\n      actual_grade: nextProps.editPlantData.actualGrade,\r\n      water_cement_ratio: nextProps.editPlantData.waterCementRatio,\r\n      water_binder_ratio: nextProps.editPlantData.waterBinderRatio,\r\n\r\n      type: nextProps.type\r\n      // disableAddQuantity: false\r\n    });\r\n    this.getMixDesignProportion(nextProps.editPlantData.code);\r\n  }\r\n\r\n  getMixDesignProportion = code => {\r\n    console.log(code);\r\n    const objData = {};\r\n    // const editform = [];\r\n    const editunit = [];\r\n    api(\r\n      \"GET\",\r\n      \"supermix\",\r\n      \"/mix-design-proportion/mix-design\",\r\n      \"\",\r\n      \"\",\r\n      code\r\n    ).then(res => {\r\n      console.log(res.data.results);\r\n\r\n      res.data.results.mixDesignProportions.map((post, index) => {\r\n        objData[post.rawMaterialName] = post.quantity;\r\n      });\r\n      console.log(objData);\r\n      console.log(Object.keys(objData));\r\n\r\n      for (let i = 0; i < Object.keys(objData).length; i++) {\r\n        this.state.editform.push({\r\n          name: `${Object.keys(objData)[i]}`,\r\n          label: `${Object.keys(objData)[i]}`\r\n        });\r\n      }\r\n      for (let i = 0; i < Object.keys(objData).length; i++) {\r\n        editunit.push({\r\n          name: `${Object.keys(objData)[i]}`,\r\n          label: \"\",\r\n          type: \"select\",\r\n          options: this.state.selectunit\r\n        });\r\n      }\r\n\r\n      console.log(JSON.stringify(res.data.results.mixDesignProportions));\r\n      this.setState({\r\n        MixDesignProportionData: res.data.results.mixDesignProportions,\r\n        editmixProposionData: objData,\r\n        // editdataform: this.state.editform,\r\n        editunit\r\n      });\r\n    });\r\n\r\n    console.log(objData);\r\n  };\r\n\r\n  editForm = () => {};\r\n\r\n  // **************quantity add modal start*****************\r\n\r\n  showModal1 = () => {\r\n    this.setState({\r\n      visible1: true,\r\n      water_data: [],\r\n      cement_data: [],\r\n      flyash_data: [],\r\n      material_data: {}\r\n    });\r\n  };\r\n\r\n  handleOk1 = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible1: false\r\n    });\r\n  };\r\n\r\n  handleCancel1 = e => {\r\n    this.setState({\r\n      cement_data: [],\r\n      water_data: [],\r\n      flyash_data: []\r\n      // material_data: {}\r\n    });\r\n\r\n    console.log(e);\r\n    this.setState({\r\n      visible1: false\r\n    });\r\n  };\r\n\r\n  // **************quantity add modal end*****************\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n      water_data: [],\r\n      cement_data: [],\r\n      flyash_data: []\r\n    });\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      disabled: !this.state.disabled\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({ loading: true });\r\n    setTimeout(() => {\r\n      this.setState({ loading: false, visible: false });\r\n    }, 3000);\r\n  };\r\n\r\n  handleCancel = () => {\r\n    window.location.reload();\r\n    if (this.state.type === \"edit\") {\r\n      this.props.setMixDesignVisibility();\r\n      window.location.reload();\r\n    }\r\n    console.log(\"cancelled\");\r\n    // a.slice(0, a.length);\r\n    // b.slice(0, b.length);\r\n\r\n    this.setState({\r\n      visible: false,\r\n      errors: {\r\n        code: \"\",\r\n        plant: \"\",\r\n        grade: \"\",\r\n        target_strength: \"\",\r\n        actual_grade: \"\"\r\n      },\r\n      code: \"\",\r\n      plant: \"\",\r\n      grade: \"\",\r\n      date: \"\",\r\n      target_strength: \"\",\r\n      actual_grade: \"\",\r\n      water_cement_ratio: 0,\r\n      water_binder_ratio: 0,\r\n      errormgs: \"\",\r\n      type: \"add\",\r\n      editform: [],\r\n      editmixProposionData: {}\r\n      // a: [],\r\n      // b: []\r\n    });\r\n  };\r\n\r\n  handleChange = (event, field) => {\r\n    this.setState({ [field]: event.target.value });\r\n    this.setState({ errormgs: \"\" });\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    let errors = this.state.errors;\r\n    console.log(name);\r\n    // console.log(name + \" is \\t\" + value);\r\n    switch (name) {\r\n      case \"code\":\r\n        errors.code =\r\n          value.length === 0\r\n            ? \"Code can't be empty\"\r\n            : value.length < 2\r\n            ? \"Code \\n must be 2 characters long!\"\r\n            : \"\";\r\n        break;\r\n\r\n      case \"grade\":\r\n        errors.grade =\r\n          value.length === 0\r\n            ? \"grade can't be empty\"\r\n            : value.length < 1\r\n            ? \"grade \\n must be one character long!\"\r\n            : \"\";\r\n        break;\r\n\r\n      case \"target_strength\":\r\n        errors.target_strength =\r\n          value.length === 0\r\n            ? \"target_strength can't be empty\"\r\n            : value.length < 1\r\n            ? \"target strength \\n must be one character long!\"\r\n            : \"\";\r\n        break;\r\n      case \"actual_grade\":\r\n        errors.actual_grade =\r\n          value.length === 0\r\n            ? \"target_strength can't be empty\"\r\n            : value.length < 1\r\n            ? \"actual grade \\n must be one character long!\"\r\n            : \"\";\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ errors, [name]: value });\r\n  };\r\n\r\n  handleSelect = value => {\r\n    console.log(value);\r\n    this.setState({\r\n      plant: value\r\n      // edit_plant: value\r\n    });\r\n    if (value.length !== 0) {\r\n      this.setState({\r\n        errors: {\r\n          code: this.state.errors.code,\r\n          plant: \"\",\r\n          grade: this.state.errors.grade,\r\n          target_strength: this.state.errors.target_strength,\r\n          actual_grade: this.state.errors.actual_grade\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  handleSubSelect = value => {\r\n    console.log(value);\r\n    this.setState({\r\n      subId: value\r\n    });\r\n    this.getallRawMaterials();\r\n  };\r\n  handleDates(name, dateString, field) {\r\n    console.log(name);\r\n    console.log(dateString);\r\n    console.log(field);\r\n    let convertedDate = moment(dateString).format(\"DD-MM-YYYY\");\r\n    console.log(convertedDate);\r\n    if (name === \"date\") {\r\n      this.setState({\r\n        date: dateString\r\n      });\r\n    }\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const {\r\n      errors,\r\n      code,\r\n      plant,\r\n      grade,\r\n      date,\r\n      target_strength,\r\n      actual_grade,\r\n      water_cement_ratio,\r\n      water_binder_ratio\r\n    } = this.state;\r\n    if (\r\n      code.length === 0 &&\r\n      plant.length === 0 &&\r\n      grade.length === 0 &&\r\n      actual_grade.length === 0 &&\r\n      target_strength.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          code: \"Code can't be empty\",\r\n          plant: \"Plant can't be empty\",\r\n          grade: \"Grade can't be empty\",\r\n          target_strength: \"Target Strength can't be empty\",\r\n          actual_grade: \" Actual Grade can't be empty\"\r\n        }\r\n      });\r\n    } else if (code.length === 0 && errors.code.length === 0) {\r\n      this.setState({\r\n        errors: {\r\n          code: errors.code || \"Code can't be empty\",\r\n          plant: errors.plant,\r\n          grade: errors.grade,\r\n          target_strength: errors.target_strength,\r\n          actual_grade: errors.actual_grade\r\n        }\r\n      });\r\n    } else if (plant.length === 0 && errors.plant.length === 0) {\r\n      this.setState({\r\n        errors: {\r\n          code: errors.code,\r\n          plant: errors.plant || \"Plant can't be empty\",\r\n          grade: errors.grade,\r\n          target_strength: errors.target_strength,\r\n          actual_grade: errors.actual_grade\r\n        }\r\n      });\r\n    } else if (grade.length === 0 && errors.grade.length === 0) {\r\n      this.setState({\r\n        errors: {\r\n          code: errors.code,\r\n          plant: errors.plant,\r\n          grade: errors.grade || \"Grade can't be empty\",\r\n          target_strength: errors.target_strength,\r\n          actual_grade: errors.actual_grade\r\n        }\r\n      });\r\n    } else if (\r\n      target_strength.length === 0 &&\r\n      errors.target_strength.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          code: errors.code,\r\n          plant: errors.plant,\r\n          grade: errors.grade,\r\n          target_strength:\r\n            errors.target_strength || \"Target Strength can't be empty\",\r\n          actual_grade: errors.actual_grade\r\n        }\r\n      });\r\n    } else if (actual_grade.length === 0 && errors.actual_grade.length === 0) {\r\n      this.setState({\r\n        errors: {\r\n          code: errors.code,\r\n          plant: errors.plant,\r\n          grade: errors.grade,\r\n          target_strength: errors.target_strength,\r\n          actual_grade: errors.actual_grade || \" Actual Grade can't be empty\"\r\n        }\r\n      });\r\n    } else if (\r\n      errors.code.length === 0 &&\r\n      errors.plant.length === 0 &&\r\n      errors.grade.length === 0 &&\r\n      errors.actual_grade.length === 0 &&\r\n      errors.target_strength.length === 0 &&\r\n      this.state.mixProportionData.length > 0\r\n    ) {\r\n      console.log(\"form is valid\");\r\n\r\n      console.log(this.state.material_data);\r\n      console.log(this.state.mixProportionData);\r\n\r\n      if (this.state.type === \"edit\") {\r\n        const data = {\r\n          code: code,\r\n          plantCode: plant,\r\n          targetGrade: grade,\r\n          date: moment(date).format(\"YYYY-MM-DD\"),\r\n          targetSlump: target_strength,\r\n          actualGrade: actual_grade,\r\n          waterCementRatio: water_cement_ratio,\r\n          waterBinderRatio: water_binder_ratio\r\n        };\r\n        console.log(data);\r\n        console.log(\"edit part\");\r\n\r\n        api(\"PUT\", \"supermix\", \"/mix-design\", \"\", data, \"\").then(\r\n          res => {\r\n            console.log(res.data);\r\n            console.log(this.state.mixProportionData);\r\n            Notification(\"success\", res.data.message);\r\n            this.props.reload();\r\n            // this.setState({ loading: true });\r\n            for (let i = 0; i < this.state.mixProportionData.length; i++) {\r\n              api(\r\n                \"PUT\",\r\n                \"supermix\",\r\n                \"/mix-design-proportion\",\r\n                \"\",\r\n                this.state.mixProportionData[i],\r\n                \"\"\r\n              ).then(res => {\r\n                console.log(res.data);\r\n                Notification(\"success\", res.data.message);\r\n\r\n                this.setState({\r\n                  cement_data: [],\r\n                  water_data: [],\r\n                  flyash_data: [],\r\n                  material_data: {},\r\n                  code: \"\",\r\n                  plant: \"\",\r\n                  grade: \"\",\r\n                  date: \"\",\r\n                  target_strength: \"\",\r\n                  actual_grade: \"\",\r\n                  water_cement_ratio: 0,\r\n                  water_binder_ratio: 0,\r\n                  type: \"add\",\r\n                  a: [],\r\n                  b: []\r\n                });\r\n                setTimeout(() => {\r\n                  window.location.reload();\r\n                }, 500);\r\n              });\r\n            }\r\n\r\n            setTimeout(() => {\r\n              this.setState({ loading: false, visible: false });\r\n            }, 200);\r\n          },\r\n          error => {\r\n            // this.setState({\r\n            //   errormgs: error.validationFailures[0]\r\n            // });\r\n            console.log(\"DEBUG34: \", error);\r\n            // console.log(HandelError(error.validationFailures[0]));\r\n          }\r\n        );\r\n      } else {\r\n        const data = {\r\n          code: code,\r\n          plantCode: plant,\r\n          targetGrade: grade,\r\n          date: moment(date).format(\"YYYY-MM-DD\"),\r\n          targetSlump: target_strength,\r\n          actualGrade: actual_grade,\r\n          waterCementRatio: water_cement_ratio,\r\n          waterBinderRatio: water_binder_ratio\r\n        };\r\n        console.log(data);\r\n        console.log(\"hhhhhhhhhhhhhhh\");\r\n        console.log(data);\r\n        api(\"POST\", \"supermix\", \"/mix-design\", \"\", data, \"\").then(\r\n          res => {\r\n            console.log(res.data);\r\n            console.log(this.state.mixProportionData);\r\n            api(\r\n              \"POST\",\r\n              \"supermix\",\r\n              \"/mix-design-proportion\",\r\n              \"\",\r\n              this.state.mixProportionData,\r\n              \"\"\r\n            ).then(res => {\r\n              console.log(res.data);\r\n              Notification(\"success\", res.data.message);\r\n              // a.splice(0, a.length);\r\n              // b.splice(0, b.length);\r\n\r\n              this.setState({\r\n                cement_data: [],\r\n                water_data: [],\r\n                flyash_data: [],\r\n                material_data: {},\r\n                code: \"\",\r\n                plant: \"\",\r\n                grade: \"\",\r\n                date: \"\",\r\n                target_strength: \"\",\r\n                actual_grade: \"\",\r\n                water_cement_ratio: 0,\r\n                water_binder_ratio: 0,\r\n                a: [],\r\n                b: []\r\n              });\r\n            });\r\n\r\n            Notification(\"success\", res.data.message);\r\n            this.props.reload();\r\n            window.location.reload();\r\n\r\n            setTimeout(() => {\r\n              this.setState({ loading: false, visible: false });\r\n            }, 500);\r\n          },\r\n          error => {\r\n            // this.setState({\r\n            //   errormgs: error.validationFailures[0]\r\n            // });\r\n            console.log(\"DEBUG34: \", error);\r\n            // console.log(HandelError(error.validationFailures[0]));\r\n          }\r\n        );\r\n      }\r\n    }\r\n    if (\r\n      isEmpty(this.state.material_data) &&\r\n      this.state.mixProportionData.length\r\n    ) {\r\n      this.setState({\r\n        errormgs: \"! mixProportion must be add\"\r\n      });\r\n    }\r\n\r\n    console.log(\"data hit\");\r\n  };\r\n\r\n  //restrict date\r\n  disabledDate = current => {\r\n    // Can not select days before today and today\r\n    return current && current.valueOf() < Date.now();\r\n  };\r\n\r\n  selectSubCategories = () => {\r\n    api(\"GET\", \"supermix\", \"/material-sub-categories\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data);\r\n      if (res.data.results.materialSubCategories.length > 0) {\r\n        let SubCategoriesselect = res.data.results.materialSubCategories.map(\r\n          (post, index) => {\r\n            return (\r\n              <Option value={post.id} key={index}>\r\n                {post.name}\r\n              </Option>\r\n            );\r\n          }\r\n        );\r\n        this.setState({\r\n          SubCategoriesselect\r\n        });\r\n      }\r\n    });\r\n  };\r\n  getallRawMaterials = () => {\r\n    const datalist = [];\r\n    api(\"GET\", \"supermix\", \"/raw-materials\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data);\r\n\r\n      res.data.results.rawMaterial.map((post, index) => {\r\n        if (this.state.subId) {\r\n          if (this.state.subId === post.materialSubCategory.id)\r\n            datalist.push({\r\n              id: post.id,\r\n              name: post.name,\r\n              nature: post.nature,\r\n              subCategoryName: post.materialSubCategory.name,\r\n              subCategoryId: post.materialSubCategory.id,\r\n              materialCategoryId: post.materialSubCategory.materialCategoryId,\r\n              materialCategoryName:\r\n                post.materialSubCategory.materialCategoryName\r\n            });\r\n        } else {\r\n          datalist.push({\r\n            id: post.id,\r\n            name: post.name,\r\n            nature: post.nature,\r\n            subCategoryName: post.materialSubCategory.name,\r\n            subCategoryId: post.materialSubCategory.id,\r\n            materialCategoryId: post.materialSubCategory.materialCategoryId,\r\n            materialCategoryName: post.materialSubCategory.materialCategoryName\r\n          });\r\n        }\r\n      });\r\n      console.log(datalist);\r\n      this.setState({\r\n        datalist: datalist\r\n      });\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(this.props.screen);\r\n    this.selectSubCategories();\r\n    this.getallRawMaterials();\r\n    this.getallunit();\r\n    this.getAllplant();\r\n  }\r\n\r\n  handleChangeMaterial = event => {\r\n    // this.setState({ [field]: event.target.value });\r\n\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n\r\n    console.log(name);\r\n    console.log(value);\r\n  };\r\n\r\n  onSelectChange = (record, selectedRows) => {\r\n    console.log(record);\r\n    console.log(selectedRows);\r\n    if (selectedRows) {\r\n      this.state.a.push(record);\r\n    } else {\r\n      this.state.b.push(record);\r\n      // console.log(b);\r\n      // var array = [...a]; // make a separate copy of the array\r\n      this.state.b.map((post, key) => {\r\n        var index = this.state.a.indexOf(post);\r\n        if (index !== -1) {\r\n          this.state.a.splice(index, 1);\r\n        }\r\n      });\r\n\r\n      console.log(this.state.a);\r\n    }\r\n    console.log(this.state.a);\r\n    if (this.state.a.length > 0) {\r\n      console.log(\"disble true\");\r\n      this.setState({\r\n        disableAddQuantity: false\r\n      });\r\n    } else {\r\n      this.setState({\r\n        disableAddQuantity: true\r\n      });\r\n    }\r\n  };\r\n\r\n  x = () => {\r\n    let para = [];\r\n    for (let i = 0; i < this.state.a.length; i++) {\r\n      // let st = parameter[i].name;\r\n      // console.log(st);\r\n\r\n      para.push({\r\n        name: `${this.state.a[i].name}`,\r\n        label: `${this.state.a[i].name}`,\r\n        type: \"number\"\r\n      });\r\n    }\r\n    console.log(para);\r\n    return JSON.stringify(para);\r\n  };\r\n\r\n  y = () => {\r\n    let para = [];\r\n    for (let i = 0; i < this.state.a.length; i++) {\r\n      para.push({\r\n        name: `${this.state.a[i].name}`,\r\n        label: \"\",\r\n        type: \"select\",\r\n        options: this.state.selectunit\r\n      });\r\n    }\r\n    console.log(para);\r\n    return JSON.stringify(para);\r\n  };\r\n  getuniValuev = form => {\r\n    console.log(form);\r\n  };\r\n\r\n  quantityChange = form1 => {\r\n    this.setState({ material_data: form1.data.form });\r\n    if (!isEmpty(form1.data.form)) {\r\n      this.setState({ errormgs: \"\" });\r\n    }\r\n  };\r\n  setJson = form => {\r\n    console.log(form);\r\n    // this.setState({ material_data: form1.data.form });\r\n    this.setState({ visible1: false });\r\n\r\n    const values = [];\r\n    if (this.state.type === \"add\") {\r\n      for (let i = 0; i < this.state.a.length; i++) {\r\n        values.push({\r\n          mixDesignCode: this.state.code,\r\n          rawMaterialId: this.state.a[i].id,\r\n          unitId: this.state.unit[this.state.a[i].name],\r\n          quantity: form[this.state.a[i].name]\r\n        });\r\n      }\r\n      this.setState({ mixProportionData: values });\r\n      // console.log(values);\r\n    } else {\r\n      for (let i = 0; i < this.state.MixDesignProportionData.length; i++) {\r\n        values.push({\r\n          id: this.state.MixDesignProportionData[i].id,\r\n          mixDesignCode: this.state.MixDesignProportionData[i].mixDesignCode,\r\n          rawMaterialId: this.state.MixDesignProportionData[i].rawMaterialId,\r\n          unitId: this.state.MixDesignProportionData[i].unitId,\r\n          quantity: isEmpty(this.state.material_data)\r\n            ? this.state.MixDesignProportionData[i].quantity\r\n            : this.state.material_data[\r\n                this.state.MixDesignProportionData[i].rawMaterialName\r\n              ]\r\n        });\r\n      }\r\n      this.setState({ mixProportionData: values });\r\n    }\r\n    console.log(values);\r\n\r\n    Object.entries(form).map(([make, type]) => {\r\n      if (this.state.type === \"add\") {\r\n        this.state.a.map((post, index) => {\r\n          console.log(post.subCategoryName);\r\n          if (\r\n            post.name === make &&\r\n            post.subCategoryName.toLowerCase() === Sub_Category_Name_Water\r\n          ) {\r\n            this.state.water_data.push(parseInt(type));\r\n          } else if (\r\n            post.name === make &&\r\n            post.subCategoryName.toLowerCase() === Sub_Category_Name_Cement\r\n          ) {\r\n            this.state.cement_data.push(parseInt(type));\r\n          } else if (\r\n            post.name === make &&\r\n            post.subCategoryName.toLowerCase() === Sub_Category_Name_Flyash\r\n          ) {\r\n            this.state.flyash_data.push(parseInt(type));\r\n          } else {\r\n            console.log(\"notfound\");\r\n          }\r\n        });\r\n      } else {\r\n        console.log(this.state.MixDesignProportionData);\r\n        console.log(make);\r\n        console.log(type);\r\n\r\n        if (make.toLowerCase() === Sub_Category_Name_Water) {\r\n          console.log(\"water\");\r\n\r\n          this.state.water_data.push(parseInt(type));\r\n        } else if (make.toLowerCase() === Sub_Category_Name_Cement) {\r\n          console.log(type);\r\n          this.state.cement_data.push(parseInt(type));\r\n        } else if (make.toLowerCase() === Sub_Category_Name_Flyash) {\r\n          console.log(type);\r\n          this.state.flyash_data.push(parseInt(type));\r\n        } else {\r\n          console.log(\"notfound\");\r\n        }\r\n      }\r\n    });\r\n    console.log(this.state.water_data);\r\n    console.log(this.state.cement_data);\r\n    console.log(this.state.flyash_data);\r\n    if (\r\n      this.state.cement_data.length > 0 &&\r\n      this.state.water_data.length === 1 &&\r\n      this.state.flyash_data.length === 0\r\n    ) {\r\n      // Getting sum of numbers\r\n      var sum = this.state.cement_data.reduce(function(a, b) {\r\n        return a + b;\r\n      }, 0);\r\n      this.findWaterCementRatio(this.state.water_data[0], sum);\r\n    } else if (\r\n      this.state.cement_data.length > 0 &&\r\n      this.state.water_data.length === 1 &&\r\n      this.state.flyash_data.length === 1\r\n    ) {\r\n      var sum = this.state.cement_data.reduce(function(a, b) {\r\n        return a + b;\r\n      }, 0);\r\n\r\n      this.findWaterCementRatio(this.state.water_data[0], sum);\r\n      this.findWaterBinderRatio(\r\n        this.state.water_data[0],\r\n        sum + this.state.flyash_data[0]\r\n      );\r\n    } else {\r\n      this.setState({\r\n        water_cement_ratio: 0,\r\n        water_binder_ratio: 0\r\n      });\r\n    }\r\n  };\r\n\r\n  findWaterBinderRatio = (w, f) => {\r\n    console.log(w);\r\n    console.log(f);\r\n    let w_b_r = (w / f) * 100;\r\n\r\n    this.setState({ water_binder_ratio: Number(w_b_r.toFixed(1)) });\r\n\r\n    console.log(Number(w_b_r.toFixed(1)));\r\n  };\r\n\r\n  findWaterCementRatio = (w, c) => {\r\n    let w_c_r = (w / c) * 100;\r\n\r\n    this.setState({ water_cement_ratio: Number(w_c_r.toFixed(1)) });\r\n\r\n    console.log(Number(w_c_r.toFixed(1)));\r\n  };\r\n  renderSubmit = from => {\r\n    console.log(from);\r\n    this.setState({\r\n      unit: from\r\n    });\r\n  };\r\n\r\n  getallunit = () => {\r\n    api(\"GET\", \"supermix\", \"/units\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data);\r\n      const values = [];\r\n\r\n      for (let i = 0; i < res.data.results.units.length; i++) {\r\n        values.push({\r\n          value: res.data.results.units[i].id,\r\n          text: res.data.results.units[i].unit\r\n        });\r\n      }\r\n      console.log(values);\r\n      this.setState({\r\n        selectunit: values\r\n      });\r\n    });\r\n  };\r\n  getAllplant() {\r\n    api(\"GET\", \"supermix\", \"/plants\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data.results.plants.length);\r\n      if (res.data.results.plants.length > 0) {\r\n        let selectPlants = res.data.results.plants.map((post, index) => {\r\n          return (\r\n            <Option value={post.code} key={index}>\r\n              {post.name}\r\n            </Option>\r\n          );\r\n        });\r\n        this.setState({\r\n          selectPlants\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  clearSubCategory = () => {\r\n    this.setState({\r\n      subId: \"\"\r\n    });\r\n    this.getallRawMaterials();\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      visible,\r\n      loading,\r\n      errors,\r\n      code,\r\n      plant,\r\n      grade,\r\n      date,\r\n      target_strength,\r\n      water_cement_ratio,\r\n      water_binder_ratio,\r\n      SubCategory,\r\n      actual_grade\r\n    } = this.state;\r\n\r\n    const columns = [\r\n      { title: \"RawMaterial\", dataIndex: \"name\", key: \"name\", width: \"25%\" },\r\n      {\r\n        title: \"Nature\",\r\n        dataIndex: \"nature\",\r\n        key: \"Nature\",\r\n        width: \"25%\"\r\n      },\r\n      {\r\n        title: \"Category\",\r\n        dataIndex: \"materialCategoryName\",\r\n        key: \"materialCategoryName\",\r\n        width: \"25%\"\r\n      },\r\n      {\r\n        title: \"SubCategory\",\r\n        dataIndex: \"subCategoryName\",\r\n        key: \"subCategoryName\",\r\n        width: \"30%\"\r\n      }\r\n    ];\r\n\r\n    const rowSelection = {\r\n      onSelect: this.onSelectChange\r\n    };\r\n    console.log(this.state.editdataform);\r\n    console.log(this.state.mixProportionData);\r\n    return (\r\n      <div>\r\n        <PrimaryButton\r\n          onClick={this.showModal}\r\n          style={{\r\n            background: \"#001328\",\r\n            color: \"white\",\r\n            border: \"none\",\r\n            width: \"auto\",\r\n            marginLeft: \"-10px\"\r\n          }}\r\n        >\r\n          Add Mix Design\r\n        </PrimaryButton>\r\n        <Modal\r\n          width=\"1100px\"\r\n          visible={visible}\r\n          closable={false}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          footer={[\r\n            <Button key=\"back\" onClick={this.handleCancel}>\r\n              Return\r\n            </Button>,\r\n            <PrimaryButton\r\n              key=\"submit\"\r\n              loading={loading}\r\n              onClick={e => this.handleSubmit(e)}\r\n              style={{ background: \"#001328\", color: \"white\", border: \"none\" }}\r\n            >\r\n              Submit\r\n            </PrimaryButton>\r\n          ]}\r\n          title={\r\n            <MasterLevelFormTitle>\r\n              <p\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                {this.state.type === \"edit\"\r\n                  ? \"Edit MixDesign\"\r\n                  : \"Add MixDesign\"}\r\n              </p>\r\n              <Icon\r\n                type=\"close-circle\"\r\n                onClick={this.handleCancel}\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              />\r\n            </MasterLevelFormTitle>\r\n          }\r\n        >\r\n          <MasterLevelForm>\r\n            {/* Form Area */}\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexBasis: \"450px\",\r\n                flexWrap: \"wrap\",\r\n                justifyContent: \"flex-start\",\r\n                height: \"500px\"\r\n              }}\r\n            >\r\n              {/* Code */}\r\n              <div className=\"input_wrapper\">\r\n                <label for=\"code\" className=\"label\">\r\n                  Code:\r\n                </label>\r\n                <Input\r\n                  id=\"code\"\r\n                  name=\"code\"\r\n                  placeholder=\"Enter the Code \"\r\n                  value={code}\r\n                  onChange={this.handleChange}\r\n                  disabled={this.state.type === \"add\" ? false : true}\r\n                />\r\n                {errors.code.length > 0 && (\r\n                  <div style={error}>{errors.code}</div>\r\n                )}\r\n                <div style={{ height: \"12px\" }}></div>\r\n              </div>\r\n\r\n              {/* Plant Name */}\r\n\r\n              {/* Place */}\r\n              <div className=\"input_wrapper\">\r\n                <label for=\"plant\" className=\"label\">\r\n                  Plant\r\n                </label>\r\n\r\n                <Select\r\n                  placeholder=\" Plant\"\r\n                  id=\"plant\"\r\n                  name=\"plant \"\r\n                  style={{ width: \"180px\" }}\r\n                  value={plant}\r\n                  onChange={this.handleSelect}\r\n                >\r\n                  {this.state.selectPlants}\r\n                </Select>\r\n                {errors.plant.length > 0 && (\r\n                  <div style={error}>{errors.plant}</div>\r\n                )}\r\n                <div style={{ height: \"12px\" }}></div>\r\n              </div>\r\n\r\n              <div className=\"input_wrapper\">\r\n                <label for=\"grade\" className=\"label\">\r\n                  Grade\r\n                </label>\r\n\r\n                <Input\r\n                  id=\"grade\"\r\n                  name=\"grade\"\r\n                  placeholder=\"Enter Grade\"\r\n                  style={{ width: \"180px\" }}\r\n                  value={grade}\r\n                  onChange={this.handleChange}\r\n                />\r\n                {errors.grade.length > 0 && (\r\n                  <div style={error}>{errors.grade}</div>\r\n                )}\r\n                <div style={{ height: \"12px\" }}></div>\r\n              </div>\r\n              <div className=\"input_wrapper\">\r\n                <label for=\"grade\" className=\"label\">\r\n                  Actual Grade\r\n                </label>\r\n\r\n                <Input\r\n                  id=\"actual_grade\"\r\n                  name=\"actual_grade\"\r\n                  placeholder=\"Enter Grade\"\r\n                  style={{ width: \"180px\" }}\r\n                  value={actual_grade}\r\n                  onChange={this.handleChange}\r\n                />\r\n                {errors.actual_grade.length > 0 && (\r\n                  <div style={error}>{errors.actual_grade}</div>\r\n                )}\r\n                <div style={{ height: \"12px\" }}></div>\r\n              </div>\r\n\r\n              {/* Place */}\r\n              <div className=\"input_wrapper\">\r\n                <label for=\"date\" className=\"label\">\r\n                  Date\r\n                </label>\r\n\r\n                <DatePicker\r\n                  id=\"date\"\r\n                  name=\"date\"\r\n                  format={\"DD-MM-YYYY\"}\r\n                  showToday\r\n                  // disabledDate={this.disabledDate()}\r\n                  value={date}\r\n                  onChange={(dateString, field) =>\r\n                    this.handleDates(\"date\", dateString, field)\r\n                  }\r\n                  // disabledTime={() => Date.now()}\r\n                />\r\n              </div>\r\n              <div className=\"input_wrapper\">\r\n                <label for=\"code\" className=\"label\">\r\n                  Target Slump:\r\n                </label>\r\n                <Input\r\n                  id=\"target_strength\"\r\n                  name=\"target_strength\"\r\n                  placeholder=\"Enter the slump    \"\r\n                  value={target_strength}\r\n                  onChange={this.handleChange}\r\n                />\r\n                {errors.target_strength.length > 0 && (\r\n                  <div style={error}>{errors.target_strength}</div>\r\n                )}\r\n                <div style={{ height: \"12px\" }}></div>\r\n              </div>\r\n\r\n              <div className=\"input_wrapper\">\r\n                <label for=\"code\" className=\"label\">\r\n                  Water Cement Ratio:\r\n                </label>\r\n                <Input\r\n                  id=\"water_cement_ratio\"\r\n                  name=\"water_cement_ratio\"\r\n                  placeholder=\"Enter the ratio \"\r\n                  value={water_cement_ratio}\r\n                  onChange={this.handleChange}\r\n                  disabled\r\n                />\r\n              </div>\r\n              <div className=\"input_wrapper\">\r\n                <label for=\"code\" className=\"label\">\r\n                  Water Binder Ratio:\r\n                </label>\r\n                <Input\r\n                  id=\"water_binder_ratio\"\r\n                  name=\"water_binder_ratio\"\r\n                  placeholder=\"Enter the ratio \"\r\n                  value={water_binder_ratio}\r\n                  onChange={this.handleChange}\r\n                  disabled\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexBasis: \"500px\",\r\n                flexWrap: \"wrap\",\r\n                justifyContent: \"flex-start\"\r\n              }}\r\n            >\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={this.showModal1}\r\n                disabled={\r\n                  this.state.type === \"add\"\r\n                    ? this.state.disableAddQuantity\r\n                    : false\r\n                }\r\n              >\r\n                {this.state.type === \"edit\" ? \"Edit Quantity\" : \" Add Quantity\"}\r\n              </Button>\r\n              &nbsp; &nbsp; &nbsp;\r\n              <div>\r\n                <Select\r\n                  placeholder=\"Select SubCategory\"\r\n                  defaultActiveFirstOption\r\n                  id=\"subCategory\"\r\n                  name=\"subCategory\"\r\n                  style={{ width: \"180px\" }}\r\n                  value={SubCategory}\r\n                  onChange={this.handleSubSelect}\r\n                >\r\n                  {this.state.SubCategoriesselect}\r\n                </Select>\r\n              </div>\r\n              &nbsp; &nbsp; &nbsp;\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={this.clearSubCategory}\r\n                hidden={this.state.subId ? false : true}\r\n              >\r\n                Clear\r\n              </Button>\r\n              {this.state.type === \"edit\" ? (\r\n                \"\"\r\n              ) : (\r\n                <div>\r\n                  <Table\r\n                    style={{ width: \"500px\" }}\r\n                    columns={columns}\r\n                    dataSource={this.state.datalist}\r\n                    size=\"middle\"\r\n                    scroll={{ y: 400 }}\r\n                    rowSelection={rowSelection}\r\n                    pagination={false}\r\n                  />\r\n                </div>\r\n              )}\r\n              <p style={{ color: \"red\" }}>{this.state.errormgs}</p>\r\n            </div>\r\n          </MasterLevelForm>\r\n        </Modal>\r\n\r\n        {/* Quantity add modal */}\r\n        <Modal\r\n          title=\" Add RawMaterial Quantity\"\r\n          visible={this.state.visible1}\r\n          onOk={this.setJson}\r\n          onCancel={this.handleCancel1}\r\n          footer={false}\r\n        >\r\n          <Row>\r\n            <Col span={12}>\r\n              <FormGenerator\r\n                form={\r\n                  this.state.type === \"add\"\r\n                    ? JSON.parse(this.x())\r\n                    : [this.state.editform, ...JSON.parse(this.x())]\r\n                }\r\n                defaultValues={\r\n                  this.state.type === \"add\"\r\n                    ? {}\r\n                    : this.state.editmixProposionData\r\n                }\r\n                submitButton={{\r\n                  text: \"Submit\",\r\n                  className: \"submit\"\r\n                }}\r\n                onChange={form => {\r\n                  this.quantityChange(form);\r\n                }}\r\n                onSubmit={form => {\r\n                  this.setJson(form.data.form);\r\n                  console.log(form);\r\n                }}\r\n                inputStyle={instyle}\r\n                buttonStyle={btstyle}\r\n                formDriction=\"column\"\r\n              />\r\n            </Col>\r\n            <Col span={12}>\r\n              <FormGenerator\r\n                className=\"input_wrapper\"\r\n                form={\r\n                  this.state.type === \"add\"\r\n                    ? JSON.parse(this.y())\r\n                    : [this.state.editunit, ...JSON.parse(this.y())]\r\n                }\r\n                onChange={form => {\r\n                  this.renderSubmit(form.data.form);\r\n                }}\r\n                onSubmit={form => {\r\n                  console.log(form);\r\n                }}\r\n                inputStyle={instyle}\r\n                lableStyle={lableStyle}\r\n                formStyle={this.state.type === \"add\" ? fostyle : editfostyle}\r\n                formDriction=\"column\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  //getting the global redux state to get the data from the EditPlantReducer.js\r\n  return {\r\n    visible: state.plantLevelReducers.EditPlantReducer.visible,\r\n    type: state.plantLevelReducers.EditPlantReducer.type,\r\n    editPlantData: state.plantLevelReducers.EditPlantReducer.editPlantData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setMixDesignVisibility: () => {\r\n      dispatch({ type: DISABLE_EDIT_MODE });\r\n      console.log(\"edit modal closed\");\r\n    }\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddMixDesignForm);\r\nconst editfostyle = {\r\n  marginTop: \"-30px\",\r\n  marginLeft: \"150px\",\r\n  display: \"flex\",\r\n  flexDirection: \"row\",\r\n  width: \"300px\",\r\n  height: \"auto\",\r\n  flexWrap: \"wrap\",\r\n  justifyContent: \"space-around\",\r\n  position: \"relative\",\r\n  // overflowY: \"scroll\",\r\n  scrollBehavior: \"smooth\"\r\n};\r\nconst fostyle = {\r\n  marginTop: \"1px\",\r\n  display: \"flex\",\r\n  flexDirection: \"row\",\r\n  width: \"300px\",\r\n  height: \"auto\",\r\n  flexWrap: \"wrap\",\r\n  justifyContent: \"space-around\",\r\n  position: \"relative\",\r\n  // overflowY: \"scroll\",\r\n  scrollBehavior: \"smooth\"\r\n};\r\nconst instyle = {\r\n  width: \"100px\",\r\n  boxShadow: \"1px 2px 8px 1px rgba(0,0,0,0.08)\"\r\n};\r\n\r\nconst lableStyle = {\r\n  width: \"40px\",\r\n  height: \"32px\"\r\n};\r\n\r\nconst btstyle = {\r\n  marginLeft: \"380px\"\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { FlexContainer } from \"../../../styledcomponents/container/FlexGrid\";\r\n\r\nimport Paragraph from \"antd/lib/typography/Paragraph\";\r\nimport AddMixDesignForm from \"../mix/AddMixDesignForm\";\r\n\r\nconst style = {\r\n  fontSize: \"medium\",\r\n  fontWeight: \"600\",\r\n  alignSelf: \"auto\",\r\n  padding: \"10px\"\r\n};\r\n\r\nexport default class MixDesignTitle extends Component {\r\n  render() {\r\n    return (\r\n      <FlexContainer titles leveltitles>\r\n        <Paragraph style={style}>Mix Design</Paragraph>\r\n        <AddMixDesignForm reload={this.props.reload} />\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\nimport { Icon, Popconfirm, Divider, Modal, Table } from \"antd\";\r\nimport { AntTable } from \"../../../styledcomponents/table/AntTabl\";\r\nimport MixDesignTitle from \"../titles/MixDesignTitle\";\r\nimport { api } from \"../../../services/AxiosService\";\r\nimport Notification from \"../../../Constant/Notification\";\r\nimport { SWITCH_TO_EDIT_MODE } from \"../../../../redux/action/master/plantlevel/PlantLevel\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ManageMixDesignForm extends Component {\r\n  state = {\r\n    searchText: \"\",\r\n    visible: false,\r\n    size: \"small\",\r\n    datalist: \"\",\r\n    mixCode: \"\",\r\n    MixDesignProportionData: \"\"\r\n  };\r\n\r\n  componentWillMount() {\r\n    if (window.screen.width > 1900) {\r\n      console.log(\"hooray\");\r\n      this.setState({\r\n        size: \"large\"\r\n      });\r\n    } else if (window.screen.width < 1440) {\r\n      this.setState({\r\n        size: \"small\"\r\n      });\r\n    }\r\n  }\r\n\r\n  showModal = code => {\r\n    this.getMixDesignProportion(code);\r\n    this.setState({\r\n      visible: true,\r\n      mixCode: code\r\n    });\r\n  };\r\n\r\n  handleOk = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleCancel = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleChange = (pagination, filters, sorter) => {\r\n    console.log(\"Various parameters\", pagination, filters, sorter);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getallMixdesigns();\r\n  }\r\n\r\n  onChange(pageNumber) {\r\n    console.log(\"Page: \", pageNumber);\r\n  }\r\n  getMixDesignProportion = code => {\r\n    api(\r\n      \"GET\",\r\n      \"supermix\",\r\n      \"/mix-design-proportion/mix-design\",\r\n      \"\",\r\n      \"\",\r\n      code\r\n    ).then(res => {\r\n      console.log(JSON.stringify(res.data.results.mixDesignProportions));\r\n\r\n      this.setState({\r\n        MixDesignProportionData: res.data.results.mixDesignProportions\r\n      });\r\n    });\r\n  };\r\n\r\n  getallMixdesigns = () => {\r\n    api(\"GET\", \"supermix\", \"/mix-designs\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data);\r\n\r\n      this.setState({\r\n        datalist: res.data.results.mixDesigns\r\n      });\r\n    });\r\n  };\r\n  onConfirmdelete(id) {\r\n    console.log(id);\r\n\r\n    api(\"DELETE\", \"supermix\", \"/mix-design\", \"\", \"\", id).then(res => {\r\n      console.log(res.data);\r\n      this.getallMixdesigns();\r\n      Notification(\"success\", res.data.message);\r\n    });\r\n    console.log(this.state.id);\r\n  }\r\n\r\n  deleteProportionData(record) {\r\n    console.log(record);\r\n    console.log(this.state.mixCode);\r\n    api(\"DELETE\", \"supermix\", \"/mix-design-proportion\", \"\", \"\", record.id).then(\r\n      res => {\r\n        console.log(res.data);\r\n        this.getMixDesignProportion(this.state.mixCode);\r\n        Notification(\"success\", res.data.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"Code\",\r\n        dataIndex: \"code\",\r\n        key: \"code\"\r\n      },\r\n      {\r\n        title: \"TargetSlump\",\r\n        dataIndex: \"targetSlump\",\r\n        key: \"targetSlump\"\r\n      },\r\n      {\r\n        title: \"Plant\",\r\n        dataIndex: \"plantName\",\r\n        key: \"plantName\"\r\n      },\r\n      {\r\n        title: \"TargetGrade\",\r\n        dataIndex: \"targetGrade\",\r\n        key: \"targetGrade\"\r\n      },\r\n\r\n      {\r\n        title: \"Date\",\r\n        dataIndex: \"date\",\r\n        key: \"date\"\r\n      },\r\n\r\n      {\r\n        title: \"WaterCementRatio\",\r\n        dataIndex: \"waterCementRatio\",\r\n        key: \"waterCementRatio\"\r\n      },\r\n      {\r\n        title: \"WaterBinderRatio\",\r\n        dataIndex: \"waterBinderRatio\",\r\n        key: \"waterBinderRatio\"\r\n      },\r\n      {\r\n        title: \"Raw Material\",\r\n        dataIndex: \"rawmaterial\",\r\n        key: \"rawmaterial\",\r\n        render: (text, record = this.state.datalist) => (\r\n          <a>\r\n            <Icon\r\n              type=\"form\"\r\n              style={{ color: \"green\" }}\r\n              onClick={this.showModal.bind(this, record.code)}\r\n            />\r\n          </a>\r\n        )\r\n      },\r\n\r\n      {\r\n        title: \"Edit & Delete\",\r\n        key: \"action\",\r\n        width: \"7%\",\r\n        render: (text, record = this.state.datalist) => (\r\n          <span>\r\n            <a>\r\n              <Icon\r\n                type=\"edit\"\r\n                onClick={this.props.passEditMixDesignToModal.bind(this, record)}\r\n              />\r\n            </a>\r\n            <Divider type=\"vertical\" />\r\n            <a>\r\n              <Popconfirm\r\n                title=\"Are you sure you want to Delete this?\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: \"red\" }} />\r\n                }\r\n                onConfirm={this.onConfirmdelete.bind(this, record.code)}\r\n              >\r\n                <a href=\"#\">\r\n                  <Icon type=\"delete\" style={{ color: \"red\" }}></Icon>\r\n                </a>\r\n              </Popconfirm>\r\n            </a>\r\n          </span>\r\n        )\r\n      }\r\n    ];\r\n\r\n    const columns1 = [\r\n      {\r\n        title: \"MaterialName\",\r\n        dataIndex: \"rawMaterialName\",\r\n        key: \"materialName\"\r\n      },\r\n      {\r\n        title: \"Quantity\",\r\n        dataIndex: \"quantity\",\r\n        key: \"quantity\"\r\n      },\r\n      {\r\n        title: \"Unit\",\r\n        dataIndex: \"unit\",\r\n        key: \"unitName\"\r\n      },\r\n      {\r\n        title: \"Edit & Delete\",\r\n        key: \"action\",\r\n        width: \"20%\",\r\n        render: (text, record = this.state.MixDesignProportionData) => (\r\n          <span>\r\n            {/* <a>\r\n              <Icon\r\n                type=\"edit\"\r\n                // onClick={this.props.passEditManageCategoryToModal.bind(\r\n                //   this,\r\n                //   record\r\n                // )}\r\n              />\r\n            </a>\r\n            <Divider type=\"vertical\" /> */}\r\n            <a>\r\n              <Popconfirm\r\n                title=\"Are you sure you want to Delete this?\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: \"red\" }} />\r\n                }\r\n                onConfirm={this.deleteProportionData.bind(this, record)}\r\n              >\r\n                <a href=\"#\">\r\n                  <Icon type=\"delete\" style={{ color: \"red\" }}></Icon>\r\n                </a>\r\n              </Popconfirm>\r\n            </a>\r\n          </span>\r\n        )\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <div>\r\n        <AntTable\r\n          length\r\n          title={() => <MixDesignTitle reload={this.getallMixdesigns} />}\r\n          columns={columns}\r\n          dataSource={this.state.datalist}\r\n          onChange={this.handleChange}\r\n          pagination={{ defaultPageSize: 8 }}\r\n          size={this.state.size}\r\n        />\r\n        <Modal\r\n          title=\" RawMaterial Details\"\r\n          visible={this.state.visible}\r\n          onOk={this.setJson}\r\n          onCancel={this.handleCancel}\r\n          footer={true}\r\n          width=\"600px\"\r\n        >\r\n          <Table\r\n            // showHeader={false}\r\n            // title={() => <MixDesignTitle />}\r\n            columns={columns1}\r\n            dataSource={this.state.MixDesignProportionData}\r\n            pagination={{ defaultPageSize: 8 }}\r\n            // size={this.state.size}\r\n          />\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // if this function dispatches modal will be shown and the data will be drawn :)\r\n    passEditMixDesignToModal: record => {\r\n      //this payload is the data we pass into redux which is in the row which we clicked\r\n      dispatch({ type: SWITCH_TO_EDIT_MODE, payload: record });\r\n      console.log(record);\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ManageMixDesignForm);\r\n","export const ROUTE_TO_MIX_DESIGN = \"ROUTE_TO_MIX_DESIGN\";\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Icon } from \"antd\";\r\n\r\nimport BasicCard from \"../../styledcomponents/card/BasicCard\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  TileArea,\r\n  TileAreaText,\r\n  TileAreaAction\r\n} from \"../../styledcomponents/card/TileArea\";\r\nimport { ROUTE_TO_MIX_DESIGN } from \"../../../redux/action/master/mixdesign/MixDesign\";\r\n\r\nclass MixDesignTileArea extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      status: true\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <TileArea>\r\n        <BasicCard\r\n          finalproduct\r\n          tileareacard\r\n          size=\"small\"\r\n          hoverable={true}\r\n          onClick={this.props.routeToMixDesignMaster}\r\n        >\r\n          <TileAreaText>Mix Design</TileAreaText>\r\n          <TileAreaAction>\r\n            <Icon\r\n              filled\r\n              type=\"plus\"\r\n              style={{ color: \"red\", fontSize: \"22px\" }}\r\n            />\r\n          </TileAreaAction>\r\n        </BasicCard>\r\n      </TileArea>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapStateToProps = null;\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    routeToMixDesignMaster: () => {\r\n      dispatch({ type: ROUTE_TO_MIX_DESIGN });\r\n      console.log(\"route to mix design master click dispatched\");\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(MixDesignTileArea);\r\n","import React, { Component } from \"react\";\r\nimport { FlexContainer } from \"../../styledcomponents/container/FlexGrid\";\r\n\r\nimport ManageMixDesign from \"./mix/ManageMixDesignForm\";\r\nimport MixDesignTileArea from \"./MixDesignTitleArea\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass MixDesignMaster extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      status: true,\r\n      visible: this.props.visible\r\n    };\r\n  }\r\n\r\n  controlstatus = status => {\r\n    console.log(status);\r\n  };\r\n\r\n  renderComponents = () => {\r\n    if (this.props.routepath === \"/mixdesignmaster\") {\r\n      return <ManageMixDesign />;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <FlexContainer leveltileareafixed>\r\n        <MixDesignTileArea />\r\n        {this.renderComponents()}\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    routepath: state.mixDesignLevelReducers.RoutingBetweenMixDesign.routepath\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MixDesignMaster);\r\n","export const ROUTE_TO_INCOMING_SAMPLE = \"ROUTE_TO_INCOMING_SAMPLE\";\r\nexport const ROUTE_TO_PROCESS_SAMPLE = \"ROUTE_TO_PROCESS_SAMPLE\";\r\nexport const ROUTE_TO_FINISH_PRODUCT_SAMPLE = \"ROUTE_TO_FINISH_PRODUCT_SAMPLE\";\r\nexport const ROUTE_TO_MATERIAL_LOAD_SAMPLE = \"ROUTE_TO_MATERIAL_LOAD_SAMPLE\";\r\n","import React, { Component } from \"react\";\r\nimport { Icon } from \"antd\";\r\nimport BasicCard from \"../styledcomponents/card/BasicCard\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  ROUTE_TO_INCOMING_SAMPLE,\r\n  ROUTE_TO_PROCESS_SAMPLE,\r\n  ROUTE_TO_FINISH_PRODUCT_SAMPLE,\r\n  ROUTE_TO_MATERIAL_LOAD_SAMPLE\r\n} from \"../../redux/action/sample/Sample\";\r\nimport {\r\n  TileArea,\r\n  TileAreaText,\r\n  TileAreaAction\r\n} from \"../styledcomponents/card/TileArea\";\r\n\r\nclass SampleTitleArea extends Component {\r\n  render() {\r\n    return (\r\n      <TileArea>\r\n        <BasicCard\r\n          finalproduct\r\n          tileareacard\r\n          size=\"small\"\r\n          hoverable={true}\r\n          onClick={this.props.routeToIncomingSample}\r\n        >\r\n          <TileAreaText unit>Incoming Sample</TileAreaText>\r\n          <TileAreaAction>\r\n            <Icon\r\n              filled\r\n              type=\"plus\"\r\n              style={{ color: \"red\", fontSize: \"22px\" }}\r\n            />\r\n          </TileAreaAction>\r\n        </BasicCard>\r\n        <BasicCard\r\n          finalproduct\r\n          tileareacard\r\n          size=\"small\"\r\n          hoverable={true}\r\n          onClick={this.props.routeToProcessSample}\r\n        >\r\n          <TileAreaText unit>Process Sample</TileAreaText>\r\n          <TileAreaAction>\r\n            <Icon\r\n              filled\r\n              type=\"plus\"\r\n              style={{ color: \"red\", fontSize: \"22px\" }}\r\n            />\r\n          </TileAreaAction>\r\n        </BasicCard>\r\n\r\n        {/* <BasicCard\r\n          finalproduct\r\n          tileareacard\r\n          size='small'\r\n          hoverable={true}\r\n          onClick={this.props.routeToMaterialLoadSample}\r\n        >\r\n          <TileAreaText unit>Material Load</TileAreaText>\r\n          <TileAreaAction>\r\n            <Icon\r\n              filled\r\n              type='plus'\r\n              style={{ color: \"red\", fontSize: \"22px\" }}\r\n            />\r\n          </TileAreaAction>\r\n        </BasicCard> */}\r\n        <BasicCard\r\n          finalproduct\r\n          tileareacard\r\n          size=\"small\"\r\n          hoverable={true}\r\n          onClick={this.props.routeToFinishProductSample}\r\n        >\r\n          <TileAreaText unit>FinishProduct Sample</TileAreaText>\r\n          <TileAreaAction>\r\n            <Icon\r\n              filled\r\n              type=\"plus\"\r\n              style={{ color: \"red\", fontSize: \"22px\" }}\r\n            />\r\n          </TileAreaAction>\r\n        </BasicCard>\r\n      </TileArea>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    routeToIncomingSample: () => {\r\n      dispatch({ type: ROUTE_TO_INCOMING_SAMPLE });\r\n      console.log(\"ROUTE_TO_INCOMING_SAMPLE click dispatched\");\r\n    },\r\n    routeToProcessSample: () => {\r\n      dispatch({ type: ROUTE_TO_PROCESS_SAMPLE });\r\n      console.log(\"ROUTE_TO_PROCESS_SAMPLE click dispatched\");\r\n    },\r\n    routeToFinishProductSample: () => {\r\n      dispatch({ type: ROUTE_TO_FINISH_PRODUCT_SAMPLE });\r\n      console.log(\"ROUTE_TO_FINISH_PRODUCT_SAMPLE click dispatched\");\r\n    },\r\n    routeToMaterialLoadSample: () => {\r\n      dispatch({ type: ROUTE_TO_MATERIAL_LOAD_SAMPLE });\r\n      console.log(\"ROUTE_TO_MATERIAL_LOAD_SAMPLE click dispatched\");\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SampleTitleArea);\r\n","import React, { Component } from \"react\";\r\nimport { Input, Modal, Icon, Select, Button} from \"antd\";\r\n\r\nimport { PrimaryButton } from \"../../styledcomponents/button/button\";\r\nimport {\r\n  MasterLevelFormTitle,\r\n  MasterLevelForm\r\n} from \"../../styledcomponents/form/MasterLevelForms\";\r\nimport { DISABLE_EDIT_MODE } from \"../../../redux/action/master/plantlevel/PlantLevel\";\r\nimport Notificationfuc from \"../../Constant/Notification\";\r\nimport { api } from \"../../services/AxiosService\";\r\nimport HandelError from \"../../Constant/HandleError\";\r\nimport { connect } from \"react-redux\";\r\nconst { Option } = Select;\r\n\r\nconst error = {\r\n  color: \"red\",\r\n  fontSize: \"12px\",\r\n  width: \"160px\",\r\n  height: \"2px\"\r\n};\r\n\r\nfunction onBlur() {\r\n  console.log(\"blur\");\r\n}\r\n\r\nfunction onFocus() {\r\n  console.log(\"focus\");\r\n}\r\n\r\nfunction onSearch(val) {\r\n  console.log(\"search:\", val);\r\n}\r\nclass AddProcessSample extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      formValid: false,\r\n      errorCount: 0,\r\n      errors: {\r\n        code: \"\",\r\n        incoming_sample: \"\",\r\n        quantity: \"\",\r\n        unit: \"\"\r\n      },\r\n      loading: false,\r\n      visible: false,\r\n      processSample_code: \"\",\r\n      incoming_sample_id: \"\",\r\n      material_id: \"\",\r\n      processSample_quantity: \"\",\r\n      unit_id: \"\",\r\n      errormgs: \"\",\r\n      type: \"add\",\r\n      incomingSampleEdit: \"\",\r\n      materialEdit: \"\",\r\n      unitEdit: \"\"\r\n    };\r\n  }\r\n\r\n  validateForm = errors => {\r\n    let valid;\r\n    Object.values(errors).forEach(\r\n      val => val.length > 1 && (valid = false),\r\n      (valid = true)\r\n    );\r\n    // this.setState({\r\n    //   formValid: valid\r\n    // })\r\n    console.log(valid);\r\n\r\n    return valid;\r\n  };\r\n\r\n  countErrors = errors => {\r\n    let count = 0;\r\n    Object.values(errors).forEach(val => val.length > 0 && (count = count + 1));\r\n\r\n    // this.setState({\r\n    //   errorCount: count\r\n    // })\r\n    console.log(count);\r\n\r\n    return count;\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n  componentWillReceiveProps(nextProps) {\r\n    console.log(nextProps);\r\n\r\n    this.setState({\r\n      visible: nextProps.visible,\r\n      processSample_code: nextProps.editPlantData.code,\r\n      incoming_sample_id: nextProps.editPlantData.incomingSample_code,\r\n      processSample_quantity: nextProps.editPlantData.quantity,\r\n      unit_id: nextProps.editPlantData.unitId,\r\n      type: nextProps.type\r\n    });\r\n  }\r\n  handleOk = () => {\r\n    this.setState({ loading: true });\r\n    setTimeout(() => {\r\n      this.setState({ loading: false, visible: false });\r\n    }, 3000);\r\n  };\r\n\r\n  handleCancel = () => {\r\n    if (this.state.type === \"edit\") {\r\n      this.props.setProessVisiblity();\r\n    }\r\n\r\n    this.setState({\r\n      visible: false,\r\n      type: \"add\",\r\n      processSample_code: \"\",\r\n      incoming_sample_id: \"\",\r\n      material_id: \"\",\r\n      processSample_quantity: \"\",\r\n      unit_id: \"\",\r\n      errormgs: \"\"\r\n    });\r\n  };\r\n\r\n  // handleSubmit = e => {\r\n  //   console.log(e);\r\n  //   console.log(this.props.form);\r\n  //   e.preventDefault();\r\n  //   this.props.form.validateFields((err, values) => {\r\n  //     if (!err) {\r\n  //       console.log(\"Received values of form: \", values);\r\n  //       this.setState({ loading: true });\r\n  //       setTimeout(() => {\r\n  //         this.setState({ loading: false, visible: false });\r\n  //       }, 3000);\r\n  //     }\r\n  //   });\r\n  // };\r\n\r\n  handleChange = (event, field) => {\r\n    this.setState({ [field]: event.target.value });\r\n    this.setState({ errormgs: \"\" });\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    let errors = this.state.errors;\r\n    // console.log(name + \" is \\t\" + value);\r\n    switch (name) {\r\n      case \"processSample_code\":\r\n        errors.code =\r\n          value.length === 0\r\n            ? \"Code can't be empty\"\r\n            : value.length < 1\r\n            ? \"Code must be one characters long!\"\r\n            : \"\";\r\n        break;\r\n      case \"incoming_sample_id\":\r\n        errors.incoming_sample =\r\n          value.length === 0\r\n            ? \"Incoming Sample can't be empty\"\r\n            : value.length < 3\r\n            ? \"Incoming Sample \\n must be 3 characters long!\"\r\n            : value.replace(/^[a-zA-Z-,]+(\\s{0,1}[a-zA-Z-, ])*$/, \"\")\r\n            ? \"Incoming Sample allow only letters\"\r\n            : \"\";\r\n        break;\r\n\r\n      case \"processSample_quantity\":\r\n        errors.quantity = isNaN(value)\r\n          ? `Quantity must be a number`\r\n          : value.length === 0\r\n          ? \"Quantity  can't be empty\"\r\n          : \"\";\r\n        break;\r\n      case \"unit_id\":\r\n        errors.unit = isNaN(value)\r\n          ? `Unit must be a number`\r\n          : value.length === 0\r\n          ? \" Unit  can't be empty\"\r\n          : \"\";\r\n\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ errors, [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (\r\n      this.state.processSample_code.length === 0 &&\r\n      this.state.incoming_sample_id.length === 0 &&\r\n      this.state.processSample_quantity.length === 0 &&\r\n      this.state.unit_id.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          code: \"Code can't be empty\",\r\n          incoming_sample: \"Incoming Sample can't be empty\",\r\n\r\n          quantity: \"Quantity can't be empty\",\r\n          unit: \"Remain Quantity can't be empty\"\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors)\r\n      });\r\n    } else if (\r\n      this.state.processSample_code.length === 0 &&\r\n      this.state.errors.code.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          code: this.state.errors.code || \"Code can't be empty\",\r\n          incoming_sample: this.state.errors.incoming_sample,\r\n\r\n          quantity: this.state.errors.quantity,\r\n          unit: this.state.errors.unit\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors)\r\n      });\r\n    } else if (\r\n      this.state.incoming_sample_id.length === 0 &&\r\n      this.state.errors.incoming_sample.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          code: this.state.errors.code,\r\n          incoming_sample:\r\n            this.state.errors.incoming_sample ||\r\n            \"Incoming Sample can't be empty\",\r\n\r\n          quantity: this.state.errors.quantity,\r\n          unit: this.state.errors.unit\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors)\r\n      });\r\n    } else if (\r\n      this.state.processSample_quantity.length === 0 &&\r\n      this.state.errors.quantity.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          code: this.state.errors.code,\r\n          incoming_sample: this.state.errors.incoming_sample,\r\n\r\n          quantity: this.state.errors.quantity || \"Quantity can't be empty\",\r\n          unit: this.state.errors.unit\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors)\r\n      });\r\n    } else if (\r\n      this.state.unit_id.length === 0 &&\r\n      this.state.errors.unit.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          code: this.state.errors.code,\r\n          incoming_sample: this.state.errors.incoming_sample,\r\n\r\n          quantity: this.state.errors.quantity,\r\n          unit: this.state.errors.unit || \"Unit can't be empty\"\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors)\r\n      });\r\n    } else if (\r\n      this.state.errors.code.length === 0 &&\r\n      this.state.errors.incoming_sample.length === 0 &&\r\n      this.state.errors.quantity.length === 0 &&\r\n      this.state.errors.unit.length === 0\r\n    ) {\r\n      console.log(\"form is valid\");\r\n      console.log(this.state.errors);\r\n      this.setState({ formValid: this.validateForm(this.state.errors) });\r\n      this.setState({ errorCount: this.countErrors(this.state.errors) });\r\n      console.log(this.state.formValid);\r\n      console.log(this.state.errorCount);\r\n\r\n      if (this.state.type === \"add\") {\r\n        const data = {\r\n          code: this.state.processSample_code,\r\n          incomingSampleCode: this.state.incoming_sample_id,\r\n\r\n          quantity: this.state.processSample_quantity,\r\n          unitId: this.state.unit_id\r\n        };\r\n        console.log(data);\r\n        api(\"POST\", \"supermix\", \"/process-sample\", \"\", data, \"\")\r\n          .then(\r\n            res => {\r\n              console.log(res.data);\r\n              if (res.data.status === \"VALIDATION_FAILURE\") {\r\n                console.log(\"add\");\r\n                this.responeserror(res.data.results.name.message);\r\n              } else {\r\n                Notificationfuc(\"success\", res.data.message);\r\n                this.props.reload();\r\n                this.setState({ loading: true });\r\n                this.setState({\r\n                  processSample_code: \"\",\r\n                  incoming_sample_id: \"\",\r\n                  material_id: \"\",\r\n                  processSample_quantity: \"\",\r\n                  unit_id: \"\",\r\n                  errormgs: \"\"\r\n                });\r\n                setTimeout(() => {\r\n                  this.setState({ loading: false, visible: false });\r\n                });\r\n              }\r\n            },\r\n            error => {\r\n              this.setState({\r\n                errormgs: error.validationFailures[0]\r\n              });\r\n              console.log(\"DEBUG34: \", error);\r\n              console.log(HandelError(error.validationFailures[0]));\r\n            }\r\n          )\r\n          .catch(error => {\r\n            this.setState({\r\n              // errormgs: \"Plant Name Exist\"\r\n            });\r\n            console.log(error);\r\n          });\r\n      } else {\r\n        const data = {\r\n          code: this.state.processSample_code,\r\n          incomingSampleCode: this.state.incoming_sample_id,\r\n\r\n          quantity: this.state.processSample_quantity,\r\n          unitId: this.state.unit_id\r\n        };\r\n        console.log(data);\r\n        api(\"PUT\", \"supermix\", \"/process-sample\", \"\", data, \"\")\r\n          .then(\r\n            res => {\r\n              console.log(res.data);\r\n\r\n              if (res.data.status == \"VALIDATION_FAILURE\") {\r\n                console.log(\"update\");\r\n                this.responeserror(res.data.results.name.message);\r\n              } else {\r\n                Notificationfuc(\"success\", res.data.message);\r\n                this.props.reload();\r\n                this.setState({ loading: true });\r\n                this.setState({\r\n                  processSample_code: \"\",\r\n                  incoming_sample_id: \"\",\r\n                  material_id: \"\",\r\n                  processSample_quantity: \"\",\r\n                  unit_id: \"\",\r\n                  errormgs: \"\"\r\n                });\r\n                setTimeout(() => {\r\n                  this.setState({ loading: false, visible: false });\r\n                });\r\n              }\r\n            },\r\n            error => {\r\n              this.setState({\r\n                errormgs: error.validationFailures[0]\r\n              });\r\n              console.log(\"DEBUG34: \", error);\r\n              console.log(HandelError(error.validationFailures[0]));\r\n            }\r\n          )\r\n          .catch(error => {\r\n            // this.setState({\r\n            //   errormgs: \"Plant Name Exist\"\r\n            // });\r\n            // console.log(error.response.data);\r\n          });\r\n      }\r\n\r\n      console.log(\"form is valid\");\r\n    }\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n      processSample_code: \"\",\r\n      incoming_sample_id: \"\",\r\n      material_id: \"\",\r\n      processSample_quantity: \"\",\r\n      unit_id: \"\"\r\n    });\r\n  };\r\n\r\n  handleSelect = (name, value) => {\r\n    console.log(name);\r\n    console.log(value);\r\n    // handle select for  plant\r\n    if (name === \"incoming_sample_id\") {\r\n      this.setState({\r\n        incoming_sample_id: value,\r\n        incomingSampleEdit: value\r\n      });\r\n\r\n      if (value.length !== 0) {\r\n        this.setState({\r\n          errors: {\r\n            // code: this.state.errors.code,\r\n            code: this.state.errors.code,\r\n\r\n            incoming_sample: \"\",\r\n            quantity: this.state.errors.quantity,\r\n            unit: this.state.errors.unit\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    //handle select for designation\r\n\r\n    if (name === \"unit_id\") {\r\n      this.setState({\r\n        unit_id: value,\r\n        unitEdit: value\r\n      });\r\n\r\n      if (value.length !== 0) {\r\n        this.setState({\r\n          errors: {\r\n            // code: this.state.errors.code,\r\n            code: this.state.errors.code,\r\n\r\n            incoming_sample: this.state.errors.incoming_sample,\r\n            quantity: this.state.errors.quantity,\r\n            unit: \"\"\r\n          }\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  //dropdown data\r\n  getAllincomingSample() {\r\n    api(\"GET\", \"supermix\", \"/incoming-sample/test-status\", \"\", \"\", \"PASS\").then(\r\n      res => {\r\n        console.log(res.data.results.incomingSample);\r\n        if (res.data.results.incomingSample.length > 0) {\r\n          let SelectIncomingSamples = res.data.results.incomingSample.map(\r\n            (post, index) => {\r\n              return (\r\n                <Option value={post.code} key={index}>\r\n                  {post.code}\r\n                </Option>\r\n              );\r\n            }\r\n          );\r\n          this.setState({\r\n            SelectIncomingSamples\r\n          });\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  getallMaterial = () => {\r\n    console.log(\"api\");\r\n\r\n    api(\"GET\", \"supermix\", \"/raw-materials\", \"\", \"\", \"\").then(res => {\r\n      console.log(res);\r\n\r\n      if (res.data.results.rawMaterial.length > 0) {\r\n        console.log(\"ggg\");\r\n        let SelectRaw = res.data.results.rawMaterial.map((post, index) => {\r\n          return (\r\n            <Option value={post.id} key={index}>\r\n              {post.name}\r\n            </Option>\r\n          );\r\n        });\r\n        this.setState({\r\n          SelectRaw\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  getallunit = () => {\r\n    api(\"GET\", \"supermix\", \"/units\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data);\r\n      if (res.data.results.units.length > 0) {\r\n        let SelectUnit = res.data.results.units.map((post, index) => {\r\n          return (\r\n            <Option value={post.id} key={index}>\r\n              {post.unit}\r\n            </Option>\r\n          );\r\n        });\r\n        this.setState({\r\n          SelectUnit\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    if (this.state.type === \"edit\") {\r\n      // we call the redux function to dispatch and delete all the global redux state to close the modal\r\n      this.props.setProessVisiblity();\r\n    }\r\n\r\n    this.setState({\r\n      visible: false,\r\n      formValid: false,\r\n      errors: {\r\n        code: \"\",\r\n        incoming_sample: \"\",\r\n        material: \"\",\r\n        quantity: \"\",\r\n        unit: \"\"\r\n      },\r\n      processSample_code: \"\",\r\n      incoming_sample_id: \"\",\r\n      processSample_quantity: \"\",\r\n      unit_id: \"\",\r\n      errormgs: \"\"\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getAllincomingSample();\r\n    this.getallMaterial();\r\n    this.getallunit();\r\n    console.log(this.props.screen);\r\n  }\r\n\r\n  render() {\r\n    const { visible } = this.state;\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <PrimaryButton\r\n          onClick={this.showModal}\r\n          style={{\r\n            background: \"#001328\",\r\n            color: \"white\",\r\n            border: \"none\",\r\n            width: \"auto\",\r\n            marginLeft: \"-10px\"\r\n          }}\r\n        >\r\n          Add Processing Sample\r\n        </PrimaryButton>\r\n        <Modal\r\n          width=\"500px\"\r\n          visible={visible}\r\n          okType=\"default\"\r\n          closable={false}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          footer={[\r\n            <Button key=\"back\" onClick={this.handleCancel}>\r\n              Return\r\n            </Button>,\r\n            <PrimaryButton\r\n              key=\"submit\"\r\n              // loading={loading}\r\n              onClick={this.handleSubmit}\r\n              style={{ background: \"#001328\", color: \"white\", border: \"none\" }}\r\n            >\r\n              Submit\r\n            </PrimaryButton>\r\n          ]}\r\n          title={\r\n            <MasterLevelFormTitle>\r\n              <p\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                Add Processing Sample\r\n              </p>\r\n              <Icon\r\n                type=\"close-circle\"\r\n                onClick={this.handleCancel}\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              />\r\n            </MasterLevelFormTitle>\r\n          }\r\n        >\r\n          <MasterLevelForm>\r\n            {/* Code */}\r\n            <div className=\"input_wrapper\">\r\n              <label for=\"processSample_code\" className=\"label\">\r\n                Code:\r\n              </label>\r\n\r\n              <Input\r\n                id=\"processSample_code\"\r\n                name=\"processSample_code\"\r\n                onChange={this.handleChange}\r\n                placeholder=\"Enter the Code\"\r\n                value={this.state.processSample_code}\r\n              />\r\n\r\n              {errors.code.length > 0 && <div style={error}>{errors.code}</div>}\r\n              {this.state.errormgs.message === \"proccesSample Code\" ? (\r\n                <div style={error}>{HandelError(this.state.errormgs)}</div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n\r\n            {/* Plant Name */}\r\n            <div className=\"input_wrapper\">\r\n              <label for=\"incoming_sample_id\" className=\"label\">\r\n                Incoming Sample:\r\n              </label>\r\n\r\n              <Select\r\n                showSearch\r\n                style={{ width: 180 }}\r\n                id=\"incoming_sample_id\"\r\n                name=\"incoming_sample_id\"\r\n                placeholder=\"Select a Incoming Sample\"\r\n                optionFilterProp=\"children\"\r\n                value={this.state.incoming_sample_id}\r\n                onChange={value =>\r\n                  this.handleSelect(\"incoming_sample_id\", value)\r\n                }\r\n                onFocus={onFocus}\r\n                onBlur={onBlur}\r\n                onSearch={onSearch}\r\n              >\r\n                {this.state.SelectIncomingSamples}\r\n              </Select>\r\n              {errors.incoming_sample.length > 0 && (\r\n                <div style={error}>{errors.incoming_sample}</div>\r\n              )}\r\n\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n\r\n            {/* T.P No */}\r\n            <div className=\"input_wrapper\">\r\n              <label for=\"processSample_quantity\" className=\"label\">\r\n                Quantity:\r\n              </label>\r\n\r\n              <Input\r\n                id=\"processSample_quantity\"\r\n                name=\"processSample_quantity\"\r\n                placeholder=\"Enter the Quantity\"\r\n                onChange={this.handleChange}\r\n                value={this.state.processSample_quantity}\r\n              />\r\n\r\n              {errors.quantity.length > 0 && (\r\n                <div style={error}>{errors.quantity}</div>\r\n              )}\r\n              {this.state.errormgs.message === \"proccesSample Code\" ? (\r\n                <div style={error}>{HandelError(this.state.errormgs)}</div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n\r\n            <div className=\"input_wrapper\">\r\n              <label for=\"unit\" className=\"label\">\r\n                Unit:\r\n              </label>\r\n\r\n              <Select\r\n                showSearch\r\n                style={{ width: 180 }}\r\n                id=\"unit_id\"\r\n                name=\"unit_id\"\r\n                placeholder=\"Select the Material\"\r\n                optionFilterProp=\"children\"\r\n                value={this.state.unitEdit}\r\n                onChange={value => this.handleSelect(\"unit_id\", value)}\r\n              >\r\n                {this.state.SelectUnit}\r\n              </Select>\r\n              {errors.unit.length > 0 && <div style={error}>{errors.unit}</div>}\r\n              {this.state.errormgs.message === \"proccesSample Code\" ? (\r\n                <div style={error}>{HandelError(this.state.errormgs)}</div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n          </MasterLevelForm>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  //getting the global redux state to get the data from the EditPlantReducer.js\r\n  return {\r\n    visible: state.plantLevelReducers.EditPlantReducer.visible,\r\n    type: state.plantLevelReducers.EditPlantReducer.type,\r\n    editPlantData: state.plantLevelReducers.EditPlantReducer.editPlantData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // setting visible to false if we close the modal .. and all state data will be deleted if this function is dispatched\r\n    setProessVisiblity: () => {\r\n      dispatch({ type: DISABLE_EDIT_MODE });\r\n      console.log(\"edit modal closed\");\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddProcessSample);\r\n","import React, { Component } from \"react\";\r\nimport { FlexContainer } from \"../../styledcomponents/container/FlexGrid\";\r\nimport { connect } from \"react-redux\";\r\nimport Paragraph from \"antd/lib/typography/Paragraph\";\r\nimport AddProcessSample from \"../process/AddProcessSample\";\r\n\r\nconst style = {\r\n  fontSize: \"medium\",\r\n  fontWeight: \"600\",\r\n  alignSelf: \"auto\",\r\n  textAlign: \"justify\",\r\n  padding: \"10px\",\r\n  height: \"25px\",\r\n  flexBasis: \"650px\"\r\n};\r\n\r\nclass ManageProcessSampleTitle extends Component {\r\n  render() {\r\n    return (\r\n      <FlexContainer titles leveltitles>\r\n        <Paragraph style={style}> Process Sample</Paragraph>\r\n\r\n        {/* <PrimaryButton\r\n          style={{\r\n            background: \"#001328\",\r\n            color: \"white\",\r\n            border: \"none\"\r\n          }}\r\n          href=\"#/samples/viewprocessstatus\"\r\n        >\r\n          View Test\r\n        </PrimaryButton> */}\r\n        <AddProcessSample reload={this.props.reload} />\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = null;\r\n\r\nconst mapDispatchToProps = null;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ManageProcessSampleTitle);\r\n","import React, { Component } from \"react\";\r\nimport { Icon, Popconfirm, Divider } from \"antd\";\r\nimport { AntTable } from \"../../styledcomponents/table/AntTabl\";\r\nimport ManageProcessSampleTitle from \"../titles/ManageProcessSampleTitle\";\r\nimport { api } from \"../../services/AxiosService\";\r\nimport { SWITCH_TO_EDIT_MODE } from \"../../../redux/action/master/plantlevel/PlantLevel\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ManageProcessSample extends Component {\r\n  state = {\r\n    filteredInfo: null,\r\n    sortedInfo: null,\r\n    searchText: \"\",\r\n    visible: false,\r\n    size: \"small\",\r\n    data: \"\"\r\n  };\r\n\r\n  componentWillMount() {\r\n    if (window.screen.width > 1900) {\r\n      console.log(\"hooray\");\r\n      this.setState({\r\n        size: \"large\"\r\n      });\r\n    } else if (window.screen.width < 1440) {\r\n      this.setState({\r\n        size: \"small\"\r\n      });\r\n    }\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  handleOk = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleCancel = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleChange = (pagination, filters, sorter) => {\r\n    console.log(\"Various parameters\", pagination, filters, sorter);\r\n    this.setState({\r\n      filteredInfo: filters,\r\n      sortedInfo: sorter\r\n    });\r\n  };\r\n\r\n  clearFilters = () => {\r\n    this.setState({ filteredInfo: null });\r\n  };\r\n\r\n  clearAll = () => {\r\n    this.setState({\r\n      filteredInfo: null,\r\n      sortedInfo: null\r\n    });\r\n  };\r\n\r\n  setAgeSort = () => {\r\n    this.setState({\r\n      sortedInfo: {\r\n        order: \"descend\",\r\n        columnKey: \"age\"\r\n      }\r\n    });\r\n  };\r\n\r\n  onChange(pageNumber) {\r\n    console.log(\"Page: \", pageNumber);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getallProcessSample();\r\n  }\r\n\r\n  getallProcessSample = () => {\r\n    const dataSample = [];\r\n    api(\"GET\", \"supermix\", \"/process-samples\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data);\r\n\r\n      res.data.results.processSamples.map((post, index) => {\r\n        dataSample.push({\r\n          code: post.code,\r\n          quantity: post.quantity,\r\n          unitId: post.unitId,\r\n          unit: post.unit,\r\n          rawMaterialId: post.rawMaterialId,\r\n          rawMaterialName: post.rawMaterialName,\r\n          incomingSample_code: post.incomingSample.code\r\n        });\r\n      });\r\n      this.setState({\r\n        data: dataSample\r\n      });\r\n    });\r\n  };\r\n\r\n  onConfirmdelete(id) {\r\n    console.log(id);\r\n    let mesg = \"process Sample delete\";\r\n\r\n    api(\"DELETE\", \"supermix\", \"/process-samples\", \"\", \"\", id).then(res => {\r\n      console.log(res.data);\r\n      this.getallProcessSample();\r\n      Notification(\"success\", res.data.message);\r\n    });\r\n    console.log(this.state.id);\r\n  }\r\n\r\n  render() {\r\n    let { sortedInfo, filteredInfo } = this.state;\r\n    sortedInfo = sortedInfo || {};\r\n    filteredInfo = filteredInfo || {};\r\n    const columns = [\r\n      {\r\n        title: \" Code\",\r\n        dataIndex: \"code\",\r\n        width: \"8%\",\r\n        key: \"code\"\r\n      },\r\n      // {\r\n      //   title: \"Incoming Sample\",\r\n      //   dataIndex: \"incomingSampleCode\",\r\n      //   width: \"12%\",\r\n      //   key: \"incomingSampleCode\"\r\n      // },\r\n      {\r\n        title: \"  Incoming Sample\",\r\n        dataIndex: \"rawMaterialName\",\r\n        key: \"material\",\r\n        width: \"12%\"\r\n      },\r\n      {\r\n        title: \"Quantity\",\r\n        dataIndex: \"quantity\",\r\n        key: \"quantity\",\r\n        width: \"12%\"\r\n      },\r\n\r\n      {\r\n        title: \"Unit\",\r\n        dataIndex: \"unit\",\r\n        width: \"12%\",\r\n        key: \"unit\"\r\n      },\r\n\r\n      {\r\n        title: \"Edit & Delete\",\r\n        key: \"action\",\r\n        width: \"10%\",\r\n        render: (text, record = this.state.data) => (\r\n          <span>\r\n            <a>\r\n              <Icon\r\n                type=\"edit\"\r\n                style={{ fontSize: \"1.2em\" }}\r\n                onClick={this.props.passEditProcessSampleRecordToModal.bind(\r\n                  this,\r\n                  record\r\n                )}\r\n              />\r\n            </a>\r\n            <Divider type=\"vertical\" />\r\n            <a>\r\n              <Popconfirm\r\n                title=\"Are you sure you want to Delete this?\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: \"red\" }} />\r\n                }\r\n                onConfirm={this.onConfirmdelete.bind(this, record.code)}\r\n              >\r\n                <a href=\"#\">\r\n                  <Icon type=\"delete\"></Icon>\r\n                </a>\r\n              </Popconfirm>\r\n            </a>\r\n          </span>\r\n        )\r\n      }\r\n    ];\r\n    return (\r\n      <AntTable\r\n        title={() => (\r\n          <ManageProcessSampleTitle reload={this.getallProcessSample} />\r\n        )}\r\n        length\r\n        nomargin\r\n        dataSource={this.state.data}\r\n        columns={columns}\r\n        onChange={this.handleChange}\r\n        size={this.state.size}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => null;\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    passEditProcessSampleRecordToModal: record => {\r\n      //this payload is the data we pass into redux which is in the row which we clicked\r\n      dispatch({ type: SWITCH_TO_EDIT_MODE, payload: record });\r\n      console.log(record);\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ManageProcessSample);\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Icon, Select, Button, DatePicker } from \"antd\";\r\n\r\nimport { PrimaryButton } from \"../../styledcomponents/button/button\";\r\nimport moment from \"moment\";\r\nimport HandelError from \"../../Constant/HandleError\";\r\nimport { api } from \"../../services/AxiosService\";\r\nimport {\r\n  MasterLevelFormTitle,\r\n  MasterLevelForm\r\n} from \"../../styledcomponents/form/MasterLevelForms\";\r\nimport { connect } from \"react-redux\";\r\nimport Notification from \"../../Constant/Notification\";\r\nimport { DISABLE_EDIT_MODE } from \"../../../redux/action/master/plantlevel/PlantLevel\";\r\nconst { Option } = Select;\r\nconst error = {\r\n  color: \"red\",\r\n  fontSize: \"12px\",\r\n  width: \"160px\",\r\n  height: \"2px\"\r\n};\r\nclass AddFinishProduct extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // console.log(this.props.editPlantData)\r\n    this.state = {\r\n      formValid: false,\r\n      errorCount: 0,\r\n      errors: {\r\n        date: \"\",\r\n        project_code: \"\",\r\n        pour_id: \"\",\r\n        mixdesign_code: \"\"\r\n      },\r\n      loading: false,\r\n      visible: false,\r\n      finish_product_id: \"\",\r\n      finish_product_code: \"\",\r\n      finish_product_date: \"\",\r\n      finish_product_project_code: \"\",\r\n      finsih_product_pour_id: \"\",\r\n      finsih_product_mixdesign_code: \"\",\r\n      projectEdit: \"\",\r\n      pourEdit: \"\",\r\n      mixdesignEdit: \"\",\r\n      errormgs: \"\",\r\n      type: \"add\"\r\n    };\r\n  }\r\n\r\n  validateForm = errors => {\r\n    let valid;\r\n    Object.values(errors).forEach(\r\n      val => val.length > 1 && (valid = false),\r\n      (valid = true)\r\n    );\r\n\r\n    console.log(valid);\r\n\r\n    return valid;\r\n  };\r\n\r\n  countErrors = errors => {\r\n    let count = 0;\r\n    Object.values(errors).forEach(val => val.length > 0 && (count = count + 1));\r\n\r\n    console.log(count);\r\n\r\n    return count;\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n      finish_product_date: \"\",\r\n      finish_product_project_code: \"\",\r\n      finsih_product_pour_id: \"\",\r\n      finsih_product_mixdesign_code: \"\"\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({ loading: true });\r\n    setTimeout(() => {\r\n      this.setState({ loading: false, visible: false });\r\n    }, 3000);\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({ visible: false });\r\n  };\r\n\r\n  handleChange = (event, field) => {\r\n    this.setState({ [field]: event.target.value });\r\n    this.setState({ errormgs: \"\" });\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    let errors = this.state.errors;\r\n    // console.log(name + \" is \\t\" + value);\r\n    switch (name) {\r\n      case \"finish_product_code\":\r\n        errors.code =\r\n          value.length === 0\r\n            ? \"Code can't be empty\"\r\n            : value.length < 1\r\n            ? \"Code must be one characters long!\"\r\n            : \"\";\r\n        break;\r\n      case \"finish_product_date\":\r\n        errors.date =\r\n          value.length === 0\r\n            ? \"Date can't be empty\"\r\n            : value.length < 3\r\n            ? \"Date allow only letters\"\r\n            : \"\";\r\n        break;\r\n      case \"finish_product_project_code\":\r\n        errors.project_code =\r\n          value.length === 0\r\n            ? \"Project  can't be empty\"\r\n            : value.length < 3\r\n            ? \"Project must be 3 characters long!\"\r\n            : \"\";\r\n        break;\r\n      case \"finsih_product_pour_id\":\r\n        errors.pour_id = isNaN(value)\r\n          ? `Pour must be a number`\r\n          : value.length === 0\r\n          ? \"Pour can't be empty\"\r\n          : value.length < 9\r\n          ? `Pour must be 10 characters long!`\r\n          : \"\";\r\n        break;\r\n      case \"finsih_product_mixdesign_code\":\r\n        errors.mixdesign_code = isNaN(value)\r\n          ? `Mixdesign must be a number`\r\n          : value.length === 0\r\n          ? \"Mixdesign can't be empty\"\r\n          : value.length < 9\r\n          ? `Mixdesign must be 10 characters long!`\r\n          : \"\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ errors, [name]: value });\r\n  };\r\n\r\n  handleSelect = (name, value) => {\r\n    console.log(name);\r\n    console.log(value);\r\n    // handle select for  plant\r\n    if (name === \"finish_product_project_code\") {\r\n      this.setState({\r\n        finish_product_project_code: value\r\n        // projectEdit: value\r\n      });\r\n\r\n      if (value.length !== 0) {\r\n        this.setState({\r\n          errors: {\r\n            project_code: \"\",\r\n            pour_id: this.state.errors.pour_id,\r\n            mixdesign_code: this.state.errors.mixdesign_code,\r\n            date: this.state.errors.date\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    //handle select for designation\r\n    if (name === \"finsih_product_pour_id\") {\r\n      this.setState({\r\n        finsih_product_pour_id: value\r\n        // pourEdit: value\r\n      });\r\n\r\n      if (value.length !== 0) {\r\n        this.setState({\r\n          errors: {\r\n            project_code: this.state.errors.project_code,\r\n            pour_id: \"\",\r\n            mixdesign_code: this.state.errors.mixdesign_code,\r\n            date: this.state.errors.date\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (name === \"finsih_product_mixdesign_code\") {\r\n      this.setState({\r\n        finsih_product_mixdesign_code: value\r\n        // mixdesignEdit: value\r\n      });\r\n\r\n      if (value.length !== 0) {\r\n        this.setState({\r\n          errors: {\r\n            project_code: this.state.errors.project_code,\r\n            pour_id: this.state.errors.pour_id,\r\n            mixdesign_code: \"\",\r\n            date: this.state.errors.date\r\n          }\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  //dropdown data\r\n  getAllproject() {\r\n    api(\"GET\", \"supermix\", \"/projects\", \"\", \"\", \"\").then(res => {\r\n      if (res.data.results.projects.length > 0) {\r\n        let SelectProject = res.data.results.projects.map((post, index) => {\r\n          return (\r\n            <Option value={post.code} key={index}>\r\n              {post.name}\r\n            </Option>\r\n          );\r\n        });\r\n        this.setState({\r\n          SelectProject\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  getallPour = () => {\r\n    console.log(\"api\");\r\n\r\n    api(\"GET\", \"supermix\", \"/pours\", \"\", \"\", \"\").then(res => {\r\n      console.log(res);\r\n\r\n      if (res.data.results.pour.length > 0) {\r\n        console.log(\"ggg\");\r\n        let SelectPour = res.data.results.pour.map((post, index) => {\r\n          return (\r\n            <Option value={post.id} key={index}>\r\n              {post.name}\r\n            </Option>\r\n          );\r\n        });\r\n        this.setState({\r\n          SelectPour\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  getallmixdesign = () => {\r\n    api(\"GET\", \"supermix\", \"/mix-designs\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data);\r\n      if (res.data.results.mixDesigns.length > 0) {\r\n        let SelectMixDesign = res.data.results.mixDesigns.map((post, index) => {\r\n          return (\r\n            <Option value={post.code} key={index}>\r\n              {post.code}\r\n            </Option>\r\n          );\r\n        });\r\n        this.setState({\r\n          SelectMixDesign\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    if (this.state.type === \"edit\") {\r\n      // we call the redux function to dispatch and delete all the global redux state to close the modal\r\n      this.props.setfinishproductVisiblity();\r\n    }\r\n    this.setState({\r\n      visible: false,\r\n      formValid: false,\r\n      finish_product_date: \"\",\r\n      finish_product_project_code: \"\",\r\n      finsih_product_pour_id: \"\",\r\n      finsih_product_mixdesign_code: \"\",\r\n      errors: {\r\n        date: \"\",\r\n        project_code: \"\",\r\n        pour_id: \"\",\r\n        mixdesign_code: \"\"\r\n      },\r\n      errormgs: \"\"\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (\r\n      this.state.finish_product_date.length === 0 &&\r\n      this.state.finish_product_project_code.length === 0 &&\r\n      this.state.finsih_product_pour_id.length === 0 &&\r\n      this.state.finsih_product_mixdesign_code.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          date: \"Date can't be empty\",\r\n          project_code: \"Project can't be empty\",\r\n          pour_id: \"Pour can't be empty\",\r\n          mixdesign_code: \"Mixdesign can't be empty\"\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors)\r\n      });\r\n    } else if (\r\n      this.state.finish_product_date.length === 0 &&\r\n      this.state.errors.date.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          date: this.state.errors.date || \"Date can't be empty\",\r\n          project_code: this.state.errors.project_code,\r\n          pour_id: this.state.errors.pour_id,\r\n          mixdesign_code: this.state.errors.mixdesign_code\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors)\r\n      });\r\n    } else if (\r\n      this.state.finish_product_project_code.length === 0 &&\r\n      this.state.errors.project_code.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          date: this.state.errors.date,\r\n          project_code:\r\n            this.state.errors.project_code || \"Project can't be empty\",\r\n          pour_id: this.state.errors.pour_id,\r\n          mixdesign_code: this.state.errors.mixdesign_code\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors)\r\n      });\r\n    } else if (\r\n      this.state.finsih_product_pour_id.length === 0 &&\r\n      this.state.errors.pour_id.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          date: this.state.errors.date,\r\n          project_code: this.state.errors.project_code,\r\n          pour_id: this.state.errors.pour_id || \"Pour can't be empty\",\r\n          mixdesign_code: this.state.errors.mixdesign_code\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors)\r\n      });\r\n    } else if (\r\n      this.state.finsih_product_mixdesign_code.length === 0 &&\r\n      this.state.errors.mixdesign_code.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          date: this.state.errors.date,\r\n          project_code: this.state.errors.project_code,\r\n          pour_id: this.state.errors.pour_id,\r\n          mixdesign_code:\r\n            this.state.errors.mixdesign_code || \"Mix Design can't be empty\"\r\n        },\r\n        formValid: this.validateForm(this.state.errors),\r\n        errorCount: this.countErrors(this.state.errors)\r\n      });\r\n    } else if (\r\n      this.state.errors.date.length === 0 &&\r\n      this.state.errors.project_code.length === 0 &&\r\n      this.state.errors.pour_id.length === 0 &&\r\n      this.state.errors.mixdesign_code.length === 0\r\n    ) {\r\n      this.setState({ formValid: this.validateForm(this.state.errors) });\r\n      this.setState({ errorCount: this.countErrors(this.state.errors) });\r\n      console.log(this.state.designation_name);\r\n      // const data = {\r\n      //   // i: this.state.designation_code,\r\n      //   date: this.state.finish_product_date,\r\n      //   project_code: this.state.finish_product_project_code,\r\n      //   pour_id: this.state.finsih_product_pour_id,\r\n      //   mixdesign_code: this.state.finsih_product_mixdesign_code\r\n      // };\r\n      if (this.state.type === \"edit\") {\r\n        const data = {\r\n          id: this.state.finish_product_id,\r\n          date: moment(this.state.finish_product_date).format(\"YYYY-MM-DD\"),\r\n          projectCode: this.state.finish_product_project_code,\r\n          pourId: this.state.finsih_product_pour_id,\r\n          mixDesignCode: this.state.finsih_product_mixdesign_code\r\n        };\r\n        console.log(data);\r\n        api(\"PUT\", \"supermix\", \"/finish-product\", \"\", data, \"\").then(\r\n          res => {\r\n            console.log(res.data);\r\n\r\n            if (res.data.status === \"VALIDATION_FAILURE\") {\r\n              console.log(\"update\");\r\n              this.responeserror(res.data.results.name.message);\r\n            } else {\r\n              Notification(\"success\", res.data.message);\r\n              this.props.reload();\r\n              this.setState({ loading: true });\r\n              this.setState({\r\n                finish_product_code: \"\",\r\n                finish_product_project_code: \"\",\r\n                finish_product_date: \"\",\r\n                finsih_product_pour_id: \"\",\r\n                finsih_product_mixdesign_code: \"\",\r\n                type: \"add\",\r\n                errormgs: \"\"\r\n              });\r\n              setTimeout(() => {\r\n                this.setState({ loading: false, visible: false });\r\n              }, 3000);\r\n            }\r\n          },\r\n          error => {\r\n            this.setState({\r\n              errormgs: error.validationFailures[0]\r\n            });\r\n            console.log(\"DEBUG34: \", error);\r\n            console.log(HandelError(error.validationFailures[0]));\r\n          }\r\n        );\r\n      } else {\r\n        const data = {\r\n          date: moment(this.state.finish_product_date).format(\"YYYY-MM-DD\"),\r\n          projectCode: this.state.finish_product_project_code,\r\n          pourId: this.state.finsih_product_pour_id,\r\n          mixDesignCode: this.state.finsih_product_mixdesign_code\r\n        };\r\n        console.log(data);\r\n        api(\"POST\", \"supermix\", \"/finish-product\", \"\", data, \"\")\r\n          .then(\r\n            res => {\r\n              console.log(this.state.type);\r\n              console.log(res.data);\r\n              if (res.data.status === \"VALIDATION_FAILURE\") {\r\n                console.log(\"jjjj\");\r\n                // this.responeserror(res.data.results.name.message);\r\n              } else {\r\n                Notification(\"success\", res.data.message);\r\n                this.props.reload();\r\n\r\n                this.setState({ loading: true });\r\n                this.setState({\r\n                  finish_product_code: \"\",\r\n                  finish_product_date: \"\",\r\n                  finish_product_project_code: \"\",\r\n                  finsih_product_pour_id: \"\",\r\n                  finsih_product_mixdesign_code: \"\",\r\n                  type: \"add\",\r\n                  errormgs: \"\"\r\n                });\r\n                setTimeout(() => {\r\n                  this.setState({ loading: false, visible: false });\r\n                }, 3000);\r\n              }\r\n            },\r\n            error => {\r\n              this.setState({\r\n                errormgs: error.validationFailures[0]\r\n              });\r\n              console.log(\"DEBUG34: \", error);\r\n              console.log(HandelError(error.validationFailures[0]));\r\n            }\r\n          )\r\n          .catch(error => {\r\n            console.log(error);\r\n          });\r\n      }\r\n\r\n      console.log(\"form is valid\");\r\n    }\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    console.log(nextProps.editPlantData);\r\n    this.setState({\r\n      visible: nextProps.visible,\r\n      finish_product_id: nextProps.editPlantData.id,\r\n      finish_product_date: moment(nextProps.editPlantData.date, \"DD-MM-YYYY\"),\r\n      finish_product_project_code: nextProps.editPlantData.projectCode,\r\n      finsih_product_pour_id: nextProps.editPlantData.pourId,\r\n      finsih_product_mixdesign_code: nextProps.editPlantData.mixDesignCode,\r\n      type: nextProps.type\r\n    });\r\n  }\r\n\r\n  handleDates(name, dateString, field) {\r\n    console.log(name);\r\n    console.log(dateString);\r\n    console.log(field);\r\n    let convertedDate = moment(dateString).format(\"DD-MM-YYYY\");\r\n    console.log(convertedDate);\r\n    const { errors } = this.state;\r\n\r\n    this.setState({\r\n      finish_product_date: dateString,\r\n      errors: {\r\n        pour_id: errors.pour_id,\r\n        project_code: errors.project_code,\r\n        mixdesign_code: errors.mixdesign_code,\r\n        date: \"\"\r\n      }\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAllproject();\r\n    this.getallPour();\r\n    this.getallmixdesign();\r\n    console.log(this.props.screen);\r\n  }\r\n  render() {\r\n    const { visible, errors, errorCount } = this.state;\r\n    console.log(errorCount);\r\n\r\n    return (\r\n      <div>\r\n        <PrimaryButton\r\n          onClick={this.showModal}\r\n          style={{\r\n            background: \"#001328\",\r\n            color: \"white\",\r\n            border: \"none\",\r\n            width: \"auto\",\r\n            marginLeft: \"-10px\"\r\n          }}\r\n        >\r\n          Add FinishProduct Sample\r\n        </PrimaryButton>\r\n        <Modal\r\n          width=\"500px\"\r\n          visible={visible}\r\n          okType=\"default\"\r\n          closable={false}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          footer={[\r\n            <Button key=\"back\" onClick={this.handleCancel}>\r\n              Cancel\r\n            </Button>,\r\n            <PrimaryButton\r\n              key=\"submit\"\r\n              // loading={loading}\r\n              onClick={this.handleSubmit}\r\n              style={{ background: \"#001328\", color: \"white\", border: \"none\" }}\r\n            >\r\n              {this.state.type === \"edit\" ? \"Edit\" : \"Save\"}\r\n            </PrimaryButton>\r\n          ]}\r\n          title={\r\n            <MasterLevelFormTitle>\r\n              <p\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                {this.state.type === \"edit\"\r\n                  ? \"Edit Finish Product\"\r\n                  : \"Add Finish Product\"}\r\n              </p>\r\n              <Icon\r\n                type=\"close-circle\"\r\n                onClick={this.handleCancel}\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              />\r\n            </MasterLevelFormTitle>\r\n          }\r\n        >\r\n          <MasterLevelForm>\r\n            <div className=\"input_wrapper\">\r\n              <label for=\"finsih_product_mixdesign_code\" className=\"label\">\r\n                Mix Design:\r\n              </label>\r\n\r\n              <Select\r\n                showSearch\r\n                style={{ width: 180 }}\r\n                id=\"finsih_product_mixdesign_code\"\r\n                name=\"finsih_product_mixdesign_code\"\r\n                placeholder=\"Select a Mix Design\"\r\n                value={this.state.finsih_product_mixdesign_code}\r\n                onChange={value =>\r\n                  this.handleSelect(\"finsih_product_mixdesign_code\", value)\r\n                }\r\n              >\r\n                {this.state.SelectMixDesign}\r\n              </Select>\r\n              {errors.mixdesign_code.length > 0 && (\r\n                <div style={error}>{errors.mixdesign_code}</div>\r\n              )}\r\n\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n\r\n            <div className=\"input_wrapper\">\r\n              <label for=\"finish_product_project_code\" className=\"label\">\r\n                Project:\r\n              </label>\r\n\r\n              <Select\r\n                showSearch\r\n                style={{ width: 180 }}\r\n                id=\"finish_product_project_code\"\r\n                name=\"finish_product_project_code\"\r\n                placeholder=\"Select a Project\"\r\n                optionFilterProp=\"children\"\r\n                value={this.state.finish_product_project_code}\r\n                onChange={value =>\r\n                  this.handleSelect(\"finish_product_project_code\", value)\r\n                }\r\n              >\r\n                {this.state.SelectProject}\r\n              </Select>\r\n              {errors.project_code.length > 0 && (\r\n                <div style={error}>{errors.project_code}</div>\r\n              )}\r\n\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n\r\n            <div className=\"input_wrapper\">\r\n              <label for=\"finsih_product_pour_id\" className=\"label\">\r\n                Pour:\r\n              </label>\r\n\r\n              <Select\r\n                showSearch\r\n                style={{ width: 180 }}\r\n                id=\"finsih_product_pour_id\"\r\n                name=\"finsih_product_pour_id\"\r\n                placeholder=\"Select a Pour\"\r\n                optionFilterProp=\"children\"\r\n                value={this.state.finsih_product_pour_id}\r\n                onChange={value =>\r\n                  this.handleSelect(\"finsih_product_pour_id\", value)\r\n                }\r\n              >\r\n                {this.state.SelectPour}\r\n              </Select>\r\n              {errors.pour_id.length > 0 && (\r\n                <div style={error}>{errors.pour_id}</div>\r\n              )}\r\n\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n\r\n            <div className=\"input_wrapper\">\r\n              <label for=\"finish_product_date\" className=\"label\">\r\n                Date:\r\n              </label>\r\n\r\n              <DatePicker\r\n                id=\"finish_product_date\"\r\n                name=\"finish_product_date\"\r\n                format={\"YYYY-MM-DD\"}\r\n                style={{ width: 170 }}\r\n                value={this.state.finish_product_date}\r\n                onChange={(dateString, field) =>\r\n                  this.handleDates(\"finish_product_date\", dateString, field)\r\n                }\r\n                showToday\r\n              />\r\n              {errors.date.length > 0 && <div style={error}>{errors.date}</div>}\r\n              <div style={{ height: \"12px\" }} />\r\n            </div>\r\n          </MasterLevelForm>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  //getting the global redux state to get the data from the EditPlantReducer.js\r\n  return {\r\n    visible: state.plantLevelReducers.EditPlantReducer.visible,\r\n    type: state.plantLevelReducers.EditPlantReducer.type,\r\n    editPlantData: state.plantLevelReducers.EditPlantReducer.editPlantData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // setting visible to false if we close the modal .. and all state data will be deleted if this function is dispatched\r\n    setfinishproductVisiblity: () => {\r\n      dispatch({ type: DISABLE_EDIT_MODE });\r\n      console.log(\"edit modal closed\");\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddFinishProduct);\r\n","import React, { Component } from \"react\";\r\nimport { FlexContainer } from \"../../styledcomponents/container/FlexGrid\";\r\nimport { connect } from \"react-redux\";\r\nimport Paragraph from \"antd/lib/typography/Paragraph\";\r\nimport AddFinishProduct from \"../finshproduct/AddFinishProduct\";\r\n\r\nconst style = {\r\n  fontSize: \"medium\",\r\n  fontWeight: \"600\",\r\n  alignSelf: \"auto\",\r\n  textAlign: \"justify\",\r\n  padding: \"10px\",\r\n  height: \"25px\",\r\n  flexBasis: \"650px\"\r\n};\r\n\r\nclass ManageFinishProductSampleTitle extends Component {\r\n  render() {\r\n    return (\r\n      <FlexContainer titles leveltitles>\r\n        <Paragraph style={style}>Manage Finish Product Sample</Paragraph>\r\n        {/* <PrimaryButton\r\n          style={{\r\n            background: \"#001328\",\r\n            color: \"white\",\r\n            border: \"none\"\r\n          }}\r\n          href=\"#/samples/viewfpstatus\"\r\n        >\r\n          View Test\r\n        </PrimaryButton> */}\r\n        <AddFinishProduct reload={this.props.reload} />\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = null;\r\n\r\nconst mapDispatchToProps = null;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ManageFinishProductSampleTitle);\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\nimport { Popconfirm, Divider, Icon } from \"antd\";\r\n\r\nimport { AntTable } from \"../../styledcomponents/table/AntTabl\";\r\nimport ManageFinishProductSampleTitle from \"../titles/ManageFinishProductSampleTitle\";\r\nimport Notification from \"../../Constant/Notification\";\r\nimport { api } from \"../../services/AxiosService\";\r\nimport { SWITCH_TO_EDIT_MODE } from \"../../../redux/action/master/plantlevel/PlantLevel\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ManageFinishProduct extends Component {\r\n  state = {\r\n    searchText: \"\",\r\n    visible: false,\r\n    size: \"small\",\r\n    datalist: \"\"\r\n  };\r\n\r\n  componentWillMount() {\r\n    if (window.screen.width > 1900) {\r\n      console.log(\"hooray\");\r\n      this.setState({\r\n        size: \"large\"\r\n      });\r\n    } else if (window.screen.width < 1440) {\r\n      this.setState({\r\n        size: \"small\"\r\n      });\r\n    }\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  handleOk = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleCancel = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleChange = (pagination, filters, sorter) => {\r\n    console.log(\"Various parameters\", pagination, filters, sorter);\r\n  };\r\n\r\n  onChange(pageNumber) {\r\n    console.log(\"Page: \", pageNumber);\r\n  }\r\n  componentDidMount() {\r\n    this.getallfinshProduct();\r\n  }\r\n\r\n  getallfinshProduct = () => {\r\n    api(\"GET\", \"supermix\", \"/finish-products\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data.results);\r\n\r\n      this.setState({\r\n        datalist: res.data.results.finishProducts\r\n      });\r\n    });\r\n  };\r\n  onConfirmdelete(id) {\r\n    console.log(\"ddddd\");\r\n    console.log(id);\r\n\r\n    api(\"DELETE\", \"supermix\", \"/finish-product\", \"\", \"\", id).then(res => {\r\n      console.log(res.data);\r\n      this.getallfinshProduct();\r\n      Notification(\"success\", res.data.message);\r\n    });\r\n    console.log(this.state.id);\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"Mix Design\",\r\n        dataIndex: \"mixDesignCode\",\r\n        key: \"mixdesign\"\r\n      },\r\n      {\r\n        title: \"Project\",\r\n        dataIndex: \"projectName\",\r\n        key: \"project\"\r\n      },\r\n      {\r\n        title: \"Pour\",\r\n        dataIndex: \"pourName\",\r\n        key: \"pour\"\r\n      },\r\n      {\r\n        title: \" Date\",\r\n        dataIndex: \"date\",\r\n        key: \"date\"\r\n      },\r\n\r\n      {\r\n        title: \"Edit & Delete\",\r\n        key: \"action\",\r\n        width: \"7%\",\r\n        render: (text, record = this.state.datalist) => (\r\n          <span>\r\n            <a>\r\n              <Icon\r\n                type=\"edit\"\r\n                onClick={this.props.passEditFinishProductToModal.bind(\r\n                  this,\r\n                  record\r\n                )}\r\n              />\r\n            </a>\r\n            <Divider type=\"vertical\" />\r\n            <a>\r\n              <Popconfirm\r\n                title=\"Are you sure you want to Delete this?\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: \"red\" }} />\r\n                }\r\n                onConfirm={this.onConfirmdelete.bind(this, record.id)}\r\n              >\r\n                <a href=\"#\">\r\n                  <Icon type=\"delete\" style={{ color: \"red\" }}></Icon>\r\n                </a>\r\n              </Popconfirm>\r\n            </a>\r\n          </span>\r\n        )\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <div>\r\n        <AntTable\r\n          maxlength\r\n          nomargin\r\n          title={() => (\r\n            <ManageFinishProductSampleTitle reload={this.getallfinshProduct} />\r\n          )}\r\n          columns={columns}\r\n          dataSource={this.state.datalist}\r\n          onChange={this.handleChange}\r\n          pagination={{ defaultPageSize: 3 }}\r\n          size={this.state.size}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // if this function dispatches modal will be shown and the data will be drawn :)\r\n    passEditFinishProductToModal: record => {\r\n      //this payload is the data we pass into redux which is in the row which we clicked\r\n      dispatch({ type: SWITCH_TO_EDIT_MODE, payload: record });\r\n      console.log(record);\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ManageFinishProduct);\r\n","import styled from \"styled-components\";\r\nimport { List } from \"antd\";\r\n\r\nexport const FlexList = styled(List)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const FlexListItem = styled(List.Item)`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-evenly;\r\n  flex-wrap: wrap;\r\n  width: 500px;\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport { MasterLevelForm } from \"../../../styledcomponents/form/MasterLevelForms\";\r\nimport {\r\n  FlexList,\r\n  FlexListItem\r\n} from \"../../../styledcomponents/list/FlexList\";\r\n\r\nexport default class DeliveryReport extends Component {\r\n  render() {\r\n    return (\r\n      <MasterLevelForm>\r\n        <FlexList>\r\n          <FlexListItem>\r\n            <p>Supplier Name :</p>\r\n            <p>Any Name</p>\r\n          </FlexListItem>\r\n          <FlexListItem>\r\n            <p>Vehicle No :</p>\r\n            <p>Any No</p>\r\n          </FlexListItem>\r\n          <FlexListItem>\r\n            <p>Raw Material :</p>\r\n            <p>Any Material</p>\r\n          </FlexListItem>\r\n          <FlexListItem>\r\n            <p>Moisture Test :</p>\r\n            <p>Any Test</p>\r\n          </FlexListItem>\r\n          <FlexListItem>\r\n            <p>Date :</p>\r\n            <p>Any Date</p>\r\n          </FlexListItem>\r\n          <FlexListItem>\r\n            <p>Tested By:</p>\r\n            <p>Any Tester</p>\r\n          </FlexListItem>\r\n        </FlexList>\r\n      </MasterLevelForm>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Input, Modal, Icon, Button, DatePicker, Select } from \"antd\";\r\n\r\nimport { PrimaryButton } from \"../../styledcomponents/button/button\";\r\nimport {\r\n  MasterLevelFormTitle,\r\n  MasterLevelForm\r\n} from \"../../styledcomponents/form/MasterLevelForms\";\r\nimport moment from \"moment\";\r\nimport { api } from \"../../services/AxiosService\";\r\nimport Notification from \"../../Constant/Notification\";\r\nimport { connect } from \"react-redux\";\r\nimport { DISABLE_EDIT_MODE } from \"../../../redux/action/master/plantlevel/PlantLevel\";\r\n\r\nconst error = {\r\n  color: \"red\",\r\n  fontSize: \"12px\",\r\n  width: \"160px\",\r\n  height: \"0.2px\"\r\n};\r\n\r\nconst { Option } = Select;\r\nclass Addincoming extends Component {\r\n  state = {\r\n    loading: false,\r\n    visible: false,\r\n    code: \"\",\r\n    date: \"\",\r\n    status: \"\",\r\n    supplierId: \"\",\r\n    plantCode: \"\",\r\n    vehicleNo: \"\",\r\n    rawMaterialId: \"\",\r\n    plantName: \"\",\r\n    supplierName: \"\",\r\n    rawMaterialName: \"\",\r\n    edit_plantName: \"\",\r\n    edit_supplierName: \"\",\r\n    edit_rawMaterialName: \"\",\r\n    errors: {\r\n      code: \"\",\r\n      supplierName: \"\",\r\n      rawMaterialName: \"\",\r\n      date: \"\",\r\n      plantName: \"\"\r\n    },\r\n    type: \"add\"\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n      errors: {\r\n        code: \"\",\r\n        supplierName: \"\",\r\n        rawMaterialName: \"\",\r\n        date: \"\",\r\n        plantName: \"\"\r\n      },\r\n      code: \"\",\r\n      date: \"\",\r\n      status: \"\",\r\n      supplierId: \"\",\r\n      plantCode: \"\",\r\n      vehicleNo: \"\",\r\n      rawMaterialId: \"\",\r\n\r\n      plantName: \"\",\r\n      supplierName: \"\",\r\n      rawMaterialName: \"\",\r\n      edit_plantName: \"\",\r\n      edit_supplierName: \"\",\r\n      edit_rawMaterialName: \"\",\r\n      type: \"add\"\r\n    });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n      errors: {\r\n        code: \"\",\r\n        supplierName: \"\",\r\n        rawMaterialName: \"\",\r\n        date: \"\",\r\n        plantName: \"\"\r\n      },\r\n      code: \"\",\r\n      date: \"\",\r\n      status: \"\",\r\n      supplierId: \"\",\r\n      plantCode: \"\",\r\n      vehicleNo: \"\",\r\n      rawMaterialId: \"\",\r\n      plantName: \"\",\r\n      supplierName: \"\",\r\n      rawMaterialName: \"\",\r\n      edit_plantName: \"\",\r\n      edit_supplierName: \"\",\r\n      edit_rawMaterialName: \"\"\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.Selectsupplier();\r\n    this.getAllplant();\r\n    this.getallMaterial();\r\n    console.log(this.props.screen);\r\n  }\r\n  handleChange = (event, field) => {\r\n    this.setState({ [field]: event.target.value });\r\n    this.setState({ errormgs: \"\" });\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    let errors = this.state.errors;\r\n\r\n    switch (name) {\r\n      case \"code\":\r\n        errors.code =\r\n          value.length === 0\r\n            ? \"code can't be empty\"\r\n            : value.length < 3\r\n            ? \"code \\n must be 3 characters long!\"\r\n            : \"\";\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ errors, [name]: value });\r\n  };\r\n\r\n  handleSelect = (name, value) => {\r\n    console.log(name);\r\n    console.log(value);\r\n\r\n    const { errors } = this.state;\r\n    // handle select for  equipment_plant\r\n    if (name === \"plant\") {\r\n      console.log(value);\r\n      this.setState({\r\n        plantName: value,\r\n        edit_plantName: value,\r\n        errors: {\r\n          code: errors.code,\r\n          supplierName: errors.supplierName,\r\n          rawMaterialName: errors.rawMaterialName,\r\n          date: errors.date,\r\n          plantName: \"\"\r\n        }\r\n      });\r\n    }\r\n    // handle select for  supplier\r\n    if (name === \"supplier\") {\r\n      console.log(value);\r\n      this.setState({\r\n        supplierName: value,\r\n        edit_supplier: value,\r\n        errors: {\r\n          code: errors.code,\r\n          supplierName: \"\",\r\n          rawMaterialName: errors.rawMaterialName,\r\n          date: errors.date,\r\n          plantName: errors.plantName\r\n        }\r\n      });\r\n    }\r\n    // handle select for  status\r\n    if (name === \"rawMaterial\") {\r\n      this.setState({\r\n        rawMaterialName: value,\r\n        edit_rawMaterialName: value,\r\n        errors: {\r\n          code: errors.code,\r\n          supplierName: errors.supplierName,\r\n          rawMaterialName: \"\",\r\n          date: errors.date,\r\n          plantName: errors.plantName\r\n        }\r\n      });\r\n    }\r\n    // handle select for  radio group\r\n  };\r\n\r\n  Selectsupplier = () => {\r\n    api(\"GET\", \"supermix\", \"/suppliers\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data);\r\n\r\n      if (res.data.results.Supplier.length > 0) {\r\n        let supplierselect = res.data.results.Supplier.map((post, index) => {\r\n          console.log(post.id);\r\n          console.log(\"kkkkkkkkkk\");\r\n          return (\r\n            <Option value={post.id} key={index}>\r\n              {post.name}\r\n            </Option>\r\n          );\r\n        });\r\n        this.setState({\r\n          supplierselect\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  getAllplant() {\r\n    api(\"GET\", \"supermix\", \"/plants\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data.results.plants.length);\r\n      if (res.data.results.plants.length > 0) {\r\n        console.log(\"ggg\");\r\n        let SelectPlants = res.data.results.plants.map((post, index) => {\r\n          return (\r\n            <Option value={post.code} key={index}>\r\n              {post.name}\r\n            </Option>\r\n          );\r\n        });\r\n        this.setState({\r\n          SelectPlants\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  getallMaterial = () => {\r\n    console.log(\"api\");\r\n    api(\"GET\", \"supermix\", \"/raw-materials\", \"\", \"\", \"\").then(res => {\r\n      console.log(res);\r\n\r\n      if (res.data.results.rawMaterial.length > 0) {\r\n        console.log(\"ggg\");\r\n        let SelectRaw = res.data.results.rawMaterial.map((post, index) => {\r\n          return (\r\n            <Option value={post.id} key={index}>\r\n              {post.name}\r\n            </Option>\r\n          );\r\n        });\r\n        this.setState({\r\n          SelectRaw: SelectRaw\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    const {\r\n      code,\r\n      supplierName,\r\n      plantName,\r\n      date,\r\n      rawMaterialName,\r\n      errors\r\n    } = this.state;\r\n    let emptyMsg = \"can't be empty\";\r\n    if (\r\n      code.length === 0 &&\r\n      supplierName.length === 0 &&\r\n      rawMaterialName.length === 0 &&\r\n      plantName.length === 0 &&\r\n      date.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          code: `code can't be empty`,\r\n          supplierName: `supplier name ${emptyMsg}`,\r\n          rawMaterialName: `raw material name ${emptyMsg}`,\r\n          date: `date ${emptyMsg}`,\r\n          plantName: `plant name ${emptyMsg}`\r\n        }\r\n      });\r\n    } else if (errors.code.length === 0 && code.length === 0) {\r\n      this.setState({\r\n        errors: {\r\n          code: errors.code || `code ${emptyMsg}`,\r\n          supplierName: errors.supplierName,\r\n          rawMaterialName: errors.rawMaterialName,\r\n          date: errors.date,\r\n          plantName: errors.plantName\r\n        }\r\n      });\r\n    } else if (errors.supplierName.length === 0 && supplierName.length === 0) {\r\n      this.setState({\r\n        errors: {\r\n          code: errors.code,\r\n          supplierName: errors.supplierName || `supplier name ${emptyMsg}`,\r\n          rawMaterialName: errors.rawMaterialName,\r\n          date: errors.date,\r\n          plantName: errors.plantName\r\n        }\r\n      });\r\n    } else if (\r\n      errors.rawMaterialName.length === 0 &&\r\n      rawMaterialName.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          code: errors.code,\r\n          supplierName: errors.supplierName,\r\n          rawMaterialName:\r\n            errors.rawMaterialName || `raw material name ${emptyMsg}`,\r\n          date: errors.date,\r\n          plantName: errors.plantName\r\n        }\r\n      });\r\n    } else if (errors.date.length === 0 && date.length === 0) {\r\n      this.setState({\r\n        errors: {\r\n          code: errors.code,\r\n          supplierName: errors.supplierName,\r\n          rawMaterialName: errors.rawMaterialName,\r\n          date: errors.date || `date ${emptyMsg}`,\r\n          plantName: errors.plantName\r\n        }\r\n      });\r\n    } else if (errors.plantName.length === 0 && plantName.length === 0) {\r\n      this.setState({\r\n        errors: {\r\n          code: errors.code,\r\n          supplierName: errors.supplierName,\r\n          rawMaterialName: errors.rawMaterialName,\r\n          date: errors.date,\r\n          plantName: errors.plantName || `plant name ${emptyMsg}`\r\n        }\r\n      });\r\n    } else if (\r\n      errors.code.length === 0 &&\r\n      errors.supplierName.length === 0 &&\r\n      errors.rawMaterialName.length === 0 &&\r\n      errors.date.length === 0 &&\r\n      errors.plantName.length === 0\r\n    ) {\r\n      if (this.state.type === \"edit\") {\r\n        const data = {\r\n          code: this.state.code,\r\n          date: moment(this.state.date).format(\"YYYY-MM-DD\"),\r\n          status: this.state.status,\r\n          supplierId: this.state.supplierId,\r\n          plantCode: this.state.plantCode,\r\n          vehicleNo: this.state.vehicleNo,\r\n          rawMaterialId: this.state.rawMaterialId\r\n        };\r\n        console.log(\"edit part\");\r\n        console.log(data);\r\n        api(\"PUT\", \"supermix\", \"/incoming-sample\", \"\", data, \"\").then(\r\n          res => {\r\n            console.log(res.data);\r\n            Notification(\"success\", res.data.message);\r\n            this.props.reload();\r\n            this.setState({ loading: true });\r\n            this.setState({\r\n              equipment_plant: \"\",\r\n              calibrated_date: \"\",\r\n              due_date: \"\",\r\n              calibrated_by: \"\",\r\n              supplier: \"\",\r\n              tester: \"\",\r\n              description: \"\",\r\n              status: \"\",\r\n              errormgs: \"\"\r\n            });\r\n            setTimeout(() => {\r\n              this.setState({ loading: false, visible: false });\r\n            }, 3000);\r\n          },\r\n          error => {\r\n            // this.setState({\r\n            //   errormgs: error.validationFailures[0]\r\n            // });\r\n            console.log(\"DEBUG34: \", error);\r\n            // console.log(HandelError(error.validationFailures[0]));\r\n          }\r\n        );\r\n      } else {\r\n        const data = {\r\n          code: this.state.code,\r\n          date: moment(this.state.date).format(\"YYYY-MM-DD\"),\r\n          status: \"NEW\",\r\n          supplierId: this.state.supplierName,\r\n          plantCode: this.state.plantName,\r\n          vehicleNo: this.state.vehicleNo,\r\n          rawMaterialId: this.state.rawMaterialName\r\n        };\r\n        console.log(\"hhhhhhhhhhhhhhh\");\r\n        console.log(data);\r\n        api(\"POST\", \"supermix\", \"/incoming-sample\", \"\", data, \"\").then(\r\n          res => {\r\n            console.log(res.data);\r\n            Notification(\"success\", res.data.message);\r\n            this.props.reload();\r\n            this.setState({ loading: true });\r\n            this.setState({\r\n              code: \"\",\r\n              date: \"\",\r\n              status: \"\",\r\n              supplierId: \"\",\r\n              plantCode: \"\",\r\n              vehicleNo: \"\",\r\n              rawMaterialId: \"\"\r\n            });\r\n            setTimeout(() => {\r\n              this.setState({ loading: false, visible: false });\r\n            }, 3000);\r\n          },\r\n          error => {\r\n            // this.setState({\r\n            //   errormgs: error.validationFailures[0]\r\n            // });\r\n            console.log(\"DEBUG34: \", error);\r\n            // console.log(HandelError(error.validationFailures[0]));\r\n          }\r\n        );\r\n      }\r\n    }\r\n  };\r\n  handleDates(name, dateString, field) {\r\n    console.log(name);\r\n    console.log(dateString);\r\n    console.log(field);\r\n    let convertedDate = moment(dateString).format(\"DD-MM-YYYY\");\r\n    console.log(convertedDate);\r\n    const { errors } = this.state;\r\n\r\n    this.setState({\r\n      date: dateString,\r\n      errors: {\r\n        code: errors.code,\r\n        supplierName: errors.supplierName,\r\n        rawMaterialName: errors.rawMaterialName,\r\n        date: \"\",\r\n        plantName: errors.plantName\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    console.log(nextProps);\r\n    this.setState({\r\n      visible: nextProps.visible,\r\n      code: nextProps.editPlantData.code,\r\n      vehicleNo: nextProps.editPlantData.vehicleNo,\r\n      date: moment(nextProps.editPlantData.date, \"DD-MM-YYYY\"),\r\n      status: nextProps.editPlantData.status,\r\n      rawMaterialId: nextProps.editPlantData.rawMaterialId,\r\n      rawMaterialName: nextProps.editPlantData.rawMaterialName,\r\n      plantCode: nextProps.editPlantData.plantCode,\r\n      plantName: nextProps.editPlantData.plantName,\r\n      supplierId: nextProps.editPlantData.supplierId,\r\n      supplierName: nextProps.editPlantData.supplierName,\r\n      edit_plantName: nextProps.editPlantData.plantName,\r\n      edit_supplierName: nextProps.editPlantData.supplierName,\r\n      edit_rawMaterialName: nextProps.editPlantData.rawMaterialName,\r\n      type: nextProps.type\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { visible, loading, type, errors } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <PrimaryButton\r\n          onClick={this.showModal}\r\n          style={{\r\n            background: \"#001328\",\r\n            color: \"white\",\r\n            border: \"none\",\r\n            width: \"auto\",\r\n            marginLeft: \"-10px\"\r\n          }}\r\n        >\r\n          Add Incoming Sample\r\n        </PrimaryButton>\r\n        <Modal\r\n          width=\"500px\"\r\n          className=\"addsubcategorymodal\"\r\n          visible={visible}\r\n          closable={false}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          footer={[\r\n            <Button key=\"back\" onClick={this.handleCancel}>\r\n              Cancel\r\n            </Button>,\r\n            <PrimaryButton\r\n              key=\"submit\"\r\n              loading={loading}\r\n              onClick={this.handleSubmit}\r\n              style={{ background: \"#001328\", color: \"white\", border: \"none\" }}\r\n            >\r\n              {type === \"edit\" ? \"Edit\" : \"Save\"}\r\n            </PrimaryButton>\r\n          ]}\r\n          title={\r\n            <MasterLevelFormTitle>\r\n              <p\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                {type === \"edit\"\r\n                  ? \"Edit Incoming Sample\"\r\n                  : \"Add Incoming Sample\"}\r\n              </p>\r\n              <Icon\r\n                type=\"close-circle\"\r\n                onClick={this.handleCancel}\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              />\r\n            </MasterLevelFormTitle>\r\n          }\r\n        >\r\n          <MasterLevelForm>\r\n            {/* Code */}\r\n            <div className=\"input_wrapper\">\r\n              <label for=\"code\" className=\"label\">\r\n                Code:\r\n              </label>\r\n\r\n              <Input\r\n                id=\"code\"\r\n                name=\"code\"\r\n                value={this.state.code}\r\n                onChange={this.handleChange}\r\n                disabled={this.state.type === \"edit\" ? true : false}\r\n              />\r\n              {errors.code.length > 0 && <div style={error}>{errors.code}</div>}\r\n              <div style={{ height: \"12px\" }} />\r\n            </div>\r\n\r\n            {/* Plant Name */}\r\n            <div className=\"input_wrapper\">\r\n              <label for=\"supplierId\" className=\"label\">\r\n                Supplier Name:\r\n              </label>\r\n\r\n              <Select\r\n                className=\"inputfield\"\r\n                id=\"supplierName\"\r\n                name=\"supplierName\"\r\n                placeholder=\"Enter Supplier Name\"\r\n                style={{ width: \"180px\" }}\r\n                value={this.state.supplierName}\r\n                onChange={value => this.handleSelect(\"supplier\", value)}\r\n              >\r\n                {this.state.supplierselect}\r\n              </Select>\r\n              {errors.supplierName.length > 0 && (\r\n                <div style={error}>{errors.supplierName}</div>\r\n              )}\r\n              <div style={{ height: \"12px\" }} />\r\n            </div>\r\n\r\n            {/* Place */}\r\n            <div className=\"input_wrapper\">\r\n              <label for=\"rawMaterialId\" className=\"label\">\r\n                Raw Material\r\n              </label>\r\n\r\n              <Select\r\n                id=\"rawMaterialId\"\r\n                name=\"rawMaterialId\"\r\n                placeholder=\" Raw Material\"\r\n                style={{ width: 170 }}\r\n                value={this.state.rawMaterialName}\r\n                onChange={value => this.handleSelect(\"rawMaterial\", value)}\r\n              >\r\n                {this.state.SelectRaw}\r\n              </Select>\r\n              {errors.rawMaterialName.length > 0 && (\r\n                <div style={error}>{errors.rawMaterialName}</div>\r\n              )}\r\n              <div style={{ height: \"12px\" }} />\r\n            </div>\r\n\r\n            {/* T.P No */}\r\n            <div className=\"input_wrapper\">\r\n              <label for=\"date\" className=\"label\">\r\n                Delivered Date\r\n              </label>\r\n\r\n              <DatePicker\r\n                id=\"date\"\r\n                name=\"date\"\r\n                format={\"YYYY-MM-DD\"}\r\n                style={{ width: 170 }}\r\n                value={this.state.date}\r\n                onChange={(dateString, field) =>\r\n                  this.handleDates(\"due_date\", dateString, field)\r\n                }\r\n                showToday\r\n              />\r\n              {errors.date.length > 0 && <div style={error}>{errors.date}</div>}\r\n              <div style={{ height: \"12px\" }} />\r\n            </div>\r\n\r\n            {/* Description  */}\r\n            <div className=\"input_wrapper\">\r\n              <label for=\"vechical_no\" className=\"label\">\r\n                Vechical No\r\n              </label>\r\n\r\n              <Input\r\n                id=\"vehicleNo\"\r\n                name=\"vehicleNo\"\r\n                placeholder=\"Vechical No\"\r\n                value={this.state.vehicleNo}\r\n                onChange={this.handleChange}\r\n              />\r\n              <div style={{ height: \"12px\" }} />\r\n            </div>\r\n\r\n            <div className=\"input_wrapper\">\r\n              <label for=\"description\" className=\"label\">\r\n                Plant\r\n              </label>\r\n              <Select\r\n                id=\"plant\"\r\n                name=\"plant\"\r\n                placeholder=\"plant\"\r\n                value={this.state.plantName}\r\n                onChange={value => this.handleSelect(\"plant\", value)}\r\n                style={{ width: 170 }}\r\n              >\r\n                {this.state.SelectPlants}\r\n              </Select>\r\n              {errors.plantName.length > 0 && (\r\n                <div style={error}>{errors.plantName}</div>\r\n              )}\r\n              <div style={{ height: \"12px\" }} />\r\n            </div>\r\n            <div className=\"input_wrapper\">\r\n              <label for=\"status\" className=\"label\" hidden>\r\n                Status\r\n              </label>\r\n\r\n              <Input\r\n                id=\"status\"\r\n                name=\"status\"\r\n                placeholder=\"status\"\r\n                value={this.state.status}\r\n                onChange={this.handleChange}\r\n                disabled\r\n                hidden\r\n              />\r\n              <div style={{ height: \"12px\" }} />\r\n            </div>\r\n          </MasterLevelForm>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  //getting the global redux state to get the data from the EditPlantReducer.js\r\n  return {\r\n    visible: state.plantLevelReducers.EditPlantReducer.visible,\r\n    type: state.plantLevelReducers.EditPlantReducer.type,\r\n    editPlantData: state.plantLevelReducers.EditPlantReducer.editPlantData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setincomingVisibility: () => {\r\n      dispatch({ type: DISABLE_EDIT_MODE });\r\n      console.log(\"edit modal closed\");\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Addincoming);\r\n","import React, { Component } from \"react\";\r\nimport { FlexContainer } from \"../../styledcomponents/container/FlexGrid\";\r\nimport { connect } from \"react-redux\";\r\nimport Paragraph from \"antd/lib/typography/Paragraph\";\r\nimport AddIncoming from \"../incoming/AddIncoming\";\r\n\r\nconst style = {\r\n  fontSize: \"medium\",\r\n  fontWeight: \"600\",\r\n  alignSelf: \"auto\",\r\n  textAlign: \"justify\",\r\n  padding: \"10px\",\r\n  height: \"25px\",\r\n  flexBasis: \"650px\"\r\n};\r\n\r\nclass ManageIncomingSampleTitle extends Component {\r\n  render() {\r\n    return (\r\n      <FlexContainer titles leveltitles>\r\n        <Paragraph style={style}> Incoming Sample</Paragraph>\r\n        {/* <PrimaryButton\r\n          style={{\r\n            background: \"#001328\",\r\n            color: \"white\",\r\n            border: \"none\"\r\n          }}\r\n          href=\"#/samples/viewincomingstatus\"\r\n        >\r\n          View Test\r\n        </PrimaryButton> */}\r\n        <AddIncoming reload={this.props.reload} />\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = null;\r\n\r\nconst mapDispatchToProps = null;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ManageIncomingSampleTitle);\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\nimport { Icon, Popconfirm, Divider, Modal, Tag } from \"antd\";\r\nimport \"./styleIncoming.css\";\r\nimport { AntTable } from \"../../styledcomponents/table/AntTabl\";\r\nimport { MasterLevelFormTitle } from \"../../styledcomponents/form/MasterLevelForms\";\r\nimport DeliveryReport from \"./deliveryreport/DeliveryReport\";\r\nimport ManageIncomingSampleTitle from \"../titles/ManageIncomingSampleTitle\";\r\nimport { PrimaryButton } from \"../../styledcomponents/button/button\";\r\nimport { SWITCH_TO_EDIT_MODE } from \"../../../redux/action/master/plantlevel/PlantLevel\";\r\nimport { connect } from \"react-redux\";\r\nimport { api } from \"../../services/AxiosService\";\r\nimport Notification from \"../../Constant/Notification\";\r\n\r\nclass ManageIncoming extends Component {\r\n  state = {\r\n    filteredInfo: null,\r\n    sortedInfo: null,\r\n    searchText: \"\",\r\n    deliveryreport: false,\r\n    size: \"small\"\r\n  };\r\n\r\n  componentWillMount() {\r\n    if (window.screen.width > 1900) {\r\n      console.log(\"hooray\");\r\n      this.setState({\r\n        size: \"large\"\r\n      });\r\n    } else if (window.screen.width < 1440) {\r\n      this.setState({\r\n        size: \"small\"\r\n      });\r\n    }\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      deliveryreport: true\r\n    });\r\n  };\r\n\r\n  handleOk = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      deliveryreport: false\r\n    });\r\n  };\r\n\r\n  handleCancel = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      deliveryreport: false\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.getallincoming();\r\n  }\r\n  handleChange = (pagination, filters, sorter) => {\r\n    console.log(\"Various parameters\", pagination, filters, sorter);\r\n    this.setState({\r\n      filteredInfo: filters,\r\n      sortedInfo: sorter\r\n    });\r\n  };\r\n\r\n  getallincoming = () => {\r\n    const datalist = [];\r\n    api(\"GET\", \"supermix\", \"/incoming-samples\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data);\r\n      res.data.results.incomingSamples.map((post, index) => {\r\n        console.log(post);\r\n        datalist.push({\r\n          code: post.code,\r\n          vehicleNo: post.vehicleNo,\r\n          date: post.date,\r\n          status: post.status,\r\n          rawMaterialId: post.rawMaterial.id,\r\n          rawMaterialName: post.rawMaterial.name,\r\n          plantCode: post.plant.code,\r\n          plantName: post.plant.name,\r\n          supplierId: post.supplier.id,\r\n          supplierName: post.supplier.name\r\n        });\r\n        console.log(datalist);\r\n      });\r\n      this.setState({\r\n        datalist\r\n      });\r\n    });\r\n  };\r\n  clearFilters = () => {\r\n    this.setState({ filteredInfo: null });\r\n  };\r\n\r\n  clearAll = () => {\r\n    this.setState({\r\n      filteredInfo: null,\r\n      sortedInfo: null\r\n    });\r\n  };\r\n\r\n  setAgeSort = () => {\r\n    this.setState({\r\n      sortedInfo: {\r\n        order: \"descend\",\r\n        columnKey: \"age\"\r\n      }\r\n    });\r\n  };\r\n\r\n  onChange(pageNumber) {\r\n    console.log(\"Page: \", pageNumber);\r\n  }\r\n  onConfirmdelete(code) {\r\n    console.log(\"delete\");\r\n    console.log(code);\r\n\r\n    api(\"DELETE\", \"supermix\", \"/incoming-sample\", \"\", \"\", code).then(res => {\r\n      console.log(res.data);\r\n      this.getallincoming();\r\n      Notification(\"success\", res.data.message);\r\n    });\r\n    console.log(this.state.id);\r\n  }\r\n\r\n  render() {\r\n    let { sortedInfo, filteredInfo } = this.state;\r\n    sortedInfo = sortedInfo || {};\r\n    filteredInfo = filteredInfo || {};\r\n    const columns = [\r\n      {\r\n        title: \" Code\",\r\n        dataIndex: \"code\",\r\n\r\n        key: \"code\",\r\n        sorter: (a, b) => a.id - b.id,\r\n        sortOrder: sortedInfo.columnKey === \"id\" && sortedInfo.order\r\n      },\r\n      {\r\n        title: \"Supplier Name\",\r\n        dataIndex: \"supplierName\",\r\n\r\n        key: \"suppliername\",\r\n        sorter: (a, b) => a.id - b.id,\r\n        sortOrder: sortedInfo.columnKey === \"id\" && sortedInfo.order\r\n      },\r\n      {\r\n        title: \"Raw Material\",\r\n        dataIndex: \"rawMaterialName\",\r\n        key: \"rawmaterial\",\r\n\r\n        filters: [\r\n          { text: \"Joe\", value: \"Joe\" },\r\n          { text: \"Jim\", value: \"Jim\" }\r\n        ],\r\n        filteredValue: filteredInfo.name || null,\r\n        onFilter: (value, record) => record.name.includes(value),\r\n        sorter: (a, b) => a.name.length - b.name.length,\r\n        sortOrder: sortedInfo.columnKey === \"name\" && sortedInfo.order\r\n      },\r\n      {\r\n        title: \"Delivered Date\",\r\n        dataIndex: \"date\",\r\n        key: \"delivereddate\",\r\n\r\n        filters: [\r\n          { text: \"Vechical1\", value: \"Vechical1\" },\r\n          { text: \"Vechical2\", value: \" Vechical2\" },\r\n          { text: \"Vechical3\", value: \"Vechical3\" },\r\n          { text: \"Vechical4\", value: \"Vechical4\" }\r\n        ],\r\n        filteredValue: filteredInfo.role || null,\r\n        onFilter: (value, record) => record.role.includes(value),\r\n        sorter: (a, b) => a.role.length - b.role.length,\r\n        sortOrder: sortedInfo.columnKey === \"role\" && sortedInfo.order\r\n      },\r\n      {\r\n        title: \"Vechical No\",\r\n        dataIndex: \"vehicleNo\",\r\n        key: \"vehicleno\"\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataIndex: \"status\",\r\n        key: \"status\",\r\n        width: \"7%\",\r\n        render: status => (\r\n          <span>\r\n            {\r\n              <Tag\r\n                color={\r\n                  status === \"PASS\"\r\n                    ? \"green\"\r\n                    : status === \"PROCESS\"\r\n                    ? \"orange\"\r\n                    : status === \"NEW\"\r\n                    ? \"yellow\"\r\n                    : \"red\"\r\n                }\r\n              >\r\n                {status}\r\n              </Tag>\r\n            }\r\n          </span>\r\n        )\r\n      },\r\n\r\n      {\r\n        title: \"Edit & Delete\",\r\n        key: \"action\",\r\n        width: \"7%\",\r\n        render: (text, record = this.state.datalist) => (\r\n          <span>\r\n            <a>\r\n              <Icon\r\n                type=\"edit\"\r\n                style={{ fontSize: \"1.2em\" }}\r\n                onClick={this.props.passEditincomingRecordToModal.bind(\r\n                  this,\r\n                  record\r\n                )}\r\n              />\r\n            </a>\r\n            <Divider type=\"vertical\" />\r\n            <a>\r\n              <Popconfirm\r\n                title=\"Are you sure you want to Delete this?\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: \"red\" }} />\r\n                }\r\n                onConfirm={this.onConfirmdelete.bind(this, record.code)}\r\n              >\r\n                <a href=\"#\">\r\n                  <Icon\r\n                    type=\"delete\"\r\n                    style={{ color: \"red\", fontSize: \"1.2em\" }}\r\n                  />\r\n                </a>\r\n              </Popconfirm>\r\n            </a>\r\n          </span>\r\n        )\r\n      }\r\n    ];\r\n    return (\r\n      <div>\r\n        <AntTable\r\n          maxlength\r\n          nomargin\r\n          columns={columns}\r\n          dataSource={this.state.datalist}\r\n          onChange={this.handleChange}\r\n          size={this.state.size}\r\n          title={() => (\r\n            <ManageIncomingSampleTitle reload={this.getallincoming} />\r\n          )}\r\n        />\r\n        <Modal\r\n          width=\"500px\"\r\n          visible={this.state.deliveryreport}\r\n          onOk={this.handleOk}\r\n          okType={\"default\"}\r\n          onCancel={this.handleCancel}\r\n          closable={false}\r\n          style={{ borderRadius: \"20px\" }}\r\n          title={\r\n            <MasterLevelFormTitle>\r\n              <p\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                Delivery Report\r\n              </p>\r\n              <Icon\r\n                type=\"close-circle\"\r\n                onClick={this.handleCancel}\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              />\r\n            </MasterLevelFormTitle>\r\n          }\r\n          footer={<PrimaryButton type=\"primary\">hellow</PrimaryButton>}\r\n        >\r\n          <DeliveryReport />\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => null;\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    passEditincomingRecordToModal: record => {\r\n      //this payload is the data we pass into redux which is in the row which we clicked\r\n      dispatch({ type: SWITCH_TO_EDIT_MODE, payload: record });\r\n      console.log(record);\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageIncoming);\r\n","import React, { Component } from \"react\";\r\nimport { Input, Modal, Icon, Select, Button, DatePicker} from \"antd\";\r\nimport { PrimaryButton } from \"../../styledcomponents/button/button\";\r\nimport {\r\n  MasterLevelFormTitle,\r\n  MasterLevelForm\r\n} from \"../../styledcomponents/form/MasterLevelForms\";\r\n\r\nclass AddMaterialLoad extends Component {\r\n  state = {\r\n    loading: false,\r\n    visible: false\r\n  };\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({ loading: true });\r\n    setTimeout(() => {\r\n      this.setState({ loading: false, visible: false });\r\n    }, 3000);\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({ visible: false });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    console.log(e);\r\n\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        console.log(\"Received values of form: \", values);\r\n        this.setState({ loading: true });\r\n        setTimeout(() => {\r\n          this.setState({ loading: false, visible: false });\r\n        }, 3000);\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { visible } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <PrimaryButton\r\n          onClick={this.showModal}\r\n          style={{\r\n            background: \"#001328\",\r\n            color: \"white\",\r\n            border: \"none\",\r\n            width: \"auto\",\r\n            marginLeft: \"-10px\"\r\n          }}\r\n        >\r\n          Add Material Load\r\n        </PrimaryButton>\r\n        <Modal\r\n          width='500px'\r\n          visible={visible}\r\n          okType='default'\r\n          closable={false}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          footer={[\r\n            <Button key='back' onClick={this.handleCancel}>\r\n              Return\r\n            </Button>,\r\n            <PrimaryButton\r\n              key='submit'\r\n              // loading={loading}\r\n              onClick={e => this.handleSubmit(e)}\r\n              style={{ background: \"#001328\", color: \"white\", border: \"none\" }}\r\n            >\r\n              Submit\r\n            </PrimaryButton>\r\n          ]}\r\n          title={\r\n            <MasterLevelFormTitle>\r\n              <p\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                Add Material Load\r\n              </p>\r\n              <Icon\r\n                type='close-circle'\r\n                onClick={this.handleCancel}\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              />\r\n            </MasterLevelFormTitle>\r\n          }\r\n        >\r\n          <MasterLevelForm>\r\n            {/* Code */}\r\n            <div className='input_wrapper'>\r\n              <label for='code' className='label'>\r\n                Code:\r\n              </label>\r\n              <Input id='code' name='code' placeholder='Enter the Code ' />\r\n            </div>\r\n\r\n            <div className='input_wrapper'>\r\n              <label for='incoming_sample' className='label'>\r\n                Incoming Sample:\r\n              </label>\r\n\r\n              <Select\r\n                placeholder='Select Incoming Sample '\r\n                id='incoming_sample'\r\n                name='incoming_sample '\r\n                style={{ width: 170 }}\r\n              ></Select>\r\n            </div>\r\n\r\n            <div className='input_wrapper'>\r\n              <label for='project_name' className='label'>\r\n                Quantity:\r\n              </label>\r\n\r\n              <Input\r\n                placeholder='Enter Quantity'\r\n                id='quantity'\r\n                name='quantity '\r\n                style={{ width: 170 }}\r\n              />\r\n            </div>\r\n\r\n            <div className='input_wrapper'>\r\n              <label for='measurement' className='label'>\r\n                Measurement:\r\n              </label>\r\n\r\n              <Input\r\n                placeholder='Enter Measurement'\r\n                id='measurement'\r\n                name='measurement '\r\n                style={{ width: 170 }}\r\n              />\r\n            </div>\r\n\r\n            <div className='input_wrapper'>\r\n              <label for='date' className='label'>\r\n                Date:\r\n              </label>\r\n\r\n              <DatePicker id='date' name='date' placeholder='Select Date' />\r\n            </div>\r\n\r\n            <div className='input_wrapper'>\r\n              <label for='expiry_date' className='label'>\r\n                Expiry Date:\r\n              </label>\r\n\r\n              <DatePicker\r\n                id='expiry_date'\r\n                name='expiry_date'\r\n                placeholder='Select Expiry Date'\r\n              />\r\n            </div>\r\n          </MasterLevelForm>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddMaterialLoad;\r\n","import React, { Component } from \"react\";\r\nimport { FlexContainer } from \"../../styledcomponents/container/FlexGrid\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Paragraph from \"antd/lib/typography/Paragraph\";\r\n\r\nimport { PrimaryButton } from \"../../styledcomponents/button/button\";\r\nimport AddMaterialLoad from \"../materialload/AddMaterialLoad\";\r\nconst style = {\r\n  fontSize: \"medium\",\r\n  fontWeight: \"600\",\r\n  alignSelf: \"auto\",\r\n  textAlign: \"justify\",\r\n  padding: \"10px\",\r\n  height: \"25px\",\r\n  flexBasis: \"650px\"\r\n};\r\n\r\nclass ManageProcessSampleTitle extends Component {\r\n  render() {\r\n    return (\r\n      <FlexContainer titles leveltitles>\r\n        <Paragraph style={style}> Process Sample</Paragraph>\r\n\r\n        <PrimaryButton\r\n          style={{\r\n            background: \"#001328\",\r\n            color: \"white\",\r\n            border: \"none\"\r\n          }}\r\n          href='#/samples/viewprocessstatus'\r\n        >\r\n          View Test\r\n        </PrimaryButton>\r\n        <AddMaterialLoad />\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = null;\r\n\r\nconst mapDispatchToProps = null;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ManageProcessSampleTitle);\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\nimport { Popconfirm, Divider, Icon } from \"antd\";\r\n\r\nimport { AntTable } from \"../../styledcomponents/table/AntTabl\";\r\nimport ManageMaterialLoadSampleTitle from \"../titles/ManageMaterialLoadSample\";\r\n\r\nconst data = [];\r\n\r\nexport default class ManageMaterialLoad extends Component {\r\n  state = {\r\n    searchText: \"\",\r\n    visible: false,\r\n    size: \"small\"\r\n  };\r\n\r\n  componentWillMount() {\r\n    if (window.screen.width > 1900) {\r\n      console.log(\"hooray\");\r\n      this.setState({\r\n        size: \"large\"\r\n      });\r\n    } else if (window.screen.width < 1440) {\r\n      this.setState({\r\n        size: \"small\"\r\n      });\r\n    }\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  handleOk = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleCancel = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleChange = (pagination, filters, sorter) => {\r\n    console.log(\"Various parameters\", pagination, filters, sorter);\r\n  };\r\n\r\n  onChange(pageNumber) {\r\n    console.log(\"Page: \", pageNumber);\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"Code\",\r\n        dataIndex: \"code\",\r\n        key: \"code\"\r\n      },\r\n      {\r\n        title: \"Incoming Sample\",\r\n        dataIndex: \"incomingSample\",\r\n        key: \"incomingSample\"\r\n      },\r\n      {\r\n        title: \"Quantity\",\r\n        dataIndex: \"quantity\",\r\n        key: \"quantity\"\r\n      },\r\n      {\r\n        title: \"Measurement\",\r\n        dataIndex: \"measurement\",\r\n        key: \"measurement\"\r\n      },\r\n\r\n      {\r\n        title: \"Date\",\r\n        dataIndex: \"date\",\r\n        key: \"date\"\r\n      },\r\n      {\r\n        title: \"Expiry Date\",\r\n        dataIndex: \"expiryDate\",\r\n        key: \"expiryDate\"\r\n      },\r\n\r\n      {\r\n        title: \"Edit & Delete\",\r\n        key: \"action\",\r\n        width: \"10%\",\r\n        render: (text, record) => (\r\n          <span>\r\n            <a>\r\n              <Icon type='edit' />\r\n            </a>\r\n            <Divider type='vertical' />\r\n            <a>\r\n              <Popconfirm\r\n                title='Are you sure you want to Delete this?'\r\n                icon={\r\n                  <Icon type='question-circle-o' style={{ color: \"red\" }} />\r\n                }\r\n              >\r\n                <a href='#'>\r\n                  <Icon type='delete'></Icon>\r\n                </a>\r\n              </Popconfirm>\r\n            </a>\r\n          </span>\r\n        )\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <div>\r\n        <AntTable\r\n          maxlength\r\n          nomargin\r\n          title={() => <ManageMaterialLoadSampleTitle />}\r\n          columns={columns}\r\n          dataSource={data}\r\n          onChange={this.handleChange}\r\n          pagination={{ defaultPageSize: 3 }}\r\n          size={this.state.size}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { FlexContainer } from \"../styledcomponents/container/FlexGrid\";\r\n\r\nimport SampleTitleArea from \"./SampleTileArea\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport ManageProcessSample from \"./process/ManageProcessSample\";\r\nimport ManageFinishProduct from \"./finshproduct/ManageFinishProduct\";\r\n\r\nimport ManageIncoming from \"./incoming/ManageIncoming\";\r\nimport ManageMaterialLoad from \"./materialload/ManagematerialLoad\";\r\n\r\nclass SampleMaster extends Component {\r\n  renderComponents = () => {\r\n    if (this.props.routepath === \"/incomingsample\") {\r\n      return <ManageIncoming />;\r\n    } else if (this.props.routepath === \"/processsample\") {\r\n      return <ManageProcessSample />;\r\n    } else if (this.props.routepath === \"/finishproductsample\") {\r\n      return <ManageFinishProduct />;\r\n    } else if (this.props.routepath === \"/materialload\") {\r\n      return <ManageMaterialLoad />;\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <FlexContainer leveltileareafixed>\r\n        <SampleTitleArea />\r\n        {this.renderComponents()}\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    routepath: state.samplesReducers.RoutingBetweenSamples.routepath\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SampleMaster);\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\nimport { AntTable } from \"../../styledcomponents/table/AntTabl\";\r\nimport history from \"../../../Components/Constant/history\";\r\nimport { Button, Tag } from \"antd\";\r\nimport { api } from \"../../services/AxiosService\";\r\n\r\nexport default class ManageTest extends Component {\r\n  state = {\r\n    sampleData: \"\",\r\n    subCategory: \"\"\r\n  };\r\n  componentDidMount() {\r\n    console.log(this.props.testId);\r\n    this.getTestById();\r\n    this.getAll();\r\n  }\r\n  getTestById = () => {\r\n    api(\"GET\", \"supermix\", \"/test\", \"\", \"\", this.props.testId).then(res => {\r\n      console.log(res.data.results.test.testType.materialSubCategory.name);\r\n      this.setState({\r\n        subCategory: res.data.results.test.testType.materialSubCategory.name\r\n      });\r\n      this.getAll();\r\n    });\r\n  };\r\n  testConfig = record => {\r\n    history.push(`/matrialtest/${this.props.testId}/${record.code}`);\r\n\r\n    console.log(record);\r\n  };\r\n\r\n  getAll = () => {\r\n    const datalist = [];\r\n    api(\"GET\", \"supermix\", \"/incoming-samples\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data);\r\n      res.data.results.incomingSamples.map((post, index) => {\r\n        if (\r\n          post.rawMaterial.materialSubCategory.name === this.state.subCategory\r\n        ) {\r\n          datalist.push({\r\n            code: post.code,\r\n            vehicleNo: post.vehicleNo,\r\n            date: post.date,\r\n            status: post.status,\r\n            rawMaterialName: post.rawMaterial.name,\r\n            nature: post.rawMaterial.nature,\r\n            materialSubCategoryName: post.rawMaterial.materialSubCategory.name,\r\n            plantName: post.plant.name,\r\n            supplierName: post.supplier.name\r\n          });\r\n        }\r\n      });\r\n      this.setState({\r\n        sampleData: datalist\r\n      });\r\n    });\r\n  };\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"Sample Code\",\r\n        dataIndex: \"code\",\r\n        key: \"code\",\r\n        width: \"10%\"\r\n      },\r\n      {\r\n        title: \"Name\",\r\n        dataIndex: \"rawMaterialName\",\r\n        key: \"rawMaterialName\",\r\n        width: \"10%\"\r\n      },\r\n      {\r\n        title: \"vehicleNo\",\r\n        dataIndex: \"vehicleNo\",\r\n        key: \"vehicleNo\",\r\n        width: \"10%\"\r\n      },\r\n      {\r\n        title: \"Date\",\r\n        dataIndex: \"date\",\r\n        key: \"date\",\r\n        width: \"10%\"\r\n      },\r\n      {\r\n        title: \"plant\",\r\n        dataIndex: \"plantName\",\r\n        key: \"plantName\",\r\n        width: \"12%\"\r\n      },\r\n      {\r\n        title: \"supplier\",\r\n        dataIndex: \"supplierName\",\r\n        key: \"supplieName\",\r\n        width: \"12%\"\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataIndex: \"status\",\r\n        key: \"status\",\r\n        width: \"10%\",\r\n        render: status => (\r\n          <span>\r\n            {\r\n              <Tag\r\n                color={\r\n                  status == \"PASS\"\r\n                    ? \"green\"\r\n                    : status == \"PROCESS\"\r\n                    ? \"orange\"\r\n                    : status == \"NEW\"\r\n                    ? \"yellow\"\r\n                    : \"red\"\r\n                }\r\n              >\r\n                {status}\r\n              </Tag>\r\n            }\r\n          </span>\r\n        )\r\n      },\r\n      {\r\n        title: \"Test\",\r\n        key: \"test\",\r\n        width: \"15%\",\r\n        render: (record = this.state.sampleData) => (\r\n          <Button onClick={this.testConfig.bind(this, record)}>test</Button>\r\n        )\r\n      }\r\n    ];\r\n    return (\r\n      <AntTable\r\n        title={() => (\r\n          <div style={{ height: \"20px\" }}>\r\n            {/* <p style={styleObj}>{title}</p> */}\r\n          </div>\r\n        )}\r\n        columns={columns}\r\n        dataSource={this.state.sampleData}\r\n        style={{ background: \"white\", width: \"1300px\", marginTop: \"-10px\" }}\r\n        size=\"small\"\r\n        onRow={(record, rowIndex) => {\r\n          return {\r\n            // onClick: event => {testConfig(record)}, // click row\r\n            onDoubleClick: event => {\r\n              this.testConfig(record);\r\n            } // double click row\r\n            // onContextMenu: event => {}, // right button click row\r\n            // onMouseEnter: event => {}, // mouse enter row\r\n            // onMouseLeave: event => {}, // mouse leave row\r\n          };\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport BasicCard from \"../../styledcomponents/card/BasicCard\";\r\nimport { FlexContainer } from \"../../styledcomponents/container/FlexGrid\";\r\n\r\nimport imgObj from \"../../../assets/labtesting.jpg\";\r\n// import { ManageTest, MaterialsType } from \"./TestTrial\";\r\nimport ManageTest from \"./TestTrial\";\r\nimport { NavigationLink } from \"../../styledcomponents/Link/NavLink\";\r\nimport { api } from \"../../services/AxiosService\";\r\n\r\nexport const TestPage = ({ match, location }) => {\r\n  const {\r\n    params: { testId }\r\n  } = match;\r\n\r\n  return (\r\n    <div>\r\n      {/* <div>{MaterialsType(testData[testId - 1].typeData)}</div>\r\n      <div style={{ height: \"40px\" }}></div> */}\r\n      <div>\r\n        <ManageTest testId={testId} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default class TestTrialMaster extends Component {\r\n  state = {\r\n    testByTest: \"\"\r\n  };\r\n  componentDidMount() {\r\n    console.log(this.props.typeId);\r\n    this.getTestByTestType();\r\n  }\r\n  getTestByTestType = () => {\r\n    api(\r\n      \"GET\",\r\n      \"supermix\",\r\n      \"/test/test-type\",\r\n      \"\",\r\n      \"\",\r\n      `${this.props.typeId}`\r\n    ).then(res => {\r\n      let testByTest = res.data.results.testType.map((post, index) => {\r\n        return (\r\n          <NavigationLink to={`/test/${post.id}`}>\r\n            <BasicCard\r\n              testtrial\r\n              finalproduct\r\n              imgUrl={imgObj}\r\n              style={{ margin: \"10px\" }}\r\n            >\r\n              <h1 style={styleObj}>{post.name}</h1>\r\n            </BasicCard>\r\n          </NavigationLink>\r\n        );\r\n      });\r\n      this.setState({\r\n        testByTest\r\n      });\r\n      console.log(res.data);\r\n    });\r\n  };\r\n  render() {\r\n    return <FlexContainer home>{this.state.testByTest}</FlexContainer>;\r\n  }\r\n}\r\nconst styleObj = {\r\n  fontSize: 20,\r\n  color: \"#fff\",\r\n  textAlign: \"center\",\r\n  paddingTop: \"30px\",\r\n  fontFamily: \"Arial\"\r\n};\r\n\r\n// const styleDiv = {\r\n//   display: \"flex\",\r\n//   flexdirection: \"column\",\r\n//   flexwrap: \"wrap\",\r\n//   justifycontent: \"spaceevenly\",\r\n//   width: \"800px\"\r\n// };\r\n","import React, { Component } from \"react\";\r\nimport { FlexContainer } from \"../../styledcomponents/container/FlexGrid\";\r\nimport BasicCard from \"../../styledcomponents/card/BasicCard\";\r\nimport imgObj from \"../../../assets/labtesting.jpg\";\r\n// import { ManageTest, MaterialsType } from \"./TestTrial\";\r\nimport { NavigationLink } from \"../../styledcomponents/Link/NavLink\";\r\nimport TestTrialMaster from \"../../test/testtrial/TestTrialMaster\";\r\nimport { api } from \"../../services/AxiosService\";\r\n\r\nexport const TestTypePage = ({ match, location }) => {\r\n  const {\r\n    params: { testTypeId }\r\n  } = match;\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <TestTrialMaster typeId={testTypeId} />\r\n      </div>\r\n      {/* <div style={{ height: \"40px\" }}></div>\r\n      {/* <div>\r\n          {ManageTest(testData[testId - 1].data, testData[testId - 1].name)}\r\n        </div> */}{\" \"}\r\n      */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default class TestType extends Component {\r\n  state = {\r\n    typeData: \"\"\r\n  };\r\n  componentDidMount() {\r\n    this.getallTypes();\r\n  }\r\n  getallTypes = () => {\r\n    api(\"GET\", \"supermix\", \"/test-types\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data);\r\n      let typeData = res.data.results.testTypes.map((post, index) => {\r\n        return (\r\n          <NavigationLink to={`/testtype/${post.id}`}>\r\n            <BasicCard\r\n              testtrial\r\n              finalproduct\r\n              imgUrl={imgObj}\r\n              style={{ margin: \"10px\" }}\r\n            >\r\n              <h1 style={styleObj}>{post.type}</h1>\r\n            </BasicCard>\r\n          </NavigationLink>\r\n        );\r\n      });\r\n      this.setState({\r\n        typeData\r\n      });\r\n    });\r\n  };\r\n  render() {\r\n    return <FlexContainer home>{this.state.typeData}</FlexContainer>;\r\n  }\r\n}\r\nconst styleObj = {\r\n  fontSize: 20,\r\n  color: \"#fff\",\r\n  textAlign: \"center\",\r\n  paddingTop: \"30px\",\r\n  fontFamily: \"Arial\"\r\n};\r\n","/* eslint-disable jsx-a11y/alt-text */\r\nimport React, { Component } from \"react\";\r\n\r\nimport { Input, Icon, Button, Avatar } from \"antd\";\r\nimport FollowAt from \"react-social-media-follow\";\r\nimport \"./Profilestyle.css\";\r\n// import UserIcon from \"../../assets/user3.png\";\r\n\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport { FlexContainer } from \"../styledcomponents/container/FlexGrid\";\r\nimport { MasterLevelForm } from \"../styledcomponents/form/MasterLevelForms\";\r\n\r\nconst links = [\r\n  \"https://twitter.com/magicahmd\",\r\n  \"https://www.facebook.com/pages/category/Industrial-Company/Tokyo-Cement-Co-Lanka-PLC-265617693452213\",\r\n  \"https://www.instagram.com/ahmdsalhi\"\r\n];\r\nclass Profile extends Component {\r\n  render() {\r\n    return (\r\n      <FlexContainer>\r\n        <FlexContainer>\r\n          <div className='profileCard'>\r\n            <div className='card-background'>\r\n              <Avatar size={100} style={{ marginTop: \"20px\", padding: \"10px\" }}>\r\n                <Icon\r\n                  type='user'\r\n                  style={{ fontSize: \"50px\", padding: \"10px\" }}\r\n                />\r\n              </Avatar>\r\n              {/* <img src={UserIcon} className='card-image' /> */}\r\n            </div>\r\n            <div className='card-info'>\r\n              <h1 className='username'>User Name</h1>\r\n              <br />\r\n              <p className='profileHeading '>\r\n                {\" \"}\r\n                Lorem Ipsum is simply dummy text of the printing and typesetting\r\n                industry.\r\n              </p>\r\n              <div className='profilefollow'>\r\n                <FollowAt links={links} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </FlexContainer>\r\n        <FlexContainer column>\r\n          <div className='profileForm'>\r\n            <h4 className='formHeading'>Profile Details</h4>\r\n            <MasterLevelForm>\r\n              {/* first Name */}\r\n              <div className='input_wrapper'>\r\n                <label for='id' className='label'>\r\n                  First Name\r\n                </label>\r\n                <Input id='id' name='id' placeholder='' />\r\n              </div>\r\n\r\n              {/* Last Name */}\r\n\r\n              <div className='input_wrapper'>\r\n                <label for='customer_name' className='label'>\r\n                  Last Name\r\n                </label>\r\n                <Input id='customer_name' name='customer_name' placeholder='' />\r\n              </div>\r\n\r\n              {/* Email Address */}\r\n\r\n              <div className='input_wrapper'>\r\n                <label for='address' className='label'>\r\n                  Email Address\r\n                </label>\r\n                <Input id='address' name='address' placeholder='' />\r\n              </div>\r\n\r\n              {/* Address */}\r\n\r\n              <div className='input_wrapper'>\r\n                <label for='address' className='label'>\r\n                  Address\r\n                </label>\r\n                <Input id='address' name='address' placeholder='' />\r\n              </div>\r\n\r\n              {/* Phone Number */}\r\n\r\n              <div className='input_wrapper'>\r\n                <label for='phoneno' className='label'>\r\n                  Phone Number\r\n                </label>\r\n                <Input id='phoneno' name='phoneno' placeholder='' />\r\n              </div>\r\n\r\n              {/* UserName */}\r\n\r\n              <div className='input_wrapper'>\r\n                <label for='username' className='label'>\r\n                  UserName\r\n                </label>\r\n                <Input id='username' name='username' placeholder='' />\r\n              </div>\r\n\r\n              {/* Plant */}\r\n\r\n              <div className='input_wrapper'>\r\n                <label for='plant' className='label'>\r\n                  Plant{\" \"}\r\n                </label>\r\n                <Input id='plant' name='plant' placeholder='' />\r\n              </div>\r\n\r\n              {/* Role */}\r\n\r\n              <div className='input_wrapper'>\r\n                <label for='role' className='label'>\r\n                  Role\r\n                </label>\r\n                <Input id='role' name='role' placeholder='' />\r\n              </div>\r\n\r\n              {/* Description */}\r\n\r\n              <div className='input_wrapper'>\r\n                <label for='phoneno' className='label'>\r\n                  Description\r\n                </label>\r\n                <TextArea\r\n                  id='description'\r\n                  name='phoneno'\r\n                  placeholder=''\r\n                  style={{ width: \"400px\" }}\r\n                />\r\n              </div>\r\n              {/* Update Button */}\r\n\r\n              <div className='profilebutton'>\r\n                <Button type='primary'>Update profile</Button>\r\n              </div>\r\n            </MasterLevelForm>\r\n          </div>\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Component } from \"react\";\r\nimport { Table, Switch, Button } from \"antd\";\r\nimport { PrivlegesFormTitle } from \"../styledcomponents/form/MasterLevelForms\";\r\nimport { connect } from \"react-redux\";\r\nimport { CHECK_WHETHER_DEFAULT_PRIVILEDGE_LEVEL } from \"../../redux/action/topbarnavigation/PrivilegeLevelNavigation\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Company Admin Privillages\",\r\n    dataIndex: \"name\",\r\n    width: \"25%\",\r\n    render: text => <a href=' '>{text}</a>\r\n  },\r\n  {\r\n    title: \"QAQC Manager\",\r\n    width: \"15%\",\r\n    render: (e, record) => <Switch defaultChecked={e} size='small' />\r\n  },\r\n  {\r\n    title: \"QAQC Technician\",\r\n    width: \"15%\",\r\n    render: (e, record) => <Switch defaultChecked={e} size='small' />\r\n  },\r\n  {\r\n    title: \"QAQC Staff\",\r\n    width: \"15%\",\r\n    render: (e, record) => <Switch defaultChecked={e} size='small' />\r\n  },\r\n  {\r\n    title: \"QAQC Assistant Manager\",\r\n    width: \"15%\",\r\n    render: (e, record) => <Switch defaultChecked={e} size='small' />\r\n  },\r\n  {\r\n    title: \"QAQC Tester\",\r\n    width: \"15%\",\r\n    render: (e, record) => <Switch defaultChecked={e} size='small' />\r\n  }\r\n];\r\nconst data = [\r\n  {\r\n    key: \"1\",\r\n    name: \"Add Plant Master\"\r\n  },\r\n  {\r\n    key: \"2\",\r\n    name: \"Delete Plant  Master\"\r\n  },\r\n  {\r\n    key: \"3\",\r\n    name: \"Edit Plant Master\"\r\n  },\r\n  {\r\n    key: \"4\",\r\n    name: \"View Plant Master\"\r\n  },\r\n  {\r\n    key: \"5\",\r\n    name: \"Add User Role\"\r\n  },\r\n  {\r\n    key: \"6\",\r\n    name: \"Delete User Role\"\r\n  },\r\n  {\r\n    key: \"7\",\r\n    name: \"Edit User Role\"\r\n  },\r\n  {\r\n    key: \"8\",\r\n    name: \"View User Role\"\r\n  },\r\n  {\r\n    key: \"9\",\r\n    name: \"Add Employee Master\"\r\n  },\r\n  {\r\n    key: \"10\",\r\n    name: \"Delete Employee Master\"\r\n  },\r\n  {\r\n    key: \"11\",\r\n    name: \"Edit Employee Master\"\r\n  },\r\n  {\r\n    key: \"12\",\r\n    name: \"View Employee Master\"\r\n  },\r\n  {\r\n    key: \"13\",\r\n    name: \"Add Customer Master \"\r\n  },\r\n  {\r\n    key: \"14\",\r\n    name: \"Delete Customer Master\"\r\n  },\r\n  {\r\n    key: \"15\",\r\n    name: \"Edit Customer Master\"\r\n  },\r\n  {\r\n    key: \"16\",\r\n    name: \"View Customer Master\"\r\n  },\r\n  {\r\n    key: \"17\",\r\n    name: \"Add Supplier Master \"\r\n  },\r\n  {\r\n    key: \"18\",\r\n    name: \"Delete Supplier Master\"\r\n  },\r\n  {\r\n    key: \"19\",\r\n    name: \"Edit Supplier Master\"\r\n  },\r\n  {\r\n    key: \"20\",\r\n    name: \"View Supplier Master\"\r\n  },\r\n  {\r\n    key: \"21\",\r\n    name: \"Add Material Type Master \"\r\n  },\r\n  {\r\n    key: \"22\",\r\n    name: \"Delete Material Type Master\"\r\n  },\r\n  {\r\n    key: \"23\",\r\n    name: \"Edit Material Type Master\"\r\n  },\r\n  {\r\n    key: \"24\",\r\n    name: \"View Material Type Master\"\r\n  },\r\n  {\r\n    key: \"25\",\r\n    name: \"Add Main Category\"\r\n  },\r\n  {\r\n    key: \"26\",\r\n    name: \"Delete Main Category\"\r\n  },\r\n  {\r\n    key: \"27\",\r\n    name: \"Edit Main Category \"\r\n  },\r\n  {\r\n    key: \"28\",\r\n    name: \"View Main Category\"\r\n  },\r\n  {\r\n    key: \"29\",\r\n    name: \"Add Sub Category\"\r\n  },\r\n  {\r\n    key: \"30\",\r\n    name: \"Delete Sub Category\"\r\n  },\r\n  {\r\n    key: \"31\",\r\n    name: \"Edit Sub Category\"\r\n  },\r\n  {\r\n    key: \"32\",\r\n    name: \"View Sub Category\"\r\n  },\r\n  {\r\n    key: \"33\",\r\n    name: \"Add Sample Category\"\r\n  },\r\n  {\r\n    key: \"34\",\r\n    name: \"Edit Sample Category\"\r\n  },\r\n  {\r\n    key: \"35\",\r\n    name: \" Delete Sample Category\"\r\n  },\r\n  {\r\n    key: \"36\",\r\n    name: \"View Sample Category\"\r\n  },\r\n  {\r\n    key: \"37\",\r\n    name: \"Add Unit Master\"\r\n  },\r\n  {\r\n    key: \"38\",\r\n    name: \"Delete Unit Master\"\r\n  },\r\n  {\r\n    key: \"39\",\r\n    name: \"Edit Unit Master\"\r\n  },\r\n  {\r\n    key: \"40\",\r\n    name: \"View Unit Master\"\r\n  },\r\n  {\r\n    key: \"41\",\r\n    name: \"Add Material Master\"\r\n  },\r\n  {\r\n    key: \"42\",\r\n    name: \"Delete Material Master\"\r\n  },\r\n  {\r\n    key: \"43\",\r\n    name: \"Edit Material Master \"\r\n  },\r\n  {\r\n    key: \"44\",\r\n    name: \"View Material Master\"\r\n  },\r\n  {\r\n    key: \"45\",\r\n    name: \"Add Material Nature \"\r\n  },\r\n  {\r\n    key: \"46\",\r\n    name: \"Delete Material  Nature\"\r\n  },\r\n  {\r\n    key: \"47\",\r\n    name: \"Edit Material Nature\"\r\n  },\r\n  {\r\n    key: \"48\",\r\n    name: \"View Material Nature\"\r\n  },\r\n  {\r\n    key: \"49\",\r\n    name: \"Add Equipemnt Master \"\r\n  },\r\n  {\r\n    key: \"50\",\r\n    name: \"Delete Equipment Master\"\r\n  },\r\n  {\r\n    key: \"51\",\r\n    name: \"Edit Equipment Master\"\r\n  },\r\n  {\r\n    key: \"52\",\r\n    name: \"View Equipment Master\"\r\n  },\r\n  {\r\n    key: \"53\",\r\n    name: \"Add Eqipment Calibration  \"\r\n  },\r\n  {\r\n    key: \"54\",\r\n    name: \"Delete Equipment Calibration\"\r\n  },\r\n  {\r\n    key: \"55\",\r\n    name: \"Edit Equipment Calibration\"\r\n  },\r\n  {\r\n    key: \"56\",\r\n    name: \"View Equipment Calibration\"\r\n  },\r\n  {\r\n    key: \"57\",\r\n    name: \"Add Test Level Master\"\r\n  },\r\n  {\r\n    key: \"58\",\r\n    name: \"Delete Test Level Master\"\r\n  },\r\n  {\r\n    key: \"59\",\r\n    name: \"Edit Test Level Master\"\r\n  },\r\n  {\r\n    key: \"60\",\r\n    name: \"View Test Level Master\"\r\n  },\r\n  {\r\n    key: \"61\",\r\n    name: \"Add Parameter Master\"\r\n  },\r\n  {\r\n    key: \"62\",\r\n    name: \"Delete Parameter Master\"\r\n  },\r\n  {\r\n    key: \"63\",\r\n    name: \"Edit Parameter Master\"\r\n  },\r\n  {\r\n    key: \"64\",\r\n    name: \"View Parameter Master\"\r\n  }\r\n];\r\n\r\nclass CompanyPriviledge extends Component {\r\n  componentWillMount() {\r\n    console.log(\"component rendered\");\r\n    if (this.props.priviledgekeys === \"priviledges\") {\r\n      console.log(\"out passed\");\r\n    } else {\r\n      console.log(\"refreshed\");\r\n      this.props.navigationRefresh();\r\n    }\r\n  }\r\n  render() {\r\n    const { handleSwitchChange } = this.props;\r\n    // const routes = [\r\n    //   {\r\n    //     path: \"index\",\r\n    //     breadcrumbName: \"Settings\"\r\n    //   },\r\n    //   {\r\n    //     path: \"first\",\r\n    //     breadcrumbName: \"Privilege\"\r\n    //   },\r\n    //   {\r\n    //     path: \"second\",\r\n    //     breadcrumbName: \"Company Privilege\"\r\n    //   }\r\n    // ];\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          style={{\r\n            padding: \"0 24px 24px 24px\",\r\n            background: \"#fff\",\r\n            minHeight: \"500px\",\r\n            boxShadow: \"0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24)\",\r\n            transition: \"all 0.3s cubic-bezier(.25,.8,.25,1)\"\r\n          }}\r\n        >\r\n          <PrivlegesFormTitle>Privileges</PrivlegesFormTitle>\r\n          <br />\r\n\r\n          <Table\r\n            columns={columns}\r\n            dataSource={data}\r\n            onChange={handleSwitchChange}\r\n            pagination={{ pageSize: 7 }}\r\n            size='small'\r\n          />\r\n          <p align='right'>\r\n            <Button type='primary'>Set Priviledges</Button>\r\n          </p>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    priviledgekeys: state.priviledgeLevelNavigationReducer.priviledgekeys\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    navigationRefresh: () => {\r\n      dispatch({ type: CHECK_WHETHER_DEFAULT_PRIVILEDGE_LEVEL });\r\n      console.log(\"check default settings key while settings clicked\");\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CompanyPriviledge);\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./FPViewStyle.css\";\r\nimport { FlexContainer } from \"../../../styledcomponents/container/FlexGrid\";\r\nimport { NavigationLink } from \"../../../styledcomponents/Link/NavLink\";\r\nimport { ImageCard } from \"../../../styledcomponents/card/ImageCard\";\r\nimport { Heading1 } from \"../../../styledcomponents/typography/typography\";\r\n\r\nclass FPViewStatus extends Component {\r\n  render() {\r\n    return (\r\n      <div className='fpViewStatus'>\r\n        <FlexContainer\r\n          style={{ justifyContent: \"space-around\", paddingTop: \"20px\" }}\r\n        >\r\n          <NavigationLink to=''>\r\n            <ImageCard reports>\r\n              <div style={{ display: \"flex\", padding: \"5px\", margin: \"10px\" }}>\r\n                <Heading1>Strength Test</Heading1>\r\n              </div>\r\n            </ImageCard>\r\n          </NavigationLink>\r\n\r\n          <NavigationLink to=''>\r\n            <ImageCard reports>\r\n              <div style={{ display: \"flex\", padding: \"5px\", margin: \"10px\" }}>\r\n                <Heading1>Slump Test</Heading1>\r\n              </div>\r\n            </ImageCard>\r\n          </NavigationLink>\r\n\r\n          <NavigationLink to=''>\r\n            <ImageCard reports>\r\n              <div style={{ display: \"flex\", padding: \"5px\", margin: \"10px\" }}>\r\n                <Heading1>Moisture Test</Heading1>\r\n              </div>\r\n            </ImageCard>\r\n          </NavigationLink>\r\n        </FlexContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FPViewStatus;\r\n","import React, { Component } from \"react\";\r\nimport { Icon } from \"antd\";\r\nimport BasicCard from \"../../styledcomponents/card/BasicCard\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  TileArea,\r\n  TileAreaText,\r\n  TileAreaAction\r\n} from \"../../styledcomponents/card/TileArea\";\r\nimport {\r\n  ROUTE_TO_RAW_MATERIAL_TEST_RESULTS,\r\n  ROUTE_TO_FINISH_PRODUCT_TEST_RESULTS,\r\n  ROUTE_TO_SIEVE_TEST_RESULTS\r\n} from \"../../../redux/action/testresults/TestResults\";\r\n\r\nclass TestResultsTileArea extends Component {\r\n  render() {\r\n    return (\r\n      <TileArea>\r\n        <BasicCard\r\n          finalproduct\r\n          tileareacard\r\n          size=\"medium\"\r\n          hoverable={true}\r\n          onClick={this.props.routeToRawMaterialTestResults}\r\n        >\r\n          <TileAreaText unit testreport>\r\n            Raw Material Test Result\r\n          </TileAreaText>\r\n          <TileAreaAction>\r\n            <Icon\r\n              filled\r\n              type=\"plus\"\r\n              style={{ color: \"red\", fontSize: \"22px\" }}\r\n            />\r\n          </TileAreaAction>\r\n        </BasicCard>\r\n        <BasicCard\r\n          finalproduct\r\n          tileareacard\r\n          size=\"medium\"\r\n          hoverable={true}\r\n          onClick={this.props.routeToSieveTestResults}\r\n        >\r\n          <TileAreaText unit testreport>\r\n            Sieve Test Result\r\n          </TileAreaText>\r\n          <TileAreaAction>\r\n            <Icon\r\n              filled\r\n              type=\"plus\"\r\n              style={{ color: \"red\", fontSize: \"22px\" }}\r\n            />\r\n          </TileAreaAction>\r\n        </BasicCard>\r\n\r\n        <BasicCard\r\n          finalproduct\r\n          tileareacard\r\n          size=\"small\"\r\n          hoverable={true}\r\n          onClick={this.props.routeToFinishProductTestResults}\r\n        >\r\n          <TileAreaText unit testreport>\r\n            Finish Product Test Result\r\n          </TileAreaText>\r\n          <TileAreaAction>\r\n            <Icon\r\n              filled\r\n              type=\"plus\"\r\n              style={{ color: \"red\", fontSize: \"22px\" }}\r\n            />\r\n          </TileAreaAction>\r\n        </BasicCard>\r\n      </TileArea>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => null;\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    routeToRawMaterialTestResults: () => {\r\n      dispatch({ type: ROUTE_TO_RAW_MATERIAL_TEST_RESULTS });\r\n      console.log(\"toggled to raw material results screen\");\r\n    },\r\n    routeToFinishProductTestResults: () => {\r\n      dispatch({ type: ROUTE_TO_FINISH_PRODUCT_TEST_RESULTS });\r\n      console.log(\"toggled to finish product results screen\");\r\n    },\r\n    routeToSieveTestResults: () => {\r\n      dispatch({ type: ROUTE_TO_SIEVE_TEST_RESULTS });\r\n      console.log(\"toggled to sieve results screen\");\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TestResultsTileArea);\r\n","export const ROUTE_TO_RAW_MATERIAL_TEST_RESULTS =\r\n  \"ROUTE_TO_RAW_MATERIAL_TEST_RESULTS\";\r\nexport const ROUTE_TO_FINISH_PRODUCT_TEST_RESULTS =\r\n  \"ROUTE_TO_FINISH_PRODUCT_TEST_RESULTS\";\r\nexport const ROUTE_TO_SIEVE_TEST_RESULTS = \"ROUTE_TO_SIEVE_TEST_RESULTS\";\r\n\r\n// Toggle Finish Product Drawer\r\nexport const TOGGLE_FINISH_PRODUCT_DRAWER = \"TOGGLE_FINISH_PRODUCT_DRAWER\";\r\n// Close Finish Product Drawer\r\nexport const CLOSE_FINISH_PRODUCT_DRAWER = \"CLOSE_FINISH_PRODUCT_DRAWER\";\r\n","import React, { Component } from \"react\";\r\nimport { FlexContainer } from \"../../../styledcomponents/container/FlexGrid\";\r\nimport { PrimaryButton } from \"../../../styledcomponents/button/button\";\r\nimport theme from \"../../../../theme\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  TOGGLE_FINISH_PRODUCT_DRAWER,\r\n  CLOSE_FINISH_PRODUCT_DRAWER\r\n} from \"../../../../redux/action/testresults/TestResults\";\r\nimport { Drawer, Select, Input } from \"antd\";\r\n\r\nconst Option = Select;\r\n\r\nclass RawMaterialTitle extends Component {\r\n  state = {\r\n    accuracy: \"accurate\"\r\n  };\r\n  onChange = value => {\r\n    console.log(value);\r\n    this.setState({\r\n      accuracy: value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <FlexContainer>\r\n        <h3>Raw Material Test Results</h3>\r\n        <PrimaryButton\r\n          type='primary'\r\n          style={{\r\n            background: theme.colors.primary,\r\n            outline: \"none\",\r\n            border: \"none\"\r\n          }}\r\n          onClick={this.props.toggleFinishProductFilterDrawer}\r\n        >\r\n          Filter\r\n        </PrimaryButton>\r\n        <Drawer\r\n          title='Customize Filter'\r\n          placement='right'\r\n          closable={false}\r\n          onClose={this.props.onCloseFinishProductFilterDrawer}\r\n          visible={this.props.visible}\r\n          width={520}\r\n        >\r\n          <FlexContainer column style={{ height: \"130px\" }}>\r\n            <div>\r\n              <h4>Filter By</h4>\r\n              <Select\r\n                id='filter_by'\r\n                name='filter_by'\r\n                placeholder='Select Filter'\r\n                style={{ width: \"180px\" }}\r\n              >\r\n                <Option value='strength'>Material Wise</Option>\r\n                <Option value='sample'>Sample Wise</Option>\r\n                <Option value='test'>Test Wise</Option>\r\n                <Option value='status'>Status Wise (Pass/Fail)</Option>\r\n                <Option value='plant'>Plant Wise</Option>\r\n              </Select>\r\n            </div>\r\n            <FlexContainer\r\n              style={{ background: \"#D6E3F8\", height: \"50px\", padding: \"10px\" }}\r\n            >\r\n              <Select\r\n                id='accuracy'\r\n                name='accuracy'\r\n                style={{ width: \"120px\" }}\r\n                defaultValue='accurate'\r\n                value={this.state.accuracy}\r\n                onChange={this.onChange}\r\n              >\r\n                <Option value='between'>Between</Option>\r\n                <Option value='accurate'>Accurate</Option>\r\n              </Select>\r\n              {this.state.accuracy === \"accurate\" ? (\r\n                <Input\r\n                  id='grade'\r\n                  name='grade'\r\n                  style={{ width: \"180px\" }}\r\n                  placeholder='Grade'\r\n                />\r\n              ) : (\r\n                <div style={{ marginLeft: \"-5px\" }}>\r\n                  <Input\r\n                    id='max'\r\n                    name='max'\r\n                    placeholder='Maximum'\r\n                    style={{ width: \"100px\" }}\r\n                  />\r\n                  <PrimaryButton disabled>~</PrimaryButton>\r\n                  <Input\r\n                    id='min'\r\n                    name='min'\r\n                    placeholder='Minimum'\r\n                    style={{ width: \"100px\" }}\r\n                  />\r\n                </div>\r\n              )}\r\n              <PrimaryButton\r\n                type='primary'\r\n                style={{ background: theme.colors.primary, border: \"none\" }}\r\n              >\r\n                Search\r\n              </PrimaryButton>\r\n            </FlexContainer>\r\n          </FlexContainer>\r\n        </Drawer>\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    visible: state.testResultsReducers.ToggleFilterDrawers.FPvisible\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    toggleFinishProductFilterDrawer: () => {\r\n      dispatch({ type: TOGGLE_FINISH_PRODUCT_DRAWER });\r\n      console.log(\"toggle finish product filter drawer\");\r\n    },\r\n    onCloseFinishProductFilterDrawer: () => {\r\n      dispatch({ type: CLOSE_FINISH_PRODUCT_DRAWER });\r\n      console.log(\"close finish product filter drawer\");\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RawMaterialTitle);\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\nimport { Popconfirm, Divider, Icon, Modal } from \"antd\";\r\n\r\nimport { AntTable } from \"../../../styledcomponents/table/AntTabl\";\r\nimport RawMaterialTitle from \"../titles/RawMaterialTitle\";\r\nimport { api } from \"../../../services/AxiosService\";\r\nimport { FlexContainer } from \"../../../styledcomponents/container/FlexGrid\";\r\nimport Notification from \"../../../Constant/Notification\";\r\nimport history from \"../../../../Components/Constant/history\";\r\n\r\nexport default class ManageRawMaterial extends Component {\r\n  state = {\r\n    filteredInfo: null,\r\n    sortedInfo: null,\r\n    searchText: \"\",\r\n    visible: false,\r\n    size: \"small\",\r\n    materialTests: [],\r\n    filteredTestTrials: []\r\n  };\r\n\r\n  //  get all plant API\r\n  getAllMaterialTestTrials = () => {\r\n    api(\"GET\", \"supermix\", \"/material-tests\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data.results);\r\n      this.setState({\r\n        materialTests: res.data.results.materialTests\r\n      });\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getAllMaterialTestTrials();\r\n  }\r\n\r\n  componentWillMount() {\r\n    if (window.screen.width > 1900) {\r\n      console.log(\"hooray\");\r\n      this.setState({\r\n        size: \"large\"\r\n      });\r\n    } else if (window.screen.width < 1440) {\r\n      this.setState({\r\n        size: \"small\"\r\n      });\r\n    }\r\n  }\r\n\r\n  showTestTrials = code => {\r\n    const { filteredTestTrials } = this.state;\r\n    console.log(code);\r\n\r\n    api(\r\n      \"GET\",\r\n      \"supermix\",\r\n      \"/material-test-trial/material-test\",\r\n      \"\",\r\n      \"\",\r\n      code\r\n    ).then(res => {\r\n      console.log(res.data.results);\r\n\r\n      console.log(res.data.results.materialTest.length);\r\n      for (let j = 0; j < res.data.results.materialTest.length; j++) {\r\n        console.log(\"hit\");\r\n        console.log(res.data.results.materialTest[j].code);\r\n        filteredTestTrials.push({\r\n          code: res.data.results.materialTest[j].code,\r\n          trialNo: res.data.results.materialTest[j].trialNo,\r\n          result: res.data.results.materialTest[j].result\r\n        });\r\n        console.log(filteredTestTrials);\r\n      }\r\n      this.setState({\r\n        visible: true\r\n      });\r\n    });\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  handleOk = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n    this.state.filteredTestTrials.splice(\r\n      0,\r\n      this.state.filteredTestTrials.length\r\n    );\r\n    console.log(this.state.filteredTestTrials);\r\n  };\r\n\r\n  handleCancel = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n    this.state.filteredTestTrials.splice(\r\n      0,\r\n      this.state.filteredTestTrials.length\r\n    );\r\n    console.log(this.state.filteredTestTrials);\r\n  };\r\n\r\n  handleChange = (pagination, filters, sorter) => {\r\n    console.log(\"Various parameters\", pagination, filters, sorter);\r\n    this.setState({\r\n      filteredInfo: filters,\r\n      sortedInfo: sorter\r\n    });\r\n  };\r\n\r\n  clearFilters = () => {\r\n    this.setState({ filteredInfo: null });\r\n  };\r\n\r\n  clearAll = () => {\r\n    this.setState({\r\n      filteredInfo: null,\r\n      sortedInfo: null\r\n    });\r\n  };\r\n\r\n  setAgeSort = () => {\r\n    this.setState({\r\n      sortedInfo: {\r\n        order: \"descend\",\r\n        columnKey: \"code\"\r\n      }\r\n    });\r\n  };\r\n\r\n  onChange(pageNumber) {\r\n    console.log(\"Page: \", pageNumber);\r\n  }\r\n  onConfirmdelete(id) {\r\n    console.log(id);\r\n\r\n    api(\"DELETE\", \"supermix\", \"/material-test\", \"\", \"\", id).then(res => {\r\n      console.log(res.data);\r\n      this.getAllMaterialTestTrials();\r\n      Notification(\"success\", res.data.message);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"Code\",\r\n        dataIndex: \"code\",\r\n        key: \"code\"\r\n      },\r\n      {\r\n        title: \"Date\",\r\n        dataIndex: \"date\",\r\n        key: \"date\"\r\n      },\r\n      {\r\n        title: \"No of Trial\",\r\n        dataIndex: \"noOfTrial\",\r\n        key: \"noOfTrial\"\r\n      },\r\n      {\r\n        title: \"Average\",\r\n        dataIndex: \"average\",\r\n        key: \"average\"\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataIndex: \"status\",\r\n        key: \"status\"\r\n      },\r\n\r\n      {\r\n        title: \"Test Level\",\r\n        dataIndex: \"testLevel\",\r\n        key: \"testLevel\"\r\n      },\r\n      {\r\n        title: \"Incoming Sample\",\r\n        dataIndex: \"incomingSampleCode\",\r\n        key: \"incomingSampleCode\"\r\n      },\r\n      {\r\n        title: \"Test Name\",\r\n        dataIndex: \"testName\",\r\n        key: \"testName\"\r\n      },\r\n      {\r\n        title: \"Material State\",\r\n        dataIndex: \"materialState\",\r\n        key: \"materialState\"\r\n      },\r\n      {\r\n        title: \"Trials\",\r\n        key: \"trials\",\r\n        render: (text, record = this.state.materialTests) => (\r\n          <Icon\r\n            type=\"container\"\r\n            style={{ color: \"green\" }}\r\n            onClick={this.showTestTrials.bind(this, record.code)}\r\n          />\r\n        )\r\n      },\r\n      {\r\n        title: \"Test\",\r\n        key: \"test\",\r\n        render: (text, record = this.state.materialTests) => (\r\n          <Icon\r\n            type=\"container\"\r\n            style={{ color: \"green\" }}\r\n            onClick={() =>\r\n              history.push(\r\n                `/matrialtest/${record.testId}/${record.incomingSampleCode}/${record.code}`\r\n              )\r\n            }\r\n          />\r\n        )\r\n      },\r\n      {\r\n        title: \"Edit & Delete\",\r\n        key: \"action\",\r\n        width: \"7%\",\r\n        render: (text, record = this.state.datalist) => (\r\n          <span>\r\n            <a>\r\n              {/* <Icon\r\n                type=\"edit\"\r\n                onClick={this.props.passEditSubManageCategoryToModal.bind(\r\n                  this,\r\n                  record\r\n                )}\r\n              /> */}\r\n            </a>\r\n            <Divider type=\"vertical\" />\r\n            <a>\r\n              <Popconfirm\r\n                title=\"Are you sure you want to Delete this?\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: \"red\" }} />\r\n                }\r\n                onConfirm={this.onConfirmdelete.bind(this, record.code)}\r\n              >\r\n                <a href=\"#\">\r\n                  <Icon type=\"delete\" style={{ color: \"red\" }}></Icon>\r\n                </a>\r\n              </Popconfirm>\r\n            </a>\r\n          </span>\r\n        )\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <div>\r\n        <AntTable\r\n          title={() => <RawMaterialTitle />}\r\n          maxlength\r\n          nomargin\r\n          columns={columns}\r\n          dataSource={this.state.materialTests}\r\n          onChange={this.handleChange}\r\n          pagination={{ defaultPageSize: 10 }}\r\n          size={this.state.size}\r\n        />\r\n        <Modal\r\n          title=\"Basic Modal\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          {this.state.filteredTestTrials.map((post, index) => (\r\n            <FlexContainer>\r\n              <p>\r\n                <b style={{ width: \"30px\" }}>Trial Code : </b>\r\n                {post.code}\r\n              </p>\r\n              <p>\r\n                <b>Trial No : </b>\r\n                {post.trialNo}\r\n              </p>\r\n              <p>\r\n                <b>result: </b>\r\n                {post.result}\r\n              </p>\r\n            </FlexContainer>\r\n          ))}\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { FlexContainer } from \"../../../styledcomponents/container/FlexGrid\";\r\nimport { PrimaryButton } from \"../../../styledcomponents/button/button\";\r\nimport theme from \"../../../../theme\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  TOGGLE_FINISH_PRODUCT_DRAWER,\r\n  CLOSE_FINISH_PRODUCT_DRAWER\r\n} from \"../../../../redux/action/testresults/TestResults\";\r\nimport { Drawer, Select, Input } from \"antd\";\r\n\r\nconst Option = Select;\r\n\r\nclass FinishProductTitle extends Component {\r\n  state = {\r\n    accuracy: \"accurate\"\r\n  };\r\n  onChange = value => {\r\n    console.log(value);\r\n    this.setState({\r\n      accuracy: value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <FlexContainer>\r\n        <h3>Finish Product Test Results</h3>\r\n        <PrimaryButton\r\n          type='primary'\r\n          style={{\r\n            background: theme.colors.primary,\r\n            outline: \"none\",\r\n            border: \"none\"\r\n          }}\r\n          onClick={this.props.toggleFinishProductFilterDrawer}\r\n        >\r\n          Filter\r\n        </PrimaryButton>\r\n        <Drawer\r\n          title='Customize Filter'\r\n          placement='right'\r\n          closable={false}\r\n          onClose={this.props.onCloseFinishProductFilterDrawer}\r\n          visible={this.props.visible}\r\n          width={520}\r\n        >\r\n          <FlexContainer column style={{ height: \"130px\" }}>\r\n            <div>\r\n              <h4>Filter By</h4>\r\n              <Select\r\n                id='filter_by'\r\n                name='filter_by'\r\n                placeholder='Select Filter'\r\n                style={{ width: \"180px\" }}\r\n              >\r\n                <Option value='strength_test'>Strength Test</Option>\r\n                <Option value='slumptest'>Slump Test</Option>\r\n                <Option value='grade'>Grade</Option>\r\n                <Option value='pass/fail'>Pass / Fail</Option>\r\n                <Option value='plant'>Plant</Option>\r\n                <Option value='sample'>Sample</Option>\r\n                <Option value='duration'>Duration</Option>\r\n              </Select>\r\n            </div>\r\n            <FlexContainer\r\n              style={{ background: \"#D6E3F8\", height: \"50px\", padding: \"10px\" }}\r\n            >\r\n              <Select\r\n                id='accuracy'\r\n                name='accuracy'\r\n                style={{ width: \"120px\" }}\r\n                defaultValue='accurate'\r\n                value={this.state.accuracy}\r\n                onChange={this.onChange}\r\n              >\r\n                <Option value='between'>Between</Option>\r\n                <Option value='accurate'>Accurate</Option>\r\n              </Select>\r\n              {this.state.accuracy === \"accurate\" ? (\r\n                <Input\r\n                  id='grade'\r\n                  name='grade'\r\n                  style={{ width: \"180px\" }}\r\n                  placeholder='Grade'\r\n                />\r\n              ) : (\r\n                <div style={{ marginLeft: \"-5px\" }}>\r\n                  <Input\r\n                    id='max'\r\n                    name='max'\r\n                    placeholder='Maximum'\r\n                    style={{ width: \"100px\" }}\r\n                  />\r\n                  <PrimaryButton disabled>~</PrimaryButton>\r\n                  <Input\r\n                    id='min'\r\n                    name='min'\r\n                    placeholder='Minimum'\r\n                    style={{ width: \"100px\" }}\r\n                  />\r\n                </div>\r\n              )}\r\n              <PrimaryButton\r\n                type='primary'\r\n                style={{ background: theme.colors.primary, border: \"none\" }}\r\n              >\r\n                Search\r\n              </PrimaryButton>\r\n            </FlexContainer>\r\n          </FlexContainer>\r\n        </Drawer>\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    visible: state.testResultsReducers.ToggleFilterDrawers.FPvisible\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    toggleFinishProductFilterDrawer: () => {\r\n      dispatch({ type: TOGGLE_FINISH_PRODUCT_DRAWER });\r\n      console.log(\"toggle finish product filter drawer\");\r\n    },\r\n    onCloseFinishProductFilterDrawer: () => {\r\n      dispatch({ type: CLOSE_FINISH_PRODUCT_DRAWER });\r\n      console.log(\"close finish product filter drawer\");\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FinishProductTitle);\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\nimport { Popconfirm, Divider, Icon } from \"antd\";\r\n\r\nimport { AntTable } from \"../../../styledcomponents/table/AntTabl\";\r\nimport FinishProductTitle from \"../titles/FinishProductTitle.jsx\";\r\n\r\nconst data = [];\r\n\r\nexport default class ManageFinishProduct extends Component {\r\n  state = {\r\n    filteredInfo: null,\r\n    sortedInfo: null,\r\n    searchText: \"\",\r\n    visible: false,\r\n    size: \"small\"\r\n  };\r\n\r\n  componentWillMount() {\r\n    if (window.screen.width > 1900) {\r\n      console.log(\"hooray\");\r\n      this.setState({\r\n        size: \"large\"\r\n      });\r\n    } else if (window.screen.width < 1440) {\r\n      this.setState({\r\n        size: \"small\"\r\n      });\r\n    }\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  handleOk = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleCancel = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleChange = (pagination, filters, sorter) => {\r\n    console.log(\"Various parameters\", pagination, filters, sorter);\r\n    this.setState({\r\n      filteredInfo: filters,\r\n      sortedInfo: sorter\r\n    });\r\n  };\r\n\r\n  clearFilters = () => {\r\n    this.setState({ filteredInfo: null });\r\n  };\r\n\r\n  clearAll = () => {\r\n    this.setState({\r\n      filteredInfo: null,\r\n      sortedInfo: null\r\n    });\r\n  };\r\n\r\n  setAgeSort = () => {\r\n    this.setState({\r\n      sortedInfo: {\r\n        order: \"descend\",\r\n        columnKey: \"code\"\r\n      }\r\n    });\r\n  };\r\n\r\n  onChange(pageNumber) {\r\n    console.log(\"Page: \", pageNumber);\r\n  }\r\n\r\n  render() {\r\n    let { sortedInfo, filteredInfo } = this.state;\r\n    sortedInfo = sortedInfo || {};\r\n    filteredInfo = filteredInfo || {};\r\n    const columns = [\r\n      {\r\n        title: \"Code\",\r\n        dataIndex: \"code\",\r\n        key: \"code\",\r\n        filters: [\r\n          { text: \"Joe\", value: \"Joe\" },\r\n          { text: \"Jim\", value: \"Jim\" }\r\n        ],\r\n        filteredValue: filteredInfo.name || null,\r\n        onFilter: (value, record) => record.name.includes(value),\r\n        sorter: (a, b) => a.code - b.code,\r\n        sortOrder: sortedInfo.columnKey === \"code\" && sortedInfo.order\r\n      },\r\n      {\r\n        title: \"Name\",\r\n        dataIndex: \"name\",\r\n        key: \"name\",\r\n\r\n        filters: [\r\n          { text: \"Joe\", value: \"Joe\" },\r\n          { text: \"Jim\", value: \"Jim\" }\r\n        ],\r\n        filteredValue: filteredInfo.name || null,\r\n        onFilter: (value, record) => record.name.includes(value),\r\n        sorter: (a, b) => a.user - b.user,\r\n        sortOrder: sortedInfo.columnKey === \"user\" && sortedInfo.order\r\n      },\r\n      {\r\n        title: \"Date\",\r\n        dataIndex: \"date\",\r\n        key: \"date\",\r\n\r\n        filters: [\r\n          { text: \"Joe\", value: \"Joe\" },\r\n          { text: \"Jim\", value: \"Jim\" }\r\n        ],\r\n        filteredValue: filteredInfo.name || null,\r\n        onFilter: (value, record) => record.name.includes(value),\r\n        sorter: (a, b) => a.user - b.user,\r\n        sortOrder: sortedInfo.columnKey === \"user\" && sortedInfo.order\r\n      },\r\n      {\r\n        title: \"Grade\",\r\n        dataIndex: \"grade\",\r\n        key: \"grade\",\r\n\r\n        filters: [\r\n          { text: \"Joe\", value: \"Joe\" },\r\n          { text: \"Jim\", value: \"Jim\" }\r\n        ],\r\n        filteredValue: filteredInfo.name || null,\r\n        onFilter: (value, record) => record.name.includes(value),\r\n        sorter: (a, b) => a.user - b.user,\r\n        sortOrder: sortedInfo.columnKey === \"user\" && sortedInfo.order\r\n      },\r\n      {\r\n        title: \"Plant Name\",\r\n        dataIndex: \"plant_name\",\r\n        key: \"plant_name\",\r\n\r\n        filters: [\r\n          { text: \"Joe\", value: \"Joe\" },\r\n          { text: \"Jim\", value: \"Jim\" }\r\n        ],\r\n        filteredValue: filteredInfo.name || null,\r\n        onFilter: (value, record) => record.name.includes(value),\r\n        sorter: (a, b) => a.user - b.user,\r\n        sortOrder: sortedInfo.columnKey === \"user\" && sortedInfo.order\r\n      },\r\n\r\n      {\r\n        title: \"Raw Materials\",\r\n        dataIndex: \"raw_materials\",\r\n        key: \"raw_materials\",\r\n\r\n        filters: [\r\n          { text: \"Joe\", value: \"Joe\" },\r\n          { text: \"Jim\", value: \"Jim\" }\r\n        ],\r\n        filteredValue: filteredInfo.name || null,\r\n        onFilter: (value, record) => record.name.includes(value),\r\n        sorter: (a, b) => a.user - b.user,\r\n        sortOrder: sortedInfo.columnKey === \"user\" && sortedInfo.order\r\n      },\r\n      {\r\n        title: \"Tests\",\r\n        dataIndex: \"tests\",\r\n        key: \"tests\",\r\n\r\n        filters: [\r\n          { text: \"Joe\", value: \"Joe\" },\r\n          { text: \"Jim\", value: \"Jim\" }\r\n        ],\r\n        filteredValue: filteredInfo.name || null,\r\n        onFilter: (value, record) => record.name.includes(value),\r\n        sorter: (a, b) => a.user - b.user,\r\n        sortOrder: sortedInfo.columnKey === \"user\" && sortedInfo.order\r\n      },\r\n      {\r\n        title: \"Edit & Delete\",\r\n        key: \"action\",\r\n        width: \"10%\",\r\n        render: (text, record) => (\r\n          <span>\r\n            <a>\r\n              <Icon type='edit' />\r\n            </a>\r\n            <Divider type='vertical' />\r\n            <a>\r\n              <Popconfirm\r\n                title='Are you sure you want to Delete this?'\r\n                icon={\r\n                  <Icon type='question-circle-o' style={{ color: \"red\" }} />\r\n                }\r\n              >\r\n                <a href='#'>\r\n                  <Icon type='delete'></Icon>\r\n                </a>\r\n              </Popconfirm>\r\n            </a>\r\n          </span>\r\n        )\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <div>\r\n        <AntTable\r\n          title={() => <FinishProductTitle />}\r\n          maxlength\r\n          nomargin\r\n          columns={columns}\r\n          dataSource={data}\r\n          onChange={this.handleChange}\r\n          pagination={{ defaultPageSize: 3 }}\r\n          size={this.state.size}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Popconfirm, Divider, Icon, Modal, Table } from \"antd\";\r\n\r\nimport { AntTable } from \"../../../styledcomponents/table/AntTabl\";\r\nimport SieveTestTitle from \"../titles/RawMaterialTitle\";\r\nimport { api } from \"../../../services/AxiosService\";\r\nimport { FlexContainer } from \"../../../styledcomponents/container/FlexGrid\";\r\nimport Notification from \"../../../Constant/Notification\";\r\n\r\nexport default class ManageSieveTest extends Component {\r\n  state = {\r\n    filteredInfo: null,\r\n    sortedInfo: null,\r\n    searchText: \"\",\r\n    visible: false,\r\n    size: \"small\",\r\n    materialTests: [],\r\n    filteredTestTrials: []\r\n  };\r\n\r\n  getAllMaterialTestTrials = () => {\r\n    api(\"GET\", \"supermix\", \"/sieve-tests\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data.results.sieveTests);\r\n      this.setState({\r\n        materialTests: res.data.results.sieveTests\r\n      });\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getAllMaterialTestTrials();\r\n  }\r\n\r\n  componentWillMount() {\r\n    if (window.screen.width > 1900) {\r\n      console.log(\"hooray\");\r\n      this.setState({\r\n        size: \"large\"\r\n      });\r\n    } else if (window.screen.width < 1440) {\r\n      this.setState({\r\n        size: \"small\"\r\n      });\r\n    }\r\n  }\r\n\r\n  getalltestTrailByTestId = code => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n    let resultData = [];\r\n    api(\"GET\", \"supermix\", \"/sieve-test-trial/sieve-test\", \"\", \"\", code).then(\r\n      res => {\r\n        let x = res.data.results.sieveTestCode;\r\n        console.log(res.data.results.sieveTestCode);\r\n        for (var i = 0; i < x.length; i++) {\r\n          resultData.push({\r\n            size: x[i].sieveSize.size,\r\n            percentageRetained: x[i].percentageRetained,\r\n            cumulativeRetained: x[i].cumulativeRetained,\r\n            passing: x[i].passing,\r\n            totalWeight: x[i].sieveTest.totalWeight,\r\n            status: x[i].sieveTest.status\r\n          });\r\n        }\r\n        if (resultData.length > 0) {\r\n          this.setState({\r\n            totalWeight: resultData[0].totalWeight,\r\n            status: resultData[0].status\r\n          });\r\n        }\r\n\r\n        this.setState({\r\n          resultData\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  handleOk = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n    this.state.filteredTestTrials.splice(\r\n      0,\r\n      this.state.filteredTestTrials.length\r\n    );\r\n    console.log(this.state.filteredTestTrials);\r\n  };\r\n\r\n  handleCancel = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n    this.state.filteredTestTrials.splice(\r\n      0,\r\n      this.state.filteredTestTrials.length\r\n    );\r\n    console.log(this.state.filteredTestTrials);\r\n  };\r\n\r\n  handleChange = (pagination, filters, sorter) => {\r\n    console.log(\"Various parameters\", pagination, filters, sorter);\r\n    this.setState({\r\n      filteredInfo: filters,\r\n      sortedInfo: sorter\r\n    });\r\n  };\r\n\r\n  clearFilters = () => {\r\n    this.setState({ filteredInfo: null });\r\n  };\r\n\r\n  clearAll = () => {\r\n    this.setState({\r\n      filteredInfo: null,\r\n      sortedInfo: null\r\n    });\r\n  };\r\n\r\n  setAgeSort = () => {\r\n    this.setState({\r\n      sortedInfo: {\r\n        order: \"descend\",\r\n        columnKey: \"code\"\r\n      }\r\n    });\r\n  };\r\n\r\n  onChange(pageNumber) {\r\n    console.log(\"Page: \", pageNumber);\r\n  }\r\n  onConfirmdelete(id) {\r\n    console.log(id);\r\n\r\n    api(\"DELETE\", \"supermix\", \"/sieve-test\", \"\", \"\", id).then(res => {\r\n      console.log(res.data);\r\n      this.getAllMaterialTestTrials();\r\n      Notification(\"success\", res.data.message);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"Code\",\r\n        dataIndex: \"code\",\r\n        key: \"code\"\r\n      },\r\n      {\r\n        title: \"Date\",\r\n        dataIndex: \"date\",\r\n        key: \"date\"\r\n      },\r\n      {\r\n        title: \"FinenessModulus\",\r\n        dataIndex: \"finenessModulus\",\r\n        key: \"finenessModulus\"\r\n      },\r\n      {\r\n        title: \"Pan Weight\",\r\n        dataIndex: \"panWeight\",\r\n        key: \"panWeight\"\r\n      },\r\n      {\r\n        title: \"Total Weight\",\r\n        dataIndex: \"totalWeight\",\r\n        key: \"totalWeight\"\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataIndex: \"status\",\r\n        key: \"status\"\r\n      },\r\n\r\n      {\r\n        title: \"Trials\",\r\n        key: \"trials\",\r\n        render: (text, record = this.state.materialTests) => (\r\n          <Icon\r\n            type=\"container\"\r\n            style={{ color: \"green\" }}\r\n            onClick={this.getalltestTrailByTestId.bind(this, record.code)}\r\n          />\r\n        )\r\n      },\r\n      {\r\n        title: \"Edit & Delete\",\r\n        key: \"action\",\r\n        width: \"7%\",\r\n        render: (text, record = this.state.datalist) => (\r\n          <span>\r\n            <a>\r\n              {/* <Icon\r\n                type=\"edit\"\r\n                onClick={this.props.passEditSubManageCategoryToModal.bind(\r\n                  this,\r\n                  record\r\n                )}\r\n              /> */}\r\n            </a>\r\n            <Divider type=\"vertical\" />\r\n            <a>\r\n              <Popconfirm\r\n                title=\"Are you sure you want to Delete this?\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: \"red\" }} />\r\n                }\r\n                onConfirm={this.onConfirmdelete.bind(this, record.code)}\r\n              >\r\n                <a href=\"#\">\r\n                  <Icon type=\"delete\" style={{ color: \"red\" }}></Icon>\r\n                </a>\r\n              </Popconfirm>\r\n            </a>\r\n          </span>\r\n        )\r\n      }\r\n    ];\r\n\r\n    const Columns1 = [\r\n      {\r\n        title: \"Sieve Size (mm)\",\r\n        dataIndex: \"size\",\r\n        key: \"size\",\r\n        width: \"15%\"\r\n      },\r\n      {\r\n        title: \"Cummalative Weight Retained (g)\",\r\n        dataIndex: \"cumulativeRetained\",\r\n        key: \"cumulativeRetained\"\r\n      },\r\n\r\n      {\r\n        title: \"Percentage Weight  Retained\",\r\n        dataIndex: \"percentageRetained\",\r\n        key: \"percentageRetained\"\r\n      },\r\n      {\r\n        title: \"Percentage Weight Passing\",\r\n        dataIndex: \"passing\",\r\n        key: \"passing\"\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <div>\r\n        <AntTable\r\n          title={() => <h3>Sieve Test Results</h3>}\r\n          maxlength\r\n          nomargin\r\n          columns={columns}\r\n          dataSource={this.state.materialTests}\r\n          onChange={this.handleChange}\r\n          pagination={{ defaultPageSize: 10 }}\r\n          size={this.state.size}\r\n        />\r\n        <Modal\r\n          title=\"Basic Modal\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          width=\"950px\"\r\n        >\r\n          <Table\r\n            columns={Columns1}\r\n            dataSource={this.state.resultData}\r\n            style={{\r\n              background: \"white\",\r\n              width: \"1250px\",\r\n              marginTop: \"-10px\"\r\n            }}\r\n            scroll={{ y: 280 }}\r\n            size=\"small\"\r\n            style={{\r\n              width: \"900px\"\r\n              // marginTop: \"10px\",\r\n              // marginLeft: \"80px\"\r\n            }}\r\n            pagination={false}\r\n          />\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { FlexContainer } from \"../../styledcomponents/container/FlexGrid\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport TestResultsTileArea from \"./TestResultsTileArea\";\r\nimport ManageRawMaterial from \"./rawmaterial/ManageRawMaterial\";\r\nimport ManageFinishProduct from \"./finishproduct/ManageFinishProduct\";\r\nimport ManageSieveTest from \"./sievetest/ManageSieveTest\";\r\n\r\nclass TestResultsMaster extends Component {\r\n  renderComponents = () => {\r\n    if (this.props.routepath === \"/rawmaterial\") {\r\n      return <ManageRawMaterial />;\r\n    } else if (this.props.routepath === \"/finishproduct\") {\r\n      return <ManageFinishProduct />;\r\n    } else if (this.props.routepath === \"/sieveresult\") {\r\n      return <ManageSieveTest />;\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <FlexContainer leveltileareafixed>\r\n        <TestResultsTileArea />\r\n        {this.renderComponents()}\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    routepath: state.testResultsReducers.RoutingBetweenTestResults.routepath\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => null;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TestResultsMaster);\r\n","import React, { Component } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nclass LineChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      width: \"250\",\r\n      height: \"190\",\r\n      options: {\r\n        chart: {\r\n          id: \"basic-bar\"\r\n        },\r\n        xaxis: {\r\n          categories: [1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998]\r\n        }\r\n      },\r\n      series: [\r\n        {\r\n          name: \"series-1\",\r\n          data: [30, 40, 45, 50, 49, 60, 70, 91]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    if (window.screen.width > 1900) {\r\n      console.log(\"resized for large screen\");\r\n      this.setState({\r\n        height: \"250\",\r\n        width: \"800\"\r\n      });\r\n    } else if (window.screen.width < 1440) {\r\n      console.log(\"resized for medium screen\");\r\n      this.setState({\r\n        height: \"240\",\r\n        width: \"400\"\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className='app'\r\n        style={{ background: \"#fffbed\", borderRadius: \"15px\" }}\r\n      >\r\n        <div className='row'>\r\n          <div className='mixed-chart'>\r\n            <Chart\r\n              options={this.state.options}\r\n              series={this.state.series}\r\n              type='area'\r\n              width={this.state.width}\r\n              height={this.state.height}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LineChart;\r\n","import React, { PureComponent } from \"react\";\r\nimport {\r\n  ResponsiveContainer,\r\n  ComposedChart,\r\n  Line,\r\n  Area,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend\r\n} from \"recharts\";\r\nimport \"./sliders.css\";\r\n\r\nconst data = [\r\n  {\r\n    name: \"Page A\",\r\n    uv: 590,\r\n    pv: 800,\r\n    amt: 1400\r\n  },\r\n  {\r\n    name: \"Page B\",\r\n    uv: 868,\r\n    pv: 967,\r\n    amt: 1506\r\n  },\r\n  {\r\n    name: \"Page C\",\r\n    uv: 1397,\r\n    pv: 1098,\r\n    amt: 989\r\n  },\r\n  {\r\n    name: \"Page D\",\r\n    uv: 1480,\r\n    pv: 1200,\r\n    amt: 1228\r\n  },\r\n  {\r\n    name: \"Page E\",\r\n    uv: 1520,\r\n    pv: 1108,\r\n    amt: 1100\r\n  },\r\n  {\r\n    name: \"Page F\",\r\n    uv: 1400,\r\n    pv: 680,\r\n    amt: 1700\r\n  }\r\n];\r\n\r\nexport default class LineBarChart extends PureComponent {\r\n  render() {\r\n    return (\r\n      <div className='linebarchart'>\r\n        <ResponsiveContainer>\r\n          <ComposedChart\r\n            width={400}\r\n            height={155}\r\n            data={data}\r\n            margin={{\r\n              top: 20,\r\n              right: 25,\r\n              bottom: 0,\r\n              left: -18\r\n            }}\r\n          >\r\n            <CartesianGrid stroke='#f5f5f5' />\r\n            <XAxis dataKey='name' />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Area\r\n              type='monotone'\r\n              dataKey='amt'\r\n              fill='#8884d8'\r\n              stroke='#8884d8'\r\n            />\r\n            <Bar dataKey='pv' barSize={10} fill='#413ea0' />\r\n            <Line type='monotone' dataKey='uv' stroke='#ff7300' />\r\n          </ComposedChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\nimport \"./sliders.css\";\r\n\r\nclass BarChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      height: 240,\r\n      width: 450,\r\n      options: {\r\n        chart: {\r\n          id: \"basic-bar\"\r\n        },\r\n        xaxis: {\r\n          categories: [\r\n            \"Peliyagoda\",\r\n            \"Jaffna\",\r\n            \"Trincomalee\",\r\n            \"Ratmalana\",\r\n            \"Pinnawala\"\r\n          ]\r\n        }\r\n      },\r\n      series: [\r\n        {\r\n          name: \"series-1\",\r\n          data: [30, 40, 45, 50, 49]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    if (window.screen.width > 1900) {\r\n      console.log(\"resized for large screen\");\r\n      this.setState({\r\n        height: 300,\r\n        width: 800\r\n      });\r\n    } else if (window.screen.width < 1440) {\r\n      console.log(\"resized for medium screen\");\r\n      this.setState({\r\n        height: 245,\r\n        width: 450\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Chart\r\n        options={this.state.options}\r\n        series={this.state.series}\r\n        type='bar'\r\n        className='barchart'\r\n        height={this.state.height}\r\n        width={this.state.width}\r\n        style={{ background: \"#fffbed\", height: \"200px\" }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default BarChart;\r\n","import React, { Component } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nclass Doughnut extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      width: \"450\",\r\n      height: \"220\",\r\n      options: {},\r\n      series: [44, 55, 41, 17, 15],\r\n      labels: [\"A\", \"B\", \"C\", \"D\", \"E\"]\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    if (window.screen.width > 1900) {\r\n      console.log(\"resized for large screen\");\r\n      this.setState({\r\n        height: \"300\",\r\n        width: \"800\"\r\n      });\r\n    } else if (window.screen.width < 1440) {\r\n      console.log(\"resized for medium screen\");\r\n      this.setState({\r\n        height: \"200\",\r\n        width: \"450\"\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          height: \"220px\",\r\n          background: \"white\",\r\n          borderRadius: \"15px\",\r\n          marginTop: \"10px\"\r\n        }}\r\n      >\r\n        <Chart\r\n          options={this.state.options}\r\n          series={this.state.series}\r\n          type='donut'\r\n          width={this.state.width}\r\n          height={this.state.height}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Doughnut;\r\n","import React, { Component } from \"react\";\r\nimport { FlexContainer } from \"../styledcomponents/container/FlexGrid\";\r\nimport LineChart from \"../homescreen/LineChart\";\r\nimport LineBarChart from \"../homescreen/LineBarChart\";\r\nimport BarChart from \"../homescreen/BarChart\";\r\nimport Doughnut from \"../homescreen/Doughnut\";\r\n\r\nexport default class GraphDashboard extends Component {\r\n  render() {\r\n    return (\r\n      <FlexContainer normal>\r\n        <LineChart />\r\n        <LineBarChart />\r\n        <BarChart />\r\n        <Doughnut />\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Button, Icon, DatePicker, Input,message } from \"antd\";\r\nimport { AntTable } from \"../styledcomponents/table/AntTabl\";\r\nimport \"./auditlog.css\";\r\nimport { FlexContainer } from \"../styledcomponents/container/FlexGrid\";\r\nimport { AuditFormTitle } from \"../styledcomponents/form/MasterLevelForms\";\r\nconst { RangePicker } = DatePicker;\r\nconst Search = Input.Search;\r\n\r\nclass AuditLog extends React.Component {\r\n  state = {\r\n    visible: false,\r\n    visibleEditModal: false\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  handleOk = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleCancel = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n  handleMenuClick(e) {\r\n    message.info(\"Click on menu item.\");\r\n    console.log(\"click\", e);\r\n  }\r\n  handleButtonClick(e) {\r\n    message.info(\"Click on left button.\");\r\n    console.log(\"click left button\", e);\r\n  }\r\n\r\n  onChange(value, dateString) {\r\n    console.log(\"Selected Time: \", value);\r\n    console.log(\"Formatted Selected Time: \", dateString);\r\n  }\r\n\r\n  onOk(value) {\r\n    console.log(\"onOk: \", value);\r\n  }\r\n\r\n  /*\r\n    Author: \r\n    Last Updated: dd/MM/YYYY\r\n    Note: Please do necessary commenting and follow code standard.\r\n      */\r\n  // onChange(pagination, filters, sorter) {\r\n  //   console.log(\"params\", pagination, filters, sorter);\r\n  // }\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"Date/Time\",\r\n        dataIndex: \"date\",\r\n        filters: [\r\n          {\r\n            text: \"Joe\",\r\n            value: \"Joe\"\r\n          },\r\n          {\r\n            text: \"Jim\",\r\n            value: \"Jim\"\r\n          },\r\n          {\r\n            text: \"Submenu\",\r\n            value: \"Submenu\",\r\n            children: [\r\n              {\r\n                text: \"Green\",\r\n                value: \"Green\"\r\n              },\r\n              {\r\n                text: \"Black\",\r\n                value: \"Black\"\r\n              }\r\n            ]\r\n          }\r\n        ],\r\n        // specify the condition of filtering result\r\n        // here is that finding the name started with `value`\r\n        onFilter: (value, record) => record.name.indexOf(value) === 0,\r\n        sorter: (a, b) => a.name.length - b.name.length,\r\n        sortDirections: [\"descend\"]\r\n      },\r\n      {\r\n        title: \"Author\",\r\n        dataIndex: \"author\"\r\n      },\r\n      {\r\n        title: \"Work category\",\r\n        dataIndex: \"category\",\r\n        filters: [\r\n          {\r\n            text: \"London\",\r\n            value: \"London\"\r\n          },\r\n          {\r\n            text: \"New York\",\r\n            value: \"New York\"\r\n          }\r\n        ],\r\n        filterMultiple: false,\r\n        onFilter: (value, record) => record.address.indexOf(value) === 0,\r\n        sorter: (a, b) => a.address.length - b.address.length,\r\n        sortDirections: [\"descend\", \"ascend\"]\r\n      },\r\n      {\r\n        title: \"Summary\",\r\n        dataIndex: \"summary\"\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <div className='auditlog'>\r\n        <AuditFormTitle>Audit Log</AuditFormTitle>\r\n        <FlexContainer style={{ padding: \"30px\" }}>\r\n          <Button type='primary'>\r\n            {\" \"}\r\n            <Icon type='export' />\r\n            Export\r\n          </Button>\r\n\r\n          <RangePicker\r\n            className='rangepicker'\r\n            showTime={{ format: \"HH:mm\" }}\r\n            format='YYYY-MM-DD HH:mm'\r\n            placeholder={[\"Start Time\", \"End Time\"]}\r\n            onChange={this.onChange}\r\n            onOk={this.onOk}\r\n          />\r\n          <Search\r\n            placeholder=' search ......'\r\n            onSearch={value => console.log(value)}\r\n            style={{ width: \"auto\" }}\r\n            enterButton\r\n          />\r\n        </FlexContainer>\r\n\r\n        <AntTable columns={columns} style={{ width: \"auto\", margin: \"1px\" }} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AuditLog;\r\n","import React, { Component } from \"react\";\r\nimport \"./Processstyle.css\";\r\nimport { ImageCard } from \"../../../styledcomponents/card/ImageCard\";\r\nimport { NavigationLink } from \"../../../styledcomponents/Link/NavLink\";\r\nimport { FlexContainer } from \"../../../styledcomponents/container/FlexGrid\";\r\nimport { Heading1 } from \"../../../styledcomponents/typography/typography\";\r\n\r\nclass ProcessViewStatus extends Component {\r\n  render() {\r\n    return (\r\n      <div className='processViewStatus'>\r\n        <FlexContainer\r\n          style={{ justifyContent: \"space-around\", paddingTop: \"20px\" }}\r\n        >\r\n          <NavigationLink to=''>\r\n            <ImageCard reports>\r\n              <div style={{ display: \"flex\", padding: \"5px\", margin: \"10px\" }}>\r\n                <Heading1>Sieve Analysis</Heading1>\r\n              </div>\r\n            </ImageCard>\r\n          </NavigationLink>\r\n\r\n          <NavigationLink to=''>\r\n            <ImageCard reports>\r\n              <div style={{ display: \"flex\", padding: \"5px\", margin: \"10px\" }}>\r\n                <Heading1>Water Demand Test</Heading1>\r\n              </div>\r\n            </ImageCard>\r\n          </NavigationLink>\r\n\r\n          <NavigationLink to=''>\r\n            <ImageCard reports>\r\n              <div style={{ display: \"flex\", padding: \"5px\", margin: \"10px\" }}>\r\n                <Heading1>Moisture Test</Heading1>\r\n              </div>\r\n            </ImageCard>\r\n          </NavigationLink>\r\n\r\n          <NavigationLink to=''>\r\n            <ImageCard reports>\r\n              <div style={{ display: \"flex\", padding: \"5px\", margin: \"10px\" }}>\r\n                <Heading1>75% Micron Test</Heading1>\r\n              </div>\r\n            </ImageCard>\r\n          </NavigationLink>\r\n\r\n          <NavigationLink to=''>\r\n            <ImageCard reports>\r\n              <div style={{ display: \"flex\", padding: \"5px\", margin: \"10px\" }}>\r\n                <Heading1>AIV Test</Heading1>\r\n              </div>\r\n            </ImageCard>\r\n          </NavigationLink>\r\n        </FlexContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProcessViewStatus;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./IncomingViewStyle.css\";\r\nimport { ImageCard } from \"../../../styledcomponents/card/ImageCard\";\r\nimport { NavigationLink } from \"../../../styledcomponents/Link/NavLink\";\r\nimport { FlexContainer } from \"../../../styledcomponents/container/FlexGrid\";\r\nimport { Heading1 } from \"../../../styledcomponents/typography/typography\";\r\n\r\nclass IncomingViewStatus extends Component {\r\n  render() {\r\n    return (\r\n      <div className='incomingViewStatus'>\r\n        <FlexContainer\r\n          style={{ justifyContent: \"space-around\", paddingTop: \"20px\" }}\r\n        >\r\n          <NavigationLink to=''>\r\n            <ImageCard reports>\r\n              <div style={{ display: \"flex\", padding: \"5px\", margin: \"10px\" }}>\r\n                <Heading1>Sieve Analysis</Heading1>\r\n              </div>\r\n            </ImageCard>\r\n          </NavigationLink>\r\n\r\n          <NavigationLink to=''>\r\n            <ImageCard reports>\r\n              <div style={{ display: \"flex\", padding: \"5px\", margin: \"10px\" }}>\r\n                <Heading1>Water Demand Test</Heading1>\r\n              </div>\r\n            </ImageCard>\r\n          </NavigationLink>\r\n\r\n          <NavigationLink to=''>\r\n            <ImageCard reports>\r\n              <div style={{ display: \"flex\", padding: \"5px\", margin: \"10px\" }}>\r\n                <Heading1>Moisture Test</Heading1>\r\n              </div>\r\n            </ImageCard>\r\n          </NavigationLink>\r\n\r\n          <NavigationLink to=''>\r\n            <ImageCard reports>\r\n              <div style={{ display: \"flex\", padding: \"5px\", margin: \"10px\" }}>\r\n                <Heading1>75% Micron Test</Heading1>\r\n              </div>\r\n            </ImageCard>\r\n          </NavigationLink>\r\n\r\n          <NavigationLink to=''>\r\n            <ImageCard reports>\r\n              <div style={{ display: \"flex\", padding: \"5px\", margin: \"10px\" }}>\r\n                <Heading1>AIV Test</Heading1>\r\n              </div>\r\n            </ImageCard>\r\n          </NavigationLink>\r\n        </FlexContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IncomingViewStatus;\r\n","import React, { Component } from \"react\";\r\nimport { Input, Modal, Button, Icon, Select } from \"antd\";\r\nimport {\r\n  MasterLevelForm,\r\n  MasterLevelFormTitle\r\n} from \"../../styledcomponents/form/MasterLevelForms\";\r\nimport { PrimaryButton } from \"../../styledcomponents/button/button\";\r\nimport { api } from \"../../services/AxiosService\";\r\nimport { connect } from \"react-redux\";\r\nimport Notification from \"../../Constant/Notification\";\r\n// import HandelError from \"../../../Constant/HandleError\";\r\nimport { DISABLE_EDIT_MODE } from \"../../../redux/action/master/plantlevel/PlantLevel\";\r\nconst { Option } = Select;\r\nconst error = {\r\n  color: \"red\",\r\n  fontSize: \"12px\",\r\n  width: \"160px\",\r\n  height: \"2px\"\r\n};\r\nclass ConcreteTest extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n      errors: {\r\n        mix_design_code: \"\",\r\n        slump: \"\",\r\n        temperature: \"\",\r\n        water_content: \"\",\r\n        status: \"\"\r\n      },\r\n      mix_design_code: \"\",\r\n      slump: \"\",\r\n      temperature: \"\",\r\n      water_content: \"\",\r\n      status: \"NEW\",\r\n      type: \"add\",\r\n      SelectPlants: \"\",\r\n      selectMix: \"\",\r\n      concreteTestId: \"\",\r\n      edit_mix_design_code: \"\",\r\n      edit_plant_code: \"\"\r\n    };\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    console.log(nextProps);\r\n    this.setState({\r\n      visible: nextProps.visible,\r\n      concreteTestId: nextProps.editPlantData.id,\r\n      mix_design_code: nextProps.editPlantData.mixDesignCode,\r\n\r\n      slump: nextProps.editPlantData.slump,\r\n      temperature: nextProps.editPlantData.temperature,\r\n      water_content: nextProps.editPlantData.waterContent,\r\n      status: nextProps.editPlantData.status,\r\n      edit_mix_design_code: nextProps.editPlantData.mixDesignCode,\r\n      edit_plant_code: nextProps.editPlantData.plantName,\r\n      type: nextProps.type\r\n    });\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n      errors: {\r\n        mix_design_code: \"\",\r\n        slump: \"\",\r\n        temperature: \"\",\r\n        water_content: \"\",\r\n        status: \"\"\r\n      },\r\n      mix_design_code: \"\",\r\n      edit_mix_design_code: \"\",\r\n      slump: \"\",\r\n      temperature: \"\",\r\n      water_content: \"\",\r\n      status: \"\",\r\n      errormgs: \"\",\r\n      type: \"add\"\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({ loading: true });\r\n    setTimeout(() => {\r\n      this.setState({ loading: false, visible: false });\r\n    }, 3000);\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n      errors: {\r\n        mix_design_code: \"\",\r\n\r\n        slump: \"\",\r\n        temperature: \"\",\r\n        water_content: \"\",\r\n        status: \"\"\r\n      },\r\n      mix_design_code: \"\",\r\n      edit_mix_design_code: \"\",\r\n      slump: \"\",\r\n      temperature: \"\",\r\n      water_content: \"\",\r\n      status: \"\",\r\n      errormgs: \"\",\r\n      type: \"add\"\r\n    });\r\n  };\r\n\r\n  handleSelect = (name, value) => {\r\n    console.log(name);\r\n    console.log(value);\r\n\r\n    //handle select for designation\r\n    if (name === \"mixdesign\") {\r\n      this.setState({\r\n        mix_design_code: value,\r\n        edit_mix_design_code: value\r\n      });\r\n\r\n      if (value.length !== 0) {\r\n        this.setState({\r\n          errors: {\r\n            mix_design_code: \"\",\r\n\r\n            slump: this.state.errors.slump,\r\n            temperature: this.state.errors.temperature,\r\n            water_content: this.state.errors.water_content,\r\n            status: this.state.errors.status\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (name === \"status\") {\r\n      this.setState({\r\n        status: value\r\n        // desiginationEdit: value\r\n      });\r\n\r\n      if (value.length !== 0) {\r\n        this.setState({\r\n          errors: {\r\n            mix_design_code: this.state.errors.mix_design_code,\r\n\r\n            slump: this.state.errors.slump,\r\n            temperature: this.state.errors.temperature,\r\n            water_content: this.state.errors.water_content,\r\n            status: \"\"\r\n          }\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleChange = (event, field) => {\r\n    this.setState({ [field]: event.target.value });\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    let errors = this.state.errors;\r\n    console.log(name + \" is \\t\" + value);\r\n    switch (name) {\r\n      case \"mix_design_code\":\r\n        errors.mix_design_code =\r\n          value.length === 0\r\n            ? \"mixdesign code can't be empty\"\r\n            : value.length < 2\r\n            ? \"mixdesign code must be one characters long!\"\r\n            : \"\";\r\n        break;\r\n\r\n      case \"slump\":\r\n        errors.slump =\r\n          value.length === 0\r\n            ? \"slump can't be empty\"\r\n            : value.length < 1\r\n            ? \"slump must be 3 characters long!\"\r\n            : value.length > 20\r\n            ? \"slump \\n must not be exceeded than 20 characters\"\r\n            : \"\";\r\n        break;\r\n      case \"temperature\":\r\n        errors.temperature = value.length === 0 ? \"Plant can't be empty\" : \"\";\r\n        break;\r\n      case \"water_content\":\r\n        errors.water_content =\r\n          value.length === 0 ? \"temperature can't be empty\" : \"\";\r\n        break;\r\n      case \"status\":\r\n        errors.status =\r\n          value.length === 0\r\n            ? \"status can't be empty\"\r\n            : value.length < 1\r\n            ? \"status must be 6 characters long!\"\r\n            : \"\";\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ errors, [name]: value });\r\n  };\r\n\r\n  getAllplant() {\r\n    api(\"GET\", \"supermix\", \"/plants\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data.results.plants.length);\r\n      if (res.data.results.plants.length > 0) {\r\n        console.log(\"ggg\");\r\n        let SelectPlants = res.data.results.plants.map((post, index) => {\r\n          return (\r\n            <Option value={post.code} key={index}>\r\n              {post.name}\r\n            </Option>\r\n          );\r\n        });\r\n        this.setState({\r\n          SelectPlants\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  getallMixdesigns = () => {\r\n    api(\"GET\", \"supermix\", \"/mix-designs\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data);\r\n      let selectMix = res.data.results.mixDesigns.map((post, index) => {\r\n        return (\r\n          <Option value={post.code} key={index}>\r\n            {post.code}\r\n          </Option>\r\n        );\r\n      });\r\n      this.setState({\r\n        selectMix\r\n      });\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    // this.getAllplant();\r\n    this.getallMixdesigns();\r\n  }\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (\r\n      // this.state.employee_code.length === 0 &&\r\n      this.state.mix_design_code.length === 0 &&\r\n      this.state.slump.length === 0 &&\r\n      this.state.temperature.length === 0 &&\r\n      this.state.water_content.length === 0 &&\r\n      this.state.status.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          mix_design_code: \"mix design code can't be empty\",\r\n\r\n          slump: \"slump can't be empty\",\r\n          temperature: \"temperature can't be empty\",\r\n          water_content: \"water content can't be empty\",\r\n          status: \"status No can't be empty\"\r\n        }\r\n      });\r\n    } else if (\r\n      this.state.mix_design_code.length === 0 &&\r\n      this.state.errors.mix_design_code.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          mix_design_code:\r\n            this.state.errors.mix_design_code ||\r\n            \"mix design code can't be empty\",\r\n\r\n          slump: this.state.errors.slump,\r\n          temperature: this.state.errors.temperature,\r\n          water_content: this.state.errors.water_content,\r\n          status: this.state.errors.status\r\n        }\r\n      });\r\n    } else if (\r\n      this.state.slump.length === 0 &&\r\n      this.state.errors.slump.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          mix_design_code: this.state.errors.mix_design_code,\r\n\r\n          slump: this.state.errors.slump || \"slump  can't be empty\",\r\n          temperature: this.state.errors.temperature,\r\n          water_content: this.state.errors.water_content,\r\n          status: this.state.errors.status\r\n        }\r\n      });\r\n    } else if (\r\n      this.state.temperature.length === 0 &&\r\n      this.state.errors.temperature.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          mix_design_code: this.state.errors.mix_design_code,\r\n\r\n          slump: this.state.errors.slump,\r\n          temperature:\r\n            this.state.errors.temperature || \"temperature can't be empty\",\r\n          water_content: this.state.errors.water_content,\r\n          status: this.state.errors.status\r\n        }\r\n      });\r\n    } else if (\r\n      this.state.water_content.length === 0 &&\r\n      this.state.errors.water_content.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          mix_design_code: this.state.errors.mix_design_code,\r\n\r\n          slump: this.state.errors.slump,\r\n          temperature: this.state.errors.temperature,\r\n          water_content:\r\n            this.state.errors.water_content || \"water content  can't be empty\",\r\n          status: this.state.errors.status\r\n        }\r\n      });\r\n    } else if (\r\n      // this.state.code.length === 0 &&\r\n      this.state.errors.mix_design_code.length === 0 &&\r\n      this.state.errors.slump.length === 0 &&\r\n      this.state.errors.temperature.length === 0 &&\r\n      this.state.errors.water_content.length === 0 &&\r\n      this.state.errors.status.length === 0\r\n    ) {\r\n      console.log(this.state.errors);\r\n\r\n      if (this.state.type === \"edit\") {\r\n        const data = {\r\n          id: this.state.concreteTestId,\r\n          mixDesignCode: this.state.mix_design_code,\r\n\r\n          slump: this.state.slump,\r\n          temperature: this.state.temperature,\r\n          waterContent: this.state.water_content,\r\n          status: this.state.status\r\n        };\r\n        console.log(data);\r\n        api(\"PUT\", \"supermix\", \"/concrete-test\", \"\", data, \"\")\r\n          .then(\r\n            res => {\r\n              console.log(res.data);\r\n              if (res.data.status === \"VALIDATION_FAILURE\") {\r\n                console.log(\"update\");\r\n                this.responeserror(res.data.results.name.message);\r\n              } else {\r\n                Notification(\"success\", res.data.message);\r\n                this.props.reload();\r\n                this.setState({ loading: true });\r\n                this.setState({\r\n                  errors: {\r\n                    mix_design_code: \"\",\r\n\r\n                    slump: \"\",\r\n                    temperature: \"\",\r\n                    water_content: \"\",\r\n                    status: \"\"\r\n                  },\r\n                  mix_design_code: \"\",\r\n                  edit_mix_design_code: \"\",\r\n                  slump: \"\",\r\n                  temperature: \"\",\r\n                  water_content: \"\",\r\n                  status: \"\",\r\n                  errormgs: \"\"\r\n                });\r\n                setTimeout(() => {\r\n                  this.setState({ loading: false, visible: false });\r\n                }, 200);\r\n              }\r\n            },\r\n            error => {\r\n              //   this.setState({\r\n              //     errorvalmegss: error.validationFailures[0]\r\n              //   });\r\n              console.log(\"DEBUG34: \", error);\r\n              //   console.log(HandelError(error.validationFailures[0]));\r\n            }\r\n          )\r\n          .catch(error => {\r\n            // this.setState({\r\n            //   errormgs: \"Plant Name Exist\"\r\n            // });\r\n            console.log(error);\r\n          });\r\n      } else {\r\n        const data = {\r\n          mixDesignCode: this.state.mix_design_code,\r\n\r\n          slump: this.state.slump,\r\n          temperature: this.state.temperature,\r\n          waterContent: this.state.water_content,\r\n          status: \"NEW\"\r\n        };\r\n        console.log(data);\r\n        api(\"POST\", \"supermix\", \"/concrete-test\", \"\", data, \"\").then(\r\n          res => {\r\n            console.log(res.data);\r\n            if (res.data.status === \"VALIDATION_FAILURE\") {\r\n              console.log(\"add\");\r\n            } else {\r\n              Notification(\"success\", res.data.message);\r\n              this.props.reload();\r\n              this.setState({ loading: true });\r\n              this.setState({\r\n                errors: {\r\n                  mix_design_code: \"\",\r\n\r\n                  slump: \"\",\r\n                  temperature: \"\",\r\n                  water_content: \"\",\r\n                  status: \"\"\r\n                },\r\n                mix_design_code: \"\",\r\n\r\n                slump: \"\",\r\n                temperature: \"\",\r\n                water_content: \"\",\r\n                status: \"\",\r\n                edit_mix_design_code: \"\",\r\n                errormgs: \"\"\r\n              });\r\n              setTimeout(() => {\r\n                this.setState({ loading: false, visible: false });\r\n              }, 200);\r\n            }\r\n          },\r\n          error => {\r\n            // this.setState({\r\n            //   errorvalmegss: error.validationFailures[0]\r\n            // });\r\n            console.log(\"DEBUG34: \", error);\r\n            // console.log(HandelError(error.validationFailures[0]));\r\n          }\r\n        );\r\n      }\r\n\r\n      // console.log(data);\r\n      console.log(\"form is valid\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { visible, loading } = this.state;\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <PrimaryButton\r\n          onClick={this.showModal}\r\n          style={{\r\n            background: \"#001328\",\r\n            color: \"white\",\r\n            border: \"none\",\r\n            width: \"120px\",\r\n            marginLeft: \"-10px\"\r\n          }}\r\n        >\r\n          Add Test Details\r\n        </PrimaryButton>\r\n        <Modal\r\n          width=\"650px\"\r\n          visible={visible}\r\n          closable={false}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          title={\r\n            <MasterLevelFormTitle>\r\n              <p\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                {this.state.type === \"edit\" ? \"Edit \" : \"Add Test Details\"}\r\n              </p>\r\n              <Icon\r\n                type=\"close-circle\"\r\n                onClick={this.handleCancel}\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              />\r\n            </MasterLevelFormTitle>\r\n          }\r\n          footer={[\r\n            <Button key=\"back\" onClick={this.handleCancel}>\r\n              Cancel\r\n            </Button>,\r\n            <PrimaryButton\r\n              key=\"submit\"\r\n              loading={loading}\r\n              onClick={e => this.handleSubmit(e)}\r\n              style={{ background: \"#001328\", color: \"white\", border: \"none\" }}\r\n            >\r\n              {this.state.type === \"edit\" ? \"Edit\" : \"Save\"}\r\n            </PrimaryButton>\r\n          ]}\r\n        >\r\n          <MasterLevelForm>\r\n            <div className=\"input_wrapper\">\r\n              <label for=\"plant\" className=\"label\">\r\n                Mix Design Code\r\n              </label>\r\n\r\n              <Select\r\n                showSearch\r\n                style={{ width: 180 }}\r\n                id=\"mix_design_code\"\r\n                name=\"mix_design_code\"\r\n                placeholder=\"Select a Code\"\r\n                onChange={value => this.handleSelect(\"mixdesign\", value)}\r\n                value={this.state.edit_mix_design_code}\r\n              >\r\n                {this.state.selectMix}\r\n              </Select>\r\n              {errors.mix_design_code.length > 0 && (\r\n                <div style={error}>{errors.mix_design_code}</div>\r\n              )}\r\n\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n\r\n            <div className=\"input_wrapper\">\r\n              <label for=\"slump\" className=\"label\">\r\n                Slump:\r\n              </label>\r\n\r\n              <Input\r\n                id=\"slump\"\r\n                name=\"slump\"\r\n                placeholder=\"Enter the Slump \"\r\n                onChange={this.handleChange}\r\n                value={this.state.slump}\r\n              />\r\n              {errors.slump.length > 0 && (\r\n                <div style={error}>{errors.slump}</div>\r\n              )}\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n\r\n            {/* Plant Name */}\r\n            <div className=\"input_wrapper\">\r\n              <label for=\"temperature\" className=\"label\">\r\n                Temperature:\r\n              </label>\r\n\r\n              <Input\r\n                id=\"temperature\"\r\n                name=\"temperature\"\r\n                placeholder=\"Enter the Temperature\"\r\n                onChange={this.handleChange}\r\n                value={this.state.temperature}\r\n              />\r\n              {errors.temperature.length > 0 && (\r\n                <div style={error}>{errors.temperature}</div>\r\n              )}\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n\r\n            {/* Place */}\r\n            <div className=\"input_wrapper\">\r\n              <label for=\"last_name\" className=\"label\">\r\n                Water Content:\r\n              </label>\r\n\r\n              <Input\r\n                id=\"water_content\"\r\n                name=\"water_content\"\r\n                placeholder=\"Enter the water content\"\r\n                onChange={this.handleChange}\r\n                value={this.state.water_content}\r\n              />\r\n              {errors.water_content.length > 0 && (\r\n                <div style={error}>{errors.water_content}</div>\r\n              )}\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n\r\n            <div className=\"input_wrapper\" hidden>\r\n              <label for=\"status\" className=\"label\">\r\n                Status:\r\n              </label>\r\n              <Select\r\n                id=\"status\"\r\n                name=\"status\"\r\n                placeholder=\"Enter the status\"\r\n                style={{ width: 180 }}\r\n                defaultValue=\"NEW\"\r\n                value=\"NEW\"\r\n                onChange={value => this.handleSelect(\"status\", value)}\r\n                disabled\r\n              >\r\n                <Option value=\"PASS\">Pass</Option>\r\n                <Option value=\"FAIL\">Fail</Option>\r\n                <Option value=\"PROCESS\">Process</Option>\r\n              </Select>\r\n              {errors.status.length > 0 && (\r\n                <div style={error}>{errors.status}</div>\r\n              )}\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n          </MasterLevelForm>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  //getting the global redux state to get the data from the EditPlantReducer.js\r\n  return {\r\n    visible: state.plantLevelReducers.EditPlantReducer.visible,\r\n    type: state.plantLevelReducers.EditPlantReducer.type,\r\n    editPlantData: state.plantLevelReducers.EditPlantReducer.editPlantData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setConcreteTestVisibility: () => {\r\n      dispatch({ type: DISABLE_EDIT_MODE });\r\n      console.log(\"edit modal closed\");\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ConcreteTest);\r\n","import React, { Component } from \"react\";\r\nimport Paragraph from \"antd/lib/typography/Paragraph\";\r\nimport AddConcreteTest from \"../concrete/ConcreteTest\";\r\nimport { FlexContainer } from \"../../styledcomponents/container/FlexGrid\";\r\n\r\nconst style = {\r\n  fontSize: \"medium\",\r\n  fontWeight: \"600\",\r\n  alignSelf: \"auto\",\r\n  padding: \"10px\"\r\n};\r\n\r\nexport default class ConcreteTestTitle extends Component {\r\n  getallConcreteTest = () => {\r\n    this.props.reload();\r\n  };\r\n  render() {\r\n    return (\r\n      <FlexContainer titles leveltitles>\r\n        <Paragraph style={style}>Concrete Test</Paragraph>\r\n        <div style={{ display: \"flex\" }}>\r\n          {/* <Search\r\n        placeholder=\"Search Employee\"\r\n        onSearch={value => console.log(value)}\r\n        style={{ width: 200, height: 30, marginRight: \"50px\" }}\r\n      /> */}\r\n          <AddConcreteTest reload={this.getallConcreteTest} />\r\n        </div>\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Icon, Popconfirm, Divider, Tag } from \"antd\";\r\nimport ConcreteTestTitle from \"../titles/ConcreteTestTitle\";\r\nimport { AntTable } from \"../../styledcomponents/table/AntTabl\";\r\nimport { api } from \"../../services/AxiosService\";\r\nimport Notification from \"../../Constant/Notification\";\r\nimport { connect } from \"react-redux\";\r\nimport { SWITCH_TO_EDIT_MODE } from \"../../../redux/action/master/plantlevel/PlantLevel\";\r\n\r\nclass ManageConcreteTest extends Component {\r\n  state = {\r\n    concreteData: \"\",\r\n    size: \"small\"\r\n  };\r\n\r\n  getallConcreteTest = () => {\r\n    api(\"GET\", \"supermix\", \"/concrete-tests\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data);\r\n      this.setState({\r\n        concreteData: res.data.results.concreteTests\r\n      });\r\n    });\r\n  };\r\n  onConfirmdelete(id) {\r\n    console.log(id);\r\n\r\n    api(\"DELETE\", \"supermix\", \"/concrete-test\", \"\", \"\", id).then(res => {\r\n      console.log(res.data);\r\n      this.getallConcreteTest();\r\n      Notification(\"success\", res.data.message);\r\n    });\r\n    console.log(this.state.id);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getallConcreteTest();\r\n  }\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"Mix Design Code\",\r\n        dataIndex: \"mixDesignCode\",\r\n        key: \"mix_design_code\",\r\n        width: \"6%\"\r\n      },\r\n      {\r\n        title: \"Slump\",\r\n        dataIndex: \"slump\",\r\n        key: \"slump\",\r\n        width: \"6%\"\r\n      },\r\n      {\r\n        title: \"Temperature\",\r\n        dataIndex: \"temperature\",\r\n        key: \"temperature\",\r\n        width: \"6%\"\r\n      },\r\n\r\n      {\r\n        title: \"Water Content\",\r\n        dataIndex: \"waterContent\",\r\n        key: \"water_content\",\r\n        width: \"6%\"\r\n      },\r\n      {\r\n        title: \"Slump Grade Ratio\",\r\n        dataIndex: \"slumpGradeRatio\",\r\n        key: \"slump_grade_ratio\",\r\n        width: \"6%\"\r\n      },\r\n      {\r\n        title: \"Water Cement Ratio\",\r\n        dataIndex: \"waterCementRatio\",\r\n        key: \"water_cement_ratio\",\r\n        width: \"7%\"\r\n      },\r\n\r\n      {\r\n        title: \"Water Binder Ratio\",\r\n        dataIndex: \"waterBinderRatio\",\r\n        key: \"water_binder_ratio\",\r\n        width: \"7%\"\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataIndex: \"status\",\r\n        key: \"status\",\r\n        width: \"5%\",\r\n        render: status => (\r\n          <span>\r\n            {\r\n              <Tag\r\n                color={\r\n                  status == \"PASS\"\r\n                    ? \"green\"\r\n                    : status == \"PROCESS\"\r\n                    ? \"orange\"\r\n                    : status == \"NEW\"\r\n                    ? \"yellow\"\r\n                    : \"red\"\r\n                }\r\n              >\r\n                {status}\r\n              </Tag>\r\n            }\r\n          </span>\r\n        )\r\n      },\r\n\r\n      {\r\n        title: \"Edit & Delete\",\r\n        key: \"action\",\r\n        width: \"5%\",\r\n        render: (text, record = this.state.concreteData) => (\r\n          <span>\r\n            <a>\r\n              <Icon\r\n                type=\"edit\"\r\n                style={{ fontSize: \"1.2em\" }}\r\n                onClick={this.props.passEditconcreteTestToModal.bind(\r\n                  this,\r\n                  record\r\n                )}\r\n              />\r\n            </a>\r\n            <Divider type=\"vertical\" />\r\n            <a>\r\n              <Popconfirm\r\n                title=\"Are you sure you want to Delete this?\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: \"red\" }} />\r\n                }\r\n                onConfirm={this.onConfirmdelete.bind(this, record.id)}\r\n              >\r\n                <a href=\"#\">\r\n                  <Icon\r\n                    type=\"delete\"\r\n                    style={{ color: \"red\", fontSize: \"1.2em\" }}\r\n                  />\r\n                </a>\r\n              </Popconfirm>\r\n            </a>\r\n          </span>\r\n        )\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <AntTable\r\n        maxlength\r\n        style={{ width: \"1300px\" }}\r\n        title={() => <ConcreteTestTitle reload={this.getallConcreteTest} />}\r\n        className=\"plantManageTable\"\r\n        columns={columns}\r\n        dataSource={this.state.concreteData}\r\n        // onChange={this.handleChange}\r\n        pagination={{ defaultPageSize: 4 }}\r\n        size={this.state.size}\r\n      />\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // if this function dispatches modal will be shown and the data will be drawn :)\r\n    passEditconcreteTestToModal: record => {\r\n      //this payload is the data we pass into redux which is in the row which we clicked\r\n      dispatch({ type: SWITCH_TO_EDIT_MODE, payload: record });\r\n      console.log(record);\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ManageConcreteTest);\r\n","import React, { Component } from \"react\";\r\nimport { Input, Modal, Button, Icon, Select } from \"antd\";\r\nimport {\r\n  MasterLevelForm,\r\n  MasterLevelFormTitle\r\n} from \"../../styledcomponents/form/MasterLevelForms\";\r\nimport { PrimaryButton } from \"../../styledcomponents/button/button\";\r\nimport { api } from \"../../services/AxiosService\";\r\nimport { connect } from \"react-redux\";\r\nimport Notification from \"../../Constant/Notification\";\r\n// import HandelError from \"../../../Constant/HandleError\";\r\nimport moment from \"moment\";\r\nimport { DISABLE_EDIT_MODE } from \"../../../redux/action/master/plantlevel/PlantLevel\";\r\nconst { Option } = Select;\r\nconst error = {\r\n  color: \"red\",\r\n  fontSize: \"12px\",\r\n  width: \"160px\",\r\n  height: \"2px\"\r\n};\r\n\r\nclass AddConcreteStrengthTest extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      visible: false,\r\n      errors: {\r\n        mix_design_code: \"\",\r\n\r\n        concrete_age: \"\",\r\n        strength: \"\",\r\n        status: \"\"\r\n      },\r\n      mix_design_code: \"\",\r\n      concrete_age: \"\",\r\n      strength: 0,\r\n      status: \"PROCESS\",\r\n      type: \"add\",\r\n      SelectPlants: \"\",\r\n      selectMix: \"\",\r\n      concreteStrengthTestId: \"\",\r\n      edit_mix_design_code: \"\",\r\n      edit_plant_code: \"\",\r\n      entreddate: \"\",\r\n      enableStrength: false\r\n    };\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    console.log(nextProps);\r\n\r\n    this.setState({\r\n      visible: nextProps.visible,\r\n      concreteStrengthTestId: nextProps.editPlantData.id,\r\n      mix_design_code: nextProps.editPlantData.mixDesignCode,\r\n      concrete_age: nextProps.editPlantData.concreteAge,\r\n      strength: nextProps.editPlantData.strength,\r\n      status: nextProps.editPlantData.status,\r\n      edit_mix_design_code: nextProps.editPlantData.mixDesignCode,\r\n      edit_plant_code: nextProps.editPlantData.plantName,\r\n      entreddate: nextProps.editPlantData.date,\r\n      type: nextProps.type\r\n    });\r\n    console.log(nextProps.editPlantData.date);\r\n    this.daycount(\r\n      nextProps.editPlantData.date,\r\n      nextProps.editPlantData.concreteAge\r\n    );\r\n  }\r\n  daycount = (day, age) => {\r\n    var targetDate = moment(day)\r\n      .add(age, \"days\")\r\n      .format(\"YYYY-MM-DD\");\r\n    var today = moment().format(\"YYYY-MM-DD\");\r\n    console.log(targetDate);\r\n    console.log(today);\r\n    if (targetDate === today) {\r\n      console.log(\"true\");\r\n      this.setState({\r\n        enableStrength: true\r\n      });\r\n    }\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n      errors: {\r\n        mix_design_code: \"\",\r\n\r\n        concrete_age: \"\",\r\n        strength: \"\",\r\n        status: \"\"\r\n      },\r\n      mix_design_code: \"\",\r\n      edit_mix_design_code: \"\",\r\n      concrete_age: \"\",\r\n      strength: 0,\r\n      status: \"PROCESS\"\r\n    });\r\n  };\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: true,\r\n      errors: {\r\n        mix_design_code: \"\",\r\n\r\n        concrete_age: \"\",\r\n        strength: \"\",\r\n        status: \"\"\r\n      },\r\n      mix_design_code: \"\",\r\n      dit_mix_design_code: \"\",\r\n      concrete_age: \"\",\r\n      strength: \"\",\r\n      status: \"PROCESS\"\r\n    });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    if (this.state.type === \"edit\") {\r\n      this.props.setConcreteStrengthTestVisibility();\r\n    }\r\n    this.setState({\r\n      visible: false,\r\n      errors: {\r\n        mix_design_code: \"\",\r\n\r\n        concrete_age: \"\",\r\n        strength: \"\",\r\n        status: \"\"\r\n      },\r\n      mix_design_code: \"\",\r\n      dit_mix_design_code: \"\",\r\n      concrete_age: \"\",\r\n      strength: \"\",\r\n      status: \"PROCESS\",\r\n      errormgs: \"\"\r\n    });\r\n  };\r\n  handleSelect = (name, value) => {\r\n    console.log(name);\r\n    console.log(value);\r\n    // handle select for  plant\r\n\r\n    //handle select for designation\r\n    if (name === \"mixdesign\") {\r\n      this.setState({\r\n        mix_design_code: value,\r\n        edit_mix_design_code: value\r\n      });\r\n\r\n      if (value.length !== 0) {\r\n        this.setState({\r\n          errors: {\r\n            mix_design_code: \"\",\r\n\r\n            concrete_age: this.state.errors.concrete_age,\r\n            strength: this.state.errors.strength,\r\n            status: this.state.errors.status\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (name === \"status\") {\r\n      this.setState({\r\n        status: value\r\n        // desiginationEdit: value\r\n      });\r\n\r\n      if (value.length !== 0) {\r\n        this.setState({\r\n          errors: {\r\n            mix_design_code: this.state.errors.mix_design_code,\r\n\r\n            concrete_age: this.state.errors.concrete_age,\r\n            strength: this.state.errors.strength,\r\n            status: \"\"\r\n          }\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleChange = (event, field) => {\r\n    this.setState({ [field]: event.target.value });\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    let errors = this.state.errors;\r\n    console.log(name + \" is \\t\" + value);\r\n    switch (name) {\r\n      case \"mix_design_code\":\r\n        errors.mix_design_code =\r\n          value.length === 0\r\n            ? \"mixdesign code can't be empty\"\r\n            : value.length < 1\r\n            ? \"mixdesign code must be one characters long!\"\r\n            : \"\";\r\n        break;\r\n\r\n      case \"concrete_age\":\r\n        errors.concrete_age =\r\n          value.length === 0\r\n            ? \"concrete age can't be empty\"\r\n            : value.length < 1\r\n            ? \"concrete age must be 3 characters long!\"\r\n            : value.length > 20\r\n            ? \"concrete age \\n must not be exceeded than 20 characters\"\r\n            : \"\";\r\n        break;\r\n      // case \"strength\":\r\n      //   errors.strength = value.length === 0 ? \"strength can't be empty\" : \"\";\r\n      //   break;\r\n      case \"status\":\r\n        errors.status =\r\n          value.length === 0\r\n            ? \"status can't be empty\"\r\n            : value.length < 1\r\n            ? \"status must be 6 characters long!\"\r\n            : \"\";\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ errors, [name]: value });\r\n  };\r\n  getAllplant() {\r\n    api(\"GET\", \"supermix\", \"/plants\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data.results.plants.length);\r\n      if (res.data.results.plants.length > 0) {\r\n        console.log(\"ggg\");\r\n        let SelectPlants = res.data.results.plants.map((post, index) => {\r\n          return (\r\n            <Option value={post.code} key={index}>\r\n              {post.name}\r\n            </Option>\r\n          );\r\n        });\r\n        this.setState({\r\n          SelectPlants\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  getallMixdesigns = () => {\r\n    api(\"GET\", \"supermix\", \"/mix-designs\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data);\r\n      let selectMix = res.data.results.mixDesigns.map((post, index) => {\r\n        return (\r\n          <Option value={post.code} key={index}>\r\n            {post.code}\r\n          </Option>\r\n        );\r\n      });\r\n      this.setState({\r\n        selectMix\r\n      });\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    // this.getAllplant();\r\n    console.log(moment().format(\"YYYY-MM-DD\"));\r\n    this.getallMixdesigns();\r\n  }\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (\r\n      // this.state.employee_code.length === 0 &&\r\n      this.state.mix_design_code.length === 0 &&\r\n      this.state.concrete_age.length === 0 &&\r\n      this.state.strength.length === 0 &&\r\n      this.state.status.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          mix_design_code: \"mix design code can't be empty\",\r\n          concrete_age: \"concrete age can't be empty\",\r\n          strength: \"strength can't be empty\",\r\n          status: \"status No can't be empty\"\r\n        }\r\n      });\r\n    } else if (\r\n      this.state.mix_design_code.length === 0 &&\r\n      this.state.errors.mix_design_code.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          mix_design_code:\r\n            this.state.errors.mix_design_code ||\r\n            \"mix design code can't be empty\",\r\n\r\n          concrete_age: this.state.errors.concrete_age,\r\n          strength: this.state.errors.strength,\r\n          status: this.state.errors.status\r\n        }\r\n      });\r\n    } else if (\r\n      this.state.concrete_age.length === 0 &&\r\n      this.state.errors.concrete_age.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          mix_design_code: this.state.errors.mix_design_code,\r\n\r\n          concrete_age:\r\n            this.state.errors.concrete_age || \"concrete age  can't be empty\",\r\n          strength: this.state.errors.strength,\r\n          status: this.state.errors.status\r\n        }\r\n      });\r\n    } else if (\r\n      this.state.strength.length === 0 &&\r\n      this.state.errors.strength.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          mix_design_code: this.state.errors.mix_design_code,\r\n\r\n          concrete_age: this.state.errors.concrete_age,\r\n          strength: this.state.errors.strength || \"strength can't be empty\",\r\n          status: this.state.errors.status\r\n        }\r\n      });\r\n    } else if (\r\n      this.state.status.length === 0 &&\r\n      this.state.errors.status.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          mix_design_code: this.state.errors.mix_design_code,\r\n\r\n          concrete_age: this.state.errors.concrete_age,\r\n          strength: this.state.errors.strength,\r\n          water_content: this.state.errors.water_content,\r\n          status: this.state.errors.status || \" status  can't be empty\"\r\n        }\r\n      });\r\n    } else if (\r\n      // this.state.code.length === 0 &&\r\n      this.state.errors.mix_design_code.length === 0 &&\r\n      this.state.errors.concrete_age.length === 0 &&\r\n      this.state.errors.strength.length === 0 &&\r\n      this.state.errors.status.length === 0\r\n    ) {\r\n      console.log(this.state.errors);\r\n\r\n      if (this.state.type === \"edit\") {\r\n        console.log(moment(this.state.entreddate).format(\"YYYY-MM-DD\"));\r\n        console.log(this.state.entreddate);\r\n        const data = {\r\n          id: this.state.concreteStrengthTestId,\r\n          mixDesignCode: this.state.mix_design_code,\r\n          date: this.state.entreddate,\r\n          strength: this.state.strength,\r\n          concreteAge: this.state.concrete_age,\r\n          status: this.state.status\r\n        };\r\n        console.log(data);\r\n        api(\"PUT\", \"supermix\", \"/concrete-strength-test\", \"\", data, \"\")\r\n          .then(\r\n            res => {\r\n              console.log(res.data);\r\n              if (res.data.status === \"VALIDATION_FAILURE\") {\r\n                console.log(\"update\");\r\n                this.responeserror(res.data.results.name.message);\r\n              } else {\r\n                Notification(\"success\", res.data.message);\r\n                this.props.reload();\r\n                this.setState({ loading: true });\r\n                this.setState({\r\n                  errors: {\r\n                    mix_design_code: \"\",\r\n\r\n                    concrete_age: \"\",\r\n                    strength: \"\",\r\n                    status: \"\"\r\n                  },\r\n                  mix_design_code: \"\",\r\n                  edit_mix_design_code: \"\",\r\n                  type: \"add\",\r\n                  concrete_age: \"\",\r\n                  strength: \"\",\r\n                  status: \"PROCESS\",\r\n                  errormgs: \"\"\r\n                });\r\n                setTimeout(() => {\r\n                  this.setState({ loading: false, visible: false });\r\n                }, 200);\r\n              }\r\n            },\r\n            error => {\r\n              //   this.setState({\r\n              //     errorvalmegss: error.validationFailures[0]\r\n              //   });\r\n              console.log(\"DEBUG34: \", error);\r\n              //   console.log(HandelError(error.validationFailures[0]));\r\n            }\r\n          )\r\n          .catch(error => {\r\n            // this.setState({\r\n            //   errormgs: \"Plant Name Exist\"\r\n            // });\r\n            console.log(error);\r\n          });\r\n      } else {\r\n        const data = {\r\n          mixDesignCode: this.state.mix_design_code,\r\n          date: moment().format(\"YYYY-MM-DD\"),\r\n          strength: this.state.strength,\r\n          concreteAge: this.state.concrete_age,\r\n          status: this.state.status\r\n        };\r\n        console.log(data);\r\n        api(\"POST\", \"supermix\", \"/concrete-strength-test\", \"\", data, \"\").then(\r\n          res => {\r\n            console.log(res.data);\r\n            if (res.data.status === \"VALIDATION_FAILURE\") {\r\n              console.log(\"add\");\r\n            } else {\r\n              Notification(\"success\", res.data.message);\r\n              this.props.reload();\r\n              this.setState({ loading: true });\r\n              this.setState({\r\n                errors: {\r\n                  mix_design_code: \"\",\r\n                  concrete_age: \"\",\r\n                  strength: \"\",\r\n                  status: \"\"\r\n                },\r\n                mix_design_code: \"\",\r\n                dit_mix_design_code: \"\",\r\n                concrete_age: \"\",\r\n                strength: \"\",\r\n                status: \"PROCESS\",\r\n                errormgs: \"\",\r\n                type: \"add\"\r\n              });\r\n              setTimeout(() => {\r\n                this.setState({ loading: false, visible: false });\r\n              }, 200);\r\n            }\r\n          },\r\n          error => {\r\n            // this.setState({\r\n            //   errorvalmegss: error.validationFailures[0]\r\n            // });\r\n            console.log(\"DEBUG34: \", error);\r\n            // console.log(HandelError(error.validationFailures[0]));\r\n          }\r\n        );\r\n      }\r\n\r\n      // console.log(data);\r\n      console.log(\"form is valid\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { visible, loading } = this.state;\r\n    const { errors, strength } = this.state;\r\n    // console.log(this.state.strength);\r\n    return (\r\n      <div>\r\n        <PrimaryButton\r\n          onClick={this.showModal}\r\n          style={{\r\n            background: \"#001328\",\r\n            color: \"white\",\r\n            border: \"none\",\r\n            width: \"120px\",\r\n            marginLeft: \"-10px\"\r\n          }}\r\n        >\r\n          Add Test Details\r\n        </PrimaryButton>\r\n        <Modal\r\n          width=\"850px\"\r\n          visible={visible}\r\n          closable={false}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          title={\r\n            <MasterLevelFormTitle>\r\n              <p\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                {this.state.type === \"edit\" ? \"Edit \" : \"Add Test Details\"}\r\n              </p>\r\n              <Icon\r\n                type=\"close-circle\"\r\n                onClick={this.handleCancel}\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              />\r\n            </MasterLevelFormTitle>\r\n          }\r\n          footer={[\r\n            <Button key=\"back\" onClick={this.handleCancel}>\r\n              Cancel\r\n            </Button>,\r\n            <PrimaryButton\r\n              key=\"submit\"\r\n              loading={loading}\r\n              onClick={e => this.handleSubmit(e)}\r\n              style={{ background: \"#001328\", color: \"white\", border: \"none\" }}\r\n            >\r\n              {this.state.type === \"edit\" ? \"Edit\" : \"Save\"}\r\n            </PrimaryButton>\r\n          ]}\r\n        >\r\n          <MasterLevelForm>\r\n            <div className=\"input_wrapper\">\r\n              <label for=\"plant\" className=\"label\">\r\n                Mix Design Code\r\n              </label>\r\n\r\n              <Select\r\n                showSearch\r\n                style={{ width: 180 }}\r\n                id=\"mix_design_code\"\r\n                name=\"mix_design_code\"\r\n                placeholder=\"Select a Code\"\r\n                onChange={value => this.handleSelect(\"mixdesign\", value)}\r\n                value={this.state.edit_mix_design_code}\r\n              >\r\n                {this.state.selectMix}\r\n              </Select>\r\n              {errors.mix_design_code.length > 0 && (\r\n                <div style={error}>{errors.mix_design_code}</div>\r\n              )}\r\n\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n            {/* <div className=\"input_wrapper\">\r\n              <label for=\"plant code\" className=\"label\">\r\n                Plant Code\r\n              </label>\r\n\r\n              <Select\r\n                showSearch\r\n                style={{ width: 180 }}\r\n                id=\"plant_code\"\r\n                name=\"plant_code\"\r\n                placeholder=\"Select a Code\"\r\n                onChange={value => this.handleSelect(\"plant\", value)}\r\n                value={this.state.edit_plant_code}\r\n              >\r\n                {this.state.SelectPlants}\r\n              </Select>\r\n              {errors.plant_code.length > 0 && (\r\n                <div style={error}>{errors.plant_code}</div>\r\n              )}\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div> */}\r\n            {/* Code */}\r\n            <div className=\"input_wrapper\">\r\n              <label for=\"concrete age\" className=\"label\">\r\n                Concrete Age:\r\n              </label>\r\n\r\n              <Input\r\n                id=\"concrete_age\"\r\n                name=\"concrete_age\"\r\n                placeholder=\"Enter the age \"\r\n                onChange={this.handleChange}\r\n                value={this.state.concrete_age}\r\n              />\r\n              {errors.concrete_age.length > 0 && (\r\n                <div style={error}>{errors.concrete_age}</div>\r\n              )}\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n\r\n            {/* Plant Name */}\r\n            <div className=\"input_wrapper\">\r\n              <label for=\"strength\" className=\"label\">\r\n                Strength:\r\n              </label>\r\n\r\n              <Input\r\n                id=\"strength\"\r\n                name=\"strength\"\r\n                placeholder=\"Enter the strength\"\r\n                value={strength}\r\n                onChange={this.handleChange}\r\n                // disabled={this.state.enableStrength ? false : true}\r\n              />\r\n              {errors.strength.length > 0 && (\r\n                <div style={error}>{errors.strength}</div>\r\n              )}\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n\r\n            {/* Place */}\r\n\r\n            {/* <div className=\"input_wrapper\">\r\n              <label for=\"status\" className=\"label\">\r\n                Status:\r\n              </label>\r\n              <Select\r\n                id=\"status\"\r\n                name=\"status\"\r\n                placeholder=\"Enter the status\"\r\n                style={{ width: 180 }}\r\n                value={this.state.status}\r\n                onChange={value => this.handleSelect(\"status\", value)}\r\n              >\r\n                <Option value=\"PASS\">Pass</Option>\r\n                <Option value=\"FAIL\">Fail</Option>\r\n                <Option value=\"PROCESS\">Process</Option>\r\n              </Select>\r\n              {errors.status.length > 0 && (\r\n                <div style={error}>{errors.status}</div>\r\n              )}\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div> */}\r\n          </MasterLevelForm>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  //getting the global redux state to get the data from the EditPlantReducer.js\r\n  return {\r\n    visible: state.plantLevelReducers.EditPlantReducer.visible,\r\n    type: state.plantLevelReducers.EditPlantReducer.type,\r\n    editPlantData: state.plantLevelReducers.EditPlantReducer.editPlantData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setConcreteStrengthTestVisibility: () => {\r\n      dispatch({ type: DISABLE_EDIT_MODE });\r\n      console.log(\"edit modal closed\");\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AddConcreteStrengthTest);\r\n","import React, { Component } from \"react\";\r\nimport Paragraph from \"antd/lib/typography/Paragraph\";\r\nimport AddConcreteStrengthTest from \"../concreteStrength/AddConcreteStrengthTest\";\r\nimport { FlexContainer } from \"../../styledcomponents/container/FlexGrid\";\r\n\r\nconst style = {\r\n  fontSize: \"medium\",\r\n  fontWeight: \"600\",\r\n  alignSelf: \"auto\",\r\n  padding: \"10px\"\r\n};\r\n\r\nexport default class ConcreteStrengthTestTitle extends Component {\r\n  getallConcreteTest = () => {\r\n    this.props.reload();\r\n  };\r\n  render() {\r\n    return (\r\n      <FlexContainer titles leveltitles>\r\n        <Paragraph style={style}>Concrete Strength Test</Paragraph>\r\n        <div style={{ display: \"flex\" }}>\r\n          {/* <Search\r\n            placeholder=\"Search Employee\"\r\n            onSearch={value => console.log(value)}\r\n            style={{ width: 200, height: 30, marginRight: \"50px\" }}\r\n          /> */}\r\n          <AddConcreteStrengthTest reload={this.getallConcreteTest} />\r\n        </div>\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Icon, Popconfirm, Divider, Tag } from \"antd\";\r\nimport ConcreteStrengthTestTitle from \"../titles/ConcreteStrengthTestTitle\";\r\nimport { AntTable } from \"../../styledcomponents/table/AntTabl\";\r\nimport { api } from \"../../services/AxiosService\";\r\nimport Notification from \"../../Constant/Notification\";\r\nimport { connect } from \"react-redux\";\r\nimport { SWITCH_TO_EDIT_MODE } from \"../../../redux/action/master/plantlevel/PlantLevel\";\r\n// import Countdown from \"react-countdown-now\";\r\nimport moment from \"moment\";\r\n\r\nconst Completionist = () => <span>You are good to go!</span>;\r\n\r\nclass ManageStrength extends Component {\r\n  state = {\r\n    concreteData: \"\",\r\n    size: \"small\"\r\n  };\r\n\r\n  getallConcreteStrengthTest = () => {\r\n    api(\"GET\", \"supermix\", \"/concrete-strength-tests\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data.results.concreteStrengthTests);\r\n      this.setState({\r\n        concreteData: res.data.results.concreteStrengthTests\r\n      });\r\n    });\r\n  };\r\n  onConfirmdelete(id) {\r\n    console.log(id);\r\n\r\n    api(\"DELETE\", \"supermix\", \"/concrete-strength-test\", \"\", \"\", id).then(\r\n      res => {\r\n        console.log(res.data);\r\n        this.getallConcreteStrengthTest();\r\n        Notification(\"success\", res.data.message);\r\n      }\r\n    );\r\n    console.log(this.state.id);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getallConcreteStrengthTest();\r\n  }\r\n\r\n  daycount = (day, age) => {\r\n    var targetDate = moment(day)\r\n      .add(age, \"days\")\r\n      .format(\"YYYY-MM-DD\");\r\n    var reminingDays = moment(targetDate, \"YYYY-MM-DD\").fromNow();\r\n    return reminingDays;\r\n  };\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"Mix Design Code\",\r\n        dataIndex: \"mixDesignCode\",\r\n        key: \"mix_design_code\",\r\n        width: \"6%\"\r\n      },\r\n      {\r\n        title: \"concrete age\",\r\n        dataIndex: \"concreteAge\",\r\n        key: \"concreteAge\",\r\n        width: \"6%\"\r\n      },\r\n      {\r\n        title: \"Strength\",\r\n        dataIndex: \"strength\",\r\n        key: \"strength\",\r\n        width: \"6%\",\r\n        render: strength => (\r\n          <span>\r\n            {strength === 0 ? <Tag color='yellow'>Pending</Tag> : strength}\r\n          </span>\r\n        )\r\n      },\r\n\r\n      {\r\n        title: \"Mix Design TargetGrade\",\r\n        dataIndex: \"mixDesignTargetGrade\",\r\n        key: \"mixDesignTargetGrade\",\r\n        width: \"6%\"\r\n      },\r\n      {\r\n        title: \"Strength GradeRatio\",\r\n        dataIndex: \"strengthGradeRatio\",\r\n        key: \"strengthGradeRatio\",\r\n        width: \"8%\"\r\n      },\r\n      {\r\n        title: \"Day Remaining\",\r\n        key: \"days\",\r\n        width: \"8%\",\r\n        render: (data = this.state.concreteData) => (\r\n          <span>\r\n            {this.daycount(data.date, data.concreteAge)}\r\n            {/* {moment(\r\n              moment()\r\n                .add(data.concreteAge, \"days\")\r\n                .format(\"YYYY-MM-DD\"),\r\n              \"YYYY-MM-DD\"\r\n            ).fromNow()} */}\r\n          </span>\r\n        )\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataIndex: \"status\",\r\n        key: \"status\",\r\n        width: \"7%\",\r\n        render: status => (\r\n          <span>\r\n            {\r\n              <Tag\r\n                color={\r\n                  status == \"PASS\"\r\n                    ? \"green\"\r\n                    : status == \"PROCESS\"\r\n                    ? \"orange\"\r\n                    : \"red\"\r\n                }\r\n              >\r\n                {status}\r\n              </Tag>\r\n            }\r\n          </span>\r\n        )\r\n      },\r\n\r\n      {\r\n        title: \"Edit & Delete\",\r\n        key: \"action\",\r\n        width: \"7%\",\r\n        render: (text, record = this.state.concreteData) => (\r\n          <span>\r\n            <a>\r\n              <Icon\r\n                type='edit'\r\n                style={{ fontSize: \"1.2em\" }}\r\n                onClick={this.props.passEditconcreteStrengthTestToModal.bind(\r\n                  this,\r\n                  record\r\n                )}\r\n              />\r\n            </a>\r\n            <Divider type='vertical' />\r\n            <a>\r\n              <Popconfirm\r\n                title='Are you sure you want to Delete this?'\r\n                icon={\r\n                  <Icon type='question-circle-o' style={{ color: \"red\" }} />\r\n                }\r\n                onConfirm={this.onConfirmdelete.bind(this, record.id)}\r\n              >\r\n                <a href='#'>\r\n                  <Icon\r\n                    type='delete'\r\n                    style={{ color: \"red\", fontSize: \"1.2em\" }}\r\n                  />\r\n                </a>\r\n              </Popconfirm>\r\n            </a>\r\n          </span>\r\n        )\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <AntTable\r\n        maxlength\r\n        style={{ width: \"1300px\" }}\r\n        title={() => (\r\n          <ConcreteStrengthTestTitle reload={this.getallConcreteStrengthTest} />\r\n        )}\r\n        className='plantManageTable'\r\n        columns={columns}\r\n        dataSource={this.state.concreteData}\r\n        // onChange={this.handleChange}\r\n        pagination={{ defaultPageSize: 4 }}\r\n        size={this.state.size}\r\n      />\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // if this function dispatches modal will be shown and the data will be drawn :)\r\n    passEditconcreteStrengthTestToModal: record => {\r\n      //this payload is the data we pass into redux which is in the row which we clicked\r\n      dispatch({ type: SWITCH_TO_EDIT_MODE, payload: record });\r\n      console.log(record);\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ManageStrength);\r\n","import styled, { css } from \"styled-components\";\r\n\r\nimport MaterialTest from \"../../../assets/testtrial/materialTest.png\";\r\nimport ConcreteTest from \"../../../assets/testtrial/concreteTest.png\";\r\nimport ConcreteStrengthTest from \"../../../assets/testtrial/concreteStrengthTest.png\";\r\n\r\nconst size = {\r\n  mobileS: \"320px\",\r\n  mobileM: \"375px\",\r\n  mobileL: \"425px\",\r\n  tablet: \"768px\",\r\n  laptop: \"1024px\",\r\n  laptopL: \"1440px\",\r\n  desktop: \"1920px\",\r\n  desktopL: \"2560px\"\r\n};\r\n\r\nexport const device = {\r\n  mobileS: `(max-width: ${size.mobileS})`,\r\n  mobileM: `(max-width: ${size.mobileM})`,\r\n  mobileL: `(max-width: ${size.mobileL})`,\r\n  tablet: `(max-width: ${size.tablet})`,\r\n  laptop: `(max-width: ${size.laptop})`,\r\n  laptopL: `(max-width: ${size.laptopL})`,\r\n  desktop: `(max-width: ${size.desktop})`,\r\n  desktopL: `(max-width: ${size.desktop})`\r\n};\r\n\r\nexport const TestTrialCardDetails = styled.p`\r\n  color: white;\r\n  font-weight: 550;\r\n  margin-top: 5px;\r\n`;\r\n\r\nexport const TestTrialCardText = styled.h2`\r\n  margin-top: 60px;\r\n  color: white;\r\n`;\r\n\r\nexport const TrialCard = styled.div`\r\n  text-shadow: 1px 6px 7px none;\r\n  border: none;\r\n  position: static;\r\n  z-index: 20;\r\n  border-radius: 0.35em;\r\n  transform: translate3d(2px);\r\n  background-size: cover;\r\n  box-shadow: 4px 4px 6px 3px rgba(0, 0, 0, 0.5);\r\n  cursor: pointer;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  ${props =>\r\n    props.concreteTest &&\r\n    css`\r\n      background: url(${ConcreteTest});\r\n      background-size: cover;\r\n    `}\r\n\r\n  ${props =>\r\n    props.concreteStrengthTest &&\r\n    css`\r\n      background: url(${ConcreteStrengthTest});\r\n      background-size: cover;\r\n    `}\r\n\r\n    ${props =>\r\n      props.materialTest &&\r\n      css`\r\n        background: url(${MaterialTest});\r\n        background-size: cover;\r\n      `}\r\n\r\n\r\n  &:hover {\r\n    position: static;\r\n    animation-name: cardUp;\r\n    /* transform: translateY(-8px);\r\n        transition: 10s; */\r\n    animation-duration: 1s;\r\n    z-index: 300;\r\n    transform: translate3d(52px);\r\n    transform: translateY(-2px);\r\n    /* animation-iteration-count: infinite; */\r\n    box-shadow: 8px 22px 30px 3px rgba(0, 0, 0, 0.6);\r\n    -webkit-animation-name: cardUp; /* Safari 4.0 - 8.0 */\r\n    -webkit-animation-duration: 1s; /* Safari 4.0 - 8.0 */\r\n    -moz-animation-name: cardUp; /* Mozilla */\r\n    -moz-animation-duration: 1s; /* Mozilla */\r\n  }\r\n\r\n  @keyframes cardUp {\r\n    from {\r\n      box-shadow: 4px 4px 6px 3px rgba(0, 0, 0, 0.5);\r\n      transform: translate3d(2px);\r\n      z-index: 20;\r\n    }\r\n    to {\r\n      box-shadow: 8px 22px 30px 3px rgba(0, 0, 0, 0.6);\r\n      z-index: 300;\r\n      transform: translate3d(52px);\r\n      transform: translateY(-2px);\r\n    }\r\n  }\r\n  @media ${device.desktop} {\r\n    height: 250px;\r\n    width: 360px;\r\n    margin: 20px;\r\n  }\r\n  @media ${device.tablet} {\r\n    width: 8m;\r\n    height: 9em;\r\n    margin: 10px;\r\n  }\r\n\r\n  /* current device */\r\n  @media ${device.laptopL} {\r\n    height: 240px;\r\n    width: 410px;\r\n    margin: 15px;\r\n  }\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport { FlexContainer } from \"../../../styledcomponents/container/FlexGrid\";\r\nimport {\r\n  TrialCard,\r\n  TestTrialCardText,\r\n  TestTrialCardDetails\r\n} from \"../../../styledcomponents/card/TrialCard\";\r\nimport { NavigationLink } from \"../../../styledcomponents/Link/NavLink\";\r\n\r\nexport default class TestTrialHome extends Component {\r\n  render() {\r\n    return (\r\n      <FlexContainer style={{ justifyContent: \"space-around\" }}>\r\n        <NavigationLink to=\"/concretetest\">\r\n          <TrialCard concreteTest>\r\n            <TestTrialCardText>Concrete Test</TestTrialCardText>\r\n            <TestTrialCardDetails>Total Tests: 10</TestTrialCardDetails>\r\n          </TrialCard>\r\n        </NavigationLink>\r\n        <NavigationLink to=\"/strengthtest\">\r\n          <TrialCard concreteStrengthTest>\r\n            <TestTrialCardText>Concrete Strength Test</TestTrialCardText>\r\n            <TestTrialCardDetails>Total Tests: 8</TestTrialCardDetails>\r\n          </TrialCard>\r\n        </NavigationLink>\r\n        <NavigationLink to=\"/testtype\">\r\n          <TrialCard materialTest>\r\n            <TestTrialCardText>Material Test</TestTrialCardText>\r\n            <TestTrialCardDetails>Total Tests: 15</TestTrialCardDetails>\r\n          </TrialCard>\r\n        </NavigationLink>\r\n        <NavigationLink to=\"/manageSieveTest\">\r\n          <TrialCard concreteTest>\r\n            <TestTrialCardText>Sieve Test</TestTrialCardText>\r\n            <TestTrialCardDetails>Total Tests: 10</TestTrialCardDetails>\r\n          </TrialCard>\r\n        </NavigationLink>\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { FlexContainer } from \"../../../styledcomponents/container/FlexGrid\";\r\nimport { Input, Select, InputNumber, DatePicker } from \"antd\";\r\nimport { PrimaryButton } from \"../../../styledcomponents/button/button\";\r\nimport history from \"../../../../Components/Constant/history\";\r\nimport theme from \"../../../../theme\";\r\nimport moment from \"moment\";\r\nimport { api } from \"../../../services/AxiosService\";\r\nimport FormGenerator from \"../../../Constant/FormGenerator\";\r\nimport Notification from \"../../../Constant/Notification\";\r\nimport { AntTable } from \"../../../styledcomponents/table/AntTabl\";\r\n\r\nconst { Option } = Select;\r\nconst error = {\r\n  color: \"red\",\r\n  fontSize: \"12px\",\r\n  width: \"100px\",\r\n  height: \"0.2px\"\r\n};\r\nconst error2 = {\r\n  color: \"red\",\r\n  fontSize: \"12px\",\r\n  width: \"160px\",\r\n  height: \"0.2px\"\r\n};\r\n\r\nexport default class MaterialTestTrial extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      testId: this.props.match.params.testId,\r\n      sampleId: this.props.match.params.sampleId,\r\n      testCode: this.props.match.params.testCode,\r\n      test_name: \"\",\r\n      materialCategoryName: \"\",\r\n      incoming_sample: \"River Sand\",\r\n      incomingSampleId: \"\",\r\n      date: undefined,\r\n      material_state: undefined,\r\n      no_of_trial: 3,\r\n      test_level: \"LAB_LEVEL\",\r\n      status: \"NEW\",\r\n      errors: {\r\n        date: \"\",\r\n        material_state: \"\",\r\n        no_of_trial: \"\",\r\n        status: \"\",\r\n        code: \"\"\r\n      },\r\n      errormsgs: \"\",\r\n      equationId: \"\",\r\n      equationParameters: \"\",\r\n      formParameter: \"\",\r\n      code: \"\",\r\n      trialCount: 1,\r\n      submitMeg: \"\",\r\n      materialId: \"\",\r\n      disible: false,\r\n      columns: [\r\n        {\r\n          title: \"Parameter\",\r\n          dataIndex: \"parameter\",\r\n          key: \"parameter\"\r\n        }\r\n      ],\r\n      trailParameter: [],\r\n      trailData: {},\r\n      trailColumns: [],\r\n      statusCode: \"\",\r\n      MaterialTestTrialCode: \"\",\r\n      initNoOfTrail: 0\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.testCode) {\r\n      this.getMatrialTestbycode(this.state.testCode);\r\n      console.log(this.state.testCode);\r\n    }\r\n    console.log(this.state.testCode);\r\n    this.gettestById();\r\n    this.getsampleById();\r\n    this.getAllMatrialState();\r\n  }\r\n\r\n  getMatrialTestbycode = testCode => {\r\n    this.countTrails(testCode);\r\n    console.log(testCode);\r\n    api(\"GET\", \"supermix\", \"/material-test\", \"\", \"\", testCode).then(res => {\r\n      console.log(res.data.results);\r\n      let x = res.data.results.materialTest;\r\n      this.setState({\r\n        code: x.code,\r\n        date: moment(x.date, \"DD-MM-YYYY\"),\r\n        material_state: x.materialState,\r\n        test_level: x.testLevel,\r\n        no_of_trial: x.noOfTrial,\r\n        average: x.average,\r\n        status: x.status,\r\n        statusCode: \"OK\",\r\n        disible: true\r\n      });\r\n    });\r\n  };\r\n\r\n  gettestById = () => {\r\n    api(\"GET\", \"supermix\", \"/test\", \"\", \"\", this.state.testId).then(res => {\r\n      console.log(res.data);\r\n      // console.log(res.data.results.test.equation.id);\r\n      this.setState({\r\n        test_name: res.data.results.test.name\r\n        // equationId: res.data.results.test.equation.id\r\n      });\r\n      this.gettestParameterById(res.data.results.test.id);\r\n    });\r\n  };\r\n  getsampleById = () => {\r\n    api(\r\n      \"GET\",\r\n      \"supermix\",\r\n      \"/incoming-sample\",\r\n      \"\",\r\n      \"\",\r\n      this.state.sampleId\r\n    ).then(res => {\r\n      console.log(res.data);\r\n\r\n      this.setState({\r\n        materialCategoryName:\r\n          res.data.results.incomingSample.rawMaterial.materialSubCategory\r\n            .materialCategoryName,\r\n        incomingSampleId: res.data.results.incomingSample.code,\r\n        materialId: res.data.results.incomingSample.rawMaterial.id\r\n      });\r\n    });\r\n  };\r\n  gettestParameterById = id => {\r\n    console.log(id);\r\n    api(\"GET\", \"supermix\", \"/test-parameter/test\", \"\", \"\", id).then(res => {\r\n      console.log(res.data);\r\n      // this.createEquationParameters(res.data.results.equationParameters);\r\n      this.setState({\r\n        equationParameters: res.data.results.testparameters\r\n      });\r\n    });\r\n  };\r\n  createEquationParameters = equationParameters => {\r\n    console.log(equationParameters);\r\n    let para = [];\r\n\r\n    for (let i = 0; i < equationParameters.length; i++) {\r\n      para.push({\r\n        name: `${equationParameters[i].parameter.abbreviation}`,\r\n        label: `${equationParameters[i].parameter.name}  (${equationParameters[i].parameter.abbreviation})`,\r\n        type: \"number\",\r\n        placeholder: equationParameters[i].unit.unit\r\n      });\r\n    }\r\n    console.log(para);\r\n    return JSON.stringify(para);\r\n  };\r\n  handleSelect = (field, value) => {\r\n    const { errors } = this.state;\r\n    console.log(value + \" of \" + field);\r\n    if (field === \"material_state\") {\r\n      this.setState({\r\n        material_state: value,\r\n        errors: {\r\n          date: errors.date,\r\n          material_state: \"\",\r\n          no_of_trial: errors.no_of_trial,\r\n          status: errors.status,\r\n          code: errors.code\r\n        }\r\n      });\r\n    }\r\n    if (field === \"test_level\") {\r\n      this.setState({\r\n        test_level: value\r\n      });\r\n    }\r\n  };\r\n\r\n  handleDates(name, dateString, field) {\r\n    const { errors } = this.state;\r\n    console.log(name);\r\n    console.log(dateString);\r\n    console.log(field);\r\n    let convertedDate = moment(dateString).format(\"YYYY-MM-DD\");\r\n    console.log(convertedDate);\r\n    if (name === \"date\") {\r\n      this.setState({\r\n        date: dateString,\r\n        errors: {\r\n          date: \"\",\r\n          material_state: errors.material_state,\r\n          no_of_trial: errors.no_of_trial,\r\n          status: errors.status,\r\n          code: errors.code\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChangeNumber = value => {\r\n    const { errors } = this.state;\r\n    console.log(value);\r\n    this.setState({\r\n      no_of_trial: value,\r\n      errors: {\r\n        date: errors.date,\r\n        material_state: errors.material_state,\r\n        no_of_trial: \"\",\r\n        status: errors.status,\r\n        code: errors.code\r\n      }\r\n    });\r\n  };\r\n\r\n  handleChange = (event, field) => {\r\n    this.setState({ [field]: event.target.value });\r\n    this.setState({ errormgs: \"\" });\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    let errors = this.state.errors;\r\n    console.log(name + \" is \\n\" + value);\r\n    switch (name) {\r\n      case \"code\":\r\n        errors.code = value.length === 0 ? \"code can't be empty\" : \"\";\r\n        break;\r\n      case \"status\":\r\n        errors.status =\r\n          value.length === 0\r\n            ? \"status can't be empty\"\r\n            : value.length < 2\r\n            ? \"status \\n must be 2 characters long!\"\r\n            : !isNaN(value)\r\n            ? \"status won't allow only letters\"\r\n            : \"\";\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ errors, [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    let eM = \"can't be empty\";\r\n    e.preventDefault();\r\n    const {\r\n      errors,\r\n      date,\r\n      material_state,\r\n      no_of_trial,\r\n      status,\r\n      code\r\n    } = this.state;\r\n    if (\r\n      date === undefined &&\r\n      material_state === undefined &&\r\n      no_of_trial === undefined &&\r\n      status.length === 0 &&\r\n      code.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          date: `date ${eM}`,\r\n          material_state: `material state ${eM}`,\r\n          no_of_trial: `no of trial ${eM}`,\r\n          status: `status ${eM}`,\r\n          code: `code ${eM}`\r\n        }\r\n      });\r\n    } else if (date === undefined && errors.date.length === 0) {\r\n      this.setState({\r\n        errors: {\r\n          date: errors.date || `date ${eM}`,\r\n          material_state: errors.material_state,\r\n          no_of_trial: errors.no_of_trial,\r\n          status: errors.status,\r\n          code: errors.code\r\n        }\r\n      });\r\n    } else if (\r\n      material_state === undefined &&\r\n      errors.material_state.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          date: errors.date,\r\n          material_state: errors.material_state || `material state ${eM}`,\r\n          no_of_trial: errors.no_of_trial,\r\n          status: errors.status,\r\n          code: errors.code\r\n        }\r\n      });\r\n    } else if (no_of_trial === undefined && errors.no_of_trial.length === 0) {\r\n      this.setState({\r\n        errors: {\r\n          date: errors.date,\r\n          material_state: errors.material_state,\r\n          no_of_trial: errors.no_of_trial || `no of trial ${eM}`,\r\n          status: errors.status,\r\n          code: errors.code\r\n        }\r\n      });\r\n    } else if (status.length === 0 && errors.status.length === 0) {\r\n      this.setState({\r\n        errors: {\r\n          date: errors.date,\r\n          material_state: errors.material_state,\r\n          no_of_trial: errors.no_of_trial,\r\n          status: errors.status || `status ${eM}`,\r\n          code: errors.code\r\n        }\r\n      });\r\n    } else if (code.length === 0 && errors.code.length === 0) {\r\n      this.setState({\r\n        errors: {\r\n          date: errors.date,\r\n          material_state: errors.material_state,\r\n          no_of_trial: errors.no_of_trial,\r\n          status: errors.status,\r\n          code: errors.code || `code ${eM}`\r\n        }\r\n      });\r\n    } else if (\r\n      errors.date.length === 0 &&\r\n      errors.material_state.length === 0 &&\r\n      errors.no_of_trial.length === 0 &&\r\n      errors.status.length === 0 &&\r\n      errors.code.length === 0\r\n    ) {\r\n      console.log(\"form is valid\");\r\n\r\n      // private TestLevel testLevel;\r\n\r\n      const data = {\r\n        code: code,\r\n        testId: this.state.testId,\r\n        date: moment(date).format(\"YYYY-MM-DD\"),\r\n        materialStateId: this.state.material_state,\r\n        incomingSampleCode: this.state.incomingSampleId,\r\n        noOfTrial: no_of_trial,\r\n        testLevel: this.state.test_level,\r\n        average: 0,\r\n        status: status\r\n      };\r\n      api(\"POST\", \"supermix\", \"/material-test\", \"\", data, \"\").then(\r\n        res => {\r\n          console.log(res.data);\r\n          Notification(\"success\", res.data.message);\r\n          this.setState({\r\n            statusCode: res.data.status\r\n          });\r\n        },\r\n        error => {\r\n          // this.setState({\r\n          //   errorvalmegss: error.validationFailures[0]\r\n          // });\r\n          console.log(\"DEBUG34: \", error);\r\n          // console.log(HandelError(error.validationFailures[0]));\r\n        }\r\n      );\r\n\r\n      console.log(data);\r\n\r\n      this.setState({ disible: true });\r\n    }\r\n  };\r\n\r\n  getAllMatrialState() {\r\n    api(\"GET\", \"supermix\", \"/material-states\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data.results.materialState);\r\n\r\n      console.log(\"ggg\");\r\n      let SelectStates = res.data.results.materialState.map((post, index) => {\r\n        return (\r\n          <Option value={post.id} key={index}>\r\n            {post.materialState}\r\n          </Option>\r\n        );\r\n      });\r\n      this.setState({\r\n        SelectStates\r\n      });\r\n    });\r\n  }\r\n\r\n  ParameterformSubmit = data => {\r\n    console.log(Object.keys(data)[0]);\r\n    console.log();\r\n\r\n    if (this.state.trialCount <= this.state.no_of_trial) {\r\n      console.log(\"hit\");\r\n      this.setState({\r\n        trialCount: this.state.trialCount + 1\r\n      });\r\n    }\r\n    if (this.state.trialCount <= this.state.no_of_trial) {\r\n      this.setState({\r\n        MaterialTestTrialCode: `${this.state.code}T${this.state.trialCount}`\r\n      });\r\n      const MaterialTestTrialData = {\r\n        code: `${this.state.code}T${this.state.trialCount}`,\r\n        materialTestCode: this.state.code,\r\n        trialNo: this.state.trialCount,\r\n        result: 0\r\n      };\r\n      console.log(MaterialTestTrialData);\r\n\r\n      let parameterResults = [];\r\n      for (let i = 0; i < this.state.equationParameters.length; i++) {\r\n        parameterResults.push({\r\n          materialTestTrial: {\r\n            code: MaterialTestTrialData.code\r\n          },\r\n          value: data[this.state.equationParameters[i].parameter.abbreviation],\r\n          testParameterId: this.state.equationParameters[i].id\r\n        });\r\n      }\r\n\r\n      console.log(parameterResults);\r\n\r\n      api(\r\n        \"POST\",\r\n        \"supermix\",\r\n        \"/material-test-trial\",\r\n        \"\",\r\n        MaterialTestTrialData,\r\n        \"\"\r\n      ).then(\r\n        res => {\r\n          console.log(res.data);\r\n          console.log(this.state.MaterialTestTrialCode);\r\n          api(\r\n            \"POST\",\r\n            \"supermix\",\r\n            \"/parameter-result\",\r\n            \"\",\r\n            parameterResults,\r\n            \"\"\r\n          ).then(res => {\r\n            console.log(res.data);\r\n            this.updateResult(MaterialTestTrialData.code);\r\n\r\n            Notification(\"success\", res.data.message);\r\n          });\r\n\r\n          // this.setState({\r\n          //   statusCode: res.data.status\r\n          // });\r\n        },\r\n        error => {\r\n          // this.setState({\r\n          //   errorvalmegss: error.validationFailures[0]\r\n          // });\r\n          console.log(\"DEBUG34: \", error);\r\n          // console.log(HandelError(error.validationFailures[0]));\r\n        }\r\n      );\r\n    } else {\r\n      this.updateAverage();\r\n    }\r\n\r\n    this.state.trailColumns.push({\r\n      title: `Trail${this.state.trialCount}`,\r\n      dataIndex: `t${this.state.trialCount}`,\r\n      key: `t${this.state.trialCount}`\r\n    });\r\n    if (this.state.trialCount === 1) {\r\n      for (var i = 0; i < Object.keys(data).length; i++) {\r\n        this.state.trailParameter.push({\r\n          parameter: Object.keys(data)[i],\r\n          [`t${this.state.trialCount}`]: Object.values(data)[i]\r\n        });\r\n      }\r\n    } else {\r\n      for (var j = 0; j < Object.keys(data).length; j++) {\r\n        this.state.trailParameter[j] = {\r\n          ...this.state.trailParameter[j],\r\n          ...{ [`t${this.state.trialCount}`]: Object.values(data)[j] }\r\n        };\r\n      }\r\n    }\r\n  };\r\n  updateAverage = () => {\r\n    console.log(\"average hit\");\r\n    api(\r\n      \"PUT\",\r\n      \"supermix\",\r\n      \"/material-test-trial/material-test/average\",\r\n      \"\",\r\n      \"\",\r\n      this.state.code\r\n    ).then(res => {\r\n      this.viewTestResults();\r\n      console.log(res.data);\r\n    });\r\n  };\r\n\r\n  updateResult = id => {\r\n    api(\"GET\", \"supermix\", \"/parameter-result/calculation\", \"\", \"\", id).then(\r\n      res => {\r\n        console.log(res.data);\r\n      }\r\n    );\r\n  };\r\n  viewTestResults() {\r\n    history.push(`/testresults/${this.state.code}`);\r\n  }\r\n  countTrails = code => {\r\n    api(\r\n      \"GET\",\r\n      \"supermix\",\r\n      \"/material-test-trial/material-test\",\r\n      \"\",\r\n      \"\",\r\n      code\r\n    ).then(\r\n      res => {\r\n        console.log(res.data.results.materialTest.length);\r\n        this.setState({\r\n          trialCount: res.data.results.materialTest.length + 1\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          trialCount: 1\r\n        });\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n\r\n  trialCountLimt = () => {\r\n    var sub = \"\";\r\n    let x = this.state.trialCount + this.state.initNoOfTrail;\r\n    if (x <= this.state.no_of_trial) {\r\n      sub = `Trial ${this.state.trialCount} / ${this.state.no_of_trial}`;\r\n    } else {\r\n      sub = \"View Results\";\r\n    }\r\n    return sub;\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state.trailParameter);\r\n    console.log(this.state.equationParameters);\r\n    const {\r\n      test_name,\r\n      code,\r\n      material_state,\r\n      date,\r\n      no_of_trial,\r\n      status,\r\n      errors,\r\n      materialCategoryName\r\n    } = this.state;\r\n    return (\r\n      <FlexContainer style={{ justifyContent: \"center\" }}>\r\n        <FlexContainer column>\r\n          <FlexContainer\r\n            column\r\n            style={{\r\n              background: \"white\",\r\n              padding: \"15px\",\r\n              borderRadius: \"15px\",\r\n              width: \"1200px\",\r\n              height: \"auto\"\r\n            }}\r\n          >\r\n            <FlexContainer home>\r\n              <div className=\"input_wrapper\">\r\n                <h4>{test_name}</h4>\r\n              </div>\r\n              <div className=\"input_wrapper\">\r\n                <h4>{materialCategoryName}</h4>\r\n              </div>\r\n            </FlexContainer>\r\n\r\n            <FlexContainer>\r\n              <div className=\"input_wrapper\">\r\n                <label htmlFor=\"status\" className=\"label\">\r\n                  Code\r\n                </label>\r\n                <Input\r\n                  id=\"code\"\r\n                  name=\"code\"\r\n                  style={{ width: \"120px\" }}\r\n                  value={code}\r\n                  placeholder=\"Enter code\"\r\n                  onChange={this.handleChange}\r\n                  disabled={this.state.disible}\r\n                />\r\n                {errors.code.length > 0 && (\r\n                  <div style={error2}>{errors.code}</div>\r\n                )}\r\n                <div style={{ height: \"22px\" }} />\r\n              </div>\r\n              <div className=\"input_wrapper\">\r\n                <label htmlFor=\"date\" className=\"label\">\r\n                  Date\r\n                </label>\r\n                <DatePicker\r\n                  id=\"date\"\r\n                  name=\"date\"\r\n                  value={date}\r\n                  onChange={(dateString, field) =>\r\n                    this.handleDates(\"date\", dateString, field)\r\n                  }\r\n                  disabled={this.state.disible}\r\n                />\r\n                {errors.date.length > 0 && (\r\n                  <div style={error2}>{errors.date}</div>\r\n                )}\r\n                <div style={{ height: \"22px\" }} />\r\n              </div>\r\n              <div className=\"input_wrapper\">\r\n                <label htmlFor=\"material_state\" className=\"label\">\r\n                  Material State\r\n                </label>\r\n                <Select\r\n                  id=\"material_state\"\r\n                  name=\"material_state\"\r\n                  placeholder=\"Select Material State\"\r\n                  style={{ width: 120 }}\r\n                  value={material_state}\r\n                  onChange={value => this.handleSelect(\"material_state\", value)}\r\n                  disabled={this.state.disible}\r\n                >\r\n                  {this.state.SelectStates}\r\n                </Select>\r\n                {errors.material_state.length > 0 && (\r\n                  <div style={error2}>{errors.material_state}</div>\r\n                )}\r\n                <div style={{ height: \"22px\" }} />\r\n              </div>\r\n              <div className=\"input_wrapper\">\r\n                <label htmlFor=\"material_state\" className=\"label\">\r\n                  Test Level\r\n                </label>\r\n                <Select\r\n                  id=\"test_level\"\r\n                  name=\"test_level\"\r\n                  placeholder=\"Select Test Level\"\r\n                  style={{ width: 120 }}\r\n                  value={this.state.test_level}\r\n                  onChange={value => this.handleSelect(\"test_level\", value)}\r\n                  disabled={this.state.disible}\r\n                >\r\n                  <Option value=\"LAB_LEVEL\">Lap</Option>\r\n                  <Option value=\"PLANT_LEVEL\">Plant</Option>\r\n                  <Option value=\"TRUCK_LEVEL\">Truck</Option>\r\n                  <Option value=\"BULK_LEVEL\">Bulk</Option>\r\n                </Select>\r\n                {/* {errors.material_state.length > 0 && (\r\n                  <div style={error2}>{errors.material_state}</div>\r\n                )} */}\r\n                <div style={{ height: \"22px\" }} />\r\n              </div>\r\n              <div className=\"input_wrapper\">\r\n                <label htmlFor=\"no_of_trial\" className=\"label\">\r\n                  No of Trial\r\n                </label>\r\n                <InputNumber\r\n                  id=\"no_of_trial\"\r\n                  name=\"no_of_trial\"\r\n                  style={{ width: 110 }}\r\n                  placeholder=\"Enter number\"\r\n                  value={no_of_trial}\r\n                  onChange={this.handleChangeNumber}\r\n                  disabled={this.state.disible}\r\n                />\r\n                {errors.no_of_trial.length > 0 && (\r\n                  <div style={error}>{errors.no_of_trial}</div>\r\n                )}\r\n                <div style={{ height: \"22px\" }} />\r\n              </div>\r\n              <div className=\"input_wrapper\">\r\n                <label htmlFor=\"status\" className=\"label\">\r\n                  Status\r\n                </label>\r\n                <Input\r\n                  id=\"status\"\r\n                  name=\"status\"\r\n                  value={status}\r\n                  placeholder=\"Enter Status\"\r\n                  onChange={this.handleChange}\r\n                  disabled={this.state.disible}\r\n                />\r\n                {errors.status.length > 0 && (\r\n                  <div style={error2}>{errors.status}</div>\r\n                )}\r\n                <div style={{ height: \"22px\" }} />\r\n              </div>\r\n              {this.state.disible ? (\r\n                \"\"\r\n              ) : (\r\n                <div className=\"input_wrapper\">\r\n                  <PrimaryButton\r\n                    type={\"primary\"}\r\n                    primary\r\n                    style={{\r\n                      background: theme.colors.primary,\r\n                      color: theme.colors.white,\r\n                      border: \"none\"\r\n                    }}\r\n                    onClick={this.handleSubmit}\r\n                  >\r\n                    Submit\r\n                  </PrimaryButton>\r\n                </div>\r\n              )}\r\n            </FlexContainer>\r\n          </FlexContainer>\r\n          <br />\r\n          {this.state.disible && this.state.statusCode === \"OK\" ? (\r\n            <FlexContainer>\r\n              <FlexContainer>\r\n                <FlexContainer\r\n                  style={{\r\n                    background: \"#F9F5F5 \",\r\n                    padding: \"15px\",\r\n                    borderRadius: \"15px\",\r\n                    width: \"750px\",\r\n                    height: \"400px\"\r\n                  }}\r\n                >\r\n                  <FlexContainer\r\n                    column\r\n                    style={{\r\n                      background: theme.colors.primary,\r\n                      height: \"40px\",\r\n                      width: \"890px\",\r\n                      margin: \"-15px\",\r\n                      borderTopLeftRadius: \"15px\",\r\n                      borderTopRightRadius: \"15px\"\r\n                    }}\r\n                  >\r\n                    <h3\r\n                      style={{\r\n                        marginTop: \"3px\",\r\n                        marginLeft: \"0px\",\r\n                        color: \"white\"\r\n                      }}\r\n                    >\r\n                      Test Trial\r\n                    </h3>\r\n                  </FlexContainer>\r\n\r\n                  <FormGenerator\r\n                    form={JSON.parse(\r\n                      this.createEquationParameters(\r\n                        this.state.equationParameters\r\n                      )\r\n                    )}\r\n                    submitButton={{\r\n                      text: this.trialCountLimt(),\r\n                      className: \"submit\"\r\n                    }}\r\n                    // onChange={form => {\r\n                    //   this.quantityChange(form);\r\n                    // }}\r\n                    onSubmit={form => {\r\n                      this.ParameterformSubmit(form.data.form);\r\n                      console.log(form);\r\n                    }}\r\n                    inputStyle={instyle}\r\n                    buttonStyle={btstyle}\r\n                    formStyle={fostyle}\r\n                    lableStyle={lableStyle}\r\n                    formDriction=\"column\"\r\n                  />\r\n                </FlexContainer>\r\n                &nbsp; &nbsp;\r\n                <FlexContainer\r\n                  row\r\n                  style={{\r\n                    background: \"white\",\r\n                    padding: \"15px\",\r\n                    borderRadius: \"15px\",\r\n                    width: \"440px\",\r\n                    height: \"auto\"\r\n                  }}\r\n                >\r\n                  <AntTable\r\n                    normal\r\n                    emptyTableTestTrial\r\n                    columns={[\r\n                      ...this.state.columns,\r\n                      ...this.state.trailColumns\r\n                    ]}\r\n                    dataSource={[\r\n                      ...this.state.trailParameter,\r\n                      this.state.trailData\r\n                    ]}\r\n                    onChange={this.handleChange}\r\n                    pagination={false}\r\n                    size=\"small\"\r\n                    // title={() => <h4>Equipment Related Parameter</h4>}\r\n                  />\r\n                </FlexContainer>\r\n              </FlexContainer>\r\n            </FlexContainer>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\nconst instyle = {\r\n  width: \"100px\",\r\n  boxShadow: \"1px 2px 8px 1px rgba(0,0,0,0.08)\"\r\n};\r\n\r\nconst lableStyle = {\r\n  width: \"500px\",\r\n  height: \"32px\",\r\n  color: \"black\",\r\n  fontWeight: 580\r\n};\r\n\r\nconst btstyle = {\r\n  marginLeft: \"320px\",\r\n  height: \"auto\"\r\n};\r\nconst fostyle = {\r\n  marginTop: \"-50px\",\r\n  display: \"flex\",\r\n  // background: \"#F9F5F5 \",\r\n  flexDirection: \"row\",\r\n  width: \"700px\",\r\n  height: \"auto\",\r\n  flexWrap: \"wrap\",\r\n  justifyContent: \"space-evenly\",\r\n  position: \"relative\",\r\n  // overflowY: \"scroll\",\r\n  scrollBehavior: \"smooth\"\r\n};\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\nimport { FlexContainer } from \"../../../styledcomponents/container/FlexGrid\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport { Tag } from \"antd\";\r\nimport { AntTable } from \"../../../styledcomponents/table/AntTabl\";\r\nimport { api } from \"../../../services/AxiosService\";\r\n\r\nexport default class ParameterTestResults extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      testId: this.props.match.params.material_testId,\r\n      columns: [\r\n        {\r\n          title: \"Average\",\r\n          dataIndex: \"Average\",\r\n          key: \"Average\"\r\n        }\r\n      ],\r\n      trailParameter: [],\r\n      trailData: [],\r\n      trailColumns: [\r\n        {\r\n          title: \"Average\",\r\n          dataIndex: \"Average\",\r\n          key: \"Average\"\r\n        }\r\n      ],\r\n      noOfTrial: \"\",\r\n      testName: \"\",\r\n      date: \"\",\r\n      material: \"\",\r\n      tester: \"\",\r\n      Status: \"\",\r\n      acceptedMinValue: \"\",\r\n      acceptedMaxValue: \"\",\r\n      average: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getMaterialTestByTestId();\r\n  }\r\n  getAcceptedValueByTestId = testId => {\r\n    api(\"GET\", \"supermix\", \"/accepted-value/test\", \"\", \"\", testId).then(res => {\r\n      console.log(res.data.results);\r\n      this.setState({\r\n        acceptedMinValue: res.data.results.test[0].minValue,\r\n        acceptedMaxValue: res.data.results.test[0].maxValue\r\n      });\r\n    });\r\n  };\r\n\r\n  getMaterialTestByTestId = () => {\r\n    api(\"GET\", \"supermix\", \"/material-test\", \"\", \"\", this.state.testId).then(\r\n      res => {\r\n        console.log(res.data);\r\n        let avg = res.data.results.materialTest.average;\r\n        this.setState({\r\n          noOfTrial: res.data.results.materialTest.noOfTrial,\r\n          testName: res.data.results.materialTest.testName,\r\n          date: res.data.results.materialTest.date,\r\n          Status: res.data.results.materialTest.status,\r\n          average: Number(avg.toFixed(2))\r\n        });\r\n        this.getMaterialTestTrailByMaterialTestId(\r\n          res.data.results.materialTest.code\r\n        );\r\n        this.getAcceptedValueByTestId(res.data.results.materialTest.testId);\r\n      }\r\n    );\r\n  };\r\n\r\n  getMaterialTestTrailByMaterialTestId = code => {\r\n    api(\r\n      \"GET\",\r\n      \"supermix\",\r\n      \"/material-test-trial/material-test\",\r\n      \"\",\r\n      \"\",\r\n      code\r\n    ).then(res => {\r\n      console.log(res.data.results.materialTest[0]);\r\n      this.setState({\r\n        material:\r\n          res.data.results.materialTest[0].materialTest.incomingSample\r\n            .rawMaterial.name\r\n      });\r\n      const tcol = [];\r\n      const tdata = [];\r\n      for (var i = 0; i < res.data.results.materialTest.length; i++) {\r\n        tcol.push({\r\n          title: `Trail${i + 1}`,\r\n          dataIndex: `t${i + 1}`,\r\n          key: `t${i + 1}`\r\n        });\r\n      }\r\n\r\n      for (var j = 0; j < res.data.results.materialTest.length; j++) {\r\n        if (i === 0) {\r\n          tdata.push({\r\n            [`t${j + 1}`]: res.data.results.materialTest[j].result\r\n          });\r\n        } else {\r\n          tdata[0] = {\r\n            ...tdata[0],\r\n            ...{ [`t${j + 1}`]: res.data.results.materialTest[j].result }\r\n          };\r\n        }\r\n      }\r\n      console.log(tdata);\r\n      this.setState({ trailData: tdata });\r\n      this.setState({ trailColumns: [...this.state.trailColumns, ...tcol] });\r\n    });\r\n  };\r\n  returnTable = () => {\r\n    return (\r\n      <AntTable\r\n        style={{\r\n          width: \"94%\",\r\n          boxShadow: \"0px 0px 0px 0px rgba(0,0,0,0.0)\"\r\n        }}\r\n        bordered\r\n        columns={this.state.trailColumns}\r\n        dataSource={this.state.trailData}\r\n        showHeader={true}\r\n        pagination={false}\r\n        footer={() => (\r\n          <h4 style={{ color: \"#f25a5a\" }}>\r\n            {`  Accepted Range :${this.state.acceptedMinValue} Min - ${this.state.acceptedMaxValue} Max`}\r\n          </h4>\r\n        )}\r\n      />\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <FlexContainer normal>\r\n        <div\r\n          column\r\n          normal\r\n          style={{\r\n            background: \"white\",\r\n            width: \"70%\",\r\n            height: \"350px\",\r\n            padding: \"10px\",\r\n            borderRadius: \"5px\"\r\n          }}\r\n        >\r\n          <table\r\n            style={{\r\n              border: \"0.5px solid rgba(0,0,0,0.25)\",\r\n              width: \"90%\",\r\n              alignSelf: \"center\",\r\n              borderRadius: \"15px\"\r\n            }}\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>Test Name</th>\r\n                <th>Date</th>\r\n                <th>No of Trial</th>\r\n                <th>Material</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>{this.state.testName}</td>\r\n                <td>{this.state.date}</td>\r\n                <td>{this.state.noOfTrial}</td>\r\n                <td>{this.state.material}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          {this.returnTable()}\r\n        </div>\r\n        <div style={{ width: \"20%\", height: \"350px\" }}>\r\n          <div\r\n            column\r\n            style={{\r\n              background: \"white\",\r\n              width: \"100%\",\r\n              padding: \"10px\",\r\n              borderRadius: \"5px\"\r\n            }}\r\n          >\r\n            <h4>OverAll average</h4>\r\n            <h1 style={{ fontSize: \"30px\" }}>{this.state.average}</h1>\r\n          </div>\r\n          <br />\r\n          <div\r\n            column\r\n            style={{\r\n              background: \"white\",\r\n              width: \"100%\",\r\n              padding: \"15px\",\r\n              borderRadius: \"5px\"\r\n            }}\r\n          >\r\n            <div className=\"input_wrapper\">\r\n              <label className=\"label\" htmlFor=\"comments\">\r\n                Comments\r\n              </label>\r\n              <TextArea id=\"comments\" name=\"comments\" />\r\n            </div>\r\n            <div className=\"input_wrapper\">\r\n              <label className=\"label\" htmlFor=\"status\">\r\n                Status\r\n              </label>\r\n              <Tag\r\n                color={this.state.Status === \"PASS\" ? \"green\" : \"red\"}\r\n                style={{\r\n                  height: \"40px\",\r\n                  fontSize: \"18px\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  justifyContent: \"center\"\r\n                }}\r\n              >\r\n                {this.state.Status}\r\n              </Tag>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Input, Modal, Button, Icon, Checkbox } from \"antd\";\r\nimport { api } from \"../../services/AxiosService\";\r\nimport { PrimaryButton } from \"../../styledcomponents/button/button\";\r\nimport {\r\n  MasterLevelForm,\r\n  MasterLevelFormTitle\r\n} from \"../../styledcomponents/form/MasterLevelForms\";\r\nimport Notificationfuc from \"../../Constant/Notification\";\r\nimport { connect } from \"react-redux\";\r\nimport { DISABLE_EDIT_MODE } from \"../../../redux/action/master/plantlevel/PlantLevel\";\r\nimport { Main_Category_Name_Aggregate } from \"../../Constant/Api\";\r\n\r\nconst error = {\r\n  color: \"red\",\r\n  fontSize: \"12px\",\r\n  width: \"160px\",\r\n  height: \"2px\"\r\n};\r\n\r\nclass AddSize extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: false,\r\n      visible: false,\r\n      errors: {\r\n        material_sub_category_id: \"\",\r\n        size: \"\"\r\n      },\r\n      material_sub_category_name: \"\",\r\n      material_sub_category_id: \"\",\r\n      size: \"\",\r\n      errormgs: \"\",\r\n      type: \"add\"\r\n    };\r\n  }\r\n\r\n  onChangeCheck = checkedValues => {\r\n    console.log(\"checked = \", checkedValues);\r\n    this.setState({\r\n      material_sub_category_id: checkedValues\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.getSubCategoryByMain();\r\n  }\r\n  getSubCategoryByMain = () => {\r\n    let optData = [];\r\n    api(\r\n      \"GET\",\r\n      \"supermix\",\r\n      \"/material-sub-category/materialCategoryName\",\r\n      \"\",\r\n      \"\",\r\n      Main_Category_Name_Aggregate\r\n    ).then(res => {\r\n      let dataSub = res.data.results.materialSubCategories;\r\n      console.log(dataSub);\r\n      for (var i = 0; i < dataSub.length; i++) {\r\n        optData.push({\r\n          label: dataSub[i].name,\r\n          value: dataSub[i].id\r\n        });\r\n      }\r\n      console.log(optData);\r\n      this.setState({\r\n        optData\r\n      });\r\n    });\r\n  };\r\n\r\n  handleChange = (event, field) => {\r\n    this.setState({ [field]: event.target.value });\r\n    this.setState({ errormgs: \"\" });\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    let errors = this.state.errors;\r\n    console.log(name + \" is \\t\" + value);\r\n    switch (name) {\r\n      case \"size\":\r\n        errors.size = value.length === 0 ? \"size can't be empty\" : \"\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ errors, [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (\r\n      this.state.size.length === 0 &&\r\n      this.state.material_sub_category_name.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          size: \"Size can't be empty\",\r\n          material_sub_category_name: \"Sub category  can't be empty\"\r\n        }\r\n      });\r\n    } else if (\r\n      this.state.size.length === 0 &&\r\n      this.state.errors.size.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          size: this.state.size || \"Size can't be empty\",\r\n          material_sub_category_name: this.state.material_sub_category_id\r\n        }\r\n      });\r\n    } else if (\r\n      this.state.material_sub_category_id.length === 0 &&\r\n      this.state.errors.material_sub_category_id.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          size: this.state.size,\r\n          material_sub_category_name:\r\n            this.state.material_sub_category_id ||\r\n            \"Sub category  can't be empty\"\r\n        }\r\n      });\r\n    } else if (\r\n      this.state.errors.size.length === 0 &&\r\n      this.state.errors.material_sub_category_id.length === 0\r\n    ) {\r\n      console.log(this.state.errors);\r\n\r\n      let data = [];\r\n      for (var i = 0; i < this.state.material_sub_category_id.length; i++) {\r\n        data.push({\r\n          size: this.state.size,\r\n          materialSubCategoryId: this.state.material_sub_category_id[i]\r\n        });\r\n      }\r\n      // const data = {\r\n      //   size: this.state.size,\r\n      //   materialSubCategoryId: this.state.material_sub_category_id[0]\r\n      // };\r\n      if (this.state.type === \"add\") {\r\n        api(\"POST\", \"supermix\", \"/sieve-size\", \"\", data, \"\")\r\n          .then(\r\n            res => {\r\n              console.log(res.data);\r\n\r\n              Notificationfuc(\"success\", res.data.message);\r\n              this.props.reload();\r\n              // this.setState({ loading: true });\r\n              this.setState({\r\n                // material_sub_category_id: \"\",\r\n                // size: \"\",\r\n                errormgs: \"\"\r\n              });\r\n            },\r\n            error => {\r\n              // this.setState({\r\n              //   errormgs: error.validationFailures[0]\r\n              // });\r\n              console.log(\"DEBUG34: \", error);\r\n              // console.log(HandelError(error.validationFailures[0]));\r\n            }\r\n          )\r\n          .catch(error => {\r\n            this.setState({\r\n              // errormgs: \"Plant Name Exist\"\r\n            });\r\n            console.log(error);\r\n          });\r\n      }\r\n      // else {\r\n      //   const data = {\r\n      //     code: this.state.plant_code,\r\n      //     name: this.state.plant_name,\r\n      //     address: this.state.plant_address,\r\n      //     phoneNumber: this.state.plant_contactno\r\n      //   };\r\n      //   api(\"PUT\", \"supermix\", \"/plant\", \"\", data, \"\")\r\n      //     .then(\r\n      //       res => {\r\n      //         console.log(res.data);\r\n\r\n      //         if (res.data.status == \"VALIDATION_FAILURE\") {\r\n      //           console.log(\"update\");\r\n      //           this.responeserror(res.data.results.name.message);\r\n      //         } else {\r\n      //           Notificationfuc(\"success\", res.data.message);\r\n      //           this.props.reload();\r\n      //           this.setState({ loading: true });\r\n      //           this.setState({\r\n      //             plant_code: \"\",\r\n      //             plant_name: \"\",\r\n      //             plant_address: \"\",\r\n      //             plant_contactno: \"\",\r\n      //             errormgs: \"\"\r\n      //           });\r\n      //           setTimeout(() => {\r\n      //             this.setState({ loading: false, visible: false });\r\n      //           }, 3000);\r\n      //         }\r\n      //       },\r\n      //       error => {\r\n      //         this.setState({\r\n      //           errormgs: error.validationFailures[0]\r\n      //         });\r\n      //         console.log(\"DEBUG34: \", error);\r\n      //         console.log(HandelError(error.validationFailures[0]));\r\n      //       }\r\n      //     )\r\n      //     .catch(error => {\r\n      //       // this.setState({\r\n      //       //   errormgs: \"Plant Name Exist\"\r\n      //       // });\r\n      //       // console.log(error.response.data);\r\n      //     });\r\n      // }\r\n      console.log(data);\r\n      console.log(\"form is valid\");\r\n    }\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n      size: \"\",\r\n      material_sub_category_id: \"\",\r\n      errors: {\r\n        size: \"\",\r\n        material_sub_category_id: \"\"\r\n      }\r\n    });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    if (this.state.type === \"edit\") {\r\n      // we call the redux function to dispatch and delete all the global redux state to close the modal\r\n      this.props.setPlantVisiblity();\r\n    }\r\n\r\n    this.setState({\r\n      visible: false,\r\n      formValid: false,\r\n      errors: {\r\n        size: \"\",\r\n        material_sub_category_id: \"\"\r\n      },\r\n      size: \"\",\r\n      material_sub_category_id: \"\",\r\n      errormgs: \"\"\r\n    });\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    // this.setState({\r\n    //   visible: nextProps.visible,\r\n    //   plant_code: nextProps.editPlantData.code,\r\n    //   plant_name: nextProps.editPlantData.name,\r\n    //   plant_address: nextProps.editPlantData.address,\r\n    //   plant_contactno: nextProps.editPlantData.phoneNumber,\r\n    //   type: nextProps.type\r\n    // });\r\n  }\r\n\r\n  render() {\r\n    const { visible, loading } = this.state;\r\n    const { errors } = this.state;\r\n    return (\r\n      <div>\r\n        <PrimaryButton\r\n          onClick={this.showModal}\r\n          style={{\r\n            background: \"#001328\",\r\n            color: \"white\",\r\n            border: \"none\",\r\n            width: \"120px\",\r\n            marginLeft: \"-10px\"\r\n          }}\r\n        >\r\n          Add Size\r\n        </PrimaryButton>\r\n        <Modal\r\n          visible={visible}\r\n          closable={false}\r\n          loading={loading}\r\n          onCancel={this.handleCancel}\r\n          title={\r\n            <MasterLevelFormTitle>\r\n              <p\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                {this.state.type === \"edit\" ? \"Edit Size\" : \"Add Size\"}\r\n              </p>\r\n              <Icon\r\n                type=\"close-circle\"\r\n                onClick={this.handleCancel}\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              />\r\n            </MasterLevelFormTitle>\r\n          }\r\n          footer={[\r\n            <Button key=\"back\" onClick={this.handleCancel}>\r\n              Cancel\r\n            </Button>,\r\n            <PrimaryButton\r\n              key=\"submit\"\r\n              loading={loading}\r\n              onClick={this.handleSubmit}\r\n              style={{ background: \"#001328\", color: \"white\", border: \"none\" }}\r\n            >\r\n              {this.state.type === \"edit\" ? \"Edit\" : \"Add More\"}\r\n            </PrimaryButton>\r\n          ]}\r\n          width=\"600px\"\r\n        >\r\n          <MasterLevelForm style={{ justifyContent: \"space-evenly\" }}>\r\n            <div className=\"input_wrapper\">\r\n              <label for=\"sub_category\" className=\"label\">\r\n                Material Sub Category:\r\n              </label>\r\n              <Checkbox.Group\r\n                options={this.state.optData}\r\n                onChange={this.onChangeCheck}\r\n                value={this.state.material_sub_category_id}\r\n              />\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n            <div className=\"input_wrapper\">\r\n              <label for=\"plant_code\" className=\"label\">\r\n                Size:\r\n              </label>\r\n              <Input\r\n                id=\"size\"\r\n                name=\"size\"\r\n                placeholder=\"Enter the size \"\r\n                value={this.state.size}\r\n                onChange={this.handleChange}\r\n              />\r\n\r\n              {errors.size.length > 0 && <div style={error}>{errors.size}</div>}\r\n\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n          </MasterLevelForm>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  //getting the global redux state to get the data from the EditPlantReducer.js\r\n  return {\r\n    visible: state.plantLevelReducers.EditPlantReducer.visible,\r\n    type: state.plantLevelReducers.EditPlantReducer.type,\r\n    editPlantData: state.plantLevelReducers.EditPlantReducer.editPlantData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // setting visible to false if we close the modal .. and all state data will be deleted if this function is dispatched\r\n    setPlantVisiblity: () => {\r\n      dispatch({ type: DISABLE_EDIT_MODE });\r\n      console.log(\"edit modal closed\");\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddSize);\r\n","import React, { Component } from \"react\";\r\nimport Paragraph from \"antd/lib/typography/Paragraph\";\r\nimport { FlexContainer } from \"../../../../Components/styledcomponents/container/FlexGrid\";\r\nimport AddSize from \"../AddSize\";\r\n\r\nconst style = {\r\n  fontSize: \"medium\",\r\n  fontWeight: \"600\",\r\n  alignSelf: \"auto\",\r\n  padding: \"10px\"\r\n};\r\n\r\nexport default class AddSieveSize extends Component {\r\n  getallplant = () => {\r\n    this.props.reload();\r\n  };\r\n  render() {\r\n    return (\r\n      <FlexContainer titles leveltitles>\r\n        <Paragraph style={style}>Sieve </Paragraph>\r\n        <AddSize reload={this.getallplant} />\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\nimport { Icon, Popconfirm, Divider } from \"antd\";\r\nimport { AntTable } from \"../../styledcomponents/table/AntTabl\";\r\nimport { api } from \"../../services/AxiosService\";\r\nimport Notification from \"../../Constant/Notification\";\r\nimport { connect } from \"react-redux\";\r\nimport { SWITCH_TO_EDIT_MODE } from \"../../../redux/action/master/plantlevel/PlantLevel\";\r\nimport AddSize from \"./title/AddSizeTitle\";\r\n\r\nclass SieveSize extends Component {\r\n  state = {\r\n    searchText: \"\",\r\n    visible: false,\r\n    size: \"small\",\r\n    data: \"\",\r\n    id: \"\"\r\n  };\r\n\r\n  componentWillMount() {\r\n    if (window.screen.width > 1900) {\r\n      console.log(\"hooray\");\r\n      this.setState({\r\n        size: \"large\"\r\n      });\r\n    } else if (window.screen.width < 1440) {\r\n      this.setState({\r\n        size: \"small\"\r\n      });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getallPlant();\r\n  }\r\n\r\n  //  get all plant API\r\n  getallPlant = () => {\r\n    api(\"GET\", \"supermix\", \"/sieve-sizes\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data);\r\n      this.setState({\r\n        data: res.data.results.sieveSizes\r\n      });\r\n    });\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  handleOk = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleCancel = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleChange = (pagination, filters, sorter) => {\r\n    console.log(\"Various parameters\", pagination, filters, sorter);\r\n    this.setState({\r\n      filteredInfo: filters,\r\n      sortedInfo: sorter\r\n    });\r\n  };\r\n\r\n  clearFilters = () => {\r\n    this.setState({ filteredInfo: null });\r\n  };\r\n\r\n  clearAll = () => {\r\n    this.setState({\r\n      filteredInfo: null,\r\n      sortedInfo: null\r\n    });\r\n  };\r\n\r\n  setAgeSort = () => {\r\n    this.setState({\r\n      sortedInfo: {\r\n        order: \"descend\",\r\n        columnKey: \"age\"\r\n      }\r\n    });\r\n  };\r\n\r\n  onChange(pageNumber) {\r\n    console.log(\"Page: \", pageNumber);\r\n  }\r\n\r\n  // plant delete API\r\n\r\n  onConfirmdelete(code) {\r\n    console.log(code);\r\n    api(\"DELETE\", \"supermix\", \"/sieve-size\", \"\", \"\", code).then(res => {\r\n      console.log(res.data);\r\n      this.getallPlant();\r\n      Notification(\"success\", res.data.message);\r\n    });\r\n    console.log(this.state.id);\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"Size\",\r\n        dataIndex: \"size\",\r\n        key: \"id\",\r\n        width: \"5%\"\r\n      },\r\n      {\r\n        title: \"SubCategory\",\r\n        dataIndex: \"materialSubCategoryName\",\r\n        key: \"materialSubCategoryName\",\r\n        width: \"7%\"\r\n      },\r\n      {\r\n        title: \"Edit & Delete\",\r\n        key: \"action\",\r\n        width: \"7%\",\r\n        render: (text, record = this.state.data) => (\r\n          <span>\r\n            <a>\r\n              <Icon\r\n                type=\"edit\"\r\n                style={{ fontSize: \"1.2em\" }}\r\n                // onClick={this.props.passEditincomingRecordToModal.bind(\r\n                //   this,\r\n                //   record\r\n                // )}\r\n              />\r\n            </a>\r\n            <Divider type=\"vertical\" />\r\n            <a>\r\n              <Popconfirm\r\n                title=\"Are you sure you want to Delete this?\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: \"red\" }} />\r\n                }\r\n                onConfirm={this.onConfirmdelete.bind(this, record.id)}\r\n              >\r\n                <a href=\"#\">\r\n                  <Icon\r\n                    type=\"delete\"\r\n                    style={{ color: \"red\", fontSize: \"1.2em\" }}\r\n                  />\r\n                </a>\r\n              </Popconfirm>\r\n            </a>\r\n          </span>\r\n        )\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <AntTable\r\n        length\r\n        title={() => <AddSize reload={this.getallPlant} />}\r\n        className=\"plantManageTable\"\r\n        columns={columns}\r\n        dataSource={this.state.data}\r\n        onChange={this.handleChange}\r\n        pagination={{ defaultPageSize: 7 }}\r\n        size={this.state.size}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => null;\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // if this function dispatches modal will be shown and the data will be drawn :)\r\n    passEditPlantRecordtoModal: record => {\r\n      //this payload is the data we pass into redux which is in the row which we clicked\r\n      dispatch({ type: SWITCH_TO_EDIT_MODE, payload: record });\r\n      console.log(record);\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SieveSize);\r\n","import React, { Component } from \"react\";\r\nimport { Input, Modal, Button, Icon, Checkbox } from \"antd\";\r\nimport { api } from \"../../services/AxiosService\";\r\nimport { PrimaryButton } from \"../../styledcomponents/button/button\";\r\nimport {\r\n  MasterLevelForm,\r\n  MasterLevelFormTitle\r\n} from \"../../styledcomponents/form/MasterLevelForms\";\r\nimport Notificationfuc from \"../../Constant/Notification\";\r\nimport { connect } from \"react-redux\";\r\nimport { DISABLE_EDIT_MODE } from \"../../../redux/action/master/plantlevel/PlantLevel\";\r\nimport { AntTable } from \"../../styledcomponents/table/AntTabl\";\r\nimport { Main_Category_Name_Aggregate } from \"../../Constant/Api\";\r\n\r\n// function onChange(date, dateString) {\r\n//   console.log(date, dateString);\r\n// }\r\n\r\nclass AddAcceptedSize extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // console.log(this.props.editPlantData)\r\n\r\n    this.state = {\r\n      loading: false,\r\n      visible: false,\r\n      errors: {\r\n        material_sub_category_id: \"\"\r\n      },\r\n      material_sub_category_id: \"\",\r\n      material_sub_category_name: \"\",\r\n      size: \"\",\r\n      errormgs: \"\",\r\n      type: \"add\",\r\n      datalist: \"\",\r\n      min: [],\r\n      max: [],\r\n      minvalue: \"\",\r\n      maxvalue: \"\"\r\n    };\r\n  }\r\n\r\n  onChangeCheck = checkedValues => {\r\n    console.log(\"checked = \", checkedValues);\r\n    this.setState({\r\n      material_sub_category_id: checkedValues[0]\r\n    });\r\n    this.getAllSizeBySubId(checkedValues[0]);\r\n  };\r\n  getAllSizeBySubId = id => {\r\n    api(\r\n      \"GET\",\r\n      \"supermix\",\r\n      \"/sieve-size/sieve-accepted-value/\",\r\n      \"\",\r\n      \"\",\r\n      id\r\n    ).then(res => {\r\n      console.log(res.data.results.materialSubCategoryId);\r\n      this.setState({\r\n        datalist: res.data.results.materialSubCategoryId\r\n      });\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.getSubCategoryByMain();\r\n  }\r\n\r\n  reloadPage() {\r\n    window.location.reload();\r\n  }\r\n  getSubCategoryByMain = () => {\r\n    let optData = [];\r\n    api(\r\n      \"GET\",\r\n      \"supermix\",\r\n      \"/material-sub-category/materialCategoryName\",\r\n      \"\",\r\n      \"\",\r\n      Main_Category_Name_Aggregate\r\n    ).then(res => {\r\n      let dataSub = res.data.results.materialSubCategories;\r\n      console.log(dataSub);\r\n      for (var i = 0; i < dataSub.length; i++) {\r\n        optData.push({\r\n          label: dataSub[i].name,\r\n          value: dataSub[i].id\r\n        });\r\n      }\r\n      console.log(optData);\r\n      this.setState({\r\n        optData\r\n      });\r\n    });\r\n  };\r\n\r\n  handleChange = (event, field) => {\r\n    this.setState({ [field]: event.target.value });\r\n    this.setState({ errormgs: \"\" });\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    let errors = this.state.errors;\r\n    console.log(name + \" is \\t\" + value);\r\n    switch (name) {\r\n      case \"size\":\r\n        errors.size = value.length === 0 ? \"Code can't be empty\" : \"\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ errors, [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (this.state.material_sub_category_id.length === 0) {\r\n      this.setState({\r\n        errors: {\r\n          material_sub_category_id: \"Sub category  can't be empty\"\r\n        }\r\n      });\r\n    } else if (\r\n      this.state.material_sub_category_id.length === 0 &&\r\n      this.state.errors.material_sub_category_id.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          material_sub_category_name:\r\n            this.state.material_sub_category_id ||\r\n            \"Sub category  can't be empty\"\r\n        }\r\n      });\r\n    } else if (this.state.errors.material_sub_category_id.length === 0) {\r\n      console.log(this.state.errors);\r\n\r\n      let data = [];\r\n      for (var i = 0; i < this.state.datalist.length; i++) {\r\n        data.push({\r\n          sieveSizeId: this.state.datalist[i].id,\r\n          materialSubCategoryId: this.state.material_sub_category_id,\r\n          min: this.state.min[this.state.datalist[i].id],\r\n          max: this.state.max[this.state.datalist[i].id]\r\n        });\r\n      }\r\n\r\n      if (this.state.type === \"add\") {\r\n        api(\"POST\", \"supermix\", \"/sieve-accepted-value\", \"\", data, \"\")\r\n          .then(\r\n            res => {\r\n              console.log(res.data);\r\n\r\n              Notificationfuc(\"success\", res.data.message);\r\n              this.props.reload();\r\n              this.reloadPage();\r\n              // this.setState({ loading: true });\r\n              this.setState({\r\n                material_sub_category_id: \"\",\r\n                size: \"\",\r\n                min: [],\r\n                max: [],\r\n                minvalue: \"\",\r\n                maxvalue: \"\",\r\n                errormgs: \"\",\r\n                visible: false\r\n              });\r\n            },\r\n            error => {\r\n              // this.setState({\r\n              //   errormgs: error.validationFailures[0]\r\n              // });\r\n              console.log(\"DEBUG34: \", error);\r\n              // console.log(HandelError(error.validationFailures[0]));\r\n            }\r\n          )\r\n          .catch(error => {\r\n            this.setState({\r\n              // errormgs: \"Plant Name Exist\"\r\n            });\r\n            console.log(error);\r\n          });\r\n      }\r\n      // else {\r\n\r\n      // }\r\n      console.log(data);\r\n      console.log(\"form is valid\");\r\n    }\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n      size: \"\",\r\n      material_sub_category_id: \"\"\r\n    });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    if (this.state.type === \"edit\") {\r\n      // we call the redux function to dispatch and delete all the global redux state to close the modal\r\n      this.props.setPlantVisiblity();\r\n    }\r\n\r\n    this.setState({\r\n      visible: false,\r\n      formValid: false,\r\n      errors: {\r\n        material_sub_category_id: \"\"\r\n      },\r\n      material_sub_category_id: \"\",\r\n      size: \"\",\r\n      min: [],\r\n      max: [],\r\n      minvalue: \"\",\r\n      maxvalue: \"\"\r\n    });\r\n    this.reloadPage();\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    // this.setState({\r\n    //   visible: nextProps.visible,\r\n    //   plant_code: nextProps.editPlantData.code,\r\n    //   plant_name: nextProps.editPlantData.name,\r\n    //   plant_address: nextProps.editPlantData.address,\r\n    //   plant_contactno: nextProps.editPlantData.phoneNumber,\r\n    //   type: nextProps.type\r\n    // });\r\n  }\r\n\r\n  addmin = (record, value) => {\r\n    console.log(record);\r\n    console.log(value.target.value);\r\n    this.state.min[record.id] = value.target.value;\r\n  };\r\n  addmax = (record, value) => {\r\n    this.state.max[record.id] = value.target.value;\r\n  };\r\n  render() {\r\n    console.log(this.state.min);\r\n    console.log(this.state.min[85]);\r\n    const { visible, loading } = this.state;\r\n    const Columns = [\r\n      {\r\n        title: \"Size\",\r\n        dataIndex: \"size\",\r\n        key: \"size\"\r\n      },\r\n      {\r\n        title: \"Max Value\",\r\n        dataIndex: \"max_value\",\r\n        key: \"max_value\",\r\n        render: (text, record = this.state.datalist) => (\r\n          <Input\r\n            id=\"unit\"\r\n            name=\"unit\"\r\n            // value={this.state.maxvalue}\r\n            onChange={value => this.addmax(record, value)}\r\n            style={{ width: 100 }}\r\n          />\r\n        )\r\n      },\r\n      {\r\n        title: \"Min Value\",\r\n        dataIndex: \"min_value\",\r\n        key: \"min_value\",\r\n        render: (text, record = this.state.datalist) => (\r\n          <Input\r\n            id=\"unit\"\r\n            name=\"unit\"\r\n            // value={this.state.minvalue}\r\n            onChange={value => this.addmin(record, value)}\r\n            style={{ width: 100 }}\r\n          />\r\n        )\r\n      }\r\n    ];\r\n    return (\r\n      <div>\r\n        <PrimaryButton\r\n          onClick={this.showModal}\r\n          style={{\r\n            background: \"#001328\",\r\n            color: \"white\",\r\n            border: \"none\",\r\n            width: \"190px\",\r\n            marginLeft: \"-10px\"\r\n          }}\r\n        >\r\n          Add Sieve Accepted Value\r\n        </PrimaryButton>\r\n        <Modal\r\n          visible={visible}\r\n          closable={false}\r\n          loading={loading}\r\n          onCancel={this.handleCancel}\r\n          title={\r\n            <MasterLevelFormTitle>\r\n              <p\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                {this.state.type === \"edit\"\r\n                  ? \"Edit Sieve Accepted Values\"\r\n                  : \"Add Sieve Accepted Values\"}\r\n              </p>\r\n              <Icon\r\n                type=\"close-circle\"\r\n                onClick={this.handleCancel}\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              />\r\n            </MasterLevelFormTitle>\r\n          }\r\n          footer={[\r\n            <Button key=\"back\" onClick={this.handleCancel}>\r\n              Cancel\r\n            </Button>,\r\n            <PrimaryButton\r\n              key=\"submit\"\r\n              loading={loading}\r\n              onClick={this.handleSubmit}\r\n              style={{ background: \"#001328\", color: \"white\", border: \"none\" }}\r\n            >\r\n              {this.state.type === \"edit\" ? \"Edit\" : \"Save\"}\r\n            </PrimaryButton>\r\n          ]}\r\n          width=\"600px\"\r\n        >\r\n          <MasterLevelForm style={{ justifyContent: \"space-evenly\" }}>\r\n            <div className=\"input_wrapper\">\r\n              <label for=\"sub_category\" className=\"label\">\r\n                Material Sub Category:\r\n              </label>\r\n              <Checkbox.Group\r\n                options={this.state.optData}\r\n                onChange={this.onChangeCheck}\r\n              />\r\n              <div style={{ height: \"12px\" }}></div>\r\n            </div>\r\n            <div className=\"input_wrapper\">\r\n              <AntTable\r\n                dataSource={this.state.datalist}\r\n                // size={this.state.size}\r\n                bordered={false}\r\n                columns={Columns}\r\n                showHeader={true}\r\n                pagination={false}\r\n                scroll={{ y: 200 }}\r\n                style={{\r\n                  height: \"auto\",\r\n                  width: \"550px\",\r\n                  backgroundClip: \"padding-box\",\r\n                  cellSpacing: \"0\"\r\n                }}\r\n              />\r\n            </div>\r\n          </MasterLevelForm>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  //getting the global redux state to get the data from the EditPlantReducer.js\r\n  return {\r\n    visible: state.plantLevelReducers.EditPlantReducer.visible,\r\n    type: state.plantLevelReducers.EditPlantReducer.type,\r\n    editPlantData: state.plantLevelReducers.EditPlantReducer.editPlantData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // setting visible to false if we close the modal .. and all state data will be deleted if this function is dispatched\r\n    setPlantVisiblity: () => {\r\n      dispatch({ type: DISABLE_EDIT_MODE });\r\n      console.log(\"edit modal closed\");\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddAcceptedSize);\r\n","import React, { Component } from \"react\";\r\n\r\nimport Paragraph from \"antd/lib/typography/Paragraph\";\r\nimport { FlexContainer } from \"../../../../Components/styledcomponents/container/FlexGrid\";\r\nimport AddAccepetdSize from \"../AddAccepetdSize\";\r\n\r\nconst style = {\r\n  fontSize: \"medium\",\r\n  fontWeight: \"600\",\r\n  alignSelf: \"auto\",\r\n  padding: \"10px\"\r\n};\r\n\r\nexport default class AddSieveSize extends Component {\r\n  getallplant = () => {\r\n    this.props.reload();\r\n  };\r\n  render() {\r\n    return (\r\n      <FlexContainer titles leveltitles>\r\n        <Paragraph style={style}>Sieve Accepted Value</Paragraph>\r\n        <AddAccepetdSize reload={this.getallplant} />\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\nimport { Icon, Popconfirm, Divider, Modal, Input, Button, Select } from \"antd\";\r\nimport { AntTable } from \"../../styledcomponents/table/AntTabl\";\r\nimport { api } from \"../../services/AxiosService\";\r\nimport Notification from \"../../Constant/Notification\";\r\nimport { connect } from \"react-redux\";\r\nimport { SWITCH_TO_EDIT_MODE } from \"../../../redux/action/master/plantlevel/PlantLevel\";\r\nimport AddSieveSize from \"./title/AddSieveSize\";\r\nimport { PrimaryButton } from \"../../styledcomponents/button/button\";\r\nimport { MasterLevelForm } from \"../../styledcomponents/form/MasterLevelForms\";\r\nimport { Main_Category_Name_Aggregate } from \"../../Constant/Api\";\r\nimport Notificationfuc from \"../../Constant/Notification\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass SieveSize extends Component {\r\n  state = {\r\n    searchText: \"\",\r\n    visible: false,\r\n    size: \"small\",\r\n    loading: false,\r\n    visible1: false,\r\n    data: \"\",\r\n    id: \"\",\r\n    sizeId: \"\",\r\n    sub_category: \"\",\r\n    Aggsize: \"\",\r\n    minValue: \"\",\r\n    maxValue: \"\",\r\n    edit_Aggsize: \"\",\r\n    edit_sub_category: \"\"\r\n  };\r\n\r\n  componentWillMount() {\r\n    if (window.screen.width > 1900) {\r\n      console.log(\"hooray\");\r\n      this.setState({\r\n        size: \"large\"\r\n      });\r\n    } else if (window.screen.width < 1440) {\r\n      this.setState({\r\n        size: \"small\"\r\n      });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getallPlant();\r\n    this.getSubCategoryByMain();\r\n  }\r\n\r\n  //  get all plant API\r\n  getallPlant = () => {\r\n    let datalist = [];\r\n    api(\"GET\", \"supermix\", \"/sieve-accepted-values\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data);\r\n      let x = res.data.results.sieveAcceptedValues;\r\n      for (var i = 0; i < x.length; i++) {\r\n        datalist.push({\r\n          id: x[i].id,\r\n          size: x[i].sieveSize.size,\r\n          min: x[i].min,\r\n          max: x[i].max,\r\n          materialSubCategoryName: x[i].sieveSize.materialSubCategoryName,\r\n          materialSubCategoryId: x[i].sieveSize.materialSubCategoryId,\r\n          sizeId: x[i].sieveSize.id\r\n        });\r\n      }\r\n      this.setState({\r\n        datalist\r\n      });\r\n    });\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  handleOk = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleCancel = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleChange = (event, field) => {\r\n    this.setState({ [field]: event.target.value });\r\n\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    console.log(name + \" is \\n\" + value);\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  clearFilters = () => {\r\n    this.setState({ filteredInfo: null });\r\n  };\r\n\r\n  clearAll = () => {\r\n    this.setState({\r\n      filteredInfo: null,\r\n      sortedInfo: null\r\n    });\r\n  };\r\n\r\n  setAgeSort = () => {\r\n    this.setState({\r\n      sortedInfo: {\r\n        order: \"descend\",\r\n        columnKey: \"age\"\r\n      }\r\n    });\r\n  };\r\n\r\n  onChange(pageNumber) {\r\n    console.log(\"Page: \", pageNumber);\r\n  }\r\n\r\n  // plant delete API\r\n\r\n  onConfirmdelete(code) {\r\n    console.log(code);\r\n    api(\"DELETE\", \"supermix\", \"/sieve-accepted-value\", \"\", \"\", code).then(\r\n      res => {\r\n        console.log(res.data);\r\n        this.getallPlant();\r\n        Notification(\"success\", res.data.message);\r\n      }\r\n    );\r\n    console.log(this.state.id);\r\n  }\r\n  showModal1 = record => {\r\n    console.log(record);\r\n    this.setState({\r\n      visible1: true,\r\n      sizeId: record.id,\r\n      Aggsize: record.sizeId,\r\n      edit_Aggsize: record.size,\r\n      sub_category: record.materialSubCategoryId,\r\n      edit_sub_category: record.materialSubCategoryName,\r\n      minValue: record.min,\r\n      maxValue: record.max\r\n    });\r\n  };\r\n  handleCancel1 = () => {\r\n    this.setState({\r\n      visible1: false,\r\n      sizeId: \"\",\r\n      sub_category: \"\",\r\n      Aggsize: \"\",\r\n      minValue: \"\",\r\n      maxValue: \"\",\r\n      edit_Aggsize: \"\",\r\n      edit_sub_category: \"\"\r\n    });\r\n  };\r\n\r\n  handleSelect = (name, value) => {\r\n    console.log(name);\r\n    console.log(value);\r\n\r\n    if (name === \"sub_category\") {\r\n      this.setState({\r\n        sub_category: value,\r\n        edit_sub_category: value\r\n      });\r\n      this.getAllSizeBySubId(value);\r\n    }\r\n    if (name === \"Aggsize\") {\r\n      this.setState({\r\n        Aggsize: value,\r\n        edit_Aggsize: value\r\n      });\r\n    }\r\n  };\r\n\r\n  getAllSizeBySubId = id => {\r\n    api(\r\n      \"GET\",\r\n      \"supermix\",\r\n      \"/sieve-size/material-sub-category/\",\r\n      \"\",\r\n      \"\",\r\n      id\r\n    ).then(res => {\r\n      console.log(res.data.results.materialSubCategoryId);\r\n      let x = res.data.results.materialSubCategoryId;\r\n      let selectSize = x.map((post, index) => {\r\n        return (\r\n          <Option value={post.id} key={index}>\r\n            {post.size}\r\n          </Option>\r\n        );\r\n      });\r\n      this.setState({\r\n        selectSize\r\n      });\r\n    });\r\n  };\r\n  getSubCategoryByMain = () => {\r\n    let optData = [];\r\n    api(\r\n      \"GET\",\r\n      \"supermix\",\r\n      \"/material-sub-category/materialCategoryName\",\r\n      \"\",\r\n      \"\",\r\n      Main_Category_Name_Aggregate\r\n    ).then(res => {\r\n      let dataSub = res.data.results.materialSubCategories;\r\n      console.log(dataSub);\r\n      let selectCategory = dataSub.map((post, index) => {\r\n        return (\r\n          <Option value={post.id} key={index}>\r\n            {post.name}\r\n          </Option>\r\n        );\r\n      });\r\n\r\n      this.setState({\r\n        selectCategory\r\n      });\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    let eM = \"can't be empty\";\r\n    e.preventDefault();\r\n\r\n    const data = {\r\n      id: this.state.sizeId,\r\n      sieveSizeId: this.state.Aggsize,\r\n      materialSubCategoryId: this.state.sub_category,\r\n      min: this.state.minValue,\r\n      max: this.state.maxValue\r\n    };\r\n    console.log(data);\r\n\r\n    api(\"PUT\", \"supermix\", \"/sieve-accepted-value\", \"\", data, \"\").then(\r\n      res => {\r\n        console.log(res.data);\r\n\r\n        Notificationfuc(\"success\", res.data.message);\r\n        this.getallPlant();\r\n        this.setState({\r\n          visible1: false,\r\n          sizeId: \"\",\r\n          sub_category: \"\",\r\n          Aggsize: \"\",\r\n          minValue: \"\",\r\n          maxValue: \"\",\r\n          edit_Aggsize: \"\",\r\n          edit_sub_category: \"\"\r\n        });\r\n        setTimeout(() => {}, 500);\r\n      },\r\n      error => {\r\n        this.setState({\r\n          // errormgs: error.validationFailures[0]\r\n        });\r\n        console.log(\"DEBUG34: \", error);\r\n        // console.log(HandelError(error.validationFailures[0]));\r\n      }\r\n    );\r\n  };\r\n  render() {\r\n    const { visible1, loading } = this.state;\r\n    const columns = [\r\n      {\r\n        title: \"Size (mm)\",\r\n        dataIndex: \"size\",\r\n        key: \"id\",\r\n        width: \"5%\"\r\n      },\r\n      {\r\n        title: \"Minimum Value\",\r\n        dataIndex: \"min\",\r\n        key: \"unit\",\r\n        width: \"7%\"\r\n      },\r\n      {\r\n        title: \"Maximum Value\",\r\n        dataIndex: \"max\",\r\n        key: \"action\",\r\n        width: \"7%\"\r\n      },\r\n      {\r\n        title: \"SubCategory\",\r\n        dataIndex: \"materialSubCategoryName\",\r\n        key: \"action\",\r\n        width: \"7%\"\r\n      },\r\n      {\r\n        title: \"Edit & Delete\",\r\n        key: \"action\",\r\n        width: \"7%\",\r\n        render: (text, record = this.state.datalist) => (\r\n          <span>\r\n            <a>\r\n              <Icon\r\n                type=\"edit\"\r\n                style={{ fontSize: \"1.2em\" }}\r\n                onClick={this.showModal1.bind(this, record)}\r\n              />\r\n            </a>\r\n            <Divider type=\"vertical\" />\r\n            <a>\r\n              <Popconfirm\r\n                title=\"Are you sure you want to Delete this?\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: \"red\" }} />\r\n                }\r\n                onConfirm={this.onConfirmdelete.bind(this, record.id)}\r\n              >\r\n                <a href=\"#\">\r\n                  <Icon\r\n                    type=\"delete\"\r\n                    style={{ color: \"red\", fontSize: \"1.2em\" }}\r\n                  />\r\n                </a>\r\n              </Popconfirm>\r\n            </a>\r\n          </span>\r\n        )\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <div>\r\n        <AntTable\r\n          length\r\n          title={() => <AddSieveSize reload={this.getallPlant} />}\r\n          className=\"plantManageTable\"\r\n          columns={columns}\r\n          dataSource={this.state.datalist}\r\n          onChange={this.handleChange}\r\n          pagination={{ defaultPageSize: 7 }}\r\n          size={this.state.size}\r\n        />\r\n        <div>\r\n          <Modal\r\n            visible={visible1}\r\n            title=\"Edit Sieve AcceptedValue\"\r\n            closable={false}\r\n            loading={loading}\r\n            onCancel={this.handleCancel1}\r\n            footer={[\r\n              <Button key=\"back\" onClick={this.handleCancel1}>\r\n                Cancel\r\n              </Button>,\r\n              <PrimaryButton\r\n                key=\"submit\"\r\n                loading={loading}\r\n                onClick={this.handleSubmit}\r\n                style={{\r\n                  background: \"#001328\",\r\n                  color: \"white\",\r\n                  border: \"none\"\r\n                }}\r\n              >\r\n                Edit\r\n              </PrimaryButton>\r\n            ]}\r\n            width=\"600px\"\r\n          >\r\n            <MasterLevelForm style={{ justifyContent: \"space-evenly\" }}>\r\n              <div className=\"input_wrapper\">\r\n                <label for=\"sub_category\" className=\"label\">\r\n                  Material Sub Category:\r\n                </label>\r\n                <Select\r\n                  id=\"sub_category\"\r\n                  name=\"sub_category\"\r\n                  placeholder=\"Select category\"\r\n                  style={{ width: 120 }}\r\n                  value={this.state.edit_sub_category}\r\n                  onChange={value => this.handleSelect(\"sub_category\", value)}\r\n                >\r\n                  {this.state.selectCategory}\r\n                </Select>\r\n                <div style={{ height: \"12px\" }}></div>\r\n              </div>\r\n              <div className=\"input_wrapper\">\r\n                <label for=\"plant_code\" className=\"label\">\r\n                  Size:\r\n                </label>\r\n                <Select\r\n                  id=\"Aggsize\"\r\n                  name=\"Aggsize\"\r\n                  placeholder=\"Select size\"\r\n                  style={{ width: 120 }}\r\n                  value={this.state.edit_Aggsize}\r\n                  onChange={value => this.handleSelect(\"Aggsize\", value)}\r\n                >\r\n                  {this.state.selectSize}\r\n                </Select>\r\n\r\n                <div style={{ height: \"12px\" }}></div>\r\n              </div>\r\n              <div className=\"input_wrapper\">\r\n                <label for=\"plant_code\" className=\"label\">\r\n                  Minimum Value:\r\n                </label>\r\n                <Input\r\n                  id=\"minValue\"\r\n                  name=\"minValue\"\r\n                  placeholder=\"Enter the minValue \"\r\n                  value={this.state.minValue}\r\n                  onChange={this.handleChange}\r\n                />\r\n                <div style={{ height: \"12px\" }}></div>\r\n              </div>\r\n              <div className=\"input_wrapper\">\r\n                <label for=\"plant_code\" className=\"label\">\r\n                  Maximum Value:\r\n                </label>\r\n                <Input\r\n                  id=\"maxValue\"\r\n                  name=\"maxValue\"\r\n                  placeholder=\"Enter the maxValue \"\r\n                  value={this.state.maxValue}\r\n                  onChange={this.handleChange}\r\n                />\r\n                <div style={{ height: \"12px\" }}></div>\r\n              </div>\r\n            </MasterLevelForm>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => null;\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // if this function dispatches modal will be shown and the data will be drawn :)\r\n    passEditPlantRecordtoModal: record => {\r\n      //this payload is the data we pass into redux which is in the row which we clicked\r\n      dispatch({ type: SWITCH_TO_EDIT_MODE, payload: record });\r\n      console.log(record);\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SieveSize);\r\n","import React, { Component } from \"react\";\r\nimport { Icon } from \"antd\";\r\nimport BasicCard from \"../../styledcomponents/card/BasicCard\";\r\nimport {\r\n  TileArea,\r\n  TileAreaText,\r\n  TileAreaAction\r\n} from \"../../styledcomponents/card/TileArea\";\r\n\r\nclass SieveTestMaster extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      status: true\r\n    };\r\n  }\r\n  goSieveSize = () => {\r\n    this.props.type(\"sieveSize\");\r\n  };\r\n\r\n  goSieveAcceptedValues = () => {\r\n    this.props.type(\"sieveAcceptedsize\");\r\n  };\r\n\r\n  goFinessModulus = () => {\r\n    this.props.type(\"FinessModulus\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <TileArea>\r\n        <BasicCard\r\n          finalproduct\r\n          tileareacard\r\n          size=\"small\"\r\n          hoverable={true}\r\n          onClick={this.goSieveSize}\r\n        >\r\n          <TileAreaText>Sieve Size</TileAreaText>\r\n          <TileAreaAction>\r\n            <Icon\r\n              filled\r\n              type=\"plus\"\r\n              style={{ color: \"red\", fontSize: \"22px\" }}\r\n            />\r\n          </TileAreaAction>\r\n        </BasicCard>\r\n        <BasicCard\r\n          finalproduct\r\n          tileareacard\r\n          // size='small'\r\n          hoverable={true}\r\n          onClick={this.goSieveAcceptedValues}\r\n        >\r\n          <TileAreaText testreport unit>\r\n            Sieve Accepted Value\r\n          </TileAreaText>\r\n          <TileAreaAction>\r\n            <Icon\r\n              filled\r\n              type=\"plus\"\r\n              style={{ color: \"red\", fontSize: \"22px\" }}\r\n            />\r\n          </TileAreaAction>\r\n        </BasicCard>\r\n        <BasicCard\r\n          finalproduct\r\n          tileareacard\r\n          size=\"small\"\r\n          hoverable={true}\r\n          onClick={this.goFinessModulus}\r\n        >\r\n          <TileAreaText materialcategory unit>\r\n            Fineness Modulus\r\n          </TileAreaText>\r\n          <TileAreaAction>\r\n            <Icon\r\n              filled\r\n              type=\"plus\"\r\n              style={{ color: \"red\", fontSize: \"22px\" }}\r\n            />\r\n          </TileAreaAction>\r\n        </BasicCard>\r\n      </TileArea>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapStateToProps = state => {};\r\n\r\nexport default SieveTestMaster;\r\n","import React, { Component } from \"react\";\r\nimport { Input, Modal, Button, Icon, Checkbox, Row } from \"antd\";\r\nimport { api } from \"../../services/AxiosService\";\r\nimport { PrimaryButton } from \"../../styledcomponents/button/button\";\r\nimport {\r\n  MasterLevelForm,\r\n  MasterLevelFormTitle\r\n} from \"../../styledcomponents/form/MasterLevelForms\";\r\nimport Notificationfuc from \"../../Constant/Notification\";\r\nimport { connect } from \"react-redux\";\r\nimport { DISABLE_EDIT_MODE } from \"../../../redux/action/master/plantlevel/PlantLevel\";\r\nimport { Main_Category_Name_Aggregate } from \"../../Constant/Api\";\r\n\r\n// function onChange(date, dateString) {\r\n//   console.log(date, dateString);\r\n// }\r\n\r\nconst error = {\r\n  color: \"red\",\r\n  fontSize: \"12px\",\r\n  width: \"160px\",\r\n  height: \"2px\"\r\n};\r\n\r\nclass AddFineness extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: false,\r\n      visible: false,\r\n      errors: {\r\n        material_sub_category_id: \"\",\r\n        max_size: \"\",\r\n        min_size: \"\"\r\n      },\r\n      material_sub_category_name: \"\",\r\n      material_sub_category_id: \"\",\r\n      max_size: \"\",\r\n      min_size: \"\",\r\n      errormgs: \"\",\r\n      type: \"add\"\r\n    };\r\n  }\r\n\r\n  onChangeCheck = checkedValues => {\r\n    console.log(\"checked = \", checkedValues);\r\n    this.setState({\r\n      material_sub_category_id: checkedValues\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.getSubCategoryByMain();\r\n  }\r\n  getSubCategoryByMain = () => {\r\n    let optData = [];\r\n    api(\r\n      \"GET\",\r\n      \"supermix\",\r\n      \"/material-sub-category/materialCategoryName\",\r\n      \"\",\r\n      \"\",\r\n      Main_Category_Name_Aggregate\r\n    ).then(res => {\r\n      let dataSub = res.data.results.materialSubCategories;\r\n      console.log(dataSub);\r\n      for (var i = 0; i < dataSub.length; i++) {\r\n        optData.push({\r\n          label: dataSub[i].name,\r\n          value: dataSub[i].id\r\n        });\r\n      }\r\n      console.log(optData);\r\n      this.setState({\r\n        optData\r\n      });\r\n    });\r\n  };\r\n\r\n  handleChange = (event, field) => {\r\n    this.setState({ [field]: event.target.value });\r\n    this.setState({ errormgs: \"\" });\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    let errors = this.state.errors;\r\n    console.log(name + \" is \\t\" + value);\r\n    switch (name) {\r\n      case \"max_size\":\r\n        errors.max_size = value.length === 0 ? \"max_value can't be empty\" : \"\";\r\n        break;\r\n      case \"min_size\":\r\n        errors.min_size = value.length === 0 ? \"min_value can't be empty\" : \"\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ errors, [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (\r\n      this.state.min_size.length === 0 &&\r\n      this.state.max_size.length === 0 &&\r\n      this.state.material_sub_category_id.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          min_size: \"Size can't be empty\",\r\n          max_size: \"Size can't be empty\",\r\n          material_sub_category_id: \"Sub category  can't be empty\"\r\n        }\r\n      });\r\n    } else if (\r\n      this.state.min_size.length === 0 &&\r\n      this.state.errors.min_size.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          min_size: this.state.min_size || \"Size can't be empty\",\r\n          max_size: this.state.max_size,\r\n          material_sub_category_id: this.state.material_sub_category_id\r\n        }\r\n      });\r\n    } else if (\r\n      this.state.max_size.length === 0 &&\r\n      this.state.errors.max_size.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          max_size: this.state.max_size || \"Size can't be empty\",\r\n          min_size: this.state.min_size,\r\n          material_sub_category_id: this.state.material_sub_category_id\r\n        }\r\n      });\r\n    } else if (\r\n      this.state.material_sub_category_id.length === 0 &&\r\n      this.state.errors.material_sub_category_id.length === 0\r\n    ) {\r\n      this.setState({\r\n        errors: {\r\n          max_size: this.state.max_size,\r\n          min_size: this.state.min_size,\r\n          material_sub_category_name:\r\n            this.state.material_sub_category_id ||\r\n            \"Sub category  can't be empty\"\r\n        }\r\n      });\r\n    } else if (\r\n      this.state.errors.min_size.length === 0 &&\r\n      this.state.errors.max_size.length === 0 &&\r\n      this.state.errors.material_sub_category_id.length === 0\r\n    ) {\r\n      console.log(this.state.errors);\r\n\r\n      const data = {\r\n        min: this.state.min_size,\r\n        max: this.state.max_size,\r\n        materialSubCategoryId: this.state.material_sub_category_id[0]\r\n      };\r\n      if (this.state.type === \"add\") {\r\n        api(\"POST\", \"supermix\", \"/fineness-modulus\", \"\", data, \"\")\r\n          .then(\r\n            res => {\r\n              console.log(res.data);\r\n\r\n              Notificationfuc(\"success\", res.data.message);\r\n              this.props.reload();\r\n              // this.setState({ loading: true });\r\n              this.setState({\r\n                material_sub_category_name: \"\",\r\n                material_sub_category_id: \"\",\r\n                max_size: \"\",\r\n                min_size: \"\",\r\n                type: \"add\",\r\n                visible: false,\r\n                errormgs: \"\"\r\n              });\r\n            },\r\n            error => {\r\n              // this.setState({\r\n              //   errormgs: error.validationFailures[0]\r\n              // });\r\n              console.log(\"DEBUG34: \", error);\r\n              // console.log(HandelError(error.validationFailures[0]));\r\n            }\r\n          )\r\n          .catch(error => {\r\n            this.setState({\r\n              // errormgs: \"Plant Name Exist\"\r\n            });\r\n            console.log(error);\r\n          });\r\n      }\r\n      // else {\r\n      //   const data = {\r\n      //     code: this.state.plant_code,\r\n      //     name: this.state.plant_name,\r\n      //     address: this.state.plant_address,\r\n      //     phoneNumber: this.state.plant_contactno\r\n      //   };\r\n      //   api(\"PUT\", \"supermix\", \"/plant\", \"\", data, \"\")\r\n      //     .then(\r\n      //       res => {\r\n      //         console.log(res.data);\r\n\r\n      //         if (res.data.status == \"VALIDATION_FAILURE\") {\r\n      //           console.log(\"update\");\r\n      //           this.responeserror(res.data.results.name.message);\r\n      //         } else {\r\n      //           Notificationfuc(\"success\", res.data.message);\r\n      //           this.props.reload();\r\n      //           this.setState({ loading: true });\r\n      //           this.setState({\r\n      //             plant_code: \"\",\r\n      //             plant_name: \"\",\r\n      //             plant_address: \"\",\r\n      //             plant_contactno: \"\",\r\n      //             errormgs: \"\"\r\n      //           });\r\n      //           setTimeout(() => {\r\n      //             this.setState({ loading: false, visible: false });\r\n      //           }, 3000);\r\n      //         }\r\n      //       },\r\n      //       error => {\r\n      //         this.setState({\r\n      //           errormgs: error.validationFailures[0]\r\n      //         });\r\n      //         console.log(\"DEBUG34: \", error);\r\n      //         console.log(HandelError(error.validationFailures[0]));\r\n      //       }\r\n      //     )\r\n      //     .catch(error => {\r\n      //       // this.setState({\r\n      //       //   errormgs: \"Plant Name Exist\"\r\n      //       // });\r\n      //       // console.log(error.response.data);\r\n      //     });\r\n      // }\r\n      console.log(data);\r\n      console.log(\"form is valid\");\r\n    }\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n      material_sub_category_name: \"\",\r\n      material_sub_category_id: \"\",\r\n      max_size: \"\",\r\n      min_size: \"\",\r\n      type: \"add\"\r\n    });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    if (this.state.type === \"edit\") {\r\n      // we call the redux function to dispatch and delete all the global redux state to close the modal\r\n      this.props.setPlantVisiblity();\r\n    }\r\n\r\n    this.setState({\r\n      visible: false,\r\n      formValid: false,\r\n      errors: {\r\n        material_sub_category_id: \"\",\r\n        max_size: \"\",\r\n        min_size: \"\"\r\n      },\r\n      material_sub_category_name: \"\",\r\n      material_sub_category_id: \"\",\r\n      max_size: \"\",\r\n      min_size: \"\",\r\n      type: \"add\"\r\n    });\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    // this.setState({\r\n    //   visible: nextProps.visible,\r\n    //   plant_code: nextProps.editPlantData.code,\r\n    //   plant_name: nextProps.editPlantData.name,\r\n    //   plant_address: nextProps.editPlantData.address,\r\n    //   plant_contactno: nextProps.editPlantData.phoneNumber,\r\n    //   type: nextProps.type\r\n    // });\r\n  }\r\n\r\n  render() {\r\n    const { visible, loading } = this.state;\r\n    const { errors } = this.state;\r\n    return (\r\n      <div>\r\n        <PrimaryButton\r\n          onClick={this.showModal}\r\n          style={{\r\n            background: \"#001328\",\r\n            color: \"white\",\r\n            border: \"none\",\r\n            width: \"180px\",\r\n            marginLeft: \"-10px\"\r\n          }}\r\n        >\r\n          Add Fineness Modulus\r\n        </PrimaryButton>\r\n        <Modal\r\n          visible={visible}\r\n          closable={false}\r\n          loading={loading}\r\n          onCancel={this.handleCancel}\r\n          title={\r\n            <MasterLevelFormTitle>\r\n              <p\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                {this.state.type === \"edit\"\r\n                  ? \"Edit Fineness Modulus\"\r\n                  : \"Add Fineness Modulus\"}\r\n              </p>\r\n              <Icon\r\n                type=\"close-circle\"\r\n                onClick={this.handleCancel}\r\n                style={{\r\n                  color: \"white\"\r\n                }}\r\n              />\r\n            </MasterLevelFormTitle>\r\n          }\r\n          footer={[\r\n            <Button key=\"back\" onClick={this.handleCancel}>\r\n              Cancel\r\n            </Button>,\r\n            <PrimaryButton\r\n              key=\"submit\"\r\n              loading={loading}\r\n              onClick={this.handleSubmit}\r\n              style={{ background: \"#001328\", color: \"white\", border: \"none\" }}\r\n            >\r\n              {this.state.type === \"edit\" ? \"Edit\" : \"Save\"}\r\n            </PrimaryButton>\r\n          ]}\r\n          width=\"600px\"\r\n        >\r\n          <MasterLevelForm style={{ justifyContent: \"space-evenly\" }}>\r\n            <div>\r\n              <div className=\"input_wrapper\">\r\n                <label for=\"sub_category\" className=\"label\">\r\n                  Material Sub Category:\r\n                </label>\r\n                <Checkbox.Group\r\n                  options={this.state.optData}\r\n                  onChange={this.onChangeCheck}\r\n                  value={this.state.material_sub_category_id}\r\n                />\r\n                <div style={{ height: \"12px\" }}></div>\r\n              </div>\r\n              <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                <div className=\"input_wrapper\">\r\n                  <label for=\"plant_code\" className=\"label\">\r\n                    Minimum Size:\r\n                  </label>\r\n                  <Input\r\n                    id=\"min_size\"\r\n                    name=\"min_size\"\r\n                    placeholder=\"Enter the size \"\r\n                    value={this.state.min_size}\r\n                    onChange={this.handleChange}\r\n                  />\r\n\r\n                  {errors.min_size.length > 0 && (\r\n                    <div style={error}>{errors.min_size}</div>\r\n                  )}\r\n\r\n                  <div style={{ height: \"12px\" }}></div>\r\n                </div>\r\n                <div className=\"input_wrapper\">\r\n                  <label for=\"plant_code\" className=\"label\">\r\n                    Maximum Size:\r\n                  </label>\r\n                  <Input\r\n                    id=\"max_size\"\r\n                    name=\"max_size\"\r\n                    placeholder=\"Enter the size \"\r\n                    value={this.state.max_size}\r\n                    onChange={this.handleChange}\r\n                  />\r\n\r\n                  {errors.max_size.length > 0 && (\r\n                    <div style={error}>{errors.max_size}</div>\r\n                  )}\r\n\r\n                  <div style={{ height: \"12px\" }}></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </MasterLevelForm>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  //getting the global redux state to get the data from the EditPlantReducer.js\r\n  return {\r\n    visible: state.plantLevelReducers.EditPlantReducer.visible,\r\n    type: state.plantLevelReducers.EditPlantReducer.type,\r\n    editPlantData: state.plantLevelReducers.EditPlantReducer.editPlantData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // setting visible to false if we close the modal .. and all state data will be deleted if this function is dispatched\r\n    setPlantVisiblity: () => {\r\n      dispatch({ type: DISABLE_EDIT_MODE });\r\n      console.log(\"edit modal closed\");\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddFineness);\r\n","import React, { Component } from \"react\";\r\nimport Paragraph from \"antd/lib/typography/Paragraph\";\r\nimport { FlexContainer } from \"../../../../Components/styledcomponents/container/FlexGrid\";\r\nimport AddFiness from \"../AddFiness\";\r\n\r\nconst style = {\r\n  fontSize: \"medium\",\r\n  fontWeight: \"600\",\r\n  alignSelf: \"auto\",\r\n  padding: \"10px\"\r\n};\r\n\r\nexport default class FinenessTitle extends Component {\r\n  getallplant = () => {\r\n    this.props.reload();\r\n  };\r\n  render() {\r\n    return (\r\n      <FlexContainer titles leveltitles>\r\n        <Paragraph style={style}>Fineness Modulus</Paragraph>\r\n        <AddFiness reload={this.getallplant} />\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}","import React, { Component} from \"react\";\r\nimport { Icon, Popconfirm, Divider } from \"antd\";\r\nimport { AntTable } from \"../../styledcomponents/table/AntTabl\";\r\nimport { api } from \"../../services/AxiosService\";\r\nimport Notification from \"../../Constant/Notification\";\r\nimport { connect } from \"react-redux\";\r\nimport { SWITCH_TO_EDIT_MODE } from \"../../../redux/action/master/plantlevel/PlantLevel\";\r\nimport FinenessTitle from \"./title/FInenessTitle\";\r\n\r\nclass FinenessModules extends Component {\r\n  state = {\r\n    searchText: \"\",\r\n    visible: false,\r\n    size: \"small\",\r\n    data: \"\",\r\n    id: \"\"\r\n  };\r\n\r\n  componentWillMount() {\r\n    if (window.screen.width > 1900) {\r\n      console.log(\"hooray\");\r\n      this.setState({\r\n        size: \"large\"\r\n      });\r\n    } else if (window.screen.width < 1440) {\r\n      this.setState({\r\n        size: \"small\"\r\n      });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getallPlant();\r\n  }\r\n\r\n  //  get all plant API\r\n  getallPlant = () => {\r\n    let datalist = [];\r\n    api(\"GET\", \"supermix\", \"/fineness-modulus\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data);\r\n      let x = res.data.results.finenessModulus;\r\n      for (var i = 0; i < x.length; i++) {\r\n        datalist.push({\r\n          id: x[i].id,\r\n          min: x[i].min,\r\n          max: x[i].max,\r\n          materialSubCategoryName: x[i].materialSubCategory.name\r\n        });\r\n      }\r\n      this.setState({\r\n        datalist\r\n      });\r\n    });\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  handleOk = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleCancel = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleChange = (pagination, filters, sorter) => {\r\n    console.log(\"Various parameters\", pagination, filters, sorter);\r\n    this.setState({\r\n      filteredInfo: filters,\r\n      sortedInfo: sorter\r\n    });\r\n  };\r\n\r\n  clearFilters = () => {\r\n    this.setState({ filteredInfo: null });\r\n  };\r\n\r\n  clearAll = () => {\r\n    this.setState({\r\n      filteredInfo: null,\r\n      sortedInfo: null\r\n    });\r\n  };\r\n\r\n  setAgeSort = () => {\r\n    this.setState({\r\n      sortedInfo: {\r\n        order: \"descend\",\r\n        columnKey: \"age\"\r\n      }\r\n    });\r\n  };\r\n\r\n  onChange(pageNumber) {\r\n    console.log(\"Page: \", pageNumber);\r\n  }\r\n\r\n  // plant delete API\r\n\r\n  onConfirmdelete(code) {\r\n    console.log(code);\r\n    api(\"DELETE\", \"supermix\", \"/fineness-modulus\", \"\", \"\", code).then(res => {\r\n      console.log(res.data);\r\n      this.getallPlant();\r\n      Notification(\"success\", res.data.message);\r\n    });\r\n    console.log(this.state.id);\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"SubCategory\",\r\n        dataIndex: \"materialSubCategoryName\",\r\n        key: \"action\",\r\n        width: \"7%\"\r\n      },\r\n      {\r\n        title: \"Minimum Value\",\r\n        dataIndex: \"min\",\r\n        key: \"unit\",\r\n        width: \"7%\"\r\n      },\r\n      {\r\n        title: \"Maximum Value\",\r\n        dataIndex: \"max\",\r\n        key: \"action\",\r\n        width: \"7%\"\r\n      },\r\n\r\n      {\r\n        title: \"Edit & Delete\",\r\n        key: \"action\",\r\n        width: \"7%\",\r\n        render: (text, record = this.state.datalist) => (\r\n          <span>\r\n            <a>\r\n              <Icon\r\n                type=\"edit\"\r\n                style={{ fontSize: \"1.2em\" }}\r\n                // onClick={this.props.passEditincomingRecordToModal.bind(\r\n                //   this,\r\n                //   record\r\n                // )}\r\n              />\r\n            </a>\r\n            <Divider type=\"vertical\" />\r\n            <a>\r\n              <Popconfirm\r\n                title=\"Are you sure you want to Delete this?\"\r\n                icon={\r\n                  <Icon type=\"question-circle-o\" style={{ color: \"red\" }} />\r\n                }\r\n                onConfirm={this.onConfirmdelete.bind(this, record.id)}\r\n              >\r\n                <a href=\"#\">\r\n                  <Icon\r\n                    type=\"delete\"\r\n                    style={{ color: \"red\", fontSize: \"1.2em\" }}\r\n                  />\r\n                </a>\r\n              </Popconfirm>\r\n            </a>\r\n          </span>\r\n        )\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <AntTable\r\n        length\r\n        title={() => <FinenessTitle reload={this.getallPlant} />}\r\n        className=\"plantManageTable\"\r\n        columns={columns}\r\n        dataSource={this.state.datalist}\r\n        onChange={this.handleChange}\r\n        pagination={{ defaultPageSize: 7 }}\r\n        size={this.state.size}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => null;\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // if this function dispatches modal will be shown and the data will be drawn :)\r\n    passEditPlantRecordtoModal: record => {\r\n      //this payload is the data we pass into redux which is in the row which we clicked\r\n      dispatch({ type: SWITCH_TO_EDIT_MODE, payload: record });\r\n      console.log(record);\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FinenessModules);\r\n","import React, { Component } from \"react\";\r\nimport { FlexContainer } from \"../../styledcomponents/container/FlexGrid\";\r\nimport SieveSize from \"../../test/sievetest/SieveSize\";\r\nimport SieveAcceptedValue from \"../../test/sievetest/SieveAcceptedValue\";\r\nimport SieveTestMaster from \"../../test/sievetest/SieveMaster\";\r\nimport FinessModulus from \"../../test/sievetest/FinesModulus\";\r\n\r\nexport default class Landing extends Component {\r\n  state = {\r\n    type: \"\"\r\n  };\r\n\r\n  typechange = type => {\r\n    console.log(type);\r\n    this.setState({ type: type });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <FlexContainer leveltileareafixed>\r\n        <SieveTestMaster type={this.typechange} />\r\n\r\n        {this.state.type === \"sieveSize\" ? (\r\n          <SieveSize />\r\n        ) : this.state.type === \"FinessModulus\" ? (\r\n          <FinessModulus />\r\n        ) : (\r\n          <SieveAcceptedValue />\r\n        )}\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\nimport { AntTable } from \"../../styledcomponents/table/AntTabl\";\r\nimport history from \"../../../Components/Constant/history\";\r\nimport {  Button,Tag } from \"antd\";\r\nimport { api } from \"../../services/AxiosService\";\r\n\r\nexport default class ManageSieveTest extends Component {\r\n  state = {\r\n    sampleData: \"\"\r\n  };\r\n  componentDidMount() {\r\n    console.log(this.props.testId);\r\n    this.getAll();\r\n  }\r\n  testConfig = record => {\r\n    history.push(`/sieveTrial/${record.code}`);\r\n\r\n    console.log(record);\r\n  };\r\n\r\n  getAll = () => {\r\n    const datalist = [];\r\n    api(\"GET\", \"supermix\", \"/incoming-samples\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data);\r\n      res.data.results.incomingSamples.map((post, index) => {\r\n        datalist.push({\r\n          code: post.code,\r\n          vehicleNo: post.vehicleNo,\r\n          date: post.date,\r\n          status: post.status,\r\n          rawMaterialName: post.rawMaterial.name,\r\n          nature: post.rawMaterial.nature,\r\n          materialSubCategoryName: post.rawMaterial.materialSubCategory.name,\r\n          plantName: post.plant.name,\r\n          supplierName: post.supplier.name\r\n        });\r\n      });\r\n      this.setState({\r\n        sampleData: datalist\r\n      });\r\n    });\r\n  };\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"Sample Code\",\r\n        dataIndex: \"code\",\r\n        key: \"code\",\r\n        width: \"10%\"\r\n      },\r\n      {\r\n        title: \"Name\",\r\n        dataIndex: \"rawMaterialName\",\r\n        key: \"rawMaterialName\",\r\n        width: \"10%\"\r\n      },\r\n      {\r\n        title: \"Vehicle Number\",\r\n        dataIndex: \"vehicleNo\",\r\n        key: \"vehicleNo\",\r\n        width: \"10%\"\r\n      },\r\n      {\r\n        title: \"Date\",\r\n        dataIndex: \"date\",\r\n        key: \"date\",\r\n        width: \"10%\"\r\n      },\r\n      {\r\n        title: \"Plant\",\r\n        dataIndex: \"plantName\",\r\n        key: \"plantName\",\r\n        width: \"12%\"\r\n      },\r\n      {\r\n        title: \"Supplier\",\r\n        dataIndex: \"supplierName\",\r\n        key: \"supplieName\",\r\n        width: \"12%\"\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataIndex: \"status\",\r\n        key: \"status\",\r\n        width: \"10%\",\r\n        render: status => (\r\n          <span>\r\n            {\r\n              <Tag\r\n                color={\r\n                  status === \"PASS\"\r\n                    ? \"green\"\r\n                    : status === \"PROCESS\"\r\n                    ? \"orange\"\r\n                    : status === \"NEW\"\r\n                    ? \"yellow\"\r\n                    : \"red\"\r\n                }\r\n              >\r\n                {status}\r\n              </Tag>\r\n            }\r\n          </span>\r\n        )\r\n      },\r\n      {\r\n        title: \"Test\",\r\n        key: \"test\",\r\n        width: \"15%\",\r\n        render: (record = this.state.sampleData) => (\r\n          <Button onClick={this.testConfig.bind(this, record)}>test</Button>\r\n        )\r\n      }\r\n    ];\r\n    return (\r\n      <AntTable\r\n        title={() => (\r\n          <div style={{ height: \"20px\" }}>\r\n            {/* <p style={styleObj}>{title}</p> */}\r\n          </div>\r\n        )}\r\n        columns={columns}\r\n        dataSource={this.state.sampleData}\r\n        style={{ background: \"white\", width: \"1300px\", marginTop: \"-10px\" }}\r\n        size=\"small\"\r\n        onRow={(record, rowIndex) => {\r\n          return {\r\n            // onClick: event => {testConfig(record)}, // click row\r\n            onDoubleClick: event => {\r\n              this.testConfig(record);\r\n            } // double click row\r\n            // onContextMenu: event => {}, // right button click row\r\n            // onMouseEnter: event => {}, // mouse enter row\r\n            // onMouseLeave: event => {}, // mouse leave row\r\n          };\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport { FlexContainer } from \"../../styledcomponents/container/FlexGrid\";\r\nimport { Input, Select, InputNumber, DatePicker, Table } from \"antd\";\r\nimport { PrimaryButton } from \"../../styledcomponents/button/button\";\r\nimport theme from \"../../../theme\";\r\nimport moment from \"moment\";\r\nimport { Divider, Button, Icon, Popconfirm, Tag } from \"antd\";\r\nimport { api } from \"../../services/AxiosService\";\r\nimport { AntTable } from \"../../styledcomponents/table/AntTabl\";\r\nimport Notification from \"../../Constant/Notification\";\r\nimport history from \"../../../Components/Constant/history\";\r\n\r\nconst { Option } = Select;\r\nconst error = {\r\n  color: \"red\",\r\n  fontSize: \"12px\",\r\n  width: \"100px\",\r\n  height: \"0.2px\"\r\n};\r\nconst error2 = {\r\n  color: \"red\",\r\n  fontSize: \"12px\",\r\n  width: \"160px\",\r\n  height: \"0.2px\"\r\n};\r\n\r\nexport default class SieveTestTrial extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      code: \"\",\r\n      date: \"\",\r\n      finenessModulus: \"\",\r\n      status: \"NEW\",\r\n      userId: \"\",\r\n      plantCode: \"\",\r\n      incomingSampleCode: this.props.match.params.sampleId,\r\n      panWeight: \"\",\r\n      totalWeight: 0,\r\n      weight: [],\r\n      disible: false,\r\n      statusCode: \"\",\r\n      errormgs: \"\",\r\n      minvalue: \"\"\r\n    };\r\n  }\r\n\r\n  handleDates(name, dateString, field) {\r\n    const { errors } = this.state;\r\n    console.log(name);\r\n    console.log(dateString);\r\n    console.log(field);\r\n    let convertedDate = moment(dateString).format(\"YYYY-MM-DD\");\r\n    console.log(convertedDate);\r\n    if (name === \"date\") {\r\n      this.setState({\r\n        date: dateString\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = (event, field) => {\r\n    this.setState({ [field]: event.target.value });\r\n\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    let errors = this.state.errors;\r\n    console.log(name + \" is \\n\" + value);\r\n    // switch (name) {\r\n    //   case \"code\":\r\n    //     errors.code = value.length === 0 ? \"code can't be empty\" : \"\";\r\n    //     break;\r\n    //   case \"status\":\r\n    //     errors.status =\r\n    //       value.length === 0\r\n    //         ? \"status can't be empty\"\r\n    //         : value.length < 2\r\n    //         ? \"status \\n must be 2 characters long!\"\r\n    //         : !isNaN(value)\r\n    //         ? \"status won't allow only letters\"\r\n    //         : \"\";\r\n    //     break;\r\n\r\n    //   default:\r\n    //     break;\r\n    // }\r\n\r\n    this.setState({ errors, [name]: value });\r\n  };\r\n  handleChangeFine = value => {\r\n    const { errors } = this.state;\r\n    console.log(value);\r\n    this.setState({\r\n      finenessModulus: value\r\n    });\r\n  };\r\n  handleChangePan = value => {\r\n    const { errors } = this.state;\r\n    console.log(value);\r\n    this.setState({\r\n      panWeight: value\r\n    });\r\n  };\r\n  handleChangeNumber = value => {\r\n    const { errors } = this.state;\r\n    console.log(value);\r\n    this.setState({\r\n      totalWeight: value\r\n    });\r\n  };\r\n\r\n  handleSelect = (name, value) => {\r\n    console.log(name);\r\n    console.log(value);\r\n    // handle select for  plant\r\n    if (name === \"plant\") {\r\n      this.setState({\r\n        plantCode: value\r\n        // plantEdit: value\r\n      });\r\n    }\r\n    if (name === \"user\") {\r\n      this.setState({\r\n        userId: value\r\n        // plantEdit: value\r\n      });\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getAllplant();\r\n    this.SelectUser();\r\n    this.getSampleById();\r\n    // this.getalltestTrailByTestId();\r\n  }\r\n  getAllplant() {\r\n    api(\"GET\", \"supermix\", \"/plants\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data.results.plants.length);\r\n      if (res.data.results.plants.length > 0) {\r\n        console.log(\"ggg\");\r\n        let SelectPlants = res.data.results.plants.map((post, index) => {\r\n          return (\r\n            <Option value={post.code} key={index}>\r\n              {post.name}\r\n            </Option>\r\n          );\r\n        });\r\n        this.setState({\r\n          SelectPlants\r\n        });\r\n      }\r\n    });\r\n  }\r\n  SelectUser = () => {\r\n    api(\"GET\", \"supermix\", \"/users\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data);\r\n\r\n      if (res.data.results.user.length > 0) {\r\n        let userselect = res.data.results.user.map((post, index) => {\r\n          console.log(\"kkkkkkkkkk\");\r\n          return (\r\n            <Option value={post.id} key={index}>\r\n              {post.userName}\r\n            </Option>\r\n          );\r\n        });\r\n        this.setState({\r\n          userselect\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  getSampleById = () => {\r\n    api(\r\n      \"GET\",\r\n      \"supermix\",\r\n      \"/incoming-sample\",\r\n      \"\",\r\n      \"\",\r\n      this.state.incomingSampleCode\r\n    ).then(res => {\r\n      console.log(res.data.results.incomingSample);\r\n      let id =\r\n        res.data.results.incomingSample.rawMaterial.materialSubCategory.id;\r\n      console.log(\r\n        res.data.results.incomingSample.rawMaterial.materialSubCategory.id\r\n      );\r\n      this.getSizeBySubId(id);\r\n      // this.createEquationParameters(res.data.results.equationParameters);\r\n      // this.setState({\r\n      //   equationParameters: res.data.results.testparameters\r\n      // });\r\n    });\r\n  };\r\n  getSizeBySubId = id => {\r\n    api(\r\n      \"GET\",\r\n      \"supermix\",\r\n      \"/sieve-size/material-sub-category\",\r\n      \"\",\r\n      \"\",\r\n      id\r\n    ).then(res => {\r\n      console.log(res.data);\r\n      // this.createEquationParameters(res.data.results.equationParameters);\r\n      this.setState({\r\n        datalist: res.data.results.materialSubCategoryId\r\n      });\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    let eM = \"can't be empty\";\r\n    e.preventDefault();\r\n    const {\r\n      code,\r\n      date,\r\n      finenessModulus,\r\n      status,\r\n      userId,\r\n      plantCode,\r\n      incomingSampleCode,\r\n      panWeight,\r\n      totalWeight\r\n    } = this.state;\r\n\r\n    const data = {\r\n      code: code,\r\n      date: moment(date).format(\"YYYY-MM-DD\"),\r\n      finenessModulus: finenessModulus,\r\n      status: status,\r\n      userId: userId,\r\n      plantCode: plantCode,\r\n      incomingSampleCode: incomingSampleCode,\r\n      panWeight: panWeight,\r\n      totalWeight: totalWeight\r\n    };\r\n    api(\"POST\", \"supermix\", \"/sieve-test\", \"\", data, \"\").then(res => {\r\n      console.log(res.data);\r\n      Notification(\"success\", res.data.message);\r\n      this.setState({\r\n        statusCode: res.data.status,\r\n        disible: true\r\n      });\r\n    });\r\n\r\n    console.log(data);\r\n  };\r\n\r\n  addmin = (record, value) => {\r\n    console.log(record);\r\n    console.log(value.target.value);\r\n    this.state.weight[record.id] = value.target.value;\r\n    this.setState({\r\n      errormgs: \"\"\r\n    });\r\n  };\r\n\r\n  handleSubmitTrail = () => {\r\n    let data = [];\r\n    for (var i = 0; i < this.state.datalist.length; i++) {\r\n      data.push({\r\n        cumulativeRetained: this.state.weight[this.state.datalist[i].id],\r\n        sieveTestCode: this.state.code,\r\n        sieveSizeId: this.state.datalist[i].id\r\n      });\r\n    }\r\n    console.log(data);\r\n    if (this.state.weight.length > 0) {\r\n      api(\"POST\", \"supermix\", \"/sieve-test-trial\", \"\", data, \"\").then(res => {\r\n        console.log(res.data);\r\n        Notification(\"success\", res.data.message);\r\n        this.setState({\r\n          weight: []\r\n        });\r\n        this.getalltestTrailByTestId();\r\n      });\r\n    } else {\r\n      this.setState({\r\n        errormgs: \"CumulativeRetained can't be Empty\"\r\n      });\r\n    }\r\n  };\r\n\r\n  getalltestTrailByTestId = () => {\r\n    let resultData = [];\r\n    api(\r\n      \"GET\",\r\n      \"supermix\",\r\n      \"/sieve-test-trial/sieve-test\",\r\n      \"\",\r\n      \"\",\r\n      this.state.code\r\n    ).then(res => {\r\n      let x = res.data.results.sieveTestCode;\r\n      console.log(res.data.results.sieveTestCode);\r\n      for (var i = 0; i < x.length; i++) {\r\n        resultData.push({\r\n          size: x[i].sieveSize.size,\r\n          percentageRetained: x[i].percentageRetained,\r\n          cumulativeRetained: x[i].cumulativeRetained,\r\n          passing: x[i].passing,\r\n          totalWeight: x[i].sieveTest.totalWeight,\r\n          status: x[i].sieveTest.status\r\n        });\r\n      }\r\n      if (resultData.length > 0) {\r\n        this.setState({\r\n          totalWeight: resultData[0].totalWeight,\r\n          status: resultData[0].status\r\n        });\r\n      }\r\n\r\n      this.setState({\r\n        resultData\r\n      });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      code,\r\n      date,\r\n      finenessModulus,\r\n      status,\r\n      userId,\r\n      plantCode,\r\n      incomingSampleCode,\r\n      panWeight,\r\n      totalWeight\r\n    } = this.state;\r\n    const Columns = [\r\n      {\r\n        title: \"Size\",\r\n        dataIndex: \"size\",\r\n        key: \"size\",\r\n        width: \"50%\"\r\n      },\r\n\r\n      {\r\n        title: \"Retained Weight\",\r\n        dataIndex: \"cumulativeRetained\",\r\n        key: \"value\",\r\n        render: (text, record = this.state.datalist) => (\r\n          <Input\r\n            id=\"unit\"\r\n            name=\"unit\"\r\n            // value={this.state.minvalue}\r\n            onChange={value => this.addmin(record, value)}\r\n            style={{ width: 80 }}\r\n          />\r\n        )\r\n      }\r\n    ];\r\n\r\n    const Columns1 = [\r\n      {\r\n        title: \"Sieve Size (mm)\",\r\n        dataIndex: \"size\",\r\n        key: \"size\",\r\n        width: \"15%\"\r\n      },\r\n      {\r\n        title: \"Cummalative Weight Retained (g)\",\r\n        dataIndex: \"cumulativeRetained\",\r\n        key: \"cumulativeRetained\"\r\n      },\r\n\r\n      {\r\n        title: \"Percentage Weight  Retained\",\r\n        dataIndex: \"percentageRetained\",\r\n        key: \"percentageRetained\"\r\n      },\r\n      {\r\n        title: \"Percentage Weight Passing\",\r\n        dataIndex: \"passing\",\r\n        key: \"passing\"\r\n      }\r\n    ];\r\n    return (\r\n      <FlexContainer column>\r\n        {/* <div className=\"input_wrapper\">\r\n          <h4>Sieve Test</h4>\r\n        </div> */}\r\n        <FlexContainer\r\n          style={{ background: \"white\", borderRadius: \"15px\", height: \"160px\" }}\r\n        >\r\n          <div className=\"input_wrapper\">\r\n            <label htmlFor=\"status\" className=\"label\">\r\n              Code\r\n            </label>\r\n            <Input\r\n              id=\"code\"\r\n              name=\"code\"\r\n              style={{ width: \"120px\" }}\r\n              value={code}\r\n              placeholder=\"Enter code\"\r\n              onChange={this.handleChange}\r\n              disabled={this.state.disible}\r\n            />\r\n            {/* {errors.code.length > 0 && <div style={error2}>{errors.code}</div>} */}\r\n            <div style={{ height: \"22px\" }} />\r\n          </div>\r\n          <div className=\"input_wrapper\">\r\n            <label htmlFor=\"date\" className=\"label\">\r\n              Date\r\n            </label>\r\n            <DatePicker\r\n              id=\"date\"\r\n              name=\"date\"\r\n              value={date}\r\n              onChange={(dateString, field) =>\r\n                this.handleDates(\"date\", dateString, field)\r\n              }\r\n              disabled={this.state.disible}\r\n            />\r\n            {/* {errors.date.length > 0 && <div style={error2}>{errors.date}</div>} */}\r\n            <div style={{ height: \"22px\" }} />\r\n          </div>\r\n          <div className=\"input_wrapper\">\r\n            <label htmlFor=\"material_state\" className=\"label\">\r\n              Plant\r\n            </label>\r\n            <Select\r\n              id=\"plant\"\r\n              name=\"plant\"\r\n              placeholder=\"Select plant\"\r\n              style={{ width: 120 }}\r\n              value={plantCode}\r\n              onChange={value => this.handleSelect(\"plant\", value)}\r\n              disabled={this.state.disible}\r\n            >\r\n              {this.state.SelectPlants}\r\n            </Select>\r\n            {/* {errors.material_state.length > 0 && (\r\n              <div style={error2}>{errors.material_state}</div>\r\n            )} */}\r\n            <div style={{ height: \"22px\" }} />\r\n          </div>\r\n          <div className=\"input_wrapper\">\r\n            <label htmlFor=\"material_state\" className=\"label\">\r\n              User\r\n            </label>\r\n            <Select\r\n              id=\"user\"\r\n              name=\"user\"\r\n              placeholder=\"Select user\"\r\n              style={{ width: 120 }}\r\n              value={userId}\r\n              onChange={value => this.handleSelect(\"user\", value)}\r\n              disabled={this.state.disible}\r\n            >\r\n              {this.state.userselect}\r\n            </Select>\r\n            {/* {errors.material_state.length > 0 && (\r\n                  <div style={error2}>{errors.material_state}</div>\r\n                )} */}\r\n            <div style={{ height: \"22px\" }} />\r\n          </div>\r\n\r\n          <div className=\"input_wrapper\">\r\n            <label htmlFor=\"no_of_trial\" className=\"label\">\r\n              Weight of Pan\r\n            </label>\r\n            <InputNumber\r\n              id=\"panWeight\"\r\n              name=\"panWeight\"\r\n              style={{ width: 110 }}\r\n              placeholder=\"Enter panWeight\"\r\n              value={panWeight}\r\n              onChange={this.handleChangePan}\r\n              disabled={this.state.disible}\r\n            />\r\n            {/* {errors.no_of_trial.length > 0 && (\r\n              <div style={error}>{errors.no_of_trial}</div>\r\n            )} */}\r\n            <div style={{ height: \"22px\" }} />\r\n          </div>\r\n          <div className=\"input_wrapper\">\r\n            <label htmlFor=\"no_of_trial\" className=\"label\">\r\n              Fineness Modulus\r\n            </label>\r\n            <InputNumber\r\n              id=\"finenessModulus\"\r\n              name=\"finenessModulus\"\r\n              style={{ width: 110, fontWeight: \"bold\" }}\r\n              placeholder=\"Enter finenessModulus\"\r\n              value={finenessModulus}\r\n              onChange={this.handleChangeFine}\r\n              disabled={true}\r\n            />\r\n            {/* {errors.no_of_trial.length > 0 && (\r\n              <div style={error}>{errors.no_of_trial}</div>\r\n            )} */}\r\n            <div style={{ height: \"22px\" }} />\r\n          </div>\r\n          <div className=\"input_wrapper\">\r\n            <label htmlFor=\"no_of_trial\" className=\"label\">\r\n              Total Weight\r\n            </label>\r\n            <InputNumber\r\n              id=\"totalWeight\"\r\n              name=\"totalWeight\"\r\n              style={{ width: 110, fontWeight: \"bold\" }}\r\n              placeholder=\"Enter totalWeight\"\r\n              value={totalWeight}\r\n              onChange={this.handleChangeNumber}\r\n              disabled={true}\r\n            />\r\n            {/* {errors.no_of_trial.length > 0 && (\r\n              <div style={error}>{errors.no_of_trial}</div>\r\n            )} */}\r\n            <div style={{ height: \"22px\" }} />\r\n          </div>\r\n          <div className=\"input_wrapper\">\r\n            <label htmlFor=\"status\" className=\"label\">\r\n              Status\r\n            </label>\r\n            <Input\r\n              id=\"status\"\r\n              name=\"status\"\r\n              value={status}\r\n              placeholder=\"Enter Status\"\r\n              style={{ width: 110, fontWeight: \"bold\" }}\r\n              onChange={this.handleChange}\r\n              disabled={true}\r\n            />\r\n            {/* {errors.status.length > 0 && (\r\n              <div style={error2}>{errors.status}</div>\r\n            )} */}\r\n            <div style={{ height: \"22px\" }} />\r\n          </div>\r\n          {this.state.disible ? (\r\n            \"\"\r\n          ) : (\r\n            <div className=\"input_wrapper\">\r\n              <PrimaryButton\r\n                type={\"primary\"}\r\n                primary\r\n                style={{\r\n                  background: theme.colors.primary,\r\n                  color: theme.colors.white,\r\n                  border: \"none\",\r\n                  marginRight: \"10px\"\r\n                }}\r\n                onClick={this.handleSubmit}\r\n              >\r\n                Submit\r\n              </PrimaryButton>\r\n            </div>\r\n          )}\r\n        </FlexContainer>\r\n        <br />\r\n        {this.state.disible && this.state.statusCode === \"OK\" ? (\r\n          <FlexContainer>\r\n            <FlexContainer>\r\n              <FlexContainer\r\n                style={{\r\n                  background: \"#F9F5F5 \",\r\n                  padding: \"15px\",\r\n                  borderRadius: \"15px\",\r\n                  width: \"650px\",\r\n                  height: \"550px\"\r\n                }}\r\n              >\r\n                <FlexContainer\r\n                  column\r\n                  style={{\r\n                    background: theme.colors.primary,\r\n                    height: \"40px\",\r\n                    width: \"890px\",\r\n                    margin: \"-15px\",\r\n                    borderTopLeftRadius: \"15px\",\r\n                    borderTopRightRadius: \"15px\"\r\n                  }}\r\n                >\r\n                  <h3\r\n                    style={{\r\n                      marginTop: \"3px\",\r\n                      marginLeft: \"0px\",\r\n                      color: \"white\"\r\n                    }}\r\n                  >\r\n                    Test Trial\r\n                  </h3>\r\n                </FlexContainer>\r\n\r\n                <Table\r\n                  columns={Columns}\r\n                  // title={() => this.state.errormgs}\r\n                  dataSource={this.state.datalist}\r\n                  style={{\r\n                    background: \"white\",\r\n                    width: \"1250px\",\r\n                    marginTop: \"-10px\"\r\n                  }}\r\n                  scroll={{ y: 380 }}\r\n                  size=\"small\"\r\n                  style={{\r\n                    width: \"500px\",\r\n                    marginTop: \"-10px\",\r\n                    marginLeft: \"80px\"\r\n                  }}\r\n                  pagination={false}\r\n                  footer={() => (\r\n                    <div style={{ height: \"20px\" }}>\r\n                      <PrimaryButton\r\n                        type={\"primary\"}\r\n                        primary\r\n                        style={{\r\n                          background: theme.colors.primary,\r\n                          color: theme.colors.white,\r\n                          border: \"none\",\r\n                          marginRight: \"20px\"\r\n                        }}\r\n                        onClick={this.handleSubmitTrail}\r\n                      >\r\n                        Submit\r\n                      </PrimaryButton>\r\n                    </div>\r\n                  )}\r\n                />\r\n              </FlexContainer>\r\n              &nbsp; &nbsp;\r\n              <FlexContainer\r\n                row\r\n                style={{\r\n                  background: \"white\",\r\n                  padding: \"15px\",\r\n                  borderRadius: \"15px\",\r\n                  width: \"650px\",\r\n                  height: \"auto\"\r\n                }}\r\n              >\r\n                <Table\r\n                  columns={Columns1}\r\n                  dataSource={this.state.resultData}\r\n                  style={{\r\n                    background: \"white\",\r\n                    width: \"1250px\",\r\n                    marginTop: \"-10px\"\r\n                  }}\r\n                  scroll={{ y: 280 }}\r\n                  size=\"small\"\r\n                  style={{\r\n                    width: \"900px\"\r\n                    // marginTop: \"10px\",\r\n                    // marginLeft: \"80px\"\r\n                  }}\r\n                  pagination={false}\r\n                  footer={() => (\r\n                    <div\r\n                      style={{\r\n                        height: \"20px\",\r\n                        display: \"flex\",\r\n                        flexDirection: \"row\"\r\n                      }}\r\n                    >\r\n                      <div>\r\n                        Total Weight :<b>{this.state.totalWeight}</b>\r\n                      </div>\r\n                      <div style={{ marginLeft: \"200px\" }}>\r\n                        <PrimaryButton\r\n                          type={\"primary\"}\r\n                          primary\r\n                          style={{\r\n                            background: theme.colors.primary,\r\n                            color: theme.colors.white,\r\n                            border: \"none\",\r\n                            marginRight: \"20px\"\r\n                          }}\r\n                          onClick={() => history.push(`/testreport`)}\r\n                        >\r\n                          view Results\r\n                        </PrimaryButton>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                />\r\n              </FlexContainer>\r\n            </FlexContainer>\r\n          </FlexContainer>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Layout } from \"antd\";\r\nimport Paragraph from \"antd/lib/typography/Paragraph\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Image from \"../../../assets/background.jpg\";\r\nimport HeaderComponent from \"../../Constant/Header\";\r\nimport HomeScreen from \"../../homescreen/HomeScreen\";\r\nimport PlantMaster from \"../../master/plantlevel/PlantMaster\";\r\nimport MaterialMaster from \"../../master/materiallevel/MaterialMaster\";\r\nimport CategoryMaster from \"../../master/categorylevel/CategoryMaster\";\r\nimport SiteMaster from \"../../master/sitelevel/SiteMaster\";\r\nimport Test from \".././../test/testtrial/TestMaster\";\r\nimport EquipmentMaster from \"../../master/equipmentlevel/EquipmentMaster\";\r\nimport TestLevelMaster from \"../../master/testlevel/TestLevelMaster\";\r\nimport ParameterMaster from \"../../master/ParameterLevel/ParameterMaster\";\r\nimport UnitMaster from \"../../master/unitlevel/UnitMaster\";\r\nimport TestConfigurationMaster from \"../../test/testconfiguration/TestConfigurationMaster\";\r\nimport MixDesignMaster from \"../../master/mixdesign/MixDesignMaster\";\r\nimport SampleMaster from \"../../sample/SampleMaster\";\r\nimport TestTrialMaster, {\r\n  TestPage\r\n} from \"../../test/testtrial/TestTrialMaster\";\r\nimport TestTypes from \"../../test/testtrial/TestType\";\r\nimport { TestTypePage } from \"../../test/testtrial/TestType\";\r\nimport Profile from \"../../profile/Profile\";\r\nimport CompanyPrivilege from \"../../priviledges/Privileges\";\r\nimport FPViewStatus from \"../../sample/finshproduct/FPViewStatus/FPViewStatus\";\r\nimport TestResultsMaster from \"../../test/testresults/TestResultsMaster\";\r\nimport GraphDashboard from \"../../graphdashboard/GraphDashboard\";\r\nimport AuditLog from \"../../AuditLog/AuditLog\";\r\nimport ProcessViewStatus from \"../../sample/process/processviewstatus/ProcessViewStatus\";\r\nimport IncomingViewStatus from \"../../sample/incoming/IncomingViewStatus/IncomingViewStatus\";\r\nimport ConcreteTest from \"../../test/concrete/ManageConcreteTest\";\r\nimport ConcreteStrengthTest from \"../../test/concreteStrength/ManageStrength\";\r\nimport TestTrialHome from \"../../test/testtrial/card/TestTrialHome\";\r\nimport MaterialTestTrial from \"../../test/testtrial/trials/MaterialTestTrial\";\r\nimport ParameterTestResults from \"../../test/testtrial/results/ParameterTestResults\";\r\nimport SieveMaster from \"../../test/sievetest/landing\";\r\nimport ManageSieveTest from \"../../test/sievetest/ManageSieveTest\";\r\nimport SieveTestTrial from \"../../test/sievetest/SieveTestTrail\";\r\n\r\nconst { Content, Footer } = Layout;\r\n\r\nclass RouterContent extends React.Component {\r\n  render() {\r\n    return (\r\n      <Layout\r\n        style={{\r\n          minHeight: \"100vh\"\r\n        }}\r\n      >\r\n        <Layout\r\n          style={{\r\n            background: `url(${Image})`\r\n          }}\r\n        >\r\n          <Route path=\"/\">\r\n            <HeaderComponent />\r\n          </Route>\r\n\r\n          <Content\r\n            style={{\r\n              margin: \"24px 16px 0\"\r\n            }}\r\n          >\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <HomeScreen />\r\n              </Route>\r\n\r\n              <Route exact path=\"/dashboard\">\r\n                <GraphDashboard />\r\n              </Route>\r\n\r\n              {/* Plant Level */}\r\n              <Route exact path=\"/master/plantlevel\">\r\n                <PlantMaster />\r\n              </Route>\r\n\r\n              {/* Category Level */}\r\n              <Route exact path=\"/master/categorylevel\">\r\n                <CategoryMaster />\r\n              </Route>\r\n\r\n              {/* <Route exact path=\"/finalproduct\">\r\n                <FinalProduct />\r\n              </Route> */}\r\n              {/* <Route exact path=\"/rawmaterial\">\r\n                <RawMaterialHome />\r\n              </Route> */}\r\n              <Route exact path=\"/master/materiallevel\">\r\n                <MaterialMaster />\r\n              </Route>\r\n              {/* <Route  exact path=\"/MixDesign\">\r\n              <MixDesign/>\r\n             </Route> */}\r\n\r\n              <Route exact path=\"/master/sitelevel\">\r\n                <SiteMaster />\r\n              </Route>\r\n\r\n              <Route exact path=\"/master/equipmentlevel\">\r\n                <EquipmentMaster />\r\n              </Route>\r\n\r\n              <Route exact path=\"/master/testlevel\">\r\n                <TestLevelMaster />\r\n              </Route>\r\n\r\n              <Route exact path=\"/master/unitlevel\">\r\n                <UnitMaster />\r\n              </Route>\r\n\r\n              <Route exact path=\"/master/parameterlevel\">\r\n                <ParameterMaster />\r\n              </Route>\r\n\r\n              <Route exact path=\"/master/sievelevel\">\r\n                <SieveMaster />\r\n              </Route>\r\n\r\n              {/* <Route exact path=\"/master/mixdesignlevel\">\r\n                <MixDesignMaster />\r\n              </Route> */}\r\n\r\n              {/* Test Configuration */}\r\n              <Route exact path=\"/testconfiguration\">\r\n                <TestConfigurationMaster />\r\n              </Route>\r\n\r\n              {/* Samples */}\r\n              <Route exact path=\"/samples\">\r\n                <SampleMaster />\r\n              </Route>\r\n              <Route exact path=\"/samples/incoming\">\r\n                <SampleMaster />\r\n              </Route>\r\n\r\n              <Route exact path=\"/samples/viewincomingstatus\">\r\n                <IncomingViewStatus />\r\n              </Route>\r\n\r\n              <Route exact path=\"/samples/viewprocessstatus\">\r\n                <ProcessViewStatus />\r\n              </Route>\r\n\r\n              <Route exact path=\"/samples/viewfpstatus\">\r\n                <FPViewStatus />\r\n              </Route>\r\n\r\n              <Route exact path=\"/mixdesign\">\r\n                <MixDesignMaster />\r\n              </Route>\r\n\r\n              {/* Test Trial */}\r\n              <Route exact path=\"/test/testtrial\">\r\n                <TestTrialMaster />\r\n              </Route>\r\n\r\n              {/* TestTrialHome Cards */}\r\n              <Route exact path=\"/trialcards\">\r\n                <TestTrialHome />\r\n              </Route>\r\n\r\n              <Route exact path=\"/test/:testId\" component={TestPage} />\r\n              <Route\r\n                exact\r\n                path=\"/sieveTrial/:sampleId\"\r\n                component={SieveTestTrial}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/testtype/:testTypeId\"\r\n                component={TestTypePage}\r\n              />\r\n\r\n              <Route\r\n                exact\r\n                path=\"/matrialtest/:testId/:sampleId\"\r\n                component={MaterialTestTrial}\r\n              />\r\n\r\n              <Route\r\n                exact\r\n                path=\"/matrialtest/:testId/:sampleId/:testCode\"\r\n                component={MaterialTestTrial}\r\n              />\r\n\r\n              {/* Parameter test Result */}\r\n              <Route\r\n                exact\r\n                path=\"/testresults/:material_testId\"\r\n                component={ParameterTestResults}\r\n              />\r\n\r\n              {/* Test Reports and Results */}\r\n              <Route exact path=\"/testreport\">\r\n                <TestResultsMaster />\r\n              </Route>\r\n\r\n              <Route exact path=\"/testtype\">\r\n                <TestTypes />\r\n              </Route>\r\n\r\n              {/* Profile */}\r\n              <Route exact path=\"/profile\">\r\n                <Profile />\r\n              </Route>\r\n\r\n              <Route exact path=\"/concretetest\">\r\n                <ConcreteTest />\r\n              </Route>\r\n\r\n              <Route exact path=\"/manageSieveTest\">\r\n                <ManageSieveTest />\r\n              </Route>\r\n\r\n              <Route exact path=\"/strengthtest\">\r\n                <ConcreteStrengthTest />\r\n              </Route>\r\n\r\n              {/* Priviledges */}\r\n              <Route exact path=\"/settings/priviledges\">\r\n                <CompanyPrivilege />\r\n              </Route>\r\n              <Route exact path=\"/testinput\">\r\n                <Test />\r\n              </Route>\r\n\r\n              <Route exact path=\"/settings/auditlog\">\r\n                <AuditLog />\r\n              </Route>\r\n            </Switch>\r\n          </Content>\r\n          <br />\r\n\r\n          <Footer\r\n            style={{\r\n              textAlign: \"center\",\r\n              backgroundColor: \"#001422\",\r\n              lineHeight: \"0rem\",\r\n              height: \"5px\",\r\n              marginTop: \"-15px\"\r\n            }}\r\n          >\r\n            <Paragraph\r\n              style={{\r\n                color: \"white\",\r\n                fontFamily: \"sans-serif\",\r\n                fontWeight: \"520\"\r\n              }}\r\n            >\r\n              Quality Data Management System @ 2020 Created By Tokyo Cement\r\n              Group\r\n            </Paragraph>\r\n          </Footer>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RouterContent;\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\nimport { Form, Icon, Input, Button, Checkbox, Select } from \"antd\";\r\nimport FollowAt from \"react-social-media-follow\";\r\n\r\nimport Logo from \"../../../assets/tokyosuper.png\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst { Option } = Select;\r\nconst links = [\r\n  \"https://twitter.com/magicahmd\",\r\n  \"https://www.facebook.com/pages/category/Industrial-Company/Tokyo-Cement-Co-Lanka-PLC-265617693452213\",\r\n  \"https://www.youtube.com/magicahmd\",\r\n  \"https://www.instagram.com/ahmdsalhi\"\r\n];\r\n\r\nexport default class LoginForm extends Component {\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        console.log(\"Received values of form: \", values);\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='login_form_area'>\r\n        <img\r\n          src={Logo}\r\n          className='logo_login'\r\n          alt='Logo'\r\n          style={{ height: \"80px\", width: \"400px\" }}\r\n        />\r\n        <div className='login_form_card'>\r\n          <Form onSubmit={this.handleSubmit} className='login-form'>\r\n            <h3 className='h1_login'>Login to your account</h3>\r\n            <div className='login_form'>\r\n              <Form.Item>\r\n                <Input\r\n                  prefix={\r\n                    <Icon type='user' style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                  }\r\n                  placeholder='Username'\r\n                />\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Input\r\n                  prefix={\r\n                    <Icon type='lock' style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                  }\r\n                  type='password'\r\n                  placeholder='Password'\r\n                />\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Select\r\n                  prefix={\r\n                    <Icon type='lock' style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                  }\r\n                  type='Plant'\r\n                  placeholder='Select the Plant'\r\n                >\r\n                  <Option value='cement'>peliyagoda</Option>\r\n                  <Option value='admixture'> Trincomale</Option>\r\n                  <Option value='riverSand '>Jaffna</Option>\r\n                  <Option value='riverSand '>Ratmalana</Option>\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Checkbox>Remember me</Checkbox>\r\n\r\n                <a href='' className='login-form-forgot'>\r\n                  Forgot password?\r\n                </a>\r\n                <Link to='/'>\r\n                  {\" \"}\r\n                  <Button\r\n                    style={{ background: \"#001328\", color: \"white\" }}\r\n                    htmlType='submit'\r\n                    className='login-form-button'\r\n                  >\r\n                    Login\r\n                  </Button>\r\n                </Link>\r\n                <h4>\r\n                  Don't have an Account{\" \"}\r\n                  <Link to='/signup'>\r\n                    <u>Signup</u>\r\n                  </Link>\r\n                </h4>\r\n              </Form.Item>\r\n            </div>\r\n          </Form>\r\n        </div>\r\n        <div className='follow'>\r\n          <FollowAt links={links} />\r\n        </div>\r\n        <div className='footer'>\r\n          <h5 className='h5'>\r\n            Quality Data Management System @ 2020 Created By Tokyo Cement Group\r\n          </h5>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { FlexContainer } from \"../../styledcomponents/container/FlexGrid\";\r\nimport LoginForm from \"./LoginFrom\";\r\n// import Logo from \"../../../assets/tokyocement1.jpg\";\r\nimport Img from \"../../../assets/images1.jpg\";\r\nimport \"./StyleLogin.css\";\r\n\r\nexport default class Login extends Component {\r\n  render() {\r\n    return (\r\n      <FlexContainer className='login'>\r\n        <div className='image_area'>\r\n          <img src={Img} alt='Logo' className='image' />\r\n        </div>\r\n\r\n        <LoginForm />\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\nimport {  Icon, Input, Button,Select } from \"antd\";\r\nimport FollowAt from \"react-social-media-follow\";\r\n\r\nimport Logo from \"../../../assets/tokyosuper.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MasterLevelForm } from \"../../styledcomponents/form/MasterLevelForms\";\r\nimport Notification from \"../../Constant/Notification\";\r\nimport { api } from \"../../services/AxiosService\";\r\n\r\nconst { Option } = Select;\r\nconst links = [\r\n  \"https://twitter.com/magicahmd\",\r\n  \"https://www.facebook.com/pages/category/Industrial-Company/Tokyo-Cement-Co-Lanka-PLC-265617693452213\",\r\n  \"https://www.youtube.com/magicahmd\",\r\n  \"https://www.instagram.com/ahmdsalhi\"\r\n];\r\n\r\nexport default class SignupForm extends Component {\r\n  state = {\r\n    userName: \"\",\r\n    password: \"\",\r\n    employeeId: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.Selectemployee();\r\n  }\r\n\r\n  handleChange = event => {\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handelSelect = value => {\r\n    console.log(value);\r\n    this.setState({\r\n      employeeId: value\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const data = {\r\n      userName: this.state.userName,\r\n      password: this.state.password,\r\n      employeeId: this.state.employeeId\r\n    };\r\n    console.log(data);\r\n    api(\"POST\", \"supermix\", \"/user\", \"\", data, \"\").then(res => {\r\n      console.log(res.data);\r\n      Notification(\"success\", res.data.message);\r\n      this.setState({\r\n        userName: \"\",\r\n        password: \"\",\r\n        employeeId: \"\"\r\n      });\r\n    });\r\n  };\r\n  Selectemployee = () => {\r\n    api(\"GET\", \"supermix\", \"/employees\", \"\", \"\", \"\").then(res => {\r\n      console.log(res.data);\r\n\r\n      if (res.data.results.employees.length > 0) {\r\n        let employeeselect = res.data.results.employees.map((post, index) => {\r\n          console.log(post.firstName);\r\n          console.log(\"kkkkkkkkkk\");\r\n          return (\r\n            <Option value={post.id} key={index}>\r\n              {post.firstName}\r\n            </Option>\r\n          );\r\n        });\r\n        this.setState({\r\n          employeeselect\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"login_form_area\">\r\n        <img\r\n          src={Logo}\r\n          className=\"logo_login\"\r\n          alt=\"Logo\"\r\n          style={{ height: \"80px\", width: \"400px\" }}\r\n        />\r\n        <div className=\"signup_form_card\">\r\n          <MasterLevelForm\r\n            onSubmit={this.handleSubmit}\r\n            style={{ flexDirection: \"column\", height: \"400px\", width: \"250px\" }}\r\n          >\r\n            <h3 className=\"h1_login\">Create a new Account</h3>\r\n\r\n            <Input\r\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n              placeholder=\"Username\"\r\n              id=\"userName\"\r\n              name=\"userName\"\r\n              value={this.state.userName}\r\n              onChange={this.handleChange}\r\n            />\r\n\r\n            <Input\r\n              prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              value={this.state.password}\r\n              onChange={this.handleChange}\r\n            />\r\n\r\n            {/* <Input\r\n              prefix={<Icon type='lock' style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n              type='password'\r\n              placeholder='Confirm Password'\r\n            /> */}\r\n            {/* \r\n            <Input\r\n              prefix={<Icon type='mail' style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n              placeholder='Email'\r\n              type='email'\r\n            /> */}\r\n\r\n            <Select\r\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n              placeholder=\"Select Employee\"\r\n              value={this.state.employeeId}\r\n              onChange={value => this.handelSelect(value)}\r\n            >\r\n              {this.state.employeeselect}\r\n            </Select>\r\n\r\n            {/* <Select\r\n              prefix={<Icon type='lock' style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n              type='Plant'\r\n              placeholder='Select the Plant'\r\n            >\r\n              <Option value='cement'>Peliyagoda</Option>\r\n              <Option value='admixture'>Trincomale</Option>\r\n              <Option value='riverSand '>Jaffna</Option>\r\n              <Option value='riverSand '>Ratmalana</Option>\r\n            </Select> */}\r\n\r\n            <Link to=\"/login\">\r\n              <Button\r\n                style={{ background: \"#001328\", color: \"white\" }}\r\n                htmlType=\"submit\"\r\n                className=\"login-form-button\"\r\n                onClick={this.handleSubmit}\r\n              >\r\n                Sign Up\r\n              </Button>\r\n            </Link>\r\n            <h4>\r\n              Already have an Account ?{\" \"}\r\n              <Link to=\"/login\">\r\n                <u>Login</u>\r\n              </Link>\r\n            </h4>\r\n          </MasterLevelForm>\r\n        </div>\r\n        <div className=\"follow_signup\">\r\n          <FollowAt links={links} />\r\n        </div>\r\n        <div className=\"footer_signup\">\r\n          <h5 className=\"h5\">\r\n            Quality Data Management System @ 2020 Created By Tokyo Cement Group\r\n          </h5>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { FlexContainer } from \"../../styledcomponents/container/FlexGrid\";\r\n// import Logo from \"../../../assets/tokyocement1.jpg\";\r\nimport Img from \"../../../assets/images1.jpg\";\r\nimport \"./StyleLogin.css\";\r\nimport SignupForm from \"./SignupForm\";\r\n\r\nexport default class Signup extends Component {\r\n  render() {\r\n    return (\r\n      <FlexContainer className='login'>\r\n        <div className='image_area'>\r\n          <img src={Img} alt='Logo' className='image' />\r\n        </div>\r\n\r\n        <SignupForm />\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Content from \"./Contents/Index\";\r\nimport Login from \"./login/Login\";\r\nimport Signup from \"./login/Signup\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='App'>\r\n      <Switch>\r\n        {/* login */}\r\n        <Route exact path='/login'>\r\n          <Login />\r\n        </Route>\r\n        <Route exact path='/logout'>\r\n          <Login />\r\n        </Route>\r\n        <Route exact path='/signup'>\r\n          <Signup />\r\n        </Route>\r\n        <Route path='/' component={Content} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: {\r\n      \"Service-Worker\": \"script\"\r\n    }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {\r\n  ROUTE_TO_PLANT_MASTER,\r\n  ROUTE_TO_USER_ROLE_MASTER,\r\n  ROUTE_TO_EMPLOYEE_MASTER,\r\n  ROUTE_TO_CUSTOMER_MASTER,\r\n  ROUTE_TO_SUPPLIER_MASTER,\r\n  ROUTE_TO_SUPPLIER_CATEGORY_MASTER\r\n} from \"../../../action/master/plantlevel/PlantLevel\";\r\n\r\nconst initialState = {\r\n  routepath: \"/plantmaster\"\r\n};\r\n\r\nexport const RoutingBetweenPlantLevel = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ROUTE_TO_PLANT_MASTER:\r\n      return {\r\n        ...state,\r\n        routepath: (state.routepath = \"/plantmaster\")\r\n      };\r\n\r\n    case ROUTE_TO_USER_ROLE_MASTER:\r\n      return {\r\n        ...state,\r\n        routepath: (state.routepath = \"/userrolemaster\")\r\n      };\r\n\r\n    case ROUTE_TO_EMPLOYEE_MASTER:\r\n      return {\r\n        ...state,\r\n        routepath: (state.routepath = \"/employeemaster\")\r\n      };\r\n\r\n    case ROUTE_TO_CUSTOMER_MASTER:\r\n      return {\r\n        ...state,\r\n        routepath: (state.routepath = \"/customermaster\")\r\n      };\r\n\r\n    case ROUTE_TO_SUPPLIER_MASTER:\r\n      return {\r\n        ...state,\r\n        routepath: (state.routepath = \"/suppliermaster\")\r\n      };\r\n    case ROUTE_TO_SUPPLIER_CATEGORY_MASTER:\r\n      return {\r\n        ...state,\r\n        routepath: (state.routepath = \"/suppliercategorymaster\")\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  SWITCH_TO_EDIT_MODE,\r\n  DISABLE_EDIT_MODE\r\n} from \"../../../action/master/plantlevel/PlantLevel\";\r\n\r\nconst initialState = {\r\n  visible: false,\r\n  editPlantData: [],\r\n  type: \"add\"\r\n};\r\n\r\nexport const EditPlantReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SWITCH_TO_EDIT_MODE:\r\n      console.log(action.payload);\r\n      return {\r\n        ...state,\r\n        visible: (state.visible = true),\r\n        //setting the payload data to the global redux state names editPlantData\r\n        editPlantData: (state.editPlantData = action.payload),\r\n        type: (state.type = \"edit\")\r\n      };\r\n    case DISABLE_EDIT_MODE:\r\n      return {\r\n        ...state,\r\n        // clearing the states\r\n        visible: (state.visible = false),\r\n        editPlantData: (state.editPlantData = []),\r\n        type: (state.type = \"add\")\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { RoutingBetweenPlantLevel } from \"./RoutingBetweenPlantLevels\";\r\nimport { EditPlantReducer } from \"./EditPlantReducer\";\r\n// import { EditDesignationReducer } from \"./EditDesignationReducer\";\r\n\r\nexport const plantLevelReducers = combineReducers({\r\n  RoutingBetweenPlantLevel: RoutingBetweenPlantLevel,\r\n  EditPlantReducer: EditPlantReducer\r\n  // EditDesignationReducer: EditDesignationReducer\r\n});\r\n","import {\r\n  ROUTE_TO_MAIN_CATEGORY_MASTER,\r\n  ROUTE_TO_SUB_CATEGORY_MASTER,\r\n  ROUTE_TO_SAMPLE_CATEGORY_MASTER,\r\n  ROUTE_TO_MATERIAL_TYPE\r\n} from \"../../../action/master/categorylevel/CatergoryLevel\";\r\n\r\nconst initialState = {\r\n  routepath: \"/materialtypemaster\"\r\n};\r\n\r\nexport const RoutingBetweenCategoryLevel = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ROUTE_TO_MAIN_CATEGORY_MASTER:\r\n      return {\r\n        ...state,\r\n        routepath: (state.routepath = \"/maincatergorymaster\")\r\n      };\r\n\r\n    case ROUTE_TO_SUB_CATEGORY_MASTER:\r\n      return {\r\n        ...state,\r\n        routepath: (state.routepath = \"/subcatergorymaster\")\r\n      };\r\n\r\n    case ROUTE_TO_SAMPLE_CATEGORY_MASTER:\r\n      return {\r\n        ...state,\r\n        routepath: (state.routepath = \"/samplecatergorymaster\")\r\n      };\r\n    case ROUTE_TO_MATERIAL_TYPE:\r\n      return {\r\n        ...state,\r\n        routepath: (state.routepath = \"/materialtypemaster\")\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { RoutingBetweenCategoryLevel } from \"./RoutingBetweenCategoryLevels\";\r\n\r\nexport const categoryLevelReducers = combineReducers({\r\n  RoutingBetweenCategoryLevel: RoutingBetweenCategoryLevel\r\n});\r\n","import {\r\n  ROUTE_TO_PARAMETER_MASTER,\r\n  ROUTE_TO_MATERIAL_PARAMETER_MASTER,\r\n  ROUTE_TO_EQUIPMENT_PARAMETER_MASTER,\r\n  ROUTE_TO_TEST_PARAMETER_MASTER,\r\n  ROUTE_TO_ADDITIONAL_PARAMETER_MASTER\r\n} from \"../../../action/master/parameter/ParameterLevel\";\r\n\r\nconst initialState = {\r\n  routepath: \"/parametermaster\"\r\n};\r\n\r\nexport const RoutingBetweenParameterLevel = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ROUTE_TO_PARAMETER_MASTER:\r\n      return {\r\n        ...state,\r\n        routepath: (state.routepath = \"/parametermaster\")\r\n      };\r\n\r\n    case ROUTE_TO_MATERIAL_PARAMETER_MASTER:\r\n      return {\r\n        ...state,\r\n        routepath: (state.routepath = \"/materialparameter\")\r\n      };\r\n\r\n    case ROUTE_TO_EQUIPMENT_PARAMETER_MASTER:\r\n      return {\r\n        ...state,\r\n        routepath: (state.routepath = \"/equipmentparameter\")\r\n      };\r\n\r\n    case ROUTE_TO_TEST_PARAMETER_MASTER:\r\n      return {\r\n        ...state,\r\n        routepath: (state.routepath = \"/testparameter\")\r\n      };\r\n\r\n    case ROUTE_TO_ADDITIONAL_PARAMETER_MASTER:\r\n      return {\r\n        ...state,\r\n        routepath: (state.routepath = \"/additionalparameter\")\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport {RoutingBetweenParameterLevel} from \"./RoutingBetweenParameterLevel\";\r\nexport const parameterLevelReducers = combineReducers({\r\n    RoutingBetweenParameterLevel: RoutingBetweenParameterLevel\r\n});\r\n","import {\r\n  ROUTE_TO_POUR_MASTER,\r\n  ROUTE_TO_PROJECT_MASTER\r\n} from \"../../../action/master/sitelevel/SiteLevel\";\r\n\r\nconst initialState = {\r\n  routepath: \"/projectmaster\"\r\n};\r\n\r\nexport const RoutingBetweenSiteLevel = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ROUTE_TO_POUR_MASTER:\r\n      return {\r\n        ...state,\r\n        routepath: (state.routepath = \"/pourmaster\")\r\n      };\r\n\r\n    case ROUTE_TO_PROJECT_MASTER:\r\n      return {\r\n        ...state,\r\n        routepath: (state.routepath = \"/projectmaster\")\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { RoutingBetweenSiteLevel } from \"./RoutingBetweenSiteLevels\";\r\n\r\nexport const siteLevelReducers = combineReducers({\r\n    RoutingBetweenSiteLevel: RoutingBetweenSiteLevel\r\n});\r\n","import {\r\n  TOGGLE_TO_MASTER_TYPE_NAVIGATION,\r\n  TOGGLE_TO_HOME_SCREEN_NAVIGATION,\r\n  TOGGLE_TO_SAMPLE_TYPE_NAVIGATION,\r\n  TOGGLE_TO_TEST_TRIALS_NAVIGATION,\r\n  TOGGLE_TO_TEST_CONFIGURATION_NAVIGATION,\r\n  TOGGLE_TO_PRIVILEDGES_NAVIGATION,\r\n  TOGGLE_TO_TEST_RESULTS_NAVIGATION,\r\n  TOGGLE_TO_DASHBOARD_NAVIGATION,\r\n  TOGGLE_TO_MIX_DESIGN_NAVIGATION\r\n} from \"../../action/topbarnavigation/TopbarNavigation\";\r\n\r\nconst initialState = {\r\n  navpath: \"/homescreen\"\r\n};\r\n\r\nexport const TopbarNavigationReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    //   localStorage.setItem(\"state\",true);\r\n\r\n    //   localStorage.getItem(\"state\")\r\n    case TOGGLE_TO_MASTER_TYPE_NAVIGATION:\r\n      return {\r\n        ...state,\r\n        navpath: (state.navpath = \"/master\")\r\n      };\r\n    case TOGGLE_TO_HOME_SCREEN_NAVIGATION:\r\n      return {\r\n        ...state,\r\n        navpath: (state.navpath = \"/homescreen\")\r\n      };\r\n    case TOGGLE_TO_SAMPLE_TYPE_NAVIGATION:\r\n      return {\r\n        ...state,\r\n        navpath: (state.navpath = \"/samples\")\r\n      };\r\n\r\n    case TOGGLE_TO_TEST_TRIALS_NAVIGATION:\r\n      return {\r\n        ...state,\r\n        navpath: (state.navpath = \"/testtrials\")\r\n      };\r\n\r\n    case TOGGLE_TO_TEST_CONFIGURATION_NAVIGATION:\r\n      return {\r\n        ...state,\r\n        navpath: (state.navpath = \"/testconfiguration\")\r\n      };\r\n\r\n    case TOGGLE_TO_PRIVILEDGES_NAVIGATION:\r\n      return {\r\n        ...state,\r\n        navpath: (state.navpath = \"/priviledges\")\r\n      };\r\n    case TOGGLE_TO_TEST_RESULTS_NAVIGATION:\r\n      return {\r\n        ...state,\r\n        navpath: (state.navpath = \"/testresults\")\r\n      };\r\n    case TOGGLE_TO_MIX_DESIGN_NAVIGATION:\r\n      return {\r\n        ...state,\r\n        navpath: (state.navpath = \"/mixdesign\")\r\n      };\r\n    case TOGGLE_TO_DASHBOARD_NAVIGATION:\r\n      return {\r\n        ...state,\r\n        navpath: (state.navpath = \"/dashboard\")\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { ROUTE_TO_MIX_DESIGN } from \"../../../action/master/mixdesign/MixDesign\";\r\n\r\nconst initialState = {\r\n  routepath: \"/mixdesignmaster\"\r\n};\r\n\r\nexport const RoutingBetweenMixDesign = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ROUTE_TO_MIX_DESIGN:\r\n      return {\r\n        ...state,\r\n        routepath: (state.routepath = \"/mixdesignmaster\")\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { RoutingBetweenMixDesign } from \"./RoutingBetweenMixDesign\";\r\n\r\nexport const mixDesignLevelReducers = combineReducers({\r\n  RoutingBetweenMixDesign: RoutingBetweenMixDesign\r\n});\r\n","import {\r\n  ROUTE_TO_INCOMING_SAMPLE,\r\n  ROUTE_TO_PROCESS_SAMPLE,\r\n  ROUTE_TO_FINISH_PRODUCT_SAMPLE,\r\n  ROUTE_TO_MATERIAL_LOAD_SAMPLE\r\n} from \"../../action/sample/Sample\";\r\n\r\nconst initialState = {\r\n  routepath: \"/incomingsample\"\r\n};\r\n\r\nexport const RoutingBetweenSamples = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ROUTE_TO_INCOMING_SAMPLE:\r\n      return {\r\n        ...state,\r\n        routepath: (state.routepath = \"/incomingsample\")\r\n      };\r\n\r\n    case ROUTE_TO_PROCESS_SAMPLE:\r\n      return {\r\n        ...state,\r\n        routepath: (state.routepath = \"/processsample\")\r\n      };\r\n\r\n    case ROUTE_TO_FINISH_PRODUCT_SAMPLE:\r\n      return {\r\n        ...state,\r\n        routepath: (state.routepath = \"/finishproductsample\")\r\n      };\r\n\r\n    case ROUTE_TO_MATERIAL_LOAD_SAMPLE:\r\n      return {\r\n        ...state,\r\n        routepath: (state.routepath = \"/materialload\")\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { RoutingBetweenSamples } from \"./RoutingBetweenSamples\";\r\n\r\nexport const samplesReducers = combineReducers({\r\n  RoutingBetweenSamples: RoutingBetweenSamples\r\n});\r\n","import {\r\n  ROUTE_TO_RAW_MATERIAL_TEST_RESULTS,\r\n  ROUTE_TO_FINISH_PRODUCT_TEST_RESULTS,\r\n  ROUTE_TO_SIEVE_TEST_RESULTS\r\n} from \"../../action/testresults/TestResults\";\r\n\r\nconst initialState = {\r\n  routepath: \"/rawmaterial\"\r\n};\r\n\r\nexport const RoutingBetweenTestResults = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ROUTE_TO_RAW_MATERIAL_TEST_RESULTS:\r\n      return {\r\n        ...state,\r\n        routepath: (state.routepath = \"/rawmaterial\")\r\n      };\r\n\r\n    case ROUTE_TO_FINISH_PRODUCT_TEST_RESULTS:\r\n      return {\r\n        ...state,\r\n        routepath: (state.routepath = \"/finishproduct\")\r\n      };\r\n    case ROUTE_TO_SIEVE_TEST_RESULTS:\r\n      return {\r\n        ...state,\r\n        routepath: (state.routepath = \"/sieveresult\")\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  TOGGLE_FINISH_PRODUCT_DRAWER,\r\n  CLOSE_FINISH_PRODUCT_DRAWER\r\n} from \"../../action/testresults/TestResults\";\r\n\r\nconst initialState = {\r\n  FPvisible: false\r\n};\r\n\r\nexport const ToggleFilterDrawers = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_FINISH_PRODUCT_DRAWER:\r\n      return {\r\n        ...state,\r\n        FPvisible: (state.FPvisible = true)\r\n      };\r\n\r\n    case CLOSE_FINISH_PRODUCT_DRAWER:\r\n      return {\r\n        ...state,\r\n        FPvisible: (state.FPvisible = false)\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { RoutingBetweenTestResults } from \"./RoutingBetweenTestResults\";\r\nimport { ToggleFilterDrawers } from \"./ToggleFilterDrawers\";\r\n\r\nexport const testResultsReducers = combineReducers({\r\n  RoutingBetweenTestResults: RoutingBetweenTestResults,\r\n  ToggleFilterDrawers: ToggleFilterDrawers\r\n});\r\n","import {\r\n  TOGGLE_BETWEEN_MASTER_LEVELS,\r\n  CHECK_WHETHER_DEFAULT_MASTER_LEVEL\r\n} from \"../../action/topbarnavigation/MasterLevelNavigation\";\r\n\r\nconst initialState = {\r\n  masterlevelkey: \"plantlevel\"\r\n};\r\n\r\nexport const MasterLevelNavigationReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_BETWEEN_MASTER_LEVELS:\r\n      return {\r\n        ...state,\r\n        masterlevelkey: (state.masterlevelkey = action.key)\r\n      };\r\n\r\n    case CHECK_WHETHER_DEFAULT_MASTER_LEVEL:\r\n      return {\r\n        masterlevelkey: (state.masterlevelkey = \"plantlevel\")\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  TOGGLE_BETWEEN_PRIVILEDGE_LEVELS,\r\n  CHECK_WHETHER_DEFAULT_PRIVILEDGE_LEVEL\r\n} from \"../../action/topbarnavigation/PrivilegeLevelNavigation\";\r\n\r\nconst initialState = {\r\n  priviledgekeys: \"priviledges\"\r\n};\r\n\r\nexport const PriviledgeLevelNavigationReducer = (\r\n  state = initialState,\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case TOGGLE_BETWEEN_PRIVILEDGE_LEVELS:\r\n      return {\r\n        ...state,\r\n        priviledgekeys: (state.priviledgekeys = action.key)\r\n      };\r\n    case CHECK_WHETHER_DEFAULT_PRIVILEDGE_LEVEL:\r\n      return {\r\n        priviledgekeys: (state.priviledgekeys = \"priviledges\")\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADD_EQUATION_SYMBOLS,\r\n  ADD_TEXT_BODY_WITH_KEYPRESS,\r\n  ADD_PARAMETERS,\r\n  POP_PARAMETERS,\r\n  CREATE_MINI_CARD,\r\n  REMOVE_MINI_CARD,\r\n  CLEAR_STATES_WHILE_CANCEL\r\n} from \"../../action/testconfiguration/TestConfiguration\";\r\n\r\nconst initialState = {\r\n  textBody: \"\",\r\n  regex: /[^=+-/.()√π<>²\\d*]/gi,\r\n  acceptedIndexes: [],\r\n  //creation of mini cards\r\n  cards: [],\r\n  tmp: [],\r\n  //storing payload for api call\r\n  paramsData: []\r\n};\r\n\r\nexport const EquationConfigurationReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_EQUATION_SYMBOLS:\r\n      return {\r\n        ...state,\r\n        textBody: state.textBody + action.payload\r\n      };\r\n    case ADD_TEXT_BODY_WITH_KEYPRESS:\r\n      return {\r\n        ...state,\r\n        textBody: action.payload.replace(state.regex, \"\")\r\n      };\r\n\r\n    case ADD_PARAMETERS:\r\n      state.acceptedIndexes.push(action.payload);\r\n      console.log(state.acceptedIndexes[0]);\r\n      return {\r\n        ...state,\r\n        regex: (state.regex = new RegExp(\r\n          \"[^\" + state.acceptedIndexes + \"0-9=+-/.()√π<>²\\\\d*]\",\r\n          \"g\"\r\n        )),\r\n        textBody: state.textBody + action.payload\r\n      };\r\n\r\n    case POP_PARAMETERS:\r\n      for (let i = 0; i < state.acceptedIndexes.length; i++) {\r\n        if (state.acceptedIndexes[i] === action.payload) {\r\n          console.log(state.acceptedIndexes[i]);\r\n          state.acceptedIndexes.splice(i, 1);\r\n          console.log(state.acceptedIndexes);\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        regex: (state.regex = new RegExp(\r\n          \"[^\" + state.acceptedIndexes + \"0-9=+-/.()√π<>²\\\\d*]\",\r\n          \"g\"\r\n        ))\r\n      };\r\n\r\n    case CREATE_MINI_CARD:\r\n      state.acceptedIndexes.push(action.payload.abbreviation);\r\n      console.log(state.acceptedIndexes[0]);\r\n      state.paramsData.push(action.payload.id);\r\n      console.log(\r\n        \"DEBUG-ParamsData:\" + state.paramsData.map((post, index) => post)\r\n      );\r\n      return {\r\n        ...state,\r\n        cards: [...state.cards, action.payload.abbreviation],\r\n        regex: (state.regex = new RegExp(\r\n          \"[^\" + state.acceptedIndexes + \"0-9=+-/.()√π<>²\\\\d*]\",\r\n          \"g\"\r\n        ))\r\n      };\r\n\r\n    case REMOVE_MINI_CARD:\r\n      const newState = state.cards.filter(\r\n        val => val !== action.payload.abbreviation\r\n      );\r\n      console.log(\"DEBUG1234: \", newState);\r\n      console.log(\r\n        \"DEBUG SEARCH CHAR: \" +\r\n          state.textBody.replace(action.payload.abbreviation, \"\")\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        cards: newState,\r\n        regex: (state.regex = new RegExp(\r\n          \"[^\" + newState + \"0-9=+-/.()√π<>²\\\\d*]\",\r\n          \"g\"\r\n        )),\r\n        textBody: state.textBody.replace(action.payload.abbreviation, \"\")\r\n      };\r\n\r\n    case CLEAR_STATES_WHILE_CANCEL:\r\n      return {\r\n        ...state,\r\n        cards: [],\r\n        regex: /[^=+-/.()√π<>²\\d*]/gi,\r\n        acceptedIndexes: [],\r\n        textBody: \"\"\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  SELECT_UNIT,\r\n  TICK_CHECKBOX\r\n} from \"../../action/testconfiguration/TestConfiguration\";\r\n\r\nconst initialState = {\r\n  unit: \"\",\r\n  record: [],\r\n  nextUnit: [],\r\n  newRecord: [],\r\n  switchRelevant: [],\r\n  disabled: true\r\n};\r\n\r\nexport const ParameterConfigurationReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SELECT_UNIT:\r\n      console.log(action.payload);\r\n      state.unit = action.payload.value;\r\n      console.log(state.unit);\r\n      state.newRecord.push(action.payload.record);\r\n      console.log(state.newRecord.length);\r\n      for (let i = 0; i < state.newRecord.length; i++) {\r\n        if (\r\n          state.newRecord[i].parameterName ===\r\n          action.payload.record.parameterName\r\n        ) {\r\n          console.log(state.newRecord[i].parameterName);\r\n          console.log(\"match\");\r\n          console.log(i);\r\n          console.log(state.newRecord);\r\n          state.record.splice(0, 1, {\r\n            parameterName: action.payload.record.parameterName,\r\n            parameterAbbr: action.payload.record.parameterAbbr,\r\n            unit: state.unit\r\n          });\r\n          break;\r\n        }\r\n        if (\r\n          state.record[i].parameterName !== action.payload.record.parameterName\r\n        ) {\r\n          console.log(\"didn't match\");\r\n          state.record.splice(1, 0, {\r\n            parameterName: action.payload.record.parameterName,\r\n            parameterAbbr: action.payload.record.parameterAbbr,\r\n            unit: state.unit\r\n          });\r\n          state.newRecord.splice(1, 0, {\r\n            parameterName: action.payload.record.parameterName,\r\n            parameterAbbr: action.payload.record.parameterAbbr,\r\n            unit: state.unit\r\n          });\r\n          break;\r\n        }\r\n      }\r\n\r\n      console.log(state.record);\r\n      // state.nextUnit.push(state.unit);\r\n      // console.log(state.nextUnit);\r\n      // state.newRecord.push(action.payload.record);\r\n      // console.log(state.newRecord);\r\n      // state.newRecord.splice(1, 2, state.unit);\r\n      // console.log(state.newRecord);\r\n\r\n      return {\r\n        ...state,\r\n        newRecord: state.newRecord,\r\n        disabled: (state.disabled = false)\r\n      };\r\n\r\n    case TICK_CHECKBOX:\r\n      console.log(action.payload);\r\n      for (let i = 0; i < state.record.length; i++) {\r\n        if (state.record[i].parameterName === action.payload.parameterName) {\r\n          state.switchRelevant.push(state.record[i]);\r\n          console.log(state.switchRelevant);\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        switchRelevant: state.switchRelevant\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  TRIGGER_EQUATIONS_AREA,\r\n  TRIGGER_BACK_EQUATIONS_AREA\r\n} from \"../../action/testconfiguration/TestConfiguration\";\r\n\r\nconst initialState = {\r\n  visible: false,\r\n  icon: \"+\",\r\n  togglable: \"yes\"\r\n};\r\n\r\nexport const TriggerEquationAreaReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case TRIGGER_EQUATIONS_AREA:\r\n      return {\r\n        ...state,\r\n        visible: (state.visible = true),\r\n        icon: (state.icon = \"-\"),\r\n        togglable: (state.togglerValue = \"no\")\r\n      };\r\n    case TRIGGER_BACK_EQUATIONS_AREA:\r\n      window.location.reload();\r\n      return {\r\n        ...state,\r\n        visible: (state.visible = false),\r\n        icon: (state.icon = \"+\"),\r\n        togglable: (state.togglerValue = \"yes\")\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { EquationConfigurationReducer } from \"./EquationConfigurationReducer\";\r\nimport { ParameterConfigurationReducer } from \"./ParameterConfigurationReducer\";\r\nimport { TriggerEquationAreaReducer } from \"./TriggerEquationAreaReducer\";\r\n\r\nexport const TestConfigurationReducers = combineReducers({\r\n  equationConfigurationReducer: EquationConfigurationReducer,\r\n  parameterConfigurationReducer: ParameterConfigurationReducer,\r\n  triggerEquationAreaReducer: TriggerEquationAreaReducer\r\n});\r\n","import {\r\n  ROUTE_TO_ACCEPTED_VALUE,\r\n  ROUTE_TO_TEST_PARAMETER,\r\n  ROUTE_TO_EQUATION\r\n} from \"../../action/table/Table\";\r\n\r\nconst initialState = {\r\n  routepath: \"/acceptedvalue\"\r\n};\r\n\r\nexport const RoutingBetweenTables = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ROUTE_TO_ACCEPTED_VALUE:\r\n      return {\r\n        ...state,\r\n        routepath: (state.routepath = \"/acceptedvalue\")\r\n      };\r\n    case ROUTE_TO_TEST_PARAMETER:\r\n      return {\r\n        ...state,\r\n        routepath: (state.routepath = \"/testparameter\")\r\n      };\r\n    case ROUTE_TO_EQUATION:\r\n      return {\r\n        ...state,\r\n        routepath: (state.routepath = \"/equation\")\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { RoutingBetweenTables } from \"./RoutingBetweenTables\";\r\n\r\nexport const tableReducers = combineReducers({\r\n  RoutingBetweenTables: RoutingBetweenTables\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport { plantLevelReducers } from \"./master/plantlevel/PlantLevelIndex\";\r\nimport { categoryLevelReducers } from \"./master/categorylevel/CatergoryLevelIndex\";\r\nimport { parameterLevelReducers } from \"./master/parameterlevel/ParameterLevelIndex\";\r\nimport { siteLevelReducers } from \"./master/sitelevel/SiteLevelIndex\";\r\nimport { TopbarNavigationReducer } from \"./topbarnavigation/TopbarNavigationReducer\";\r\nimport { mixDesignLevelReducers } from \"./master/mixdesign/MixDesignIndex\";\r\nimport { samplesReducers } from \"./sample/SampleIndex\";\r\nimport { testResultsReducers } from \"./testresults/TestResultIndex\";\r\nimport { MasterLevelNavigationReducer } from \"./topbarnavigation/MasterLevelNavigationReducer\";\r\nimport { PriviledgeLevelNavigationReducer } from \"./topbarnavigation/PriviledgeLevelNavigationReducer\";\r\nimport { TestConfigurationReducers } from \"./testconfiguration/TestConfigurationIndex\";\r\nimport { tableReducers } from \"./table/TableIndex\";\r\nconst allReducers = combineReducers({\r\n  plantLevelReducers: plantLevelReducers,\r\n  categoryLevelReducers: categoryLevelReducers,\r\n  parameterLevelReducers: parameterLevelReducers,\r\n  mixDesignLevelReducers: mixDesignLevelReducers,\r\n  siteLevelReducers: siteLevelReducers,\r\n  samplesReducers: samplesReducers,\r\n  topbarNavigationReducers: TopbarNavigationReducer,\r\n  testResultsReducers: testResultsReducers,\r\n  masterLevelNavigationReducer: MasterLevelNavigationReducer,\r\n  priviledgeLevelNavigationReducer: PriviledgeLevelNavigationReducer,\r\n  testConfigurationReducers: TestConfigurationReducers,\r\n  tableReducers: tableReducers\r\n});\r\n\r\nexport default allReducers;\r\n","import * as CatergoryLevel from \"./master/categorylevel/CatergoryLevel\";\r\nimport * as MixDesign from \"./master/mixdesign/MixDesign\";\r\nimport * as ParameterLevel from \"./master/parameter/ParameterLevel\";\r\nimport * as Plantlevel from \"./master/plantlevel/PlantLevel\";\r\nimport * as Sitelevel from \"./master/sitelevel/SiteLevel\";\r\nimport * as Sample from \"./sample/Sample\";\r\nimport * as TopbarNavigation from \"./topbarnavigation/TopbarNavigation\";\r\nimport * as PrivilegeLevelNavigation from \"./topbarnavigation/PrivilegeLevelNavigation\";\r\n\r\nexport default {\r\n  CatergoryLevel,\r\n  MixDesign,\r\n  ParameterLevel,\r\n  Plantlevel,\r\n  Sitelevel,\r\n  Sample,\r\n  TopbarNavigation,\r\n  PrivilegeLevelNavigation\r\n};\r\n","import { createStore } from \"redux\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport allReducers from \"../reducers/index\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { applyMiddleware } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport * as actionCreators from \"../action/index\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  blacklist: [\"testConfigurationReducers\"]\r\n};\r\nlet devtools = composeWithDevTools({\r\n  actionCreators,\r\n  trace: true,\r\n  traceLimit: 25\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, allReducers);\r\n\r\nlet store = createStore(\r\n  persistedReducer,\r\n  devtools(applyMiddleware(sagaMiddleware))\r\n);\r\nlet persistor = persistStore(store);\r\n// sagaMiddleware.run(mySaga);\r\n\r\nexport { store, persistor };\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"../src/Components/App/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"antd/dist/antd.css\";\r\nimport { store, persistor } from \"./redux/store/store\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate persistor={persistor}>\r\n      <HashRouter>\r\n        <App />\r\n      </HashRouter>\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}